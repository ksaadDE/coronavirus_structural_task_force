# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 295 ', 'PRO', 0.03526897291583167, (197.409, 180.152, 205.621)), ('H', ' 102 ', 'PRO', 0.0, (191.33299999999988, 287.43100000000004, 261.547))]
data['omega'] = [('A', ' 295 ', 'PRO', None, (197.303, 178.684, 205.55)), ('C', ' 262 ', 'ALA', None, (201.46600000000012, 271.83400000000006, 235.672)), ('L', '   8 ', 'PRO', None, (206.7499999999999, 284.589, 280.63199999999995)), ('L', '  95A', 'PRO', None, (198.418, 268.57, 263.728))]
data['rota'] = [('C', ' 493 ', 'GLN', 0.126951880890752, (188.4769999999999, 192.7950000000001, 285.655)), ('C', ' 493 ', 'GLN', 0.04137178004091226, (188.474, 192.7910000000001, 285.657)), ('C', '1054 ', 'GLN', 0.04132345497676815, (220.71300000000008, 232.326, 177.64799999999997))]
data['cbeta'] = [('A', ' 294 ', 'ASP', ' ', 0.25423109600481536, (195.285, 175.552, 205.629))]
data['probe'] = [(' B 409  GLN HE22', ' B 416  GLY  HA3', -0.785, (206.364, 214.438, 250.676)), (' A1036  GLN HE22', ' A1048  HIS  HB3', -0.763, (199.827, 210.466, 165.003)), (' B1051  SER  HG ', ' B1064  HIS  HD1', -0.734, (219.864, 204.504, 169.085)), (' A 616  ASN  OD1', ' A 644  GLN  NE2', -0.723, (214.789, 171.645, 197.728)), (' A1030  SER  HA ', ' A1034  LEU HD12', -0.693, (199.511, 220.181, 174.076)), (' A  35  GLY  HA3', ' A  56  LEU  HB2', -0.687, (187.007, 178.632, 219.934)), (' B 358  ILE  HB ', ' B 395  VAL  HB ', -0.679, (223.38, 235.523, 246.823)), (' C 970  PHE  O  ', ' C 995  ARG  NH1', -0.671, (215.45, 217.291, 224.987)), (' A 454  ARG HH22', ' A 491  PRO  HB2', -0.67, (247.072, 213.274, 255.072)), (' B 773  GLU  OE1', ' B1019  ARG  NH1', -0.664, (207.846, 202.945, 192.437)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.649, (209.556, 223.172, 176.094)), (' H 101  ASP  CB ', ' H 102  PRO  HD3', -0.64, (194.745, 285.065, 260.719)), (' B 296  LEU HD13', ' B 608  VAL HG11', -0.638, (246.885, 211.312, 197.453)), (' A 356  LYS  HB3', ' A 397  ALA  HB3', -0.638, (240.269, 189.291, 245.145)), (' A 308  VAL HG22', ' A 602  THR HG23', -0.631, (190.367, 184.745, 198.746)), (' C 452  LEU HD21', ' C 492  LEU  HB3', -0.631, (188.991, 189.888, 281.678)), (' A 954  GLN  HG3', ' A1014  ARG HH21', -0.617, (200.89, 204.735, 197.95)), (' B 763  LEU HD22', ' B1008  VAL HG21', -0.602, (211.106, 201.27, 206.121)), (' A 133  PHE  HA ', ' A 162  SER  HB2', -0.598, (180.834, 174.17, 251.972)), (' A 647  ALA  HA ', ' B 862  PRO  HG2', -0.594, (213.794, 182.949, 193.286)), (' B 206  LYS  HB2', ' B 223  LEU  HA ', -0.592, (255.182, 189.208, 217.16)), (' C 902  MET  HA ', ' C 905  ARG  HB2', -0.589, (214.139, 228.193, 158.827)), (' C 387  LEU HD23', ' C 390  LEU HD21', -0.586, (190.551, 208.882, 251.1)), (' A 534  VAL HG11', ' A 537  LYS  HE2', -0.576, (221.202, 167.82, 217.212)), (' B 976  VAL HG12', ' B 978  ASN  H  ', -0.57, (223.373, 189.843, 221.375)), (' C 879  ALA  O  ', ' C 883  THR  OG1', -0.569, (227.707, 229.982, 164.393)), (' C1032  CYS  HA ', ' C1048  HIS  HE1', -0.569, (213.075, 223.543, 169.702)), (' C 142  GLY  HA3', ' C 156  GLU  H  ', -0.569, (208.205, 271.385, 249.873)), (' C 563  GLN  O  ', ' C 577  ARG  NH1', -0.565, (176.659, 199.199, 225.191)), (' A  47  VAL HG22', ' C 569  ILE HG23', -0.565, (186.015, 200.358, 210.175)), (' A 290  ASP  OD1', ' A 291  CYS  N  ', -0.564, (194.276, 182.439, 212.921)), (' A 901  GLN  HG2', ' A 905  ARG  HE ', -0.561, (192.434, 215.638, 162.555)), (' B 309  GLU  O  ', ' B 313  TYR  OH ', -0.561, (239.418, 207.718, 193.147)), (' B 760  CYS  HA ', ' B 763  LEU  HB2', -0.56, (208.558, 198.199, 208.953)), (' A 294  ASP  O  ', ' A 296  LEU  N  ', -0.559, (195.222, 179.111, 204.283)), (' C 323  THR  OG1', ' C 537  LYS  NZ ', -0.559, (179.325, 224.298, 227.337)), (' B 905  ARG  O  ', ' B1036  GLN  NE2', -0.558, (214.918, 207.752, 158.329)), (' A 948  LEU HD21', ' A1059  GLY  HA3', -0.557, (193.646, 209.647, 187.314)), (' B 905  ARG  NH1', ' B1049  LEU  O  ', -0.557, (215.886, 203.35, 162.097)), (' A 328  ARG HH21', ' A 532  ASN  HA ', -0.555, (229.12, 166.796, 225.437)), (' B1090  PRO  O  ', ' C 913  GLN  NE2', -0.553, (212.525, 226.046, 147.42)), (' B  65  PHE  O  ', ' B 264  ALA  N  ', -0.551, (271.766, 200.404, 220.612)), (' A 119  ILE HG12', ' A 128  ILE HG12', -0.55, (178.288, 181.07, 240.187)), (' A 546  LEU HD21', ' A 573  THR HG21', -0.549, (228.59, 184.042, 219.948)), (' A1116  THR  OG1', ' A1118  ASP  OD1', -0.549, (204.147, 209.178, 136.946)), (' A 795  LYS  NZ ', ' A 801  ASN  OD1', -0.549, (176.331, 210.897, 166.999)), (' B1106  GLN HE21', ' B1109  PHE  HB3', -0.548, (222.24, 213.993, 149.006)), (' C 401  VAL  HA ', ' C 509  ARG HH12', -0.545, (183.82, 201.107, 273.826)), (' B 825  LYS  HE2', ' B 943  SER  HA ', -0.545, (235.054, 198.865, 180.422)), (' B 364  ASP  HA ', ' B 527  PRO  HG3', -0.544, (234.762, 231.707, 246.269)), (' A 312  ILE HD12', ' A 666  ILE HG12', -0.543, (204.367, 183.44, 193.517)), (' C 979  ASP  HB3', ' C 983  ARG HH21', -0.541, (224.85, 225.795, 230.66)), (' A 765  ARG  NH2', ' C 957  GLN  OE1', -0.54, (211.111, 227.737, 203.445)), (' C 605  SER  OG ', ' C 606  ASN  N  ', -0.539, (195.912, 248.095, 202.001)), (' B 725  GLU  OE1', ' B1028  LYS  NZ ', -0.539, (220.065, 208.133, 174.701)), (' B 756  TYR  OH ', ' B 994  ASP  OD1', -0.538, (211.741, 200.603, 223.259)), (' B  99  ASN  O  ', ' B 102  ARG  NH2', -0.536, (270.191, 186.289, 228.044)), (' A 970  PHE  O  ', ' A 995  ARG  NH1', -0.534, (207.186, 204.998, 225.161)), (' A 314  GLN  HA ', ' A 596  SER  HA ', -0.534, (203.974, 185.265, 201.61)), (' A 966  LEU  O  ', ' A 975  SER  OG ', -0.533, (198.174, 205.865, 221.964)), (' B  31  SER  OG ', ' B  60  SER  N  ', -0.532, (258.832, 205.963, 211.917)), (' A 201  PHE  HB3', ' A 229  LEU  HB3', -0.532, (184.361, 186.556, 237.881)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.532, (181.735, 182.986, 226.907)), (' A 905  ARG  NH1', ' A1049  LEU  O  ', -0.531, (194.537, 213.704, 165.097)), (' C 807  PRO  HA ', ' C 816  SER  HA ', -0.53, (226.199, 239.401, 176.197)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.527, (211.917, 234.878, 168.841)), (' C 877  LEU HD13', ' C1029  MET  HE2', -0.526, (223.08, 224.896, 174.646)), (' A1032  CYS  HA ', ' A1048  HIS  HE1', -0.526, (198.477, 212.341, 170.454)), (' B 319  ARG  HE ', ' B 624  ILE HG21', -0.526, (244.012, 222.57, 210.303)), (' A 317  ASN  HA ', ' A 594  GLY  HA2', -0.523, (208.638, 184.461, 206.604)), (' A 167  THR  O  ', ' C 357  ARG  NH2', -0.523, (181.466, 189.168, 253.208)), (' B 106  PHE  HB2', ' B 117  LEU  HB3', -0.522, (256.989, 197.727, 236.967)), (' C 724  THR  HB ', ' C 934  ILE HD11', -0.522, (210.775, 236.078, 177.267)), (' B1049  LEU HD11', ' B1067  TYR  HB2', -0.52, (222.212, 208.246, 159.436)), (' A1010  GLN  HG3', ' A1014  ARG HH12', -0.517, (203.924, 207.498, 200.865)), (' C 458  LYS  NZ ', ' C 471  GLU  OE2', -0.517, (198.425, 185.138, 280.8)), (' C 720  ILE HG22', ' C 926  GLN  HB3', -0.513, (207.423, 239.705, 163.492)), (' C1092  GLU  OE2', ' C1107  ARG  NH1', -0.513, (200.731, 219.552, 153.185)), (' A  54  LEU  HB3', ' A 270  LEU HD13', -0.513, (191.227, 181.206, 225.994)), (' A1031  GLU  OE1', ' A1039  ARG  NH1', -0.512, (205.982, 213.565, 173.516)), (' A 598  ILE  HB ', ' A 609  ALA  HB3', -0.511, (201.088, 179.145, 195.389)), (' B 356  LYS  NZ ', ' B 357  ARG  O  ', -0.511, (222.726, 238.371, 251.018)), (' A 295  PRO  O  ', ' A 299  THR  N  ', -0.511, (196.712, 183.599, 204.79)), (' C 733  LYS  HE3', ' C 771  ALA  HA ', -0.511, (227.195, 219.313, 194.195)), (' C 974  SER  OG ', ' C 983  ARG  NH2', -0.51, (223.256, 225.687, 230.564)), (' B 793  PRO  HG2', ' B 794  ILE HD12', -0.509, (216.123, 180.736, 155.376)), (' C 822  LEU HD22', ' C 945  LEU HD11', -0.509, (215.388, 236.547, 183.906)), (' A 212  LEU HD23', ' A 214  ARG  H  ', -0.509, (173.138, 165.305, 214.792)), (' C 409  GLN  HB3', ' C 419  ALA  HB2', -0.508, (198.158, 203.48, 274.371)), (' A 206  LYS  HE3', ' A 223  LEU  HA ', -0.508, (176.817, 183.964, 221.732)), (' B 424  LYS  HB3', ' B 463  PRO  HB3', -0.507, (206.085, 225.017, 244.898)), (' A 924  ALA  O  ', ' A 928  ASN  ND2', -0.507, (180.841, 205.557, 163.302)), (' B 742  ILE  O  ', ' B1000  ARG  NH1', -0.506, (218.054, 194.129, 217.555)), (' A 612  TYR  HE2', ' A 651  ILE HD12', -0.505, (206.755, 174.612, 202.255)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.505, (197.443, 240.734, 196.957)), (' A  64  TRP  CD1', ' A 266  TYR  HE1', -0.504, (180.347, 165.684, 223.232)), (' A 742  ILE  O  ', ' A1000  ARG  NH1', -0.503, (199.58, 213.293, 221.269)), (' A 896  ILE HG13', ' C 712  ILE HG13', -0.502, (189.364, 223.249, 157.105)), (' B1039  ARG  NE ', ' C1031  GLU  OE2', -0.502, (212.742, 214.493, 171.055)), (' A 393  THR  HB ', ' A 522  ALA  HA ', -0.501, (236.792, 185.158, 231.067)), (' B 726  ILE HG12', ' B1061  VAL HG22', -0.499, (224.824, 200.205, 177.967)), (' A 360  ASN  H  ', ' A 523  THR  HB ', -0.499, (240.232, 181.164, 235.676)), (' A1076  THR  HB ', ' A1097  SER  HB3', -0.499, (207.016, 191.156, 142.442)), (' C 650  LEU HD23', ' C 694  ALA  HB2', -0.498, (186.168, 236.066, 198.63)), (' C 822  LEU HD13', ' C1061  VAL HG21', -0.498, (217.01, 234.733, 181.773)), (' A  88  ASP  N  ', ' A  88  ASP  OD1', -0.497, (193.896, 177.672, 230.366)), (' A 729  VAL HG22', ' A1059  GLY  HA2', -0.496, (194.602, 212.76, 187.325)), (' B 339  GLY  HA2', ' B 343  ASN  H  ', -0.494, (227.159, 231.756, 258.544)), (' B1029  MET  HE1', ' B1053  PRO  HG3', -0.494, (215.572, 197.005, 171.967)), (' A 704  SER  HB2', ' B 790  LYS  HB2', -0.492, (211.838, 182.933, 163.373)), (' A1084  ASP  N  ', ' A1084  ASP  OD1', -0.492, (215.135, 203.233, 129.299)), (' B 707  TYR  HE1', ' C 897  PRO  HA ', -0.492, (224.092, 232.976, 156.6)), (' C1018  ILE  O  ', ' C1022  ALA  N  ', -0.492, (216.095, 219.419, 186.307)), (' A 318  PHE  HZ ', ' A 615  VAL HG21', -0.491, (212.626, 179.062, 203.926)), (' A 560  LEU  HB2', ' A 563  GLN  HG3', -0.491, (245.811, 184.03, 216.606)), (' B 325  SER  HA ', ' B 540  ASN  HB2', -0.488, (240.791, 228.922, 227.405)), (' B 615  VAL HG23', ' B 617  CYS  H  ', -0.486, (243.799, 229.438, 202.878)), (' B 335  LEU  HG ', ' B 362  VAL  HB ', -0.486, (234.965, 237.548, 247.605)), (' C  14  GLN  HA ', ' L  94  TRP  H  ', -0.485, (201.634, 269.968, 258.131)), (' A1041  ASP  HB2', ' B1030  SER  HB3', -0.483, (206.674, 203.498, 171.298)), (' A 722  VAL HG23', ' A 934  ILE HD11', -0.482, (188.411, 202.722, 172.852)), (' A1049  LEU HD11', ' A1067  TYR  HB2', -0.482, (195.013, 205.809, 162.267)), (' B 133  PHE  HD1', ' B 162  SER  H  ', -0.48, (264.05, 193.608, 245.716)), (' B 128  ILE HD13', ' B 229  LEU HD11', -0.479, (254.436, 189.739, 234.427)), (' C 611  LEU  HB2', ' C 650  LEU HD13', -0.479, (188.644, 233.795, 202.743)), (' A 805  ILE HG22', ' A 818  ILE HG21', -0.478, (183.45, 209.346, 176.528)), (' A 773  GLU  OE2', ' A1019  ARG  NH1', -0.478, (206.368, 220.099, 191.583)), (' L  65  SER  N  ', ' L  72  THR  O  ', -0.478, (210.248, 289.53, 268.81)), (' B 731  MET  HG2', ' B 774  GLN  NE2', -0.474, (216.23, 198.436, 191.834)), (' B 699  LEU HD21', ' C 869  MET  HB3', -0.474, (233.162, 227.776, 181.125)), (' B 102  ARG  HG3', ' B 141  LEU HD11', -0.473, (270.744, 190.066, 233.091)), (' A 454  ARG  HE ', ' A 455  LEU  H  ', -0.472, (243.677, 211.903, 253.379)), (' C 326  ILE  HB ', ' C 328  ARG HH21', -0.47, (178.275, 216.426, 233.214)), (' A 415  THR  OG1', ' B 369  TYR  OH ', -0.47, (230.407, 215.856, 246.657)), (' A  65  PHE  HE2', ' A  84  LEU HD21', -0.469, (186.179, 166.66, 230.714)), (' A 574  ASP  N  ', ' A 574  ASP  OD1', -0.469, (231.396, 184.737, 214.096)), (' C 854  LYS  HB3', ' C 854  LYS  HE2', -0.469, (232.736, 231.106, 207.845)), (' A 721  SER  O  ', ' A1066  THR  OG1', -0.468, (193.622, 202.584, 167.75)), (' C 323  THR  HG1', ' C 537  LYS  HZ1', -0.466, (179.776, 225.007, 226.948)), (' B1129  VAL HG23', ' B1132  ILE  HB ', -0.466, (215.604, 237.554, 144.064)), (' B 402  ILE HD13', ' B 410  ILE HD11', -0.465, (213.788, 219.538, 254.04)), (' A 129  LYS  HG3', ' A 169  GLU  HB2', -0.461, (177.674, 182.577, 249.16)), (' C 611  LEU HD12', ' C 650  LEU  HB2', -0.461, (186.738, 233.233, 201.625)), (' B  31  SER  HG ', ' B  60  SER  H  ', -0.461, (258.482, 205.453, 212.972)), (' A 391  CYS  SG ', ' A 526  GLY  N  ', -0.461, (230.866, 179.656, 234.524)), (' A 972  ALA  HA ', ' A 995  ARG HH22', -0.461, (206.214, 204.844, 228.671)), (' A 106  PHE  HD2', ' A 235  ILE HG21', -0.46, (187.712, 177.38, 238.007)), (' C 359  SER  OG ', ' C 394  ASN  OD1', -0.46, (186.419, 194.451, 252.055)), (' A 906  PHE  HB3', ' A 911  VAL  HB ', -0.46, (196.402, 208.679, 155.591)), (' C1089  PHE  HZ ', ' C1129  VAL HG21', -0.459, (187.5, 211.329, 146.397)), (' A  56  LEU HD21', ' A  91  TYR  HB2', -0.459, (185.999, 177.401, 224.517)), (' A 287  ASP  OD1', ' A 288  ALA  N  ', -0.458, (184.296, 183.988, 210.282)), (' A1079  PRO  HA ', ' B 900  MET  HE1', -0.458, (214.578, 198.739, 146.015)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.457, (201.742, 208.157, 175.539)), (' A1035  GLY  HA3', ' C1040  VAL HG21', -0.457, (200.073, 219.496, 167.695)), (' L  89  GLN  HA ', ' L  98  PHE  HA ', -0.457, (199.865, 277.945, 269.357)), (' C 107  GLY  HA2', ' C 235  ILE  HA ', -0.456, (203.801, 246.66, 245.536)), (' A1129  VAL HG13', ' B 917  TYR  HB3', -0.456, (220.536, 200.535, 143.805)), (' C 310  LYS  HD2', ' C 664  ILE HD11', -0.456, (196.667, 239.346, 194.2)), (' C 972  ALA  HA ', ' C 995  ARG HH22', -0.455, (217.202, 218.449, 228.306)), (' B 329  PHE  HE2', ' B 528  LYS  HB2', -0.453, (237.655, 232.879, 238.423)), (' A 222  ALA  HB2', ' A 285  ILE  HB ', -0.453, (179.563, 187.51, 216.35)), (' A 901  GLN  OE1', ' A 905  ARG  NH2', -0.453, (192.009, 216.482, 164.832)), (' A 418  ILE  HA ', ' A 422  ASN  HB2', -0.453, (237.258, 207.374, 249.581)), (' B 627  ASP  O  ', ' B 634  ARG  NH2', -0.451, (256.039, 223.096, 214.859)), (' B 100  ILE HG22', ' B 242  LEU HD22', -0.451, (272.081, 193.463, 227.6)), (' C 784  GLN  OE1', ' C1030  SER  OG ', -0.451, (221.143, 217.388, 173.642)), (' A 535  LYS  HE3', ' A 553  THR  HA ', -0.451, (230.469, 170.88, 212.691)), (' A 985  ASP  N  ', ' A 985  ASP  OD1', -0.45, (203.754, 211.191, 239.629)), (' A 304  LYS  HB3', ' A 304  LYS  HE2', -0.45, (191.338, 194.582, 208.107)), (' C 322  PRO  HB3', ' C 539  VAL  HA ', -0.45, (183.868, 220.96, 226.02)), (' A 580  GLN  HG2', ' A 581  THR HG23', -0.448, (236.311, 169.225, 225.199)), (' B 393  THR HG23', ' B 522  ALA  HA ', -0.448, (224.465, 238.514, 236.849)), (' A 879  ALA  O  ', ' A 883  THR  OG1', -0.448, (186.37, 222.306, 167.855)), (' A 562  PHE  HD2', ' B  41  LYS  HD2', -0.447, (244.982, 187.212, 221.683)), (' C1048  HIS  HD2', ' C1049  LEU  N  ', -0.447, (210.778, 226.867, 166.204)), (' A 767  LEU HD21', ' A1008  VAL HG22', -0.446, (203.76, 215.953, 206.698)), (' C 736  VAL HG11', ' C1004  LEU HD11', -0.445, (224.78, 218.541, 208.504)), (' A 808  ASP  N  ', ' A 808  ASP  OD1', -0.444, (175.553, 216.05, 177.951)), (' A  40  ASP  N  ', ' A  40  ASP  OD1', -0.444, (185.855, 193.079, 222.943)), (' C 617  CYS  HA ', ' C 620  VAL HG13', -0.443, (182.449, 230.611, 211.091)), (' B 825  LYS  NZ ', ' B 938  LEU  O  ', -0.442, (235.253, 196.611, 177.914)), (' B 439  ASN  OD1', ' B 443  SER  OG ', -0.442, (218.519, 217.169, 269.152)), (' B 887  THR HG21', ' B 894  LEU  HB2', -0.442, (205.793, 196.155, 157.536)), (' C 275  PHE  HA ', ' C 290  ASP  HA ', -0.442, (204.062, 242.038, 218.223)), (' A 290  ASP  HB3', ' A 293  LEU HD23', -0.441, (193.057, 179.895, 212.56)), (' B 119  ILE HG12', ' B 128  ILE HG23', -0.441, (256.984, 191.07, 236.189)), (' C 782  PHE  HE2', ' C 870  ILE HG23', -0.441, (225.002, 228.217, 181.944)), (' B  48  LEU  HB3', ' B 964  LYS  HE2', -0.441, (233.089, 197.383, 207.119)), (' A 325  SER  HA ', ' A 540  ASN  HB2', -0.438, (220.36, 174.714, 222.826)), (' B 722  VAL HG22', ' B 930  ALA  HB1', -0.437, (229.641, 201.756, 164.011)), (' A 617  CYS  HB3', ' A 621  PRO  HD3', -0.437, (210.535, 171.318, 203.24)), (' A 475  ALA  HB3', ' A 487  ASN  HB3', -0.436, (247.326, 225.857, 256.188)), (' A1303  NAG  H3 ', ' A1303  NAG  H83', -0.436, (169.263, 193.531, 210.793)), (' C 858  LEU HD21', ' C 962  LEU HD23', -0.433, (223.286, 223.03, 207.938)), (' A 365  TYR  HD2', ' A 387  LEU  HB3', -0.432, (227.135, 185.67, 241.007)), (' C 887  THR HG21', ' C 894  LEU HD12', -0.432, (224.793, 220.928, 157.358)), (' A 662  CYS  HB2', ' A 697  MET  SD ', -0.432, (204.622, 184.32, 183.424)), (' C 954  GLN  HB3', ' C1014  ARG  HD3', -0.432, (213.909, 223.737, 197.878)), (' B 617  CYS  HB3', ' B 649  CYS  HB3', -0.431, (245.6, 228.148, 201.22)), (' A 428  ASP  N  ', ' A 428  ASP  OD1', -0.43, (232.856, 203.544, 232.316)), (' B  91  TYR  N  ', ' B 268  GLY  O  ', -0.43, (258.026, 202.74, 222.632)), (' B 876  ALA  O  ', ' B 880  GLY  N  ', -0.43, (212.719, 190.839, 166.019)), (' A 616  ASN  HA ', ' A 644  GLN HE22', -0.43, (214.501, 173.022, 198.781)), (' C 733  LYS  HB3', ' C 733  LYS  HE2', -0.43, (227.996, 222.537, 196.174)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.43, (196.886, 243.389, 213.569)), (' B 403  ARG  HG3', ' B 497  PHE  HE1', -0.429, (212.461, 215.951, 263.743)), (' A 858  LEU HD13', ' A 959  LEU HD22', -0.428, (194.892, 211.91, 207.685)), (' B 707  TYR  HB3', ' C 792  PRO  HG3', -0.428, (229.355, 234.236, 159.921)), (' B 490  PHE  CE2', ' B 492  LEU  HB2', -0.428, (198.655, 226.553, 266.365)), (' A 832  GLY  HA3', ' A 956  ALA  HB1', -0.428, (190.932, 204.955, 203.234)), (' C1303  NAG  H3 ', ' C1303  NAG  H83', -0.428, (207.81, 249.968, 193.621)), (' A 189  LEU  N  ', ' A 208  THR  O  ', -0.427, (170.042, 175.505, 221.616)), (' C 445  VAL HG23', ' C 499  PRO  HG3', -0.426, (172.474, 205.957, 288.168)), (' A1040  VAL HG21', ' B1035  GLY  HA3', -0.426, (208.641, 204.459, 165.056)), (' A 594  GLY  H  ', ' A 613  GLN  NE2', -0.426, (211.276, 184.774, 203.739)), (' C1301  NAG  H3 ', ' C1301  NAG  H83', -0.426, (187.951, 251.492, 222.26)), (' C 466  ARG HH21', ' C 468  ILE HD11', -0.425, (187.716, 186.827, 270.223)), (' B 743  CYS  HB3', ' B 749  CYS  HB3', -0.425, (213.833, 190.938, 220.214)), (' B 886  TRP  HE3', ' B 905  ARG  HE ', -0.425, (212.141, 202.349, 159.835)), (' C 308  VAL  HB ', ' C 602  THR HG23', -0.424, (202.399, 242.213, 203.259)), (' B  36  VAL  HB ', ' B 220  PHE  CE1', -0.424, (252.53, 194.956, 212.1)), (' A 743  CYS  HB3', ' A 749  CYS  HB3', -0.424, (199.276, 218.391, 224.849)), (' B  46  SER  OG ', ' B 279  TYR  O  ', -0.423, (241.235, 189.252, 204.012)), (' A 454  ARG  NH2', ' A 491  PRO  O  ', -0.423, (245.603, 212.848, 255.984)), (' B 599  THR HG22', ' B 600  PRO  O  ', -0.423, (244.732, 209.254, 193.957)), (' B  43  PHE  HE1', ' B 283  GLY  HA3', -0.422, (243.63, 185.545, 210.047)), (' B 805  ILE  HB ', ' B1054  GLN  NE2', -0.422, (223.563, 192.93, 169.244)), (' B  41  LYS  HE3', ' B 225  PRO  HG2', -0.422, (246.738, 188.584, 222.729)), (' B 722  VAL HG12', ' B1065  VAL  HA ', -0.422, (224.547, 203.217, 164.79)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.421, (250.054, 210.536, 205.552)), (' A 422  ASN  ND2', ' A 454  ARG  HB3', -0.421, (241.674, 208.611, 251.655)), (' A 699  LEU HD23', ' B 873  TYR  CE1', -0.421, (209.953, 187.642, 176.245)), (' C 298  GLU  HG2', ' C 315  THR  HB ', -0.42, (199.039, 234.516, 211.699)), (' C 676  THR  O  ', ' C 691  SER  N  ', -0.418, (187.503, 247.407, 196.67)), (' B 529  LYS  HA ', ' B 529  LYS  HD3', -0.418, (240.404, 238.17, 239.571)), (' B 117  LEU HD22', ' B 231  ILE HG21', -0.417, (253.635, 196.007, 236.691)), (' B 131  CYS  HB2', ' B 133  PHE  CE2', -0.416, (260.038, 193.421, 244.271)), (' B1025  ALA  O  ', ' B1029  MET  N  ', -0.414, (213.213, 203.257, 175.56)), (' C 376  THR  HB ', ' C 435  ALA  HB3', -0.414, (186.184, 210.978, 268.707)), (' C 763  LEU  HB3', ' C1008  VAL HG21', -0.413, (222.864, 214.149, 206.096)), (' C 862  PRO  HA ', ' C 863  PRO  HD3', -0.413, (230.575, 227.835, 194.193)), (' A 834  ILE  O  ', ' A 838  GLY  N  ', -0.413, (186.688, 213.055, 202.903)), (' H   5  VAL  O  ', ' H  23  LYS  N  ', -0.413, (179.991, 284.152, 258.677)), (' C 656  VAL HG22', ' C 658  ASN  H  ', -0.412, (180.677, 240.336, 189.78)), (' A 733  LYS  NZ ', ' A 775  ASP  OD2', -0.411, (194.933, 223.454, 196.646)), (' A 106  PHE  HB3', ' A 235  ILE HD12', -0.411, (187.55, 178.204, 240.664)), (' C 885  GLY  HA2', ' C 901  GLN  NE2', -0.411, (220.406, 227.406, 161.583)), (' A1045  LYS  HA ', ' A1045  LYS  HD3', -0.41, (201.36, 201.019, 170.023)), (' A 621  PRO  HA ', ' A 633  TRP  HZ3', -0.41, (207.352, 171.435, 206.902)), (' C 828  LEU  HA ', ' C 952  VAL HG11', -0.41, (218.791, 233.379, 195.799)), (' A 914  ASN  O  ', ' A 918  GLU  HG3', -0.409, (190.253, 207.402, 148.624)), (' B 382  VAL HG11', ' B 515  PHE  HZ ', -0.409, (224.697, 225.496, 238.783)), (' A1048  HIS  HD2', ' A1049  LEU  N  ', -0.409, (196.342, 210.093, 166.574)), (' A 406  GLU  OE1', ' A 409  GLN  NE2', -0.408, (230.365, 209.362, 251.674)), (' C 802  PHE  CD2', ' C 805  ILE HD11', -0.408, (220.323, 236.644, 167.774)), (' B 902  MET  HE1', ' B1050  MET  HE1', -0.408, (220.979, 199.844, 159.809)), (' C 424  LYS  HB3', ' C 424  LYS  HE2', -0.407, (200.845, 196.268, 268.242)), (' A 905  ARG  HD3', ' A1049  LEU  O  ', -0.406, (194.714, 212.801, 164.355)), (' C 278  LYS  HA ', ' C 278  LYS  HD3', -0.406, (214.319, 242.217, 214.637)), (' B 903  ALA  HA ', ' B 916  LEU HD13', -0.406, (218.14, 203.319, 152.099)), (' B1073  LYS  HB2', ' B1075  PHE  CE1', -0.405, (231.225, 221.71, 148.588)), (' B 231  ILE  HB ', ' B 233  ILE HG12', -0.405, (251.519, 198.128, 238.811)), (' C 320  VAL HG23', ' C 590  CYS  HB3', -0.403, (185.114, 223.482, 219.614)), (' A 762  GLN  HA ', ' A 765  ARG  HD3', -0.402, (208.61, 224.404, 207.951)), (' C 877  LEU  HA ', ' C 877  LEU HD23', -0.402, (225.999, 226.245, 170.682)), (' B 808  ASP  HA ', ' B 809  PRO  HD3', -0.402, (223.816, 181.824, 166.998)), (' C 770  ILE HD11', ' C1012  LEU HD23', -0.401, (220.654, 215.222, 198.756)), (' C 811  LYS  NZ ', ' C 820  ASP  OD2', -0.401, (226.134, 243.265, 180.67)), (' A 440  ASN  N  ', ' A 440  ASN  OD1', -0.401, (229.93, 192.144, 266.459)), (' B  44  ARG  HB2', ' B  47  VAL HG22', -0.401, (237.094, 190.412, 210.077)), (' C 906  PHE  HB3', ' C 911  VAL HG23', -0.401, (207.209, 227.9, 156.103)), (' A 426  PRO  HG2', ' A 429  PHE  HB2', -0.4, (233.611, 201.786, 236.715)), (' C 526  GLY  HA2', ' C 527  PRO  HD3', -0.4, (182.113, 205.721, 244.941)), (' A 328  ARG  HA ', ' A 328  ARG  HD3', -0.4, (230.035, 172.209, 228.377)), (' B1037  SER  HB3', ' B1048  HIS  ND1', -0.4, (215.26, 208.178, 166.189))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

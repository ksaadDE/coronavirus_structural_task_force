# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('A', ' 505 ', 'PRO', None, (164.699, 164.005, 179.196)), ('B', ' 183 ', 'PRO', None, (184.393, 146.62, 182.96000000000006)), ('D', '  32 ', 'GLU', None, (181.81600000000006, 246.366, 164.86600000000004)), ('D', ' 183 ', 'PRO', None, (211.402, 140.439, 162.033)), ('E', ' 190 ', 'ASN', None, (153.772, 174.727, 132.61600000000004)), ('F', '  81 ', 'PHE', None, (153.424, 204.453, 161.215)), ('F', ' 190 ', 'ASN', None, (126.70399999999995, 162.862, 183.274)), ('F', ' 191 ', 'SER', None, (128.8519999999999, 162.509, 181.17700000000005))]
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' E 300  PRO  O  ', ' E 354  GLN  NE2', -0.886, (191.018, 140.954, 151.921)), (' E 303  ARG  NH2', ' E 351  THR  O  ', -0.819, (185.204, 150.498, 151.226)), (' B  61  LYS  NZ ', ' T  32    G  OP1', -0.813, (166.083, 205.517, 168.383)), (' A 705  ASN  OD1', ' A 788  TYR  OH ', -0.805, (172.931, 167.45, 218.528)), (' C  54  SER  O  ', ' C  57  SER  OG ', -0.805, (204.711, 153.063, 178.658)), (' F  20  ILE  O  ', ' F  22  ARG  NH1', -0.801, (140.504, 178.715, 157.278)), (' P  25    C  O2 ', ' T  31    G  N2 ', -0.798, (168.431, 200.464, 178.1)), (' A 903  TYR  OH ', ' D  70  MET  SD ', -0.798, (191.062, 191.378, 159.277)), (' E 519  ASN  OD1', ' E 530  THR  OG1', -0.775, (179.482, 149.62, 112.177)), (' D  25  ALA  O  ', ' D  29  GLY  N  ', -0.765, (190.256, 243.061, 164.528)), (' A 720  VAL HG11', ' A 775  LEU HD23', -0.755, (175.907, 180.634, 229.435)), (' E  12  THR  OG1', ' E  25  LEU  O  ', -0.748, (197.981, 186.506, 147.883)), (' A 409  THR  OG1', ' C  23  GLU  OE2', -0.747, (186.35, 159.954, 177.609)), (' A 340  PHE  CE1', ' B  95  LEU HD11', -0.746, (151.367, 156.806, 173.522)), (' A 605  VAL  CG2', ' A 756  MET  HE3', -0.745, (181.57, 188.156, 208.342)), (' F 520  ALA  O  ', ' F 524  LYS  NZ ', -0.732, (112.033, 148.585, 151.663)), (' E 332  ARG  NH1', ' E 333  ILE  O  ', -0.726, (179.645, 152.415, 140.716)), (' F 519  ASN  OD1', ' F 530  THR  OG1', -0.719, (115.83, 148.56, 146.048)), (' F 332  ARG  NH1', ' F 333  ILE  O  ', -0.719, (140.712, 148.815, 153.148)), (' E 531  GLN  OE1', ' E 535  SER  OG ', -0.71, (181.581, 150.835, 120.283)), (' F 212  ARG  NH2', ' F 339  ARG  O  ', -0.687, (129.208, 151.887, 158.322)), (' F 113  ASP  OD2', ' F 115  THR  OG1', -0.685, (125.963, 179.444, 146.897)), (' E 497  ARG  NH1', ' E 498  GLU  OE2', -0.684, (178.557, 145.691, 94.849)), (' E  37  THR  O  ', ' E  40  LYS  NZ ', -0.67, (196.787, 193.004, 131.652)), (' E 465  LYS  NZ ', ' E 569  LYS  O  ', -0.669, (192.514, 133.384, 117.311)), (' F 126  CYS  O  ', ' F 131  LYS  NZ ', -0.667, (143.826, 174.193, 136.57)), (' A  50  LYS  NZ ', ' A  53  CYS  SG ', -0.667, (173.22, 154.873, 241.538)), (' E   7  LEU HD21', ' E 103  VAL HG12', -0.661, (203.285, 184.422, 139.32)), (' E 283  PRO  HG2', ' E 286  THR HG21', -0.661, (201.096, 143.128, 125.776)), (' E 321  ALA  O  ', ' E 325  LEU  N  ', -0.66, (187.194, 137.032, 141.841)), (' E 286  THR HG22', ' E 440  THR  O  ', -0.657, (200.218, 140.22, 125.823)), (' A  54  CYS  SG ', ' A  74  ARG  NH2', -0.656, (175.712, 151.863, 251.094)), (' C   7  LYS  O  ', ' C  10  SER  OG ', -0.655, (202.312, 165.968, 183.718)), (' F 300  PRO  O  ', ' F 354  GLN  NE2', -0.648, (153.302, 140.278, 141.979)), (' A 881  PHE  O  ', ' A 885  LEU HD23', -0.646, (200.936, 191.425, 187.474)), (' A 452  ASP  OD2', ' A 624  ARG  NH2', -0.646, (178.843, 162.059, 191.986)), (' A 720  VAL HG11', ' A 775  LEU  CD2', -0.645, (176.274, 179.637, 229.625)), (' F 272  VAL HG11', ' F 295  LEU HD22', -0.644, (147.586, 148.269, 134.435)), (' A 501  SER  OG ', ' T  19    A  OP1', -0.643, (171.443, 168.896, 179.02)), (' E 375  GLU  N  ', ' E 399  ILE  O  ', -0.634, (194.963, 151.644, 133.822)), (' A 326  PHE  O  ', ' B 118  ASN  ND2', -0.634, (159.9, 152.655, 193.403)), (' A 254  GLU  OE2', ' A 286  TYR  OH ', -0.633, (159.059, 145.88, 215.625)), (' F 199  THR  OG1', ' F 212  ARG  NH2', -0.632, (127.472, 152.805, 158.1)), (' A 316  LEU  HB2', ' A 463  MET  HE3', -0.631, (162.985, 156.216, 212.585)), (' F 124  ASN  O  ', ' F 131  LYS  NZ ', -0.631, (142.14, 173.229, 136.301)), (' E 566  THR  OG1', ' E 567  ARG  NH1', -0.625, (192.971, 145.737, 119.73)), (' A  40  ASP  OD1', ' A  41  LYS  N  ', -0.623, (165.806, 172.798, 240.912)), (' E 244  GLU  OE2', ' E 246  TYR  OH ', -0.623, (205.83, 155.313, 152.472)), (' F 287  GLY  O  ', ' F 291  PHE  N  ', -0.622, (139.435, 144.165, 133.069)), (' E 409  ARG  NH2', ' E 422  PHE  O  ', -0.622, (196.542, 163.242, 129.682)), (' A 136  GLU  N  ', ' A 136  GLU  OE1', -0.615, (186.673, 161.072, 218.804)), (' E 548  GLN  NE2', ' E 576  MET  SD ', -0.615, (195.791, 151.019, 106.78)), (' E 499  PHE  O  ', ' E 503  ASN  ND2', -0.611, (184.816, 138.879, 100.764)), (' F 367  THR  OG1', ' F 392  ARG  NH2', -0.597, (158.134, 154.878, 146.281)), (' F  59  ASP  OD1', ' F  61  THR HG22', -0.596, (140.987, 198.884, 155.312)), (' F 212  ARG  NH1', ' F 214  THR  OG1', -0.594, (129.086, 150.873, 161.444)), (' D   8  SER  O  ', ' E  79  ILE HD11', -0.591, (192.107, 215.04, 154.454)), (' E 377  SER  OG ', ' E 401  ASP  O  ', -0.589, (196.929, 154.314, 127.653)), (' E 534  ASP  OD1', ' E 560  ARG  NH1', -0.582, (188.503, 156.107, 118.373)), (' E 371  VAL HG23', ' E 393  ALA  HB2', -0.582, (194.03, 153.827, 148.999)), (' F 513  SER  OG ', ' F 515  TYR  O  ', -0.577, (114.273, 154.355, 144.402)), (' E   7  LEU HD11', ' E  29  CYS  SG ', -0.577, (204.197, 184.558, 142.211)), (' A 881  PHE  CZ ', ' A 885  LEU HD21', -0.576, (198.495, 193.66, 188.09)), (' A 601  MET  O  ', ' A 604  THR  OG1', -0.574, (180.026, 191.104, 207.467)), (' C  73  GLU  OE2', ' D 111  ARG  NH2', -0.573, (217.031, 161.334, 163.262)), (' F  65  LEU HD21', ' F  81  PHE  CE1', -0.571, (154.967, 201.098, 160.365)), (' F 249  ILE HD11', ' F 270  GLN  HB2', -0.566, (154.927, 146.733, 127.95)), (' A 239  SER  OG ', ' A 465  ASP  OD1', -0.565, (163.648, 164.692, 220.674)), (' F 468  SER  OG ', ' F 570  VAL  O  ', -0.56, (114.94, 140.016, 127.12)), (' A 412  PRO  HB3', ' C  14  LEU HD23', -0.558, (195.194, 163.583, 180.456)), (' E 187  VAL HG12', ' E 192  LYS  HG3', -0.554, (161.905, 175.081, 130.341)), (' A 519  MET  CE ', ' A 566  MET  HE1', -0.551, (157.681, 176.291, 179.934)), (' A 443  ALA  HB3', ' C  33  VAL HG23', -0.55, (193.149, 160.55, 183.064)), (' F 258  ILE HG23', ' F 259  SER  H  ', -0.548, (148.292, 134.871, 130.048)), (' A 612  PRO  CG ', ' A 805  LEU HD11', -0.548, (187.125, 189.51, 217.803)), (' F  28  LYS  NZ ', ' F  97  CYS  O  ', -0.546, (156.644, 192.213, 145.842)), (' E   7  LEU  CD2', ' E 103  VAL HG12', -0.545, (203.572, 183.477, 139.464)), (' A 494  ILE HD11', ' A 577  LYS  HE2', -0.544, (166.823, 187.689, 189.311)), (' F 176  LEU  O  ', ' F 516  ASN  ND2', -0.541, (119.087, 154.972, 150.853)), (' A 271  LEU HD23', ' B 119  ILE HD11', -0.54, (153.461, 145.893, 190.655)), (' E 265  ASN  ND2', ' E 269  TYR  OH ', -0.534, (199.656, 138.65, 139.947)), (' D   9  LEU HD12', ' D  12  TYR  H  ', -0.534, (188.031, 218.716, 156.778)), (' F 403  ALA  O  ', ' F 559  ASN  ND2', -0.533, (127.021, 158.931, 131.822)), (' A 340  PHE  HE1', ' B  95  LEU HD11', -0.53, (150.725, 157.08, 173.479)), (' F 518  GLN  NE2', ' F 547  THR  OG1', -0.528, (109.13, 152.526, 141.312)), (' F  68  MET  N  ', ' F  68  MET  SD ', -0.528, (154.923, 198.615, 170.637)), (' F 540  GLU  N  ', ' F 540  GLU  OE1', -0.528, (126.886, 141.405, 136.482)), (' A 710  THR HG21', ' A 715  ILE HD11', -0.527, (175.567, 175.433, 230.941)), (' E 449  VAL HG11', ' E 463  ALA  CB ', -0.526, (201.056, 136.39, 118.231)), (' F 235  LEU  H  ', ' F 235  LEU HD23', -0.523, (145.848, 171.292, 150.859)), (' F   7  LEU  H  ', ' F   7  LEU HD23', -0.523, (148.717, 183.704, 145.508)), (' F  21  ARG  NE ', ' F 136  GLU  OE2', -0.52, (141.671, 174.447, 154.214)), (' B  67  MET  HE2', ' B  67  MET  N  ', -0.519, (159.8, 193.465, 161.386)), (' E 509  ALA  O  ', ' E 528  LEU HD13', -0.518, (181.179, 141.218, 109.812)), (' F 487  ALA  O  ', ' F 517  SER  OG ', -0.518, (111.074, 157.99, 147.262)), (' B 137  THR  O  ', ' B 141  THR HG22', -0.517, (178.575, 137.492, 189.316)), (' A 615  MET  HE1', ' A 617  TRP  CE3', -0.516, (182.14, 176.666, 213.072)), (' C  14  LEU HD22', ' C  36  HIS  CG ', -0.515, (196.976, 162.068, 181.963)), (' A 542  MET  HA ', ' A 542  MET  HE2', -0.512, (174.131, 163.927, 187.366)), (' E  52  ALA  HB3', ' E  55  CYS  HB3', -0.51, (181.662, 204.98, 141.493)), (' A 755  MET  HE2', ' A 757  ILE HD11', -0.51, (176.316, 179.819, 209.828)), (' F 178  ARG  HD2', ' F 340  VAL HG13', -0.509, (129.051, 150.257, 154.63)), (' A 615  MET  HE1', ' A 617  TRP  CZ3', -0.508, (181.682, 177.213, 213.223)), (' E 405  LEU HD23', ' E 406  PRO  O  ', -0.508, (191.116, 158.933, 124.645)), (' F  65  LEU HD23', ' F  81  PHE  O  ', -0.507, (152.053, 201.979, 160.669)), (' F 261  GLU  CD ', ' F 290  HIS  HE2', -0.506, (139.358, 136.689, 133.022)), (' A 101  PHE  CD2', ' A 114  ILE HG22', -0.505, (163.754, 149.87, 248.974)), (' D 145  THR  O  ', ' D 156  ILE HG22', -0.503, (219.336, 138.027, 179.217)), (' F 374  ASP  OD1', ' F 375  GLU  N  ', -0.503, (137.288, 152.709, 139.298)), (' E 480  ILE HG12', ' E 550  THR HG22', -0.503, (188.075, 159.364, 102.606)), (' A 531  THR HG21', ' A 567  THR HG21', -0.502, (155.788, 172.459, 188.008)), (' F 219  LEU  H  ', ' F 219  LEU HD23', -0.501, (121.198, 151.052, 171.373)), (' B  51  ARG  NH1', " P  16    G  O3'", -0.499, (161.234, 217.67, 166.22)), (' F   7  LEU HD21', ' F  29  CYS  HB3', -0.499, (148.541, 187.049, 145.948)), (' E 484  VAL  O  ', ' E 484  VAL HG12', -0.498, (177.424, 163.658, 110.863)), (' F 121  ILE HG22', ' F 421  TYR  CG ', -0.496, (132.976, 172.553, 134.022)), (' F 283  PRO  HG2', ' F 286  THR HG21', -0.494, (131.525, 148.727, 127.654)), (' F  80  SER  HB3', ' F  81  PHE  HA ', -0.492, (153.192, 206.622, 159.658)), (' E 439  GLY  O  ', ' E 440  THR  OG1', -0.49, (204.47, 138.445, 127.21)), (' F 268  ASN  O  ', ' F 272  VAL  N  ', -0.489, (149.114, 149.716, 129.089)), (' E 449  VAL  HA ', ' E 452  VAL HG12', -0.489, (200.404, 142.143, 116.965)), (' E 404  GLN  OE1', ' E 537  GLN  NE2', -0.489, (192.899, 150.678, 124.771)), (' A 665  GLU  N  ', ' A 665  GLU  OE1', -0.487, (165.424, 161.938, 193.41)), (' F 189  LYS  H  ', ' F 190  ASN  HB2', -0.487, (125.006, 160.923, 181.941)), (' C  22  VAL HG23', ' C  28  LEU HD23', -0.486, (195.665, 153.101, 173.738)), (' F 258  ILE HD12', ' F 298  TYR  HA ', -0.486, (150.521, 139.948, 132.62)), (' A 371  LEU  HB3', ' B  87  MET  HE2', -0.485, (155.039, 166.779, 174.581)), (' F 258  ILE HG23', ' F 259  SER  N  ', -0.484, (148.024, 135.581, 130.408)), (' E  24  PHE  O  ', ' E  25  LEU HD22', -0.481, (197.031, 183.011, 143.958)), (' A 382  ALA  HB3', ' B 117  LEU HD11', -0.481, (159.289, 153.104, 184.627)), (' A 699  ALA  O  ', ' A 703  ASN  ND2', -0.479, (175.126, 176.59, 216.903)), (' F 272  VAL HG23', ' F 436  MET  HE1', -0.477, (147.456, 149.838, 129.764)), (' E 481  THR  OG1', ' E 488  ILE  O  ', -0.477, (181.047, 158.669, 102.18)), (' E 189  LYS  H  ', ' E 190  ASN  HB2', -0.477, (153.648, 173.647, 130.089)), (' F 458  ASP  OD1', ' F 460  LYS  NZ ', -0.477, (132.254, 155.978, 121.238)), (' A 278  GLU  N  ', ' A 278  GLU  OE1', -0.475, (150.414, 148.199, 207.299)), (' E 121  ILE HG22', ' E 421  TYR  CG ', -0.475, (203.089, 166.815, 126.157)), (' A 358  ASP  OD1', ' A 533  ARG  NH1', -0.475, (142.788, 169.441, 189.882)), (' E 272  VAL HG11', ' E 295  LEU HD21', -0.474, (200.075, 145.801, 144.689)), (' B 141  THR HG23', ' B 142  CYS  N  ', -0.473, (176.337, 136.379, 187.64)), (' A 398  VAL HG23', ' A 675  VAL HG23', -0.472, (165.524, 153.111, 190.834)), (' F 566  THR  OG1', ' F 567  ARG  NH1', -0.466, (124.177, 149.389, 132.636)), (' E 258  ILE HG23', ' E 259  SER  H  ', -0.465, (199.362, 131.821, 143.856)), (' A 601  MET  HB3', ' A 756  MET  HE1', -0.464, (181.875, 188.609, 205.658)), (' D  11  SER  OG ', ' D  52  ASP  OD2', -0.463, (183.021, 218.7, 155.937)), (' E 518  GLN  OE1', ' E 549  THR HG23', -0.463, (184.688, 155.942, 106.026)), (' A 858  ARG  NH1', ' P  32    G  OP1', -0.462, (189.044, 180.377, 180.57)), (' D  40  LYS  NZ ', ' T  41    G  OP2', -0.462, (172.326, 231.387, 164.494)), (' A 106  ILE HG23', ' A 107  ASP  N  ', -0.46, (176.228, 152.907, 260.095)), (' E 198  TYR  OH ', ' E 217  TYR  O  ', -0.46, (162.842, 158.891, 127.886)), (' F 187  VAL  O  ', ' F 187  VAL HG22', -0.459, (124.857, 164.309, 178.512)), (' F 262  PHE  HZ ', ' F 297  LEU HD12', -0.459, (145.461, 137.02, 134.722)), (' E 283  PRO  O  ', ' E 288  LYS  NZ ', -0.458, (197.863, 145.749, 128.406)), (' E  52  ALA  HB1', ' E  53  PRO  HD2', -0.457, (180.504, 207.32, 143.444)), (' A 494  ILE  O  ', ' A 573  GLN  NE2', -0.456, (165.188, 184.019, 187.628)), (' A 539  ILE  O  ', ' A 561  SER  OG ', -0.455, (164.847, 165.437, 184.506)), (' E 445  PRO  O  ', ' E 449  VAL HG12', -0.455, (199.688, 137.344, 116.171)), (' A  28  THR HG21', ' A  51  THR  O  ', -0.455, (176.902, 157.659, 247.12)), (' F  65  LEU  H  ', ' F  65  LEU HD23', -0.454, (152.17, 201.293, 161.468)), (' A 429  PHE  C  ', ' C   1  SER  HG ', -0.454, (210.643, 176.131, 189.097)), (' B  70  MET  HE3', ' F  92  LEU  HG ', -0.453, (157.048, 189.115, 158.992)), (' D 134  ASP  OD1', ' D 135  TYR  N  ', -0.452, (220.33, 143.36, 162.919)), (' F 340  VAL HG12', ' F 341  GLU  N  ', -0.451, (130.691, 148.092, 156.318)), (' B  73  GLN HE22', ' F  46  ASN  CG ', -0.449, (152.217, 187.695, 166.977)), (' E 203  GLY  N  ', ' E 208  ALA  O  ', -0.449, (170.552, 157.179, 113.354)), (' D 142  CYS  HG ', ' D 147  PHE  HD1', -0.448, (218.728, 143.204, 174.974)), (' E 308  ALA  O  ', ' E 359  THR  HA ', -0.448, (185.974, 154.896, 138.088)), (' E 218  LYS  N  ', ' F 245  HIS  O  ', -0.445, (158.751, 159.281, 128.562)), (' A  97  ALA  O  ', ' A  99  HIS  ND1', -0.445, (163.175, 146.603, 240.927)), (' E 189  LYS  N  ', ' E 190  ASN  HB2', -0.445, (153.498, 173.999, 130.092)), (' A 196  MET  HG3', ' A 201  ILE  HB ', -0.444, (152.236, 154.077, 237.38)), (' B 159  VAL HG22', ' B 186  VAL HG23', -0.444, (176.818, 137.697, 178.79)), (' E 201  GLU  O  ', ' E 209  VAL HG23', -0.444, (171.75, 157.523, 117.362)), (' F 506  TRP  CD1', ' F 545  ILE HD11', -0.443, (109.983, 142.128, 136.268)), (' A 588  VAL  O  ', ' A 588  VAL HG23', -0.443, (177.854, 185.103, 202.016)), (' A 401  LEU HD12', ' A 668  MET  HE2', -0.443, (168.066, 157.193, 180.027)), (' T  37    U  C2 ', ' T  38    G  C8 ', -0.443, (176.381, 221.862, 174.813)), (' F 382  TYR  O  ', ' F 386  VAL HG23', -0.443, (142.753, 164.564, 148.286)), (' F 121  ILE HG22', ' F 421  TYR  CD2', -0.442, (132.476, 172.735, 134.253)), (' F 187  VAL HG23', ' F 192  LYS  HB2', -0.442, (126.998, 165.045, 176.786)), (' E 310  SER  OG ', ' E 378  MET  SD ', -0.442, (187.268, 154.856, 130.537)), (' E 363  LEU  O  ', ' E 390  ARG  NH1', -0.442, (183.599, 161.278, 145.841)), (' E 518  GLN  HA ', ' E 521  VAL HG12', -0.441, (178.799, 154.675, 106.838)), (' A 335  VAL  O  ', ' A 338  VAL HG12', -0.441, (145.969, 157.455, 172.572)), (' E  24  PHE  C  ', ' E  25  LEU HD22', -0.441, (196.649, 183.213, 144.046)), (' F 450  ASP  O  ', ' F 453  SER  OG ', -0.441, (123.651, 151.961, 119.443)), (' A 687  THR HG23', ' A 688  ALA  N  ', -0.439, (172.718, 176.015, 195.308)), (' E 258  ILE HG23', ' E 259  SER  N  ', -0.437, (198.823, 131.708, 144.075)), (' B  67  MET  HE3', ' F  90  PHE  CZ ', -0.437, (157.989, 195.446, 160.121)), (' A 626  MET  HE2', ' A 694  PHE  CG ', -0.437, (172.307, 170.419, 204.986)), (' E 219  LEU HD21', ' E 225  PHE  CE1', -0.436, (164.638, 164.279, 125.714)), (' D  61  LYS  O  ', ' D  65  GLN  OE1', -0.435, (184.79, 199.525, 165.289)), (' F 268  ASN  O  ', ' F 436  MET  HE1', -0.434, (147.712, 149.889, 128.583)), (" P  24    C HO2'", ' P  25    C  P  ', -0.434, (170.625, 202.476, 186.904)), (' F 181  VAL HG13', ' F 228  THR HG21', -0.434, (129.095, 159.351, 159.974)), (' F 258  ILE  O  ', ' F 259  SER  OG ', -0.433, (146.667, 134.519, 133.32)), (' E 189  LYS  CB ', ' E 190  ASN  HB2', -0.432, (152.732, 174.66, 130.09)), (' A 605  VAL HG23', ' A 756  MET  HE3', -0.432, (181.352, 188.294, 208.348)), (' E   6  VAL HG23', ' E   7  LEU  N  ', -0.431, (200.864, 180.327, 142.246)), (' A 457  ARG  NH2', ' A 458  TYR  OH ', -0.431, (183.233, 155.131, 199.679)), (' F  73  LYS  HZ3', ' F  76  LYS  HD3', -0.43, (147.597, 207.127, 162.179)), (' F 424  SER  O  ', ' F 428  LEU HD23', -0.43, (142.4, 166.291, 133.939)), (' E 401  ASP  OD2', ' E 403  ALA  HB3', -0.43, (199.786, 151.206, 124.075)), (' E 526  LEU HD12', ' E 528  LEU  H  ', -0.429, (176.903, 143.837, 108.259)), (' F 189  LYS  CB ', ' F 190  ASN  HB2', -0.428, (125.012, 160.987, 183.122)), (' D  83  VAL HG13', ' D  84  THR  N  ', -0.427, (195.63, 168.838, 166.431)), (' A 758  LEU  O  ', ' A 760  ASP  N  ', -0.427, (177.902, 177.438, 202.111)), (' F 189  LYS  HB3', ' F 190  ASN  HB2', -0.426, (125.281, 160.854, 183.541)), (' D 167  VAL HG13', ' D 171  GLU  OE2', -0.426, (217.124, 130.684, 167.373)), (' E 121  ILE HG22', ' E 421  TYR  CD2', -0.425, (203.154, 166.811, 125.652)), (' F 306  TYR  HD2', ' F 317  LEU HD21', -0.425, (142.364, 147.407, 142.146)), (' F 306  TYR  CD2', ' F 317  LEU HD21', -0.425, (142.0, 147.068, 141.953)), (' E 410  THR HG23', ' E 411  LEU HD22', -0.423, (186.055, 170.349, 124.434)), (' A 110  MET  HA ', ' A 110  MET  HE2', -0.422, (169.666, 150.182, 261.381)), (' F 376  ILE  H  ', ' F 376  ILE HD12', -0.42, (137.896, 156.403, 138.526)), (' A 506  PHE  O  ', ' A 515  TYR  OH ', -0.419, (164.44, 168.964, 175.238)), (' E 453  SER  O  ', ' E 459  ASN  N  ', -0.419, (208.364, 145.165, 118.306)), (' A 523  ASP  OD1', ' A 524  GLN  N  ', -0.419, (152.644, 178.355, 179.946)), (' A 619  TYR  HE1', ' A 786  LEU HD11', -0.419, (177.933, 169.86, 209.919)), (' A 583  ARG  NH2', ' A 591  THR  OG1', -0.418, (175.336, 190.77, 199.756)), (' C  22  VAL  CG2', ' C  28  LEU HD23', -0.418, (195.414, 153.168, 174.224)), (' E 165  LEU HD23', ' E 166  SER  N  ', -0.417, (167.436, 166.577, 115.906)), (' A 691  ASN  HB3', ' A 759  SER  O  ', -0.415, (175.036, 174.155, 201.649)), (' A 398  VAL  CG2', ' A 675  VAL HG23', -0.414, (165.265, 153.188, 190.875)), (' E 374  ASP  OD1', ' E 375  GLU  N  ', -0.414, (193.932, 150.474, 133.835)), (' A 519  MET  HE3', ' A 566  MET  HE1', -0.414, (157.127, 176.455, 180.318)), (' E 492  GLN HE22', ' E 547  THR HG22', -0.413, (186.612, 148.291, 104.206)), (' F 451  THR  HB ', ' F 585  LEU HD23', -0.413, (117.757, 153.752, 122.199)), (' F 105  ASP  OD1', ' F 130  LEU HD13', -0.413, (143.229, 181.826, 140.506)), (' F 293  ILE  H  ', ' F 293  ILE HD12', -0.412, (141.263, 142.921, 138.21)), (' E 204  ASP  N  ', ' E 204  ASP  OD1', -0.411, (170.75, 153.537, 110.506)), (' A 205  LEU HD12', ' A 234  VAL HG12', -0.411, (157.819, 156.581, 229.093)), (' E 511  PHE  CZ ', ' E 547  THR HG21', -0.409, (184.103, 148.876, 106.341)), (' A 316  LEU  CB ', ' A 463  MET  HE3', -0.409, (162.468, 155.953, 212.951)), (' F 189  LYS  N  ', ' F 190  ASN  HB2', -0.409, (124.857, 161.035, 182.117)), (' E 549  THR HG22', ' E 550  THR HG23', -0.409, (186.889, 158.571, 105.225)), (" P  24    C  O2'", ' P  25    C  P  ', -0.408, (170.445, 202.406, 186.617)), (' A 836  ARG  NH2', ' P  34    U  OP2', -0.408, (188.498, 178.285, 190.194)), (' F 255  THR  OG1', ' F 256  LEU  N  ', -0.408, (154.278, 135.563, 133.867)), (' A 707  LEU  O  ', ' A 710  THR HG22', -0.406, (174.272, 173.369, 229.013)), (' B  70  MET  HE1', ' F  91  GLY  HA2', -0.405, (155.773, 191.354, 158.374)), (' E 163  LEU  N  ', ' E 209  VAL  O  ', -0.405, (166.415, 157.132, 117.829)), (' F 539  SER  HG ', ' F 541  TYR  HE2', -0.404, (123.888, 143.565, 140.352)), (' F 456  VAL HG23', ' F 457  TYR  CD1', -0.403, (127.151, 156.689, 125.399)), (' E 100  SER  OG ', ' E 101  ASP  N  ', -0.403, (210.585, 184.15, 139.312)), (' E  21  ARG HH21', ' E 234  PRO  HG3', -0.403, (187.411, 175.672, 142.609)), (' E 189  LYS  HB3', ' E 190  ASN  HB2', -0.403, (152.523, 174.168, 130.561)), (' A 403  ASN  C  ', ' B 129  MET  HE1', -0.402, (172.361, 147.915, 176.201)), (' E 371  VAL HG23', ' E 393  ALA  CB ', -0.401, (194.578, 153.456, 148.812)), (' A 647  SER  OG ', ' A 648  LEU  N  ', -0.401, (146.348, 175.883, 201.972)), (' E 127  THR  O  ', ' E 131  LYS  N  ', -0.401, (201.954, 172.778, 138.38)), (' A   3  ASP  OD1', ' A   4  ALA  N  ', -0.401, (182.081, 144.623, 257.365)), (' E 456  VAL HG11', ' E 562  ASN HD22', -0.401, (200.324, 149.867, 119.631)), (' B 104  ASN  HA ', ' B 107  ILE HG22', -0.4, (147.385, 145.487, 182.705)), (' E 484  VAL  O  ', ' E 485  SER  HB2', -0.4, (179.289, 165.084, 111.03))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' A 793  LYS  NZ ', ' A 795  THR  OG1', -0.654, (292.081, 281.376, 230.199)), (' A 109  ASN  N  ', ' A 109  ASN  OD1', -0.566, (270.432, 309.436, 306.027)), (' A 439  LYS  NZ ', ' A 480  ASP  OD1', -0.561, (242.781, 243.72, 318.441)), (' A 543  LYS  NZ ', ' A 560  ASP  OD2', -0.559, (230.852, 272.651, 269.195)), (' C  78  ASN  N  ', ' C  79  PRO  CD ', -0.546, (216.041, 232.564, 290.26)), (' B  78  ASN  N  ', ' B  79  PRO  CD ', -0.52, (311.924, 232.726, 288.802)), (' A  78  ASN  N  ', ' A  79  PRO  CD ', -0.517, (266.907, 318.42, 289.386)), (' B1080  ASN  CG ', ' B1081  GLY  N  ', -0.513, (287.714, 258.824, 192.063)), (' C 269  ASN  N  ', ' C 269  ASN  OD1', -0.503, (221.816, 265.686, 266.667)), (' B 109  ASN  N  ', ' B 109  ASN  OD1', -0.502, (302.83, 234.534, 305.551)), (' A 807  LYS  NZ ', ' A 923  THR  O  ', -0.497, (276.129, 290.016, 237.548)), (' C1124  GLN  N  ', ' C1125  PRO  CD ', -0.496, (256.941, 255.665, 176.663)), (' A 530  ASN  N  ', ' A 530  ASN  OD1', -0.491, (233.73, 276.124, 285.161)), (' C 109  ASN  N  ', ' C 109  ASN  OD1', -0.488, (224.386, 237.07, 307.116)), (' A 691  ASN  N  ', ' A 691  ASN  OD1', -0.48, (238.909, 279.923, 206.349)), (' B 296  ASP  N  ', ' B 296  ASP  OD1', -0.478, (287.317, 243.559, 248.687)), (' B  78  ASN  N  ', ' B  79  PRO  HD3', -0.475, (312.525, 233.067, 289.059)), (' A1010  LYS  NZ ', ' A1024  PHE  O  ', -0.474, (266.471, 271.211, 226.558)), (' B 310  SER  OG ', ' B 311  GLY  N  ', -0.474, (302.246, 269.528, 276.091)), (' B1052  SER  OG ', ' B1053  GLN  N  ', -0.471, (284.949, 251.226, 209.564)), (' A 296  ASP  N  ', ' A 296  ASP  OD1', -0.47, (266.996, 291.801, 248.994)), (' C  78  ASN  N  ', ' C  79  PRO  HD3', -0.47, (215.418, 232.032, 290.595)), (' C 786  GLN HE21', ' C 917  GLN HE22', -0.467, (229.653, 268.695, 225.197)), (' A1100  ASP  N  ', ' A1100  ASP  OD1', -0.461, (257.759, 267.885, 188.123)), (' C  65  ASN  N  ', ' C  65  ASN  OD1', -0.461, (226.039, 234.449, 274.134)), (' A1080  ASN  O  ', ' A1082  THR  N  ', -0.46, (248.958, 286.376, 192.594)), (' A 356  TYR  HH ', ' A 372  THR  HG1', -0.459, (251.402, 275.414, 298.452)), (' C 778  TYR  HB2', ' P   1  NAG  H81', -0.455, (230.661, 274.113, 213.744)), (' A  78  ASN  N  ', ' A  79  PRO  HD3', -0.447, (266.893, 319.086, 289.617)), (' C 691  ASN  N  ', ' C 691  ASN  OD1', -0.447, (258.574, 233.201, 204.01)), (' A1080  ASN  CG ', ' A1081  GLY  N  ', -0.445, (251.846, 286.761, 193.406)), (' B 539  THR  O  ', ' B 572  ASP  N  ', -0.441, (297.087, 283.038, 268.699)), (' A 310  SER  OG ', ' A 311  GLY  N  ', -0.439, (239.388, 291.554, 278.022)), (' C 769  GLN  N  ', ' C 769  GLN  OE1', -0.431, (251.728, 284.944, 223.58)), (' A 529  PHE  O  ', ' A 531  GLY  N  ', -0.429, (236.597, 275.95, 286.227)), (' C 663  VAL  O  ', ' C 664  SER  C  ', -0.428, (226.757, 228.569, 241.732)), (' B 691  ASN  N  ', ' B 691  ASN  OD1', -0.425, (289.108, 273.159, 203.811)), (' A 281  ASN  HB2', ' A 282  PRO  HD2', -0.425, (258.007, 299.953, 260.648)), (' B 296  ASP  O  ', ' B 297  LYS  HB2', -0.423, (289.69, 244.507, 245.12)), (' B1071  PHE  O  ', ' B1102  THR  OG1', -0.421, (271.969, 269.107, 192.796)), (' A 329  PHE  HB2', ' G   1  NAG  H82', -0.415, (241.37, 268.645, 311.534)), (' B   1  NAG  H82', ' B 778  TYR  CD1', -0.415, (268.627, 229.211, 212.455)), (' C1100  ASP  N  ', ' C1100  ASP  OD1', -0.414, (258.803, 256.36, 188.139)), (' C 529  PHE  O  ', ' C 531  GLY  N  ', -0.414, (267.322, 229.38, 283.861)), (' B 923  THR  OG1', ' B 924  SER  N  ', -0.412, (281.992, 239.379, 235.333)), (' C 310  SER  OG ', ' C 311  GLY  N  ', -0.409, (251.343, 224.739, 276.891)), (' A 296  ASP  O  ', ' A 297  LYS  HB2', -0.407, (265.148, 293.871, 245.728)), (' C 296  ASP  O  ', ' C 297  LYS  HB2', -0.402, (234.919, 248.188, 247.207)), (' A 793  LYS  HZ2', ' A 795  THR  HG1', -0.402, (293.021, 282.358, 230.673)), (' C1059  THR  OG1', ' C1060  ALA  N  ', -0.401, (257.098, 241.442, 198.331)), (' C 923  THR  OG1', ' C 924  SER  N  ', -0.4, (233.762, 256.065, 236.775)), (' A 504  LEU  HG ', ' A 504  LEU  O  ', -0.4, (234.278, 267.898, 285.502)), (' B1010  LYS  NZ ', ' B1024  PHE  O  ', -0.4, (268.857, 254.3, 226.763))]
data['cbeta'] = [('B', ' 926 ', 'ALA', ' ', 0.845690023232784, (277.215, 241.131, 233.879)), ('B', ' 927 ', 'LEU', ' ', 0.6581210465307054, (273.693, 241.626, 236.94900000000004)), ('C', ' 926 ', 'ALA', ' ', 0.898205721439176, (237.44800000000006, 259.65500000000003, 235.235)), ('C', ' 927 ', 'LEU', ' ', 0.6245902027197263, (239.98700000000005, 262.5310000000001, 237.996))]
data['smoc'] = [('A', 50, u'ASP', 0.8282937428703039, (283.819, 291.34900000000005, 260.407)), ('A', 52, u'LEU', 0.8003506712748628, (276.853, 290.92999999999995, 262.547)), ('A', 54, u'LEU', 0.806389451010562, (272.39599999999996, 289.90299999999996, 267.341)), ('A', 62, u'PHE', 0.7649575800941372, (265.747, 304.43899999999996, 268.70599999999996)), ('A', 63, u'TYR', 0.7446190462567387, (263.965, 307.749, 268.308)), ('A', 80, u'VAL', 0.759295023778524, (265.22099999999995, 312.78499999999997, 292.45)), ('A', 84, u'LYS', 0.7768344168384956, (264.313, 301.79699999999997, 286.845)), ('A', 85, u'ASP', 0.7888925382352613, (267.229, 299.33, 286.69599999999997)), ('A', 86, u'GLY', 0.8043972970983161, (269.16700000000003, 301.46999999999997, 284.217)), ('A', 87, u'ILE', 0.791377009988866, (269.2, 304.851, 282.527)), ('A', 98, u'VAL', 0.766386861604103, (277.769, 318.703, 285.85200000000003)), ('A', 120, u'SER', 0.7827946443922638, (288.244, 318.9359999999999, 289.72799999999995)), ('A', 134, u'ASP', 0.7002999463216297, (268.36, 318.046, 300.269)), ('A', 136, u'PRO', 0.7355991717309773, (273.402, 319.20599999999996, 296.892)), ('A', 166, u'ASP', 0.7906641572530758, (294.52, 309.381, 289.44599999999997)), ('A', 168, u'PHE', 0.67405651784008, (294.365, 315.49499999999995, 287.015)), ('A', 208, u'ASP', 0.7143029156360112, (268.88599999999997, 320.619, 271.58799999999997)), ('A', 238, u'PHE', 0.7194387260166254, (277.592, 330.061, 290.30400000000003)), ('A', 302, u'THR', 0.882751342724756, (259.33599999999996, 287.389, 259.613)), ('A', 320, u'THR', 0.8257301614578363, (228.13, 279.557, 300.097)), ('A', 323, u'CYS', 0.8232512019563915, (233.007, 271.88599999999997, 304.784)), ('A', 325, u'PHE', 0.8382620293445552, (236.99200000000002, 269.44, 308.138)), ('A', 333, u'LYS', 0.7830214782271654, (237.812, 258.705, 317.47599999999994)), ('A', 334, u'PHE', 0.8137417344131266, (239.55, 257.10900000000004, 314.524)), ('A', 344, u'LYS', 0.8234597782886859, (231.768, 262.089, 301.709)), ('A', 352, u'TYR', 0.8335420324921058, (242.812, 274.251, 301.671)), ('A', 359, u'THR', 0.7861565761527883, (251.95000000000002, 272.601, 309.777)), ('A', 378, u'CYS', 0.820501953873735, (236.67, 272.818, 291.748)), ('A', 402, u'THR', 0.8162079426145376, (254.047, 246.854, 299.47499999999997)), ('A', 403, u'GLY', 0.8210835370452315, (253.72, 245.57399999999998, 303.02599999999995)), ('A', 418, u'GLY', 0.8189196728412484, (244.701, 264.15500000000003, 296.684)), ('A', 431, u'THR', 0.8056805731190959, (248.768, 254.56, 326.829)), ('A', 437, u'ASN', 0.8146848577365753, (242.291, 249.023, 320.72799999999995)), ('A', 438, u'TYR', 0.803109219096734, (243.606, 249.212, 317.158)), ('A', 453, u'ARG', 0.7543741513769621, (236.918, 247.469, 303.08299999999997)), ('A', 457, u'ASN', 0.7871211394752659, (236.96800000000002, 238.05100000000002, 310.72799999999995)), ('A', 464, u'GLY', 0.7575965429127843, (241.45700000000002, 227.572, 302.056)), ('A', 481, u'TYR', 0.7927558450334108, (248.942, 247.35700000000003, 317.87)), ('A', 482, u'GLY', 0.816457880234746, (250.678, 247.68800000000002, 321.23299999999995)), ('A', 488, u'GLY', 0.8114498982207747, (260.28099999999995, 254.625, 319.80400000000003)), ('A', 489, u'ILE', 0.8060795451455902, (258.78499999999997, 257.001, 317.253)), ('A', 495, u'ARG', 0.8232776079229979, (246.295, 259.28599999999994, 312.73499999999996)), ('A', 501, u'PHE', 0.7974195074423358, (239.089, 264.195, 294.779)), ('A', 505, u'ASN', 0.8198223371315467, (232.77299999999997, 264.66, 286.309)), ('A', 506, u'ALA', 0.8273616444060579, (229.51, 265.83599999999996, 287.824)), ('A', 507, u'PRO', 0.8413390945750486, (228.904, 269.592, 288.377)), ('A', 511, u'CYS', 0.83867272238518, (235.33, 275.04, 295.148)), ('A', 514, u'LYS', 0.8244708495883218, (237.228, 282.577, 294.71999999999997)), ('A', 515, u'LEU', 0.8281498709511873, (235.11399999999998, 285.417, 293.375)), ('A', 519, u'LEU', 0.8602312094317265, (230.45600000000002, 287.46599999999995, 281.20099999999996)), ('A', 520, u'ILE', 0.8757618953270138, (232.43, 289.33299999999997, 278.575)), ('A', 524, u'CYS', 0.8609670400137945, (239.278, 287.92199999999997, 273.361)), ('A', 532, u'LEU', 0.8623216676207759, (238.36, 275.117, 282.843)), ('A', 541, u'SER', 0.8586644968757706, (225.772, 278.60400000000004, 270.98999999999995)), ('A', 544, u'ARG', 0.8454615591479907, (222.15, 270.59, 272.53799999999995)), ('A', 576, u'CYS', 0.8370553516181815, (241.759, 284.389, 269.22999999999996)), ('A', 584, u'ILE', 0.8635865701193541, (256.672, 293.462, 251.105)), ('A', 590, u'ALA', 0.8588330787761166, (266.175, 301.65400000000005, 245.429)), ('A', 603, u'CYS', 0.8633945630096033, (241.1, 292.73199999999997, 258.541)), ('A', 611, u'HIS', 0.8449910016371601, (243.984, 301.553, 267.15500000000003)), ('A', 617, u'PRO', 0.8372200339892377, (254.031, 291.888, 268.029)), ('A', 629, u'PHE', 0.8381041969956219, (242.034, 296.03, 251.98000000000002)), ('A', 643, u'ASP', 0.8695480372323169, (242.29299999999998, 299.45, 238.752)), ('A', 649, u'ASP', 0.8830811454698001, (256.151, 291.07099999999997, 240.157)), ('A', 655, u'GLY', 0.8580174020950746, (245.414, 286.59599999999995, 241.446)), ('A', 661, u'HIS', 0.8586406397487899, (255.259, 302.087, 240.504)), ('A', 663, u'VAL', 0.8274823874254518, (252.324, 308.025, 240.955)), ('A', 684, u'ASP', 0.8577024298390535, (246.324, 290.501, 224.568)), ('A', 689, u'TYR', 0.8572630217688946, (240.778, 282.52799999999996, 211.194)), ('A', 698, u'THR', 0.8761815031080101, (259.611, 285.41299999999995, 204.379)), ('A', 711, u'VAL', 0.8457871879759592, (275.078, 268.895, 238.81)), ('A', 723, u'TYR', 0.8468417335628785, (280.887, 266.677, 267.085)), ('A', 727, u'ASP', 0.8781524546218032, (287.22999999999996, 266.54, 274.1)), ('A', 745, u'LEU', 0.8531847178973769, (275.52599999999995, 257.577, 260.457)), ('A', 759, u'ASN', 0.8346429172244063, (276.98799999999994, 262.984, 238.752)), ('A', 763, u'VAL', 0.8345451867260693, (277.517, 264.49799999999993, 232.51399999999998)), ('A', 766, u'GLN', 0.8305624972124059, (280.827, 261.72299999999996, 227.33)), ('A', 772, u'LYS', 0.8782256148618349, (293.35400000000004, 269.275, 220.414)), ('A', 780, u'GLY', 0.8239116582677578, (283.22099999999995, 279.895, 207.732)), ('A', 787, u'ILE', 0.8639871705893913, (283.98999999999995, 279.71, 223.42800000000003)), ('A', 800, u'ILE', 0.8687087809542332, (283.16900000000004, 282.99499999999995, 228.561)), ('A', 819, u'TYR', 0.7666363865142523, (284.203, 274.356, 258.447)), ('A', 838, u'ASN', 0.8301916709960969, (283.008, 271.902, 265.248)), ('A', 846, u'LEU', 0.8375766583301395, (288.176, 263.96799999999996, 241.924)), ('A', 863, u'THR', 0.8551222709596651, (282.063, 268.889, 217.554)), ('A', 867, u'GLY', 0.8581093873977531, (279.96999999999997, 266.04900000000004, 213.1)), ('A', 868, u'TRP', 0.7959087796412142, (277.361, 263.265, 213.494)), ('A', 882, u'MET', 0.8520884099498237, (278.79699999999997, 271.819, 204.995)), ('A', 884, u'MET', 0.8620107638550455, (275.60900000000004, 273.666, 209.001)), ('A', 894, u'THR', 0.8680357918922652, (266.01599999999996, 273.942, 201.64299999999997)), ('A', 915, u'GLN', 0.8765899435082146, (275.47099999999995, 290.059, 223.159)), ('A', 926, u'ALA', 0.8376670870290602, (271.947, 284.441, 235.146)), ('A', 927, u'LEU', 0.836517744624737, (273.27799999999996, 281.942, 237.671)), ('A', 954, u'ALA', 0.871268890302432, (269.87, 270.314, 280.10200000000003)), ('A', 959, u'LEU', 0.8734720940998261, (279.829, 269.49399999999997, 279.009)), ('A', 965, u'ARG', 0.8762420570339439, (280.259, 271.025, 289.32)), ('A', 974, u'GLN', 0.8789870603029906, (272.64200000000005, 265.777, 282.23699999999997)), ('A', 984, u'GLN', 0.8753958866740589, (268.77299999999997, 264.065, 266.822)), ('A', 1013, u'GLU', 0.8395887411004256, (270.587, 265.229, 222.5)), ('A', 1014, u'CYS', 0.8087067652645515, (271.387, 268.93199999999996, 222.07899999999998)), ('A', 1025, u'CYS', 0.8166636144220552, (267.097, 272.565, 223.463)), ('A', 1032, u'MET', 0.8025677445290914, (273.689, 273.828, 217.489)), ('A', 1033, u'SER', 0.815265659442275, (274.829, 273.98599999999993, 221.107)), ('A', 1066, u'GLU', 0.8422767058607127, (243.22299999999998, 267.989, 182.575)), ('A', 1067, u'GLY', 0.818981203371975, (240.45600000000002, 266.63, 184.818)), ('A', 1072, u'PRO', 0.8910435317351938, (251.869, 268.964, 196.365)), ('A', 1081, u'GLY', 0.8771192007382063, (250.08700000000002, 288.67400000000004, 192.925)), ('A', 1083, u'SER', 0.8629397277610581, (250.47, 283.622, 190.107)), ('A', 1089, u'ARG', 0.8224063304258125, (255.95600000000002, 275.86, 204.88200000000003)), ('A', 1108, u'CYS', 0.8613978448432464, (238.672, 266.861, 190.494)), ('A', 1127, u'LEU', 0.7386591768593896, (259.257, 267.11400000000003, 171.948)), ('A', 1315, u'NAG', 0.8365573639015876, (220.621, 278.808, 288.21599999999995)), ('A', 1319, u'NAG', 0.662455503207846, (267.072, 301.118, 241.788)), ('A', 1311, u'NAG', 0.8199856907845042, (272.245, 295.327, 297.743)), ('B', 18, u'ARG', 0.6628046766761265, (310.774, 223.946, 306.07099999999997)), ('B', 20, u'THR', 0.6923055081083691, (315.815, 225.631, 301.612)), ('B', 73, u'ASN', 0.7228096945979218, (321.912, 223.222, 285.49499999999995)), ('B', 84, u'LYS', 0.789947899684738, (298.66200000000003, 243.178, 286.073)), ('B', 85, u'ASP', 0.769470016980254, (295.075, 241.849, 286.269)), ('B', 86, u'GLY', 0.7575493330060045, (295.91799999999995, 238.901, 284.02099999999996)), ('B', 98, u'VAL', 0.7436840215365509, (306.93699999999995, 223.148, 286.43199999999996)), ('B', 115, u'ILE', 0.7802223022361805, (298.53099999999995, 227.86700000000002, 295.72299999999996)), ('B', 120, u'SER', 0.758816033885523, (301.611, 214.395, 291.546)), ('B', 148, u'THR', 0.6338953241767592, (309.9959999999999, 213.593, 296.955)), ('B', 149, u'HIS', 0.7328583685871033, (308.824, 216.445, 299.16700000000003)), ('B', 153, u'PHE', 0.7380259989686081, (304.892, 226.6, 302.67)), ('B', 168, u'PHE', 0.6878354467058155, (295.79499999999996, 210.534, 288.424)), ('B', 180, u'LYS', 0.7355266914777484, (307.85200000000003, 216.945, 274.128)), ('B', 192, u'GLY', 0.8695559927357028, (286.792, 238.075, 292.78799999999995)), ('B', 220, u'PHE', 0.8834209860171949, (288.59799999999996, 226.795, 286.502)), ('B', 249, u'ALA', 0.7297507228978476, (316.207, 221.183, 281.641)), ('B', 250, u'ALA', 0.7720179284535866, (312.91499999999996, 223.042, 281.23599999999993)), ('B', 278, u'CYS', 0.8515727382122279, (292.484, 244.641, 265.17400000000004)), ('B', 293, u'PHE', 0.8772815303564894, (288.91499999999996, 237.81, 256.33299999999997)), ('B', 296, u'ASP', 0.878602563549807, (287.955, 242.661, 247.297)), ('B', 320, u'THR', 0.798408777964218, (296.83, 290.004, 293.209)), ('B', 325, u'PHE', 0.7926722756307905, (302.448, 291.419, 306.315)), ('B', 334, u'PHE', 0.7253859608011428, (305.002, 297.329, 319.09099999999995)), ('B', 342, u'ARG', 0.8060706278271322, (295.34700000000004, 292.45799999999997, 316.71599999999995)), ('B', 344, u'LYS', 0.7958755237476481, (293.16900000000004, 291.527, 310.78)), ('B', 372, u'THR', 0.8018549328131485, (306.343, 275.212, 303.881)), ('B', 378, u'CYS', 0.8149855206530926, (293.103, 279.363, 302.504)), ('B', 401, u'GLN', 0.7886312733078332, (301.49099999999993, 276.714, 328.292)), ('B', 402, u'THR', 0.7843239901886809, (301.67400000000004, 278.191, 331.76599999999996)), ('B', 403, u'GLY', 0.7949435473798717, (303.57, 281.13, 333.241)), ('B', 418, u'GLY', 0.7667802129318646, (299.113, 279.124, 312.83599999999996)), ('B', 427, u'ASN', 0.7605927681751868, (319.181, 296.724, 318.9959999999999)), ('B', 438, u'TYR', 0.7544734472349718, (306.775, 297.857, 327.96)), ('B', 444, u'ARG', 0.7296501557466439, (294.892, 288.905, 338.34000000000003)), ('B', 451, u'PHE', 0.775603472050534, (293.251, 285.61400000000003, 323.041)), ('B', 453, u'ARG', 0.6847521861620228, (293.017, 291.22599999999994, 326.282)), ('B', 457, u'ASN', 0.7173961925584159, (295.04400000000004, 298.837, 335.81)), ('B', 464, u'GLY', 0.7189158864507381, (288.4959999999999, 291.092, 346.061)), ('B', 481, u'TYR', 0.7339810720956823, (310.151, 294.685, 331.45)), ('B', 495, u'ARG', 0.7515422190985054, (309.097, 291.21099999999996, 318.824)), ('B', 501, u'PHE', 0.7543723795608684, (294.03299999999996, 281.277, 311.49399999999997)), ('B', 509, u'THR', 0.7982054722811791, (288.881, 285.52299999999997, 301.83099999999996)), ('B', 515, u'LEU', 0.8489306467692692, (301.699, 279.209, 290.474)), ('B', 519, u'LEU', 0.8650917298498418, (303.979, 277.72299999999996, 277.59499999999997)), ('B', 520, u'ILE', 0.8604353122187227, (304.89799999999997, 276.048, 274.332)), ('B', 524, u'CYS', 0.8410099599784157, (299.125, 271.017, 270.77299999999997)), ('B', 532, u'LEU', 0.880282180835389, (289.764, 280.015, 280.46299999999997)), ('B', 541, u'SER', 0.856493783585974, (298.108, 287.087, 266.315)), ('B', 554, u'ASP', 0.8743461645112526, (284.707, 283.128, 265.959)), ('B', 576, u'CYS', 0.8446321778075652, (294.703, 270.192, 267.522)), ('B', 577, u'SER', 0.8792058457304064, (294.959, 268.469, 264.161)), ('B', 580, u'GLY', 0.8935736065847459, (289.617, 260.668, 259.11)), ('B', 589, u'ASN', 0.8710520011532892, (293.264, 237.61299999999997, 246.708)), ('B', 603, u'CYS', 0.8582177624340158, (301.714, 265.868, 256.767)), ('B', 617, u'PRO', 0.8305872478311735, (295.14700000000005, 255.097, 267.13)), ('B', 655, u'GLY', 0.8314176403145149, (293.176, 264.299, 240.003)), ('B', 657, u'CYS', 0.8792504919403713, (294.325, 258.075, 241.985)), ('B', 683, u'ALA', 0.8809076966421505, (293.117, 258.959, 224.758)), ('B', 688, u'ALA', 0.8437964984324591, (292.705, 267.634, 210.834)), ('B', 702, u'ILE', 0.883580036601268, (276.869, 245.453, 213.67)), ('B', 709, u'MET', 0.8671186782321815, (268.47299999999996, 248.63899999999998, 235.372)), ('B', 711, u'VAL', 0.8583100054999713, (262.79699999999997, 247.88500000000002, 238.617)), ('B', 742, u'CYS', 0.8451106592053655, (252.77899999999997, 251.73, 264.902)), ('B', 763, u'VAL', 0.8455654204008283, (257.42799999999994, 248.045, 232.67399999999998)), ('B', 766, u'GLN', 0.8320530156709882, (253.30800000000002, 246.406, 227.312)), ('B', 767, u'VAL', 0.817949117364201, (251.47299999999998, 243.939, 225.13299999999998)), ('B', 776, u'LEU', 0.8713577311154185, (261.27799999999996, 227.906, 213.873)), ('B', 780, u'GLY', 0.8639227933717502, (266.453, 235.002, 207.23499999999999)), ('B', 781, u'GLY', 0.8608088752900547, (269.751, 233.728, 208.631)), ('B', 794, u'PRO', 0.8186512678666145, (261.23599999999993, 221.85600000000002, 231.26)), ('B', 835, u'GLN', 0.7628073380123255, (260.457, 233.036, 261.4)), ('B', 836, u'LYS', 0.8061618783356825, (262.658, 235.379, 263.409)), ('B', 846, u'LEU', 0.8494595575491611, (252.36, 239.359, 242.32100000000003)), ('B', 864, u'ALA', 0.857072572338932, (260.779, 239.07399999999998, 215.431)), ('B', 868, u'TRP', 0.8307588203950651, (255.942, 247.853, 213.53)), ('B', 882, u'MET', 0.8650003231694946, (261.955, 243.37800000000001, 205.195)), ('B', 884, u'MET', 0.8682781295311349, (265.365, 245.092, 208.934)), ('B', 893, u'VAL', 0.8593103672298804, (271.134, 253.68800000000002, 204.811)), ('B', 894, u'THR', 0.8739005609847156, (269.756, 253.018, 201.347)), ('B', 915, u'GLN', 0.8858181357509779, (280.243, 236.86800000000002, 222.16899999999998)), ('B', 925, u'THR', 0.8459666679924113, (280.58, 242.766, 236.94)), ('B', 926, u'ALA', 0.8069822367409949, (277.462, 242.236, 234.89000000000001)), ('B', 927, u'LEU', 0.7962556512742933, (274.292, 243.03, 236.79399999999998)), ('B', 954, u'ALA', 0.8555791865906436, (269.41499999999996, 251.624, 280.187)), ('B', 967, u'ASP', 0.8642933236079611, (260.004, 247.36200000000002, 291.378)), ('B', 986, u'LEU', 0.8490896626060034, (261.98799999999994, 252.224, 263.28599999999994)), ('B', 993, u'GLN', 0.8707052414311104, (263.024, 253.007, 252.812)), ('B', 1004, u'ALA', 0.8367713760779246, (261.372, 251.82500000000002, 236.82200000000003)), ('B', 1007, u'ALA', 0.8014183218944689, (262.88, 251.262, 232.10399999999998)), ('B', 1025, u'CYS', 0.8085545574192814, (269.23499999999996, 252.912, 223.011)), ('B', 1036, u'GLN', 0.848175797858164, (265.4359999999999, 239.788, 228.931)), ('B', 1037, u'ALA', 0.8653254647770141, (264.087, 238.809, 232.35600000000002)), ('B', 1059, u'THR', 0.877384620288857, (283.85400000000004, 267.703, 198.248)), ('B', 1066, u'GLU', 0.8104827285680369, (275.292, 275.78299999999996, 182.067)), ('B', 1082, u'THR', 0.8656625235832668, (289.4959999999999, 261.944, 189.172)), ('B', 1117, u'ASN', 0.8480711447366606, (281.107, 270.15400000000005, 186.466)), ('B', 1127, u'LEU', 0.7519056329787839, (266.313, 261.202, 172.127)), ('B', 1301, u'NAG', 0.7431739218630626, (316.193, 279.762, 297.65400000000005)), ('B', 1312, u'NAG', 0.832803776335276, (290.92299999999994, 244.424, 295.85400000000004)), ('B', 1322, u'NAG', 0.7454609246417321, (294.868, 238.621, 241.046)), ('C', 55, u'THR', 0.8068453325401591, (237.111, 253.371, 273.01099999999997)), ('C', 60, u'LEU', 0.776372243477747, (228.125, 243.501, 276.368)), ('C', 84, u'LYS', 0.7797980944291986, (231.916, 238.168, 287.21999999999997)), ('C', 110, u'LYS', 0.7694125863435555, (228.914, 237.52700000000002, 307.67)), ('C', 118, u'ASN', 0.8017380665848961, (212.18200000000002, 250.01899999999998, 294.04)), ('C', 120, u'SER', 0.7644543712984823, (206.89100000000002, 251.453, 294.65500000000003)), ('C', 134, u'ASP', 0.6644084837796247, (216.677, 232.64899999999997, 301.253)), ('C', 135, u'ASN', 0.7023121079441456, (213.611, 233.76399999999998, 299.328)), ('C', 166, u'ASP', 0.7441684339093604, (212.33800000000002, 261.151, 296.084)), ('C', 168, u'PHE', 0.6224182763863144, (206.52800000000002, 258.529, 293.877)), ('C', 207, u'ARG', 0.6692363629585235, (208.79399999999998, 235.05100000000002, 275.356)), ('C', 208, u'ASP', 0.6658683364888449, (211.777, 236.287, 273.32099999999997)), ('C', 220, u'PHE', 0.8744049720510754, (224.225, 256.05400000000003, 290.212)), ('C', 247, u'THR', 0.6529873777918126, (199.82800000000003, 235.33, 289.264)), ('C', 248, u'SER', 0.7058259439420949, (200.819, 236.344, 285.742)), ('C', 299, u'ILE', 0.8736349074712937, (242.548, 243.814, 250.503)), ('C', 320, u'THR', 0.7698804683082959, (270.607, 220.154, 295.862)), ('C', 325, u'PHE', 0.7480631683883024, (270.404, 223.52700000000002, 309.66400000000004)), ('C', 333, u'LYS', 0.7289836706267018, (273.64300000000003, 222.752, 324.328)), ('C', 334, u'PHE', 0.6775114362520405, (272.855, 226.404, 323.684)), ('C', 344, u'LYS', 0.7876652542504932, (276.741, 231.602, 309.118)), ('C', 351, u'ASP', 0.8153996387784095, (264.5, 224.865, 302.74)), ('C', 359, u'THR', 0.7032067616662713, (254.685, 221.577, 316.12)), ('C', 364, u'PHE', 0.7559907980907479, (257.40799999999996, 231.02, 314.92699999999996)), ('C', 372, u'THR', 0.7915623363000975, (255.11499999999998, 230.571, 303.687)), ('C', 375, u'ASN', 0.7963244437797256, (261.82, 229.38500000000002, 300.16900000000004)), ('C', 401, u'GLN', 0.7758267024467963, (261.699, 246.37800000000001, 322.376)), ('C', 402, u'THR', 0.7639080648900083, (263.141, 247.38400000000001, 325.715)), ('C', 403, u'GLY', 0.7824835567523133, (264.02, 245.26899999999998, 328.72499999999997)), ('C', 418, u'GLY', 0.7398551448265663, (263.92199999999997, 236.44, 309.05400000000003)), ('C', 427, u'ASN', 0.760323386588029, (263.153, 218.339, 329.73799999999994)), ('C', 437, u'ASN', 0.7700187151704792, (274.307, 227.59, 334.665)), ('C', 438, u'TYR', 0.7117807892442575, (272.59, 229.993, 332.28499999999997)), ('C', 440, u'TYR', 0.7454114047554109, (272.153, 237.091, 331.71799999999996)), ('C', 444, u'ARG', 0.7325280726927557, (275.524, 247.83100000000002, 331.97499999999997)), ('C', 453, u'ARG', 0.64902465343172, (277.856, 240.515, 322.14400000000006)), ('C', 457, u'ASN', 0.6960638917309518, (282.70599999999996, 240.31, 333.61400000000003)), ('C', 464, u'GLY', 0.7039460583425556, (281.78299999999996, 254.602, 336.43399999999997)), ('C', 470, u'PRO', 0.7698075426771692, (280.625, 242.701, 347.99099999999993)), ('C', 481, u'TYR', 0.7250402769926345, (268.248, 232.047, 335.547)), ('C', 488, u'GLY', 0.6885121912329669, (255.61599999999999, 227.88800000000003, 335.848)), ('C', 489, u'ILE', 0.65927452023148, (256.15900000000005, 227.993, 332.09299999999996)), ('C', 495, u'ARG', 0.743107176600532, (265.899, 227.70299999999997, 323.069)), ('C', 501, u'PHE', 0.7177173475119604, (268.337, 237.602, 306.569)), ('C', 509, u'THR', 0.8078426279542802, (273.73299999999995, 232.232, 297.661)), ('C', 515, u'LEU', 0.7900793648996324, (260.79599999999994, 221.418, 291.249)), ('C', 519, u'LEU', 0.8595001036183013, (259.828, 218.667, 278.72599999999994)), ('C', 520, u'ILE', 0.8141123696469409, (256.888, 219.56, 276.52099999999996)), ('C', 524, u'CYS', 0.8443665900609217, (254.42200000000003, 226.54299999999998, 271.914)), ('C', 530, u'ASN', 0.8920502747878644, (267.957, 227.637, 284.955)), ('C', 536, u'GLY', 0.8849037221896952, (258.507, 229.20399999999998, 272.04900000000004)), ('C', 541, u'SER', 0.8014004577090467, (269.02299999999997, 219.24599999999998, 267.8)), ('C', 558, u'PHE', 0.8546677108173579, (269.013, 235.68200000000002, 269.943)), ('C', 559, u'THR', 0.8852010098631279, (269.039, 232.42600000000002, 271.875)), ('C', 576, u'CYS', 0.8349065899554193, (255.74699999999999, 230.883, 267.953)), ('C', 590, u'ALA', 0.8693838738918577, (227.38400000000001, 245.437, 247.281)), ('C', 601, u'VAL', 0.8561997419386349, (251.44, 230.32100000000003, 257.63599999999997)), ('C', 603, u'CYS', 0.8158740970753777, (247.167, 226.07, 256.9359999999999)), ('C', 611, u'HIS', 0.7683676615689418, (239.46800000000002, 224.277, 266.58799999999997)), ('C', 617, u'PRO', 0.8214131948831952, (242.83700000000002, 237.874, 268.118)), ('C', 655, u'GLY', 0.8559696509883568, (250.132, 234.812, 240.51399999999998)), ('C', 659, u'SER', 0.8687982551462619, (237.516, 238.531, 242.66299999999998)), ('C', 683, u'ALA', 0.8432346540914522, (244.79, 237.52100000000002, 225.499)), ('C', 684, u'ASP', 0.8528862357557291, (245.76299999999998, 234.255, 223.82200000000003)), ('C', 689, u'TYR', 0.8199405307934907, (255.314, 233.92100000000002, 209.66899999999998)), ('C', 691, u'ASN', 0.8545482236166619, (259.198, 234.791, 203.83200000000002)), ('C', 696, u'ILE', 0.8834290733490264, (248.78, 245.64899999999997, 205.14899999999997)), ('C', 698, u'THR', 0.8342804180783392, (243.186, 248.66, 204.085)), ('C', 702, u'ILE', 0.8705138907659115, (240.55100000000002, 257.883, 214.57399999999998)), ('C', 709, u'MET', 0.830218764377228, (248.45100000000002, 263.90799999999996, 235.944)), ('C', 723, u'TYR', 0.7928352024531906, (251.23499999999999, 273.38599999999997, 267.78499999999997)), ('C', 728, u'SER', 0.8759928832920029, (251.403, 279.14400000000006, 276.98299999999995)), ('C', 735, u'LEU', 0.8745838962780665, (260.551, 275.207, 274.03)), ('C', 745, u'LEU', 0.8164653517950271, (260.251, 273.885, 260.43799999999993)), ('C', 746, u'ASN', 0.8466001906673922, (258.48299999999995, 276.99899999999997, 259.22299999999996)), ('C', 749, u'LEU', 0.8337986918212645, (257.10200000000003, 274.234, 254.89600000000002)), ('C', 752, u'ILE', 0.8334267933898931, (257.392, 273.582, 249.698)), ('C', 759, u'ASN', 0.814324864582582, (255.033, 273.63, 239.286)), ('C', 766, u'GLN', 0.8129467605967288, (253.899, 277.871, 227.71399999999997)), ('C', 767, u'VAL', 0.8165239582272767, (252.54399999999998, 280.748, 225.635)), ('C', 780, u'GLY', 0.8539265562797418, (236.15800000000002, 271.567, 208.21699999999998)), ('C', 781, u'GLY', 0.8271459709391047, (233.364, 269.562, 209.80200000000002)), ('C', 790, u'ASP', 0.8391681770901706, (231.305, 279.26099999999997, 225.45100000000002)), ('C', 800, u'ILE', 0.8637701736260697, (234.316, 269.022, 229.444)), ('C', 819, u'TYR', 0.6332402118397175, (242.795, 273.33799999999997, 259.60900000000004)), ('C', 832, u'ILE', 0.6893376976906591, (234.12800000000001, 284.384, 255.26399999999998)), ('C', 864, u'ALA', 0.8182943158493456, (243.701, 275.467, 216.465)), ('C', 868, u'TRP', 0.792169881478675, (252.963, 274.392, 213.88500000000002)), ('C', 884, u'MET', 0.8238142769495838, (245.554, 268.01, 209.565)), ('C', 915, u'GLN', 0.84245236380404, (231.848, 259.103, 223.79299999999998)), ('C', 925, u'THR', 0.8431502762973964, (237.43, 255.92800000000003, 238.33)), ('C', 926, u'ALA', 0.8171267733869588, (238.36100000000002, 258.905, 236.187)), ('C', 927, u'LEU', 0.8034691928312283, (240.83200000000002, 261.263, 237.823)), ('C', 947, u'GLN', 0.8735377753336367, (248.65, 262.957, 267.84200000000004)), ('C', 954, u'ALA', 0.8490785255677515, (252.57, 262.681, 280.54200000000003)), ('C', 956, u'SER', 0.8754932255437475, (247.624, 264.666, 280.292)), ('C', 965, u'ARG', 0.8626745260789694, (247.07899999999998, 272.51099999999997, 288.709)), ('C', 985, u'SER', 0.8250730692158401, (255.476, 264.459, 265.244)), ('C', 1004, u'ALA', 0.8380621261628673, (254.89600000000002, 268.263, 237.069)), ('C', 1007, u'ALA', 0.7746021385428404, (253.32700000000003, 267.215, 232.45600000000002)), ('C', 1014, u'CYS', 0.8009814130500991, (251.994, 266.60900000000004, 222.577)), ('C', 1036, u'GLN', 0.8203281247126306, (241.99200000000002, 270.638, 229.909)), ('C', 1066, u'GLU', 0.7990050158748773, (266.099, 244.04, 181.72)), ('C', 1067, u'GLY', 0.777622298466068, (268.865, 242.36700000000002, 183.74399999999997)), ('C', 1072, u'PRO', 0.8852289930302547, (261.077, 250.626, 195.754)), ('C', 1081, u'GLY', 0.8501752308709055, (245.132, 238.991, 191.798)), ('C', 1090, u'ASN', 0.8641142194751248, (250.785, 252.60299999999998, 206.399)), ('C', 1108, u'CYS', 0.8276766256507581, (269.319, 240.343, 189.42100000000002)), ('C', 1109, u'ASP', 0.873361204710107, (271.551, 237.686, 191.015)), ('C', 1127, u'LEU', 0.7353193029227016, (258.48099999999994, 258.357, 171.24099999999999)), ('C', 1303, u'NAG', 0.7107750953428155, (225.026, 228.306, 276.129)), ('H', 9, u'GLY', 0.7420336300962186, (260.91299999999995, 260.714, 362.823)), ('H', 41, u'PRO', 0.756316635596119, (267.97999999999996, 274.052, 353.60400000000004)), ('H', 45, u'LEU', 0.7568535338202154, (266.324, 267.764, 347.957)), ('H', 56, u'ARG', 0.7853421557760157, (268.46299999999997, 242.511, 346.182)), ('H', 70, u'ILE', 0.7235703555042703, (267.984, 250.725, 353.132)), ('H', 74, u'ASP', 0.7114817585572374, (257.21999999999997, 243.27299999999997, 351.158)), ('H', 88, u'GLY', 0.7360889450492422, (273.869, 267.138, 363.256)), ('H', 90, u'ASP', 0.6767607572715865, (271.695, 264.687, 358.98099999999994)), ('H', 101, u'ASP', 0.668250285912033, (255.70499999999998, 253.646, 335.98099999999994)), ('I', 2, u'ALA', 0.6238445052195082, (313.80400000000003, 271.275, 352.019)), ('I', 3, u'GLN', 0.6823063787795113, (314.21599999999995, 272.01599999999996, 355.71999999999997)), ('I', 12, u'VAL', 0.6984652576069631, (307.14300000000003, 289.303, 374.93299999999994)), ('I', 13, u'GLN', 0.7145090039113142, (305.282, 291.79499999999996, 377.068)), ('I', 52, u'THR', 0.7528891938366079, (307.328, 286.527, 347.318)), ('I', 57, u'ASN', 0.7356906557873215, (305.369, 291.752, 347.539)), ('I', 61, u'ALA', 0.7045605152271377, (296.112, 288.17900000000003, 357.07099999999997)), ('I', 70, u'ILE', 0.7059847580863335, (307.414, 289.656, 356.704)), ('I', 72, u'ARG', 0.664737850890354, (313.774, 287.89599999999996, 353.929)), ('I', 74, u'ASP', 0.6779448807230918, (318.459, 285.9359999999999, 350.57099999999997)), ('I', 86, u'LEU', 0.711930287157421, (302.72799999999995, 292.158, 370.07599999999996)), ('I', 90, u'ASP', 0.713121101911438, (299.601, 286.477, 369.51599999999996)), ('I', 95, u'TYR', 0.7471121278257191, (306.132, 277.919, 361.98999999999995)), ('I', 101, u'ASP', 0.6252235945272577, (306.59, 273.14000000000004, 343.97099999999995)), ('I', 104, u'ARG', 0.6739454144633106, (303.99299999999994, 278.58299999999997, 339.41499999999996)), ('I', 120, u'GLY', 0.7377401770148003, (308.059, 275.691, 365.14900000000006)), ('L', 3, u'VAL', 0.7074150724435407, (274.856, 269.15000000000003, 340.11)), ('L', 6, u'GLN', 0.7658019503904021, (268.539, 277.127, 339.21)), ('L', 33, u'ASP', 0.7009494628812377, (269.878, 256.004, 325.214)), ('L', 37, u'TYR', 0.6564877755961543, (266.0, 262.768, 332.129)), ('L', 47, u'GLN', 0.7104914439054275, (253.21699999999998, 269.727, 351.172)), ('L', 60, u'ASP', 0.6965982036573317, (251.844, 264.65400000000005, 333.969)), ('L', 61, u'SER', 0.6834213292080823, (248.172, 263.86400000000003, 333.85)), ('L', 68, u'SER', 0.7167520240009462, (255.21399999999997, 273.504, 329.768)), ('L', 71, u'GLY', 0.7141314110693407, (265.676, 272.572, 326.77099999999996)), ('L', 72, u'SER', 0.7125336120785565, (268.623, 270.368, 325.853)), ('L', 73, u'GLY', 0.75740354389136, (272.185, 269.515, 326.819)), ('L', 86, u'GLU', 0.6838878340635357, (247.816, 278.33599999999996, 343.7)), ('L', 105, u'GLN', 0.7099634630501505, (268.372, 274.244, 344.964)), ('L', 106, u'GLY', 0.746933539354632, (264.811, 275.12, 343.95)), ('M', 3, u'VAL', 0.7125408519884846, (286.35900000000004, 278.984, 357.39599999999996)), ('M', 7, u'SER', 0.7102545864849086, (284.057, 266.689, 362.33099999999996)), ('M', 8, u'PRO', 0.6905712701641394, (284.107, 264.888, 364.70599999999996)), ('M', 42, u'GLN', 0.7020740972191692, (298.873, 265.287, 360.07599999999996)), ('M', 55, u'GLN', 0.7169258598689024, (293.88599999999997, 268.111, 346.006)), ('M', 60, u'ASP', 0.6816066165342639, (302.268, 262.79599999999994, 348.568)), ('M', 61, u'SER', 0.6279566992259135, (305.381, 260.802, 347.84700000000004)), ('M', 68, u'SER', 0.6953691541879119, (293.18, 258.472, 350.807)), ('M', 79, u'LYS', 0.6543091226507556, (290.106, 258.514, 354.91499999999996)), ('M', 81, u'SER', 0.6179560329634637, (291.98199999999997, 252.343, 355.843)), ('M', 91, u'TYR', 0.6965188628494909, (294.46799999999996, 265.855, 361.245)), ('M', 97, u'SER', 0.7508866828947172, (291.684, 278.247, 347.08099999999996)), ('M', 98, u'HIS', 0.7076874117452161, (290.70599999999996, 281.53099999999995, 348.704)), ('M', 102, u'THR', 0.7463082355051447, (292.91799999999995, 278.692, 356.204)), ('r', 3, u'BMA', 0.7400153945129854, (234.541, 252.02100000000002, 187.077))]
data['rota'] = [('A', '  65 ', 'ASN', 0.0, (261.9019999999999, 310.745, 273.688)), ('A', ' 227 ', 'ASN', 0.02227835564996973, (270.008, 299.466, 296.179)), ('A', '1080 ', 'ASN', 0.2735169004315554, (250.871, 285.6450000000001, 195.085)), ('B', ' 109 ', 'ASN', 0.04969133700308244, (301.00800000000004, 234.845, 305.868)), ('B', ' 119 ', 'ASN', 0.0038550404548352178, (300.54000000000013, 217.47700000000006, 293.561)), ('C', '  65 ', 'ASN', 0.0, (224.36900000000006, 234.7100000000001, 274.428)), ('C', ' 269 ', 'ASN', 0.0003376636952281602, (222.452, 266.24500000000006, 268.388)), ('C', ' 691 ', 'ASN', 0.16386910763918414, (259.198, 234.791, 203.832))]
data['clusters'] = [('A', '1013', 1, 'smoc Outlier', (270.587, 265.229, 222.5)), ('A', '1014', 1, 'smoc Outlier', (271.387, 268.93199999999996, 222.07899999999998)), ('A', '1016', 1, 'cablam Outlier', (276.2, 265.5, 220.4)), ('A', '1024', 1, 'cablam Outlier', (264.0, 270.8, 224.7)), ('A', '1025', 1, 'cablam Outlier\nsmoc Outlier', (267.1, 272.6, 223.5)), ('A', '1030', 1, 'Bond length:CB:CG', (267.53099999999995, 273.541, 217.225)), ('A', '1032', 1, 'smoc Outlier', (273.689, 273.828, 217.489)), ('A', '1033', 1, 'smoc Outlier', (274.829, 273.98599999999993, 221.107)), ('A', '281', 2, 'side-chain clash', (241.37, 268.645, 311.534)), ('A', '282', 2, 'side-chain clash', (241.37, 268.645, 311.534)), ('A', '323', 2, 'smoc Outlier', (233.007, 271.88599999999997, 304.784)), ('A', '325', 2, 'smoc Outlier', (236.99200000000002, 269.44, 308.138)), ('A', '344', 2, 'smoc Outlier', (231.768, 262.089, 301.709)), ('A', '346', 2, 'cablam CA Geom Outlier', (230.4, 268.1, 299.6)), ('A', '347', 2, 'cablam Outlier', (228.5, 271.4, 299.1)), ('A', '1302', 3, 'Bond angle:C2:C1:O5\nBond length:C3:C4\nBond length:C7:N2', (259.166, 306.15200000000004, 273.57599999999996)), ('A', '35', 3, 'cablam Outlier', (267.0, 310.4, 271.3)), ('A', '38', 3, 'cablam CA Geom Outlier', (272.2, 307.2, 270.6)), ('A', '62', 3, 'smoc Outlier', (265.747, 304.43899999999996, 268.70599999999996)), ('A', '63', 3, 'smoc Outlier', (263.965, 307.749, 268.308)), ('A', '65', 3, 'Rotamer', (261.9019999999999, 310.745, 273.688)), ('A', '1040', 4, 'cablam Outlier', (279.1, 273.0, 240.6)), ('A', '711', 4, 'smoc Outlier', (275.078, 268.895, 238.81)), ('A', '759', 4, 'smoc Outlier', (276.98799999999994, 262.984, 238.752)), ('A', '761', 4, 'Dihedral angle:CD:NE:CZ:NH1', (281.53499999999997, 262.348, 235.517)), ('A', '763', 4, 'smoc Outlier', (277.517, 264.49799999999993, 232.51399999999998)), ('A', '766', 4, 'smoc Outlier', (280.827, 261.72299999999996, 227.33)), ('A', '378', 5, 'smoc Outlier', (236.67, 272.818, 291.748)), ('A', '511', 5, 'smoc Outlier', (235.33, 275.04, 295.148)), ('A', '529', 5, 'backbone clash', (236.597, 275.95, 286.227)), ('A', '530', 5, 'side-chain clash\ncablam Outlier', (233.73, 276.124, 285.161)), ('A', '531', 5, 'backbone clash', (236.597, 275.95, 286.227)), ('A', '532', 5, 'smoc Outlier', (238.36, 275.117, 282.843)), ('A', '437', 6, 'smoc Outlier', (242.291, 249.023, 320.72799999999995)), ('A', '438', 6, 'smoc Outlier', (243.606, 249.212, 317.158)), ('A', '439', 6, 'side-chain clash', (242.781, 243.72, 318.441)), ('A', '480', 6, 'side-chain clash', (242.781, 243.72, 318.441)), ('A', '481', 6, 'smoc Outlier', (248.942, 247.35700000000003, 317.87)), ('A', '482', 6, 'smoc Outlier', (250.678, 247.68800000000002, 321.23299999999995)), ('A', '310', 7, 'backbone clash\ncablam Outlier', (239.388, 291.554, 278.022)), ('A', '311', 7, 'backbone clash', (239.388, 291.554, 278.022)), ('A', '524', 7, 'smoc Outlier', (239.278, 287.92199999999997, 273.361)), ('A', '576', 7, 'smoc Outlier', (241.759, 284.389, 269.22999999999996)), ('A', '84', 8, 'smoc Outlier', (264.313, 301.79699999999997, 286.845)), ('A', '85', 8, 'smoc Outlier', (267.229, 299.33, 286.69599999999997)), ('A', '86', 8, 'cablam Outlier\nsmoc Outlier', (269.2, 301.5, 284.2)), ('A', '87', 8, 'smoc Outlier', (269.2, 304.851, 282.527)), ('A', '504', 9, 'backbone clash', (234.278, 267.898, 285.502)), ('A', '505', 9, 'cablam Outlier\nsmoc Outlier', (232.8, 264.7, 286.3)), ('A', '506', 9, 'smoc Outlier', (229.51, 265.83599999999996, 287.824)), ('A', '507', 9, 'smoc Outlier', (228.904, 269.592, 288.377)), ('A', '105', 10, 'cablam Outlier', (267.2, 304.6, 297.1)), ('A', '1311', 10, 'Bond length:C3:C4\nsmoc Outlier', (272.245, 295.327, 297.743)), ('A', '227', 10, 'Rotamer', (270.008, 299.466, 296.179)), ('A', '1066', 11, 'smoc Outlier', (243.22299999999998, 267.989, 182.575)), ('A', '1067', 11, 'smoc Outlier', (240.45600000000002, 266.63, 184.818)), ('A', '1108', 11, 'smoc Outlier', (238.672, 266.861, 190.494)), ('A', '1080', 12, 'Rotamer', (250.871, 285.6450000000001, 195.085)), ('A', '1081', 12, 'Ramachandran\nsmoc Outlier', (250.087, 288.6740000000002, 192.92499999999998)), ('A', '1083', 12, 'smoc Outlier', (250.47, 283.622, 190.107)), ('A', '790', 13, 'Dihedral angle:CA:CB:CG:OD1', (293.392, 280.684, 224.03)), ('A', '793', 13, 'side-chain clash', (293.021, 282.358, 230.673)), ('A', '795', 13, 'side-chain clash', (293.021, 282.358, 230.673)), ('A', '954', 14, 'smoc Outlier', (269.87, 270.314, 280.10200000000003)), ('A', '974', 14, 'smoc Outlier', (272.64200000000005, 265.777, 282.23699999999997)), ('A', '977', 14, 'Dihedral angle:CD:NE:CZ:NH1', (270.23199999999997, 264.555, 277.828)), ('A', '652', 15, 'cablam Outlier', (250.6, 287.7, 247.1)), ('A', '653', 15, 'cablam Outlier', (247.9, 285.2, 246.2)), ('A', '655', 15, 'smoc Outlier', (245.414, 286.59599999999995, 241.446)), ('A', '863', 16, 'smoc Outlier', (282.063, 268.889, 217.554)), ('A', '867', 16, 'smoc Outlier', (279.96999999999997, 266.04900000000004, 213.1)), ('A', '868', 16, 'smoc Outlier', (277.361, 263.265, 213.494)), ('A', '661', 17, 'smoc Outlier', (255.259, 302.087, 240.504)), ('A', '663', 17, 'smoc Outlier', (252.324, 308.025, 240.955)), ('A', '134', 18, 'smoc Outlier', (268.36, 318.046, 300.269)), ('A', '136', 18, 'smoc Outlier', (273.402, 319.20599999999996, 296.892)), ('A', '689', 19, 'smoc Outlier', (240.778, 282.52799999999996, 211.194)), ('A', '691', 19, 'side-chain clash', (238.909, 279.923, 206.349)), ('A', '1053', 20, 'cablam Outlier', (258.2, 288.6, 209.6)), ('A', '698', 20, 'smoc Outlier', (259.611, 285.41299999999995, 204.379)), ('A', '1072', 21, 'smoc Outlier', (251.869, 268.964, 196.365)), ('A', '1073', 21, 'cablam Outlier', (254.8, 267.0, 197.7)), ('A', '543', 22, 'side-chain clash', (230.852, 272.651, 269.195)), ('A', '560', 22, 'side-chain clash', (230.852, 272.651, 269.195)), ('A', '402', 23, 'smoc Outlier', (254.047, 246.854, 299.47499999999997)), ('A', '403', 23, 'smoc Outlier', (253.72, 245.57399999999998, 303.02599999999995)), ('A', '1319', 24, 'Bond length:C3:C4\nsmoc Outlier', (267.072, 301.118, 241.788)), ('A', '590', 24, 'smoc Outlier', (266.175, 301.65400000000005, 245.429)), ('A', '52', 25, 'smoc Outlier', (276.853, 290.92999999999995, 262.547)), ('A', '54', 25, 'smoc Outlier', (272.39599999999996, 289.90299999999996, 267.341)), ('A', '296', 26, 'side-chain clash', (265.148, 293.871, 245.728)), ('A', '297', 26, 'side-chain clash\ncablam CA Geom Outlier', (265.148, 293.871, 245.728)), ('A', '807', 27, 'backbone clash', (276.129, 290.016, 237.548)), ('A', '923', 27, 'backbone clash', (276.129, 290.016, 237.548)), ('A', '418', 28, 'smoc Outlier', (244.701, 264.15500000000003, 296.684)), ('A', '501', 28, 'smoc Outlier', (239.089, 264.195, 294.779)), ('A', '926', 29, 'smoc Outlier', (271.947, 284.441, 235.146)), ('A', '927', 29, 'smoc Outlier', (273.27799999999996, 281.942, 237.671)), ('A', '723', 30, 'smoc Outlier', (280.887, 266.677, 267.085)), ('A', '838', 30, 'smoc Outlier', (283.008, 271.902, 265.248)), ('A', '519', 31, 'smoc Outlier', (230.45600000000002, 287.46599999999995, 281.20099999999996)), ('A', '520', 31, 'smoc Outlier', (232.43, 289.33299999999997, 278.575)), ('A', '207', 32, 'cablam Outlier', (269.8, 323.8, 273.4)), ('A', '208', 32, 'smoc Outlier', (268.88599999999997, 320.619, 271.58799999999997)), ('A', '514', 33, 'smoc Outlier', (237.228, 282.577, 294.71999999999997)), ('A', '515', 33, 'smoc Outlier', (235.11399999999998, 285.417, 293.375)), ('A', '333', 34, 'smoc Outlier', (237.812, 258.705, 317.47599999999994)), ('A', '334', 34, 'smoc Outlier', (239.55, 257.10900000000004, 314.524)), ('A', '787', 35, 'smoc Outlier', (283.98999999999995, 279.71, 223.42800000000003)), ('A', '800', 35, 'smoc Outlier', (283.16900000000004, 282.99499999999995, 228.561)), ('A', '166', 36, 'smoc Outlier', (294.52, 309.381, 289.44599999999997)), ('A', '168', 36, 'smoc Outlier', (294.365, 315.49499999999995, 287.015)), ('A', '882', 37, 'smoc Outlier', (278.79699999999997, 271.819, 204.995)), ('A', '884', 37, 'smoc Outlier', (275.60900000000004, 273.666, 209.001)), ('A', '356', 38, 'side-chain clash', (251.402, 275.414, 298.452)), ('A', '372', 38, 'side-chain clash', (251.402, 275.414, 298.452)), ('A', '78', 39, 'side-chain clash', (266.893, 319.086, 289.617)), ('A', '79', 39, 'side-chain clash', (266.893, 319.086, 289.617)), ('A', '611', 40, 'smoc Outlier', (243.984, 301.553, 267.15500000000003)), ('A', '613', 40, 'Ramachandran\nDihedral angle:CA:CB:CG:OD1', (246.67299999999997, 298.191, 270.73699999999997)), ('A', '488', 41, 'smoc Outlier', (260.28099999999995, 254.625, 319.80400000000003)), ('A', '489', 41, 'smoc Outlier', (258.78499999999997, 257.001, 317.253)), ('B', '1004', 1, 'smoc Outlier', (261.372, 251.82500000000002, 236.82200000000003)), ('B', '1007', 1, 'smoc Outlier', (262.88, 251.262, 232.10399999999998)), ('B', '1040', 1, 'cablam Outlier', (264.5, 242.3, 240.3)), ('B', '709', 1, 'smoc Outlier', (268.47299999999996, 248.63899999999998, 235.372)), ('B', '711', 1, 'smoc Outlier', (262.79699999999997, 247.88500000000002, 238.617)), ('B', '761', 1, 'Dihedral angle:CD:NE:CZ:NH1', (253.73499999999999, 245.846, 235.895)), ('B', '763', 1, 'smoc Outlier', (257.42799999999994, 248.045, 232.67399999999998)), ('B', '766', 1, 'smoc Outlier', (253.30800000000002, 246.406, 227.312)), ('B', '767', 1, 'smoc Outlier', (251.47299999999998, 243.939, 225.13299999999998)), ('B', '923', 2, 'backbone clash', (281.992, 239.379, 235.333)), ('B', '924', 2, 'backbone clash', (281.992, 239.379, 235.333)), ('B', '925', 2, 'smoc Outlier', (280.58, 242.766, 236.94)), ('B', '926', 2, 'C-beta\nBond angle:N:CA:C\nsmoc Outlier', (277.462, 242.236, 234.89000000000001)), ('B', '927', 2, 'C-beta\nBond angle:N:CA:CB\nBond angle:N:CA:C\nsmoc Outlier', (274.292, 243.03, 236.79399999999998)), ('B', '310', 3, 'backbone clash\ncablam Outlier', (302.246, 269.528, 276.091)), ('B', '311', 3, 'backbone clash', (302.246, 269.528, 276.091)), ('B', '524', 3, 'smoc Outlier', (299.125, 271.017, 270.77299999999997)), ('B', '576', 3, 'smoc Outlier', (294.703, 270.192, 267.522)), ('B', '577', 3, 'smoc Outlier', (294.959, 268.469, 264.161)), ('B', '539', 4, 'backbone clash', (297.087, 283.038, 268.699)), ('B', '541', 4, 'smoc Outlier', (298.108, 287.087, 266.315)), ('B', '542', 4, 'cablam Outlier', (297.3, 290.7, 265.5)), ('B', '572', 4, 'backbone clash', (297.087, 283.038, 268.699)), ('B', '1', 5, 'side-chain clash', (268.627, 229.211, 212.455)), ('B', '778', 5, 'side-chain clash', (268.627, 229.211, 212.455)), ('B', '780', 5, 'smoc Outlier', (266.453, 235.002, 207.23499999999999)), ('B', '781', 5, 'smoc Outlier', (269.751, 233.728, 208.631)), ('B', '652', 6, 'cablam Outlier', (291.6, 259.7, 246.0)), ('B', '653', 6, 'cablam Outlier', (291.0, 263.3, 245.0)), ('B', '655', 6, 'smoc Outlier', (293.176, 264.299, 240.003)), ('B', '657', 6, 'smoc Outlier', (294.325, 258.075, 241.985)), ('B', '954', 7, 'smoc Outlier', (269.41499999999996, 251.624, 280.187)), ('B', '976', 7, 'Dihedral angle:CA:CB:CG:OD1', (260.22499999999997, 253.74099999999999, 278.58)), ('B', '977', 7, 'Dihedral angle:CD:NE:CZ:NH1', (263.85400000000004, 254.608, 277.948)), ('B', '401', 8, 'smoc Outlier', (301.49099999999993, 276.714, 328.292)), ('B', '402', 8, 'smoc Outlier', (301.67400000000004, 278.191, 331.76599999999996)), ('B', '403', 8, 'smoc Outlier', (303.57, 281.13, 333.241)), ('B', '1080', 9, 'cablam Outlier', (287.1, 260.2, 193.9)), ('B', '1081', 9, 'Ramachandran', (290.247, 259.34200000000004, 191.886)), ('B', '1082', 9, 'cablam Outlier\nsmoc Outlier', (289.5, 261.9, 189.2)), ('B', '84', 10, 'smoc Outlier', (298.66200000000003, 243.178, 286.073)), ('B', '85', 10, 'smoc Outlier', (295.075, 241.849, 286.269)), ('B', '86', 10, 'cablam Outlier\nsmoc Outlier', (295.9, 238.9, 284.0)), ('B', '18', 11, 'smoc Outlier', (310.774, 223.946, 306.07099999999997)), ('B', '20', 11, 'smoc Outlier', (315.815, 225.631, 301.612)), ('B', '342', 12, 'smoc Outlier', (295.34700000000004, 292.45799999999997, 316.71599999999995)), ('B', '344', 12, 'smoc Outlier', (293.16900000000004, 291.527, 310.78)), ('B', '451', 13, 'smoc Outlier', (293.251, 285.61400000000003, 323.041)), ('B', '453', 13, 'smoc Outlier', (293.017, 291.22599999999994, 326.282)), ('B', '278', 14, 'smoc Outlier', (292.484, 244.641, 265.17400000000004)), ('B', '280', 14, 'cablam CA Geom Outlier', (298.3, 245.0, 264.7)), ('B', '119', 15, 'Rotamer', (300.54000000000013, 217.47700000000006, 293.561)), ('B', '120', 15, 'smoc Outlier', (301.611, 214.395, 291.546)), ('B', '519', 16, 'smoc Outlier', (303.979, 277.72299999999996, 277.59499999999997)), ('B', '520', 16, 'smoc Outlier', (304.89799999999997, 276.048, 274.332)), ('B', '296', 17, 'side-chain clash\ncablam Outlier\nsmoc Outlier', (289.69, 244.507, 245.12)), ('B', '297', 17, 'side-chain clash\ncablam CA Geom Outlier', (289.69, 244.507, 245.12)), ('B', '418', 18, 'Ramachandran\nsmoc Outlier', (299.11300000000006, 279.124, 312.836)), ('B', '501', 18, 'smoc Outlier', (294.03299999999996, 281.277, 311.49399999999997)), ('B', '1322', 19, 'Bond angle:C2:C1:O5\nBond length:C3:C4\nsmoc Outlier', (294.868, 238.621, 241.046)), ('B', '589', 19, 'smoc Outlier', (293.264, 237.61299999999997, 246.708)), ('B', '438', 20, 'smoc Outlier', (306.775, 297.857, 327.96)), ('B', '481', 20, 'smoc Outlier', (310.151, 294.685, 331.45)), ('B', '835', 21, 'smoc Outlier', (260.457, 233.036, 261.4)), ('B', '836', 21, 'smoc Outlier', (262.658, 235.379, 263.409)), ('B', '249', 22, 'smoc Outlier', (316.207, 221.183, 281.641)), ('B', '250', 22, 'smoc Outlier', (312.91499999999996, 223.042, 281.23599999999993)), ('B', '36', 23, 'cablam Outlier', (303.0, 234.9, 267.6)), ('B', '38', 23, 'cablam CA Geom Outlier', (299.1, 232.4, 270.8)), ('B', '1036', 24, 'smoc Outlier', (265.4359999999999, 239.788, 228.931)), ('B', '1037', 24, 'smoc Outlier', (264.087, 238.809, 232.35600000000002)), ('B', '1024', 25, 'cablam Outlier', (269.5, 256.5, 224.3)), ('B', '1025', 25, 'cablam Outlier\nsmoc Outlier', (269.2, 252.9, 223.0)), ('B', '967', 26, 'smoc Outlier', (260.004, 247.36200000000002, 291.378)), ('B', '969', 26, 'Ramachandran', (258.3609999999999, 252.39000000000007, 289.347)), ('B', '152', 27, 'cablam Outlier', (305.9, 225.3, 299.3)), ('B', '153', 27, 'smoc Outlier', (304.892, 226.6, 302.67)), ('B', '740', 28, 'cablam Outlier', (249.3, 255.9, 266.3)), ('B', '742', 28, 'smoc Outlier', (252.77899999999997, 251.73, 264.902)), ('B', '882', 29, 'smoc Outlier', (261.955, 243.37800000000001, 205.195)), ('B', '884', 29, 'smoc Outlier', (265.365, 245.092, 208.934)), ('B', '872', 30, 'cablam Outlier', (250.2, 250.0, 218.3)), ('B', '873', 30, 'cablam Outlier', (247.3, 247.8, 217.2)), ('B', '320', 31, 'smoc Outlier', (296.83, 290.004, 293.209)), ('B', '321', 31, 'cablam Outlier', (296.5, 292.4, 296.2)), ('B', '893', 32, 'smoc Outlier', (271.134, 253.68800000000002, 204.811)), ('B', '894', 32, 'smoc Outlier', (269.756, 253.018, 201.347)), ('B', '148', 33, 'smoc Outlier', (309.9959999999999, 213.593, 296.955)), ('B', '149', 33, 'smoc Outlier', (308.824, 216.445, 299.16700000000003)), ('B', '78', 34, 'side-chain clash', (312.525, 233.067, 289.059)), ('B', '79', 34, 'side-chain clash', (312.525, 233.067, 289.059)), ('C', '310', 1, 'backbone clash\ncablam Outlier', (251.343, 224.739, 276.891)), ('C', '311', 1, 'backbone clash', (251.343, 224.739, 276.891)), ('C', '524', 1, 'smoc Outlier', (254.42200000000003, 226.54299999999998, 271.914)), ('C', '535', 1, 'cablam CA Geom Outlier', (258.1, 231.3, 275.2)), ('C', '536', 1, 'smoc Outlier', (258.507, 229.20399999999998, 272.04900000000004)), ('C', '576', 1, 'smoc Outlier', (255.74699999999999, 230.883, 267.953)), ('C', '578', 1, 'cablam CA Geom Outlier', (252.9, 235.1, 264.2)), ('C', '1004', 2, 'smoc Outlier', (254.89600000000002, 268.263, 237.069)), ('C', '1007', 2, 'smoc Outlier', (253.32700000000003, 267.215, 232.45600000000002)), ('C', '709', 2, 'smoc Outlier', (248.45100000000002, 263.90799999999996, 235.944)), ('C', '759', 2, 'smoc Outlier', (255.033, 273.63, 239.286)), ('C', '761', 2, 'Dihedral angle:CD:NE:CZ:NH1', (253.23999999999998, 278.017, 236.291)), ('C', '1053', 3, 'cablam Outlier', (241.3, 245.7, 209.1)), ('C', '1090', 3, 'smoc Outlier', (250.785, 252.60299999999998, 206.399)), ('C', '1091', 3, 'cablam Outlier', (247.7, 252.3, 204.2)), ('C', '696', 3, 'smoc Outlier', (248.78, 245.64899999999997, 205.14899999999997)), ('C', '698', 3, 'smoc Outlier', (243.186, 248.66, 204.085)), ('C', '923', 4, 'backbone clash', (233.762, 256.065, 236.775)), ('C', '924', 4, 'backbone clash', (233.762, 256.065, 236.775)), ('C', '925', 4, 'smoc Outlier', (237.43, 255.92800000000003, 238.33)), ('C', '926', 4, 'C-beta\nRamachandran\nBond angle:N:CA:C\nsmoc Outlier', (238.36100000000002, 258.905, 236.187)), ('C', '927', 4, 'C-beta\nBond angle:N:CA:CB\nBond angle:N:CA:C\nsmoc Outlier', (240.83200000000002, 261.263, 237.823)), ('C', '1066', 5, 'smoc Outlier', (266.099, 244.04, 181.72)), ('C', '1067', 5, 'smoc Outlier', (268.865, 242.36700000000002, 183.74399999999997)), ('C', '1108', 5, 'smoc Outlier', (269.319, 240.343, 189.42100000000002)), ('C', '1109', 5, 'smoc Outlier', (271.551, 237.686, 191.015)), ('C', '745', 6, 'smoc Outlier', (260.251, 273.885, 260.43799999999993)), ('C', '746', 6, 'smoc Outlier', (258.48299999999995, 276.99899999999997, 259.22299999999996)), ('C', '749', 6, 'smoc Outlier', (257.10200000000003, 274.234, 254.89600000000002)), ('C', '752', 6, 'smoc Outlier', (257.392, 273.582, 249.698)), ('C', '766', 7, 'smoc Outlier', (253.899, 277.871, 227.71399999999997)), ('C', '767', 7, 'smoc Outlier', (252.54399999999998, 280.748, 225.635)), ('C', '769', 7, 'side-chain clash', (251.728, 284.944, 223.58)), ('C', '344', 8, 'smoc Outlier', (276.741, 231.602, 309.118)), ('C', '346', 8, 'cablam CA Geom Outlier', (275.6, 230.4, 303.0)), ('C', '509', 8, 'smoc Outlier', (273.73299999999995, 232.232, 297.661)), ('C', '401', 9, 'smoc Outlier', (261.699, 246.37800000000001, 322.376)), ('C', '402', 9, 'smoc Outlier', (263.141, 247.38400000000001, 325.715)), ('C', '403', 9, 'smoc Outlier', (264.02, 245.26899999999998, 328.72499999999997)), ('C', '529', 10, 'backbone clash', (267.322, 229.38, 283.861)), ('C', '530', 10, 'smoc Outlier', (267.957, 227.637, 284.955)), ('C', '531', 10, 'backbone clash', (267.322, 229.38, 283.861)), ('C', '437', 11, 'smoc Outlier', (274.307, 227.59, 334.665)), ('C', '438', 11, 'smoc Outlier', (272.59, 229.993, 332.28499999999997)), ('C', '481', 11, 'smoc Outlier', (268.248, 232.047, 335.547)), ('C', '1014', 12, 'smoc Outlier', (251.994, 266.60900000000004, 222.577)), ('C', '1025', 12, 'cablam Outlier', (251.3, 261.1, 223.6)), ('C', '1030', 12, 'Bond length:CB:CG', (249.90200000000002, 260.9309999999999, 217.365)), ('C', '786', 13, 'side-chain clash', (229.653, 268.695, 225.197)), ('C', '800', 13, 'smoc Outlier', (234.316, 269.022, 229.444)), ('C', '917', 13, 'side-chain clash', (229.653, 268.695, 225.197)), ('C', '247', 14, 'smoc Outlier', (199.82800000000003, 235.33, 289.264)), ('C', '248', 14, 'smoc Outlier', (200.819, 236.344, 285.742)), ('C', '72', 14, 'cablam CA Geom Outlier', (205.1, 231.2, 285.6)), ('C', '65', 15, 'Rotamer\nside-chain clash', (230.661, 274.113, 213.744)), ('C', '780', 15, 'smoc Outlier', (236.15800000000002, 271.567, 208.21699999999998)), ('C', '781', 15, 'smoc Outlier', (233.364, 269.562, 209.80200000000002)), ('C', '652', 16, 'cablam Outlier', (247.1, 238.5, 246.5)), ('C', '653', 16, 'cablam Outlier', (250.6, 237.3, 245.4)), ('C', '655', 16, 'smoc Outlier', (250.132, 234.812, 240.51399999999998)), ('C', '663', 17, 'backbone clash', (226.757, 228.569, 241.732)), ('C', '664', 17, 'backbone clash', (226.757, 228.569, 241.732)), ('C', '954', 18, 'smoc Outlier', (252.57, 262.681, 280.54200000000003)), ('C', '956', 18, 'smoc Outlier', (247.624, 264.666, 280.292)), ('C', '134', 19, 'smoc Outlier', (216.677, 232.64899999999997, 301.253)), ('C', '135', 19, 'smoc Outlier', (213.611, 233.76399999999998, 299.328)), ('C', '689', 20, 'smoc Outlier', (255.314, 233.92100000000002, 209.66899999999998)), ('C', '691', 20, 'Rotamer\nside-chain clash\nsmoc Outlier', (258.574, 233.201, 204.01)), ('C', '118', 21, 'smoc Outlier', (212.18200000000002, 250.01899999999998, 294.04)), ('C', '120', 21, 'smoc Outlier', (206.89100000000002, 251.453, 294.65500000000003)), ('C', '296', 22, 'side-chain clash\ncablam Outlier', (234.919, 248.188, 247.207)), ('C', '297', 22, 'side-chain clash\ncablam CA Geom Outlier', (234.919, 248.188, 247.207)), ('C', '418', 23, 'smoc Outlier', (263.92199999999997, 236.44, 309.05400000000003)), ('C', '501', 23, 'smoc Outlier', (268.337, 237.602, 306.569)), ('C', '1326', 24, 'Bond length:C3:C4', (227.965, 248.025, 243.571)), ('C', '590', 24, 'smoc Outlier', (227.38400000000001, 245.437, 247.281)), ('C', '1081', 25, 'smoc Outlier', (245.132, 238.991, 191.798)), ('C', '1082', 25, 'cablam Outlier', (247.5, 238.7, 188.8)), ('C', '109', 26, 'side-chain clash', (224.386, 237.07, 307.116)), ('C', '110', 26, 'smoc Outlier', (228.914, 237.52700000000002, 307.67)), ('C', '558', 27, 'smoc Outlier', (269.013, 235.68200000000002, 269.943)), ('C', '559', 27, 'smoc Outlier', (269.039, 232.42600000000002, 271.875)), ('C', '519', 28, 'smoc Outlier', (259.828, 218.667, 278.72599999999994)), ('C', '520', 28, 'smoc Outlier', (256.888, 219.56, 276.52099999999996)), ('C', '207', 29, 'smoc Outlier', (208.79399999999998, 235.05100000000002, 275.356)), ('C', '208', 29, 'smoc Outlier', (211.777, 236.287, 273.32099999999997)), ('C', '35', 30, 'cablam Outlier', (222.2, 240.0, 273.1)), ('C', '38', 30, 'cablam CA Geom Outlier', (222.1, 245.8, 273.4)), ('C', '333', 31, 'smoc Outlier', (273.64300000000003, 222.752, 324.328)), ('C', '334', 31, 'smoc Outlier', (272.855, 226.404, 323.684)), ('C', '601', 32, 'smoc Outlier', (251.44, 230.32100000000003, 257.63599999999997)), ('C', '603', 32, 'smoc Outlier', (247.167, 226.07, 256.9359999999999)), ('C', '1039', 33, 'cablam Outlier', (241.4, 270.3, 240.1)), ('C', '1040', 33, 'cablam Outlier', (245.2, 270.3, 240.9)), ('C', '166', 34, 'smoc Outlier', (212.33800000000002, 261.151, 296.084)), ('C', '168', 34, 'smoc Outlier', (206.52800000000002, 258.529, 293.877)), ('C', '351', 35, 'smoc Outlier', (264.5, 224.865, 302.74)), ('C', '375', 35, 'smoc Outlier', (261.82, 229.38500000000002, 300.16900000000004)), ('C', '611', 36, 'smoc Outlier', (239.46800000000002, 224.277, 266.58799999999997)), ('C', '613', 36, 'Dihedral angle:CA:CB:CG:OD1', (241.286, 228.011, 270.111)), ('C', '488', 37, 'smoc Outlier', (255.61599999999999, 227.88800000000003, 335.848)), ('C', '489', 37, 'smoc Outlier', (256.15900000000005, 227.993, 332.09299999999996)), ('C', '78', 38, 'side-chain clash', (215.418, 232.032, 290.595)), ('C', '79', 38, 'side-chain clash', (215.418, 232.032, 290.595)), ('C', '683', 39, 'smoc Outlier', (244.79, 237.52100000000002, 225.499)), ('C', '684', 39, 'smoc Outlier', (245.76299999999998, 234.255, 223.82200000000003)), ('H', '88', 1, 'smoc Outlier', (273.869, 267.138, 363.256)), ('H', '90', 1, 'smoc Outlier', (271.695, 264.687, 358.98099999999994)), ('H', '106', 2, 'cablam CA Geom Outlier', (266.1, 247.9, 336.0)), ('H', '107', 2, 'cablam Outlier', (269.1, 250.1, 336.6)), ('I', '119', 1, 'cablam Outlier', (310.0, 272.6, 363.9)), ('I', '120', 1, 'smoc Outlier', (308.059, 275.691, 365.14900000000006)), ('I', '95', 1, 'smoc Outlier', (306.132, 277.919, 361.98999999999995)), ('I', '12', 2, 'smoc Outlier', (307.14300000000003, 289.303, 374.93299999999994)), ('I', '13', 2, 'smoc Outlier', (305.282, 291.79499999999996, 377.068)), ('I', '72', 3, 'smoc Outlier', (313.774, 287.89599999999996, 353.929)), ('I', '74', 3, 'smoc Outlier', (318.459, 285.9359999999999, 350.57099999999997)), ('I', '104', 4, 'smoc Outlier', (303.99299999999994, 278.58299999999997, 339.41499999999996)), ('I', '106', 4, 'cablam CA Geom Outlier', (303.0, 283.7, 341.7)), ('I', '52', 5, 'smoc Outlier', (307.328, 286.527, 347.318)), ('I', '57', 5, 'smoc Outlier', (305.369, 291.752, 347.539)), ('I', '2', 6, 'smoc Outlier', (313.80400000000003, 271.275, 352.019)), ('I', '3', 6, 'smoc Outlier', (314.21599999999995, 272.01599999999996, 355.71999999999997)), ('I', '86', 7, 'smoc Outlier', (302.72799999999995, 292.158, 370.07599999999996)), ('I', '90', 7, 'smoc Outlier', (299.601, 286.477, 369.51599999999996)), ('L', '71', 1, 'smoc Outlier', (265.676, 272.572, 326.77099999999996)), ('L', '72', 1, 'smoc Outlier', (268.623, 270.368, 325.853)), ('L', '73', 1, 'smoc Outlier', (272.185, 269.515, 326.819)), ('L', '105', 2, 'smoc Outlier', (268.372, 274.244, 344.964)), ('L', '106', 2, 'smoc Outlier', (264.811, 275.12, 343.95)), ('L', '6', 2, 'smoc Outlier', (268.539, 277.127, 339.21)), ('L', '60', 3, 'smoc Outlier', (251.844, 264.65400000000005, 333.969)), ('L', '61', 3, 'smoc Outlier', (248.172, 263.86400000000003, 333.85)), ('M', '68', 1, 'smoc Outlier', (293.18, 258.472, 350.807)), ('M', '79', 1, 'smoc Outlier', (290.106, 258.514, 354.91499999999996)), ('M', '81', 1, 'smoc Outlier', (291.98199999999997, 252.343, 355.843)), ('M', '60', 2, 'smoc Outlier', (302.268, 262.79599999999994, 348.568)), ('M', '61', 2, 'smoc Outlier', (305.381, 260.802, 347.84700000000004)), ('M', '42', 3, 'smoc Outlier', (298.873, 265.287, 360.07599999999996)), ('M', '91', 3, 'smoc Outlier', (294.46799999999996, 265.855, 361.245)), ('M', '97', 4, 'smoc Outlier', (291.684, 278.247, 347.08099999999996)), ('M', '98', 4, 'smoc Outlier', (290.70599999999996, 281.53099999999995, 348.704)), ('M', '102', 5, 'smoc Outlier', (292.91799999999995, 278.692, 356.204)), ('M', '3', 5, 'smoc Outlier', (286.35900000000004, 278.984, 357.39599999999996)), ('M', '7', 6, 'smoc Outlier', (284.057, 266.689, 362.33099999999996)), ('M', '8', 6, 'smoc Outlier', (284.107, 264.888, 364.70599999999996)), ('M', '55', 7, 'smoc Outlier', (293.88599999999997, 268.111, 346.006)), ('D', '1', 1, 'Bond length:C3:C4', (269.879, 307.09599999999995, 310.101)), ('D', '2', 1, 'Bond length:C3:C4', (267.013, 317.625, 310.99299999999994)), ('E', '1', 1, 'Bond length:C3:C4', (287.532, 319.98499999999996, 296.94599999999997)), ('E', '2', 1, 'Bond length:C3:C4', (295.948, 314.807, 295.502)), ('F', '1', 1, 'Bond length:C3:C4', (293.417, 301.474, 265.022)), ('F', '2', 1, 'Bond length:C3:C4', (292.815, 305.824, 255.726)), ('G', '1', 1, 'side-chain clash\nBond angle:C1:C2:C3\nBond length:C3:C4', (241.08100000000002, 270.70799999999997, 311.76)), ('G', '2', 1, 'Bond angle:C2:C3:C4\nBond length:C3:C4', (247.73399999999998, 272.03499999999997, 319.148)), ('J', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (235.21499999999997, 288.21799999999996, 254.297)), ('J', '2', 1, 'Bond length:C3:C4', (230.845, 296.277, 260.464)), ('K', '1', 1, 'Bond angle:C1:C2:C3\nBond angle:C2:C1:O5\nBond length:C3:C4', (236.566, 276.984, 200.26999999999998)), ('K', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4', (232.225, 285.43499999999995, 205.32600000000002)), ('N', '1', 1, 'Bond length:C3:C4', (265.777, 287.284, 203.13)), ('N', '2', 1, 'Bond angle:C2:C3:C4\nBond angle:C4:C5:O5\nBond length:C3:C4', (271.287, 292.757, 210.85500000000002)), ('O', '1', 1, 'Bond length:C3:C4\nBond length:C2:C3\nBond length:C4:C5', (287.99199999999996, 284.04200000000003, 214.756)), ('O', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4\nBond length:C4:C5', (287.52599999999995, 289.83799999999997, 222.555)), ('P', '1', 1, 'side-chain clash\nBond angle:C4:C5:O5\nBond length:C3:C4', (251.283, 289.60200000000003, 207.031)), ('P', '2', 1, 'Bond length:C3:C4', (241.168, 290.90999999999997, 211.067)), ('Q', '1', 1, 'Bond length:C3:C4', (252.591, 290.905, 194.511)), ('Q', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4', (256.42499999999995, 286.05, 185.17299999999997)), ('R', '1', 1, 'Bond length:C3:C4', (237.22899999999998, 275.005, 189.85100000000003)), ('R', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4', (233.72299999999998, 272.472, 179.401)), ('S', '1', 1, 'Bond length:C3:C4', (302.128, 238.444, 309.015)), ('S', '2', 1, 'Bond angle:C2:C3:C4\nBond length:C3:C4', (311.53499999999997, 233.311, 310.277)), ('T', '1', 1, 'Bond length:C3:C4\nBond length:C2:C3', (301.006, 218.64299999999997, 299.912)), ('T', '2', 1, 'Bond length:C3:C4', (297.877, 208.983, 298.99799999999993)), ('U', '1', 1, 'Bond length:C3:C4', (294.375, 234.518, 311.67)), ('U', '2', 1, 'Bond length:C3:C4', (285.22099999999995, 239.929, 309.625)), ('V', '1', 1, 'Bond angle:C1:C2:C3\nBond angle:C1:O5:C5\nBond length:C3:C4', (284.194, 217.495, 267.866)), ('V', '2', 1, 'Bond angle:C2:C3:C4\nBond angle:C1:C2:C3\nBond length:C3:C4', (287.454, 216.23899999999998, 258.371)), ('W', '1', 1, 'Bond length:C3:C4', (300.27599999999995, 292.972, 283.301)), ('W', '2', 1, 'Bond length:C3:C4', (311.052, 289.754, 282.48799999999994)), ('X', '1', 1, 'Bond length:C3:C4', (307.763, 290.90099999999995, 306.01099999999997)), ('X', '2', 1, 'Bond length:C3:C4', (318.09499999999997, 290.805, 306.061)), ('Y', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (299.64200000000005, 271.769, 253.899)), ('Y', '2', 1, 'Bond angle:C4:C5:O5\nBond angle:C2:C3:C4\nBond length:C3:C4', (309.893, 272.579, 257.222)), ('Z', '1', 1, 'Bond angle:C1:C2:C3\nBond angle:C1:O5:C5\nBond length:C3:C4', (287.814, 276.53299999999996, 199.631)), ('Z', '2', 1, 'Bond angle:C2:C3:C4\nBond angle:C4:C5:O5\nBond angle:C2:C1:O5\nBond angle:C1:C2:C3\nBond length:C3:C4', (297.631, 277.4, 204.125)), ('a', '1', 1, 'Bond length:C3:C4', (285.80400000000003, 245.555, 201.086)), ('a', '2', 1, 'Bond length:C3:C4\nBond length:C1:O5', (280.889, 238.74899999999997, 208.478)), ('b', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (269.04, 227.287, 212.929)), ('b', '2', 1, 'Bond length:C3:C4', (274.08099999999996, 226.809, 222.53)), ('c', '1', 1, 'Bond length:C3:C4', (291.029, 257.895, 205.45800000000003)), ('c', '2', 1, 'Bond length:C3:C4', (296.524, 264.974, 210.95200000000003)), ('d', '1', 1, 'Bond length:C3:C4', (290.027, 255.416, 193.401)), ('d', '2', 1, 'Bond length:C3:C4', (285.022, 255.91, 183.24599999999998)), ('e', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (285.832, 277.688, 189.99800000000002)), ('e', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4\nBond length:C2:C3', (280.49399999999997, 282.165, 182.51399999999998)), ('f', '1', 1, 'Bond length:C3:C4', (227.32500000000002, 236.751, 311.17)), ('f', '2', 1, 'Bond angle:C2:C3:C4\nBond length:C3:C4', (219.621, 229.032, 310.90099999999995)), ('g', '1', 1, 'Bond length:C3:C4\nBond length:C2:C3', (206.718, 248.654, 302.375)), ('g', '2', 1, 'Bond angle:C2:C3:C4\nBond length:C3:C4', (208.007, 258.562, 301.546)), ('h', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (225.877, 243.795, 315.64400000000006)), ('h', '2', 1, 'Bond angle:C2:C3:C4\nBond angle:C2:C1:O5\nBond angle:C4:C5:O5\nBond angle:C1:C2:C3\nBond length:C3:C4', (235.054, 247.64499999999998, 318.959)), ('i', '1', 1, 'Bond length:C3:C4', (237.61399999999998, 241.067, 294.90999999999997)), ('i', '2', 1, 'Bond angle:C4:C5:O5\nBond angle:C2:C1:O5\nBond angle:C2:C3:C4\nBond length:C3:C4', (233.32600000000002, 231.002, 296.944)), ('j', '1', 1, 'Bond length:C3:C4', (216.253, 264.265, 269.53)), ('j', '2', 1, 'Bond angle:C2:C1:O5\nBond angle:C4:C5:O5\nBond length:C3:C4', (213.668, 265.319, 259.48099999999994)), ('k', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (272.945, 215.14, 285.20099999999996)), ('k', '2', 1, 'Bond angle:C4:C5:O5\nBond angle:C2:C3:C4\nBond length:C3:C4\nBond length:C1:O5', (263.817, 209.718, 286.92099999999994)), ('l', '1', 1, 'Bond length:C3:C4', (267.004, 220.525, 310.665)), ('l', '2', 1, 'Bond length:C3:C4', (259.35900000000004, 215.395, 314.36400000000003)), ('m', '1', 1, 'Bond length:C3:C4', (253.45000000000002, 224.436, 252.653)), ('m', '2', 1, 'Bond length:C3:C4', (250.692, 214.56, 256.787)), ('n', '1', 1, 'Bond length:C3:C4', (260.163, 232.64, 199.27599999999998)), ('n', '2', 1, 'Bond length:C3:C4', (257.623, 223.151, 204.3)), ('o', '1', 1, 'Bond length:C3:C4', (238.64499999999998, 252.97, 203.18800000000002)), ('o', '2', 1, 'Bond angle:C2:C3:C4\nBond angle:C4:C5:O5\nBond length:C3:C4', (230.88100000000003, 255.489, 210.571)), ('p', '1', 1, 'Bond angle:C1:C2:C3\nBond length:C3:C4', (230.12800000000001, 273.59799999999996, 215.765)), ('p', '2', 1, 'Bond angle:C2:C1:O5\nBond length:C3:C4', (226.157, 269.85200000000003, 223.685)), ('q', '1', 1, 'Bond length:C3:C4', (243.815, 239.399, 206.23299999999998)), ('q', '2', 1, 'Bond angle:C2:C3:C4\nBond length:C3:C4', (248.047, 231.97, 212.172)), ('r', '1', 1, 'Bond length:C3:C4', (241.70499999999998, 239.84, 193.065)), ('r', '2', 1, 'Bond length:C3:C4', (243.501, 246.748, 185.033)), ('r', '3', 1, 'smoc Outlier', (234.541, 252.02100000000002, 187.077)), ('s', '1', 1, 'Bond length:C3:C4', (262.695, 234.525, 188.918)), ('s', '2', 1, 'Bond length:C3:C4', (271.729, 234.546, 183.07899999999998))]
data['omega'] = [('A', ' 470 ', 'PRO', None, (241.68000000000006, 226.594, 318.74)), ('A', ' 617 ', 'PRO', None, (253.134, 290.82900000000006, 267.619)), ('B', ' 470 ', 'PRO', None, (300.447, 302.416, 348.5)), ('B', ' 617 ', 'PRO', None, (294.526, 256.3470000000001, 266.69)), ('C', ' 470 ', 'PRO', None, (281.99, 242.302, 347.705)), ('C', ' 617 ', 'PRO', None, (244.17100000000005, 237.75600000000006, 267.557)), ('H', ' 108 ', 'PRO', None, (269.403, 252.138, 335.188)), ('I', ' 108 ', 'PRO', None, (297.989, 283.22, 343.529)), ('L', '   8 ', 'PRO', None, (265.9619999999999, 282.37, 338.634)), ('L', ' 100 ', 'PRO', None, (274.571, 259.462, 341.291)), ('M', '   8 ', 'PRO', None, (284.264, 264.449, 363.326)), ('M', ' 100 ', 'PRO', None, (292.86, 284.735, 352.534))]
data['rama'] = [('A', ' 600 ', 'ASP', 0.01606257510183659, (244.217, 285.1250000000001, 256.038)), ('A', ' 613 ', 'ASP', 0.03781019227603742, (246.673, 298.191, 270.737)), ('A', '1081 ', 'GLY', 0.0111503, (250.087, 288.6740000000002, 192.92499999999998)), ('B', ' 418 ', 'GLY', 0.08947904795700247, (299.11300000000006, 279.124, 312.836)), ('B', ' 969 ', 'PRO', 0.09987019190887984, (258.3609999999999, 252.39000000000007, 289.347)), ('B', '1081 ', 'GLY', 0.03169247850393045, (290.247, 259.34200000000004, 191.886)), ('C', ' 926 ', 'ALA', 0.04420906744192115, (238.36100000000005, 258.9050000000001, 236.187)), ('C', ' 969 ', 'PRO', 0.028980225787899796, (258.7949999999999, 273.1370000000001, 289.49))]
data['cablam'] = [('A', '35', 'SER', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (267.0, 310.4, 271.3)), ('A', '86', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nTTEEE', (269.2, 301.5, 284.2)), ('A', '105', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (267.2, 304.6, 297.1)), ('A', '207', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (269.8, 323.8, 273.4)), ('A', '310', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SE', (241.3, 292.0, 277.4)), ('A', '347', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SEE', (228.5, 271.4, 299.1)), ('A', '414', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (247.8, 253.5, 290.5)), ('A', '505', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (232.8, 264.7, 286.3)), ('A', '530', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (234.4, 275.9, 287.0)), ('A', '652', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (250.6, 287.7, 247.1)), ('A', '653', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (247.9, 285.2, 246.2)), ('A', '891', 'ILE', 'check CA trace,carbonyls, peptide', 'turn\nHTTTS', (264.8, 271.4, 210.1)), ('A', '1016', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (276.2, 265.5, 220.4)), ('A', '1024', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (264.0, 270.8, 224.7)), ('A', '1025', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (267.1, 272.6, 223.5)), ('A', '1040', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (279.1, 273.0, 240.6)), ('A', '1053', 'GLN', 'check CA trace,carbonyls, peptide', ' \nE--EE', (258.2, 288.6, 209.6)), ('A', '1073', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (254.8, 267.0, 197.7)), ('A', '38', 'ARG', 'check CA trace', ' \nTT--E', (272.2, 307.2, 270.6)), ('A', '280', 'GLN', 'check CA trace', 'bend\nTTS-H', (261.3, 299.9, 265.6)), ('A', '297', 'LYS', 'check CA trace', 'bend\n--SEE', (263.7, 292.5, 246.9)), ('A', '346', 'SER', 'check CA trace', ' \nEE-SE', (230.4, 268.1, 299.6)), ('A', '535', 'THR', 'check CA trace', 'strand\nEEEEE', (242.0, 282.3, 276.6)), ('B', '36', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nE-TEE', (303.0, 234.9, 267.6)), ('B', '45', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (280.3, 229.6, 277.3)), ('B', '86', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nTTEEE', (295.9, 238.9, 284.0)), ('B', '105', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (299.5, 240.2, 297.0)), ('B', '109', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nSSTTS', (301.0, 234.8, 305.9)), ('B', '152', 'ILE', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (305.9, 225.3, 299.3)), ('B', '296', 'ASP', 'check CA trace,carbonyls, peptide', ' \n---SE', (288.0, 242.7, 247.3)), ('B', '310', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SE', (301.8, 267.6, 275.5)), ('B', '321', 'ASN', 'check CA trace,carbonyls, peptide', ' \n---B-', (296.5, 292.4, 296.2)), ('B', '542', 'SER', ' beta sheet', ' \nE----', (297.3, 290.7, 265.5)), ('B', '652', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (291.6, 259.7, 246.0)), ('B', '653', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (291.0, 263.3, 245.0)), ('B', '740', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nT-SHH', (249.3, 255.9, 266.3)), ('B', '784', 'PHE', 'check CA trace,carbonyls, peptide', ' \nB--TT', (267.7, 234.1, 217.8)), ('B', '872', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (250.2, 250.0, 218.3)), ('B', '873', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (247.3, 247.8, 217.2)), ('B', '1016', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (258.5, 248.4, 220.5)), ('B', '1018', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (263.0, 252.5, 216.6)), ('B', '1024', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (269.5, 256.5, 224.3)), ('B', '1025', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (269.2, 252.9, 223.0)), ('B', '1027', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (276.1, 253.4, 221.7)), ('B', '1040', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (264.5, 242.3, 240.3)), ('B', '1052', 'SER', 'check CA trace,carbonyls, peptide', ' \nEE--E', (283.9, 252.5, 210.6)), ('B', '1073', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (269.4, 266.2, 197.2)), ('B', '1080', 'ASN', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (287.1, 260.2, 193.9)), ('B', '1082', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (289.5, 261.9, 189.2)), ('B', '1091', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (278.0, 255.0, 203.4)), ('B', '1109', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETTS-', (277.1, 283.7, 191.4)), ('B', '38', 'ARG', 'check CA trace', 'strand\nTEEEE', (299.1, 232.4, 270.8)), ('B', '280', 'GLN', 'check CA trace', 'bend\nTTS-H', (298.3, 245.0, 264.7)), ('B', '297', 'LYS', 'check CA trace', 'bend\n--SEE', (289.5, 246.1, 246.4)), ('B', '535', 'THR', 'check CA trace', 'strand\nEEEEE', (293.0, 272.4, 274.5)), ('B', '592', 'SER', 'check CA trace', ' \nT----', (298.9, 242.1, 250.6)), ('C', '35', 'SER', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (222.2, 240.0, 273.1)), ('C', '105', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (230.0, 238.0, 297.9)), ('C', '152', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEES', (214.0, 241.0, 302.1)), ('C', '296', 'ASP', 'check CA trace,carbonyls, peptide', ' \n---SE', (234.8, 250.6, 249.1)), ('C', '310', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SE', (250.0, 226.1, 276.2)), ('C', '652', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (247.1, 238.5, 246.5)), ('C', '653', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (250.6, 237.3, 245.4)), ('C', '681', 'LEU', 'check CA trace,carbonyls, peptide', ' \nE--SE', (248.7, 237.3, 231.6)), ('C', '873', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (257.4, 282.1, 217.0)), ('C', '969', 'PRO', ' alpha helix', 'helix\n-HHHH', (258.8, 273.1, 289.5)), ('C', '1025', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (251.3, 261.1, 223.6)), ('C', '1039', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (241.4, 270.3, 240.1)), ('C', '1040', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (245.2, 270.3, 240.9)), ('C', '1053', 'GLN', 'check CA trace,carbonyls, peptide', ' \nE--EE', (241.3, 245.7, 209.1)), ('C', '1082', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (247.5, 238.7, 188.8)), ('C', '1091', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (247.7, 252.3, 204.2)), ('C', '38', 'ARG', 'check CA trace', ' \nTT--E', (222.1, 245.8, 273.4)), ('C', '72', 'ILE', 'check CA trace', 'beta bridge\nEEBTT', (205.1, 231.2, 285.6)), ('C', '297', 'LYS', 'check CA trace', 'bend\n--SEE', (236.8, 247.5, 248.1)), ('C', '346', 'SER', 'check CA trace', ' \nEE-SE', (275.6, 230.4, 303.0)), ('C', '535', 'THR', 'check CA trace', 'strand\nEEEEE', (258.1, 231.3, 275.2)), ('C', '578', 'PHE', 'check CA trace', 'strand\n--EEE', (252.9, 235.1, 264.2)), ('H', '107', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTG', (269.1, 250.1, 336.6)), ('H', '114', 'MET', 'check CA trace,carbonyls, peptide', ' \nS---E', (260.6, 259.6, 341.0)), ('H', '106', 'TYR', 'check CA trace', 'bend\nT-STT', (266.1, 247.9, 336.0)), ('I', '114', 'MET', 'check CA trace,carbonyls, peptide', ' \nS---E', (302.5, 274.7, 351.9)), ('I', '119', 'GLN', 'check CA trace,carbonyls, peptide', ' \nE---E', (310.0, 272.6, 363.9)), ('I', '106', 'TYR', 'check CA trace', 'bend\nT-STT', (303.0, 283.7, 341.7))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-0403/6nb6/Model_validation_1/validation_cootdata/molprobity_probe6nb6_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 123 ', 'ALA', 0.007719244229284146, (243.88300000000012, 288.4059999999999, 244.793)), ('A', ' 320 ', 'VAL', 0.05871086830781509, (207.54899999999995, 257.343, 222.435)), ('A', ' 344 ', 'ALA', 0.01700762009868479, (203.587, 237.854, 271.448)), ('A', ' 582 ', 'LEU', 0.021883962937274015, (188.092, 244.6939999999999, 237.37)), ('B', ' 197 ', 'ILE', 0.022607175458462123, (202.56499999999997, 219.59999999999994, 246.476))]
data['omega'] = [('H', ' 157 ', 'PRO', None, (218.199, 215.33, 335.727)), ('H', ' 159 ', 'PRO', None, (220.03399999999993, 221.14399999999995, 334.268)), ('L', '   8 ', 'PRO', None, (249.06200000000013, 233.858, 335.388)), ('L', '  96 ', 'PRO', None, (249.448, 216.02099999999993, 319.694)), ('L', ' 142 ', 'PRO', None, (238.393, 238.54, 349.56))]
data['rota'] = [('A', ' 392 ', 'PHE', 0.00024982271013970374, (201.897, 239.20999999999995, 247.757)), ('A', ' 518 ', 'LEU', 0.1140474538368585, (203.453, 238.72399999999993, 241.261)), ('A', ' 555 ', 'SER', 0.24849029154509938, (189.77099999999993, 244.91199999999992, 225.597)), ('A', ' 615 ', 'VAL', 0.24762242351698557, (205.008, 253.4319999999999, 210.522)), ('A', ' 635 ', 'VAL', 0.07329491015772777, (212.902, 269.0159999999999, 213.392)), ('A', ' 900 ', 'MET', 0.25036035926551636, (246.15900000000008, 233.86199999999994, 163.47)), ('B', ' 157 ', 'PHE', 0.24124508578463455, (176.716, 214.5489999999999, 262.715)), ('B', ' 173 ', 'GLN', 0.07503744111702478, (179.74599999999995, 227.934, 249.071)), ('B', ' 195 ', 'LYS', 0.0, (197.096, 217.331, 245.028)), ('B', ' 244 ', 'LEU', 0.08674514188302998, (173.494, 206.9039999999999, 254.001)), ('B', ' 312 ', 'ILE', 0.21270450869461743, (211.303, 210.53, 209.586)), ('B', ' 611 ', 'LEU', 0.07134105226387906, (213.68, 202.88199999999998, 214.319)), ('B', ' 850 ', 'ILE', 0.23378948840604227, (204.549, 238.56599999999995, 213.616)), ('B', '1028 ', 'LYS', 0.02575767792215594, (222.17699999999994, 230.00299999999993, 185.02)), ('C', '  61 ', 'ASN', 0.2517746631653718, (272.92, 216.68999999999994, 235.468)), ('C', ' 231 ', 'ILE', 0.26687798846937366, (251.44000000000005, 211.09999999999988, 256.0)), ('C', ' 233 ', 'ILE', 0.22566998315588574, (255.41800000000012, 215.53899999999987, 257.533)), ('C', ' 517 ', 'LEU', 0.15045139075284594, (242.28700000000012, 253.3329999999999, 242.656)), ('C', ' 738 ', 'CYS', 0.2914514988196155, (222.36599999999996, 216.65199999999993, 223.695)), ('C', '1004 ', 'LEU', 0.29537771966832543, (228.3929999999999, 222.107, 221.576)), ('H', ' 199 ', 'LEU', 0.17133703273531953, (209.437, 240.84599999999995, 355.914))]
data['cbeta'] = []
data['probe'] = [(' B1126  CYS  HB2', ' B1132  ILE HD13', -0.744, (237.668, 201.412, 153.816)), (' H  38  ARG  HB3', ' H  48  ILE HD11', -0.736, (235.471, 216.232, 325.115)), (' A 804  GLN HE21', ' F   1  NAG  H62', -0.727, (249.575, 252.935, 176.133)), (' B1028  LYS  O  ', ' B1032  CYS  HB2', -0.725, (221.288, 230.231, 182.049)), (' H  91  THR  HA ', ' H 119  VAL  O  ', -0.715, (229.466, 214.217, 330.797)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.712, (242.354, 208.344, 180.316)), (' B 858  LEU HD21', ' B 962  LEU HD23', -0.711, (214.988, 237.808, 217.332)), (' B 358  ILE  HB ', ' B 395  VAL  HB ', -0.708, (241.948, 207.103, 266.331)), (' A 552  LEU  HB3', ' A 585  LEU HD13', -0.706, (195.36, 249.29, 229.937)), (' C1028  LYS  O  ', ' C1032  CYS  HB2', -0.693, (231.541, 216.298, 184.079)), (' A 905  ARG HH11', ' A1036  GLN  HB2', -0.678, (239.678, 230.61, 172.507)), (' C  46  SER  HA ', ' C 279  TYR  O  ', -0.671, (249.311, 202.929, 223.021)), (' L  38  GLN  HB2', ' L  48  LEU HD11', -0.666, (239.963, 236.177, 325.071)), (' B1040  VAL HG21', ' C1035  GLY  HA3', -0.665, (227.569, 216.007, 177.53)), (' A 725  GLU  OE2', ' A1028  LYS  NZ ', -0.655, (234.131, 236.961, 187.333)), (' B 905  ARG  NH1', ' B1035  GLY  O  ', -0.653, (220.434, 230.374, 173.758)), (' B1028  LYS  O  ', ' B1032  CYS  CB ', -0.652, (221.025, 229.939, 181.722)), (' L 121  PRO  HD3', ' L 133  VAL HG22', -0.642, (219.052, 222.125, 359.37)), (' C1028  LYS  O  ', ' C1032  CYS  CB ', -0.632, (231.985, 215.863, 183.76)), (' B 908  GLY  O  ', ' B1038  LYS  NZ ', -0.629, (225.849, 223.941, 169.672)), (' C 950  ASP  OD2', ' C 954  GLN  NE2', -0.627, (240.186, 219.01, 206.031)), (' C 720  ILE HG13', ' C 923  ILE HG23', -0.61, (244.512, 207.755, 172.843)), (' H  27  PHE  HB2', ' H 101  CYS  H  ', -0.608, (235.016, 228.597, 305.34)), (' B1031  GLU  OE1', ' B1039  ARG  NH1', -0.605, (227.97, 227.685, 182.908)), (' A1012  LEU  HB3', ' C1013  ILE HD13', -0.601, (233.614, 228.764, 209.599)), (' C 306  PHE  CD1', ' C 307  THR HG23', -0.599, (256.479, 207.696, 215.337)), (' A 342  PHE  HB2', ' A1303  NAG  H82', -0.599, (206.892, 242.264, 265.719)), (' L 121  PRO  HB3', ' L 132  SER  H  ', -0.598, (217.104, 220.509, 357.007)), (' A 722  VAL HG22', ' A1065  VAL HG22', -0.598, (239.987, 244.152, 175.605)), (' H  91  THR HG23', ' H 120  THR  HA ', -0.597, (227.318, 214.128, 332.149)), (' B  46  SER  N  ', ' B 279  TYR  O  ', -0.595, (195.712, 229.542, 222.056)), (' C 201  PHE  HB3', ' C 229  LEU  HB2', -0.587, (254.25, 208.95, 251.432)), (' A1032  CYS  SG ', ' A1051  SER  OG ', -0.587, (238.189, 236.463, 179.639)), (' A 914  ASN  ND2', ' A1111  GLU  OE2', -0.581, (235.035, 237.785, 154.132)), (' B 715  PRO  HD3', ' C 894  LEU HD13', -0.573, (219.474, 208.27, 169.414)), (' A 642  VAL HG22', ' A 651  ILE HG12', -0.572, (207.867, 263.742, 207.041)), (' C  46  SER  CA ', ' C 279  TYR  O  ', -0.571, (248.707, 202.194, 222.943)), (' H 131  VAL  O  ', ' H 219  LYS  NZ ', -0.57, (208.858, 223.206, 348.786)), (' C 642  VAL HG22', ' C 651  ILE HG12', -0.568, (270.127, 231.446, 213.57)), (' B1080  ALA  O  ', ' B1132  ILE HG13', -0.563, (233.62, 201.977, 155.598)), (' C 734  THR HG21', ' C 959  LEU HD21', -0.55, (229.962, 213.956, 215.527)), (' H 129  PRO  HB3', ' H 155  TYR  HB3', -0.544, (214.903, 219.22, 341.604)), (' B 703  ASN  OD1', ' B 704  SER  N  ', -0.543, (218.498, 197.762, 178.801)), (' A 604  THR  HA ', ' A1304  NAG  H82', -0.543, (230.85, 267.355, 199.184)), (' A 195  LYS  HD3', ' A 197  ILE HD13', -0.543, (228.91, 264.479, 238.482)), (' C 327  VAL  H  ', ' C 531  THR  HB ', -0.543, (262.404, 248.992, 240.994)), (' A 566  GLY  N  ', ' A 575  ALA  O  ', -0.541, (197.293, 239.309, 231.56)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.541, (215.675, 258.47, 199.332)), (' L 121  PRO  HG3', ' L 131  ALA  HB1', -0.54, (217.879, 219.413, 359.374)), (' A 326  ILE HD12', ' A 539  VAL HG21', -0.54, (199.139, 254.413, 232.275)), (' B 858  LEU HD23', ' B 959  LEU HD22', -0.54, (213.133, 238.021, 214.909)), (' C 327  VAL  O  ', ' C 531  THR  N  ', -0.534, (262.602, 251.249, 242.704)), (' B 393  THR HG22', ' B 517  LEU  HA ', -0.534, (242.038, 215.016, 261.065)), (' H 169  LEU HD21', ' H 192  VAL HG21', -0.534, (215.222, 239.239, 346.803)), (' B 537  LYS  O  ', ' B 539  VAL HG23', -0.533, (221.342, 198.654, 236.53)), (' A 394  ASN  HB3', ' A 396  TYR  CE2', -0.532, (200.009, 231.388, 251.225)), (' B  31  SER  HB3', ' B  60  SER  H  ', -0.531, (192.974, 206.608, 231.759)), (' C  31  SER  O  ', ' C  59  PHE  N  ', -0.53, (268.989, 213.445, 230.338)), (' A 106  PHE  HB2', ' A 117  LEU  HB2', -0.529, (228.78, 275.363, 247.762)), (' C 822  LEU HD22', ' C 945  LEU HD21', -0.527, (240.777, 206.773, 196.018)), (' A 733  LYS  HE3', ' A 771  ALA  HB1', -0.527, (248.371, 231.246, 206.195)), (' C 122  ASN  O  ', ' C 124  THR  N  ', -0.526, (265.819, 191.488, 254.761)), (' B1013  ILE HD13', ' C1012  LEU  HB3', -0.525, (227.533, 226.42, 209.691)), (' B 570  ALA  HB2', ' C 963  VAL HG12', -0.523, (236.218, 212.022, 225.268)), (' H  50  TRP  CD1', ' H  59  ASN  HB2', -0.523, (244.682, 215.213, 314.184)), (' B 544  ASN  HB2', ' B 565  PHE  HZ ', -0.522, (237.456, 202.718, 243.342)), (' B 342  PHE  HB2', ' B1310  NAG  H82', -0.521, (236.282, 197.555, 273.85)), (' B 350  VAL  HA ', ' B 400  PHE  HB2', -0.521, (241.153, 208.65, 284.638)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.518, (262.744, 226.96, 205.034)), (' B 398  ASP  OD2', ' B 423  TYR  OH ', -0.517, (240.35, 212.865, 276.805)), (' B 544  ASN  OD1', ' B 579  PRO  HB3', -0.516, (236.187, 198.275, 245.767)), (' B 715  PRO  HA ', ' B1072  GLU  HA ', -0.516, (215.224, 207.003, 167.238)), (' B 616  ASN  HB2', ' B 619  GLU  HG3', -0.513, (220.118, 192.714, 219.599)), (' B 392  PHE  HD1', ' B 517  LEU  HB2', -0.51, (238.622, 215.126, 261.495)), (' A 396  TYR  OH ', ' B 230  PRO  HG3', -0.509, (197.175, 229.745, 252.752)), (' A 901  GLN  O  ', ' A 905  ARG  HG2', -0.509, (241.97, 233.392, 167.988)), (' B  81  ASN  O  ', ' B 239  GLN  NE2', -0.509, (184.882, 203.795, 253.694)), (' L  15  PRO  HD3', ' L 107  ILE HG23', -0.508, (237.582, 245.57, 338.523)), (' B 388  ASN  HB3', ' B 527  PRO  HD2', -0.508, (231.454, 203.156, 259.645)), (' A 852  ALA  O  ', ' A 856  ASN  ND2', -0.506, (247.583, 245.294, 220.881)), (' A 802  PHE  HD1', ' A 805  ILE HD11', -0.506, (248.133, 242.978, 175.8)), (' A1035  GLY  HA3', ' C1040  VAL HG21', -0.504, (240.544, 227.411, 176.72)), (' H 129  PRO  HD2', ' H 215  THR HG21', -0.504, (210.281, 219.639, 340.072)), (' C 742  ILE  O  ', ' C1000  ARG  NH1', -0.503, (227.003, 216.784, 231.351)), (' A 294  ASP  OD2', ' A 297  SER  OG ', -0.503, (224.005, 265.756, 215.474)), (' A 345  THR  O  ', ' A 509  ARG  NH2', -0.501, (207.089, 234.854, 274.321)), (' C 564  GLN  NE2', ' C 577  ARG  O  ', -0.499, (253.737, 258.343, 237.209)), (' B1083  HIS  CE1', ' B1137  VAL  H  ', -0.499, (230.923, 205.565, 145.192)), (' H   2  VAL  HA ', ' H  26  GLY  HA3', -0.496, (228.622, 230.723, 308.318)), (' H  44  ARG  NH1', ' H  45  LEU  O  ', -0.496, (243.447, 221.04, 328.325)), (' A  31  SER  O  ', ' A  59  PHE  N  ', -0.494, (224.404, 273.756, 221.759)), (' A  32  PHE  O  ', ' A  59  PHE  N  ', -0.489, (224.723, 272.995, 220.627)), (' C 231  ILE HD12', ' C 233  ILE  H  ', -0.487, (254.392, 213.884, 256.055)), (' H   4  LEU  HB2', ' H 112  ILE HG22', -0.486, (231.252, 227.549, 314.1)), (' A 382  VAL HG21', ' A 515  PHE  HE1', -0.485, (209.895, 238.42, 249.005)), (' A 866  THR  OG1', ' A 869  MET  SD ', -0.485, (257.715, 236.433, 195.753)), (' A 326  ILE  O  ', ' A 541  PHE  HA ', -0.485, (201.537, 252.607, 236.242)), (' C1053  PRO  O  ', ' C1054  GLN  NE2', -0.483, (234.433, 204.757, 187.72)), (' C 804  GLN  OE1', ' N   1  NAG  O6 ', -0.481, (244.191, 194.964, 184.877)), (' A  29  THR HG23', ' A  62  VAL HG23', -0.479, (223.269, 281.01, 225.853)), (' B  64  TRP  HE1', ' B 264  ALA  HB1', -0.478, (179.872, 203.634, 239.091)), (' A 578  ASP  OD2', ' A 581  THR  N  ', -0.478, (189.669, 248.466, 238.697)), (' A 127  VAL HG22', ' A 171  VAL HG22', -0.477, (242.456, 280.091, 250.598)), (' L 194  ALA  HB2', ' L 209  SER  HB3', -0.477, (225.486, 228.12, 366.442)), (' B 541  PHE  CZ ', ' B 587  ILE HD13', -0.476, (229.699, 202.633, 236.219)), (' H  68  VAL HG22', ' H  83  LEU HD13', -0.475, (235.094, 209.233, 323.436)), (' B 763  LEU HD22', ' B1008  VAL HG21', -0.475, (224.638, 238.734, 216.355)), (' C 716  THR  N  ', ' C1071  GLN  O  ', -0.475, (253.389, 217.362, 166.691)), (' C 394  ASN  ND2', ' C 396  TYR  OH ', -0.475, (241.198, 263.83, 249.275)), (' L   2  ILE HD13', ' L  29  VAL HG12', -0.475, (254.803, 222.328, 320.328)), (' A 921  LYS  HE3', ' C1130  ILE HD11', -0.475, (247.757, 246.245, 157.618)), (' B 319  ARG HH22', ' B 595  VAL HG21', -0.474, (214.685, 205.156, 221.899)), (' H 207  ASN  ND2', ' H 218  ASP  OD1', -0.473, (206.79, 231.033, 341.062)), (' B1039  ARG  NE ', ' C1031  GLU  OE2', -0.473, (227.95, 223.882, 183.238)), (' A 603  ASN  OD1', ' A 604  THR  N  ', -0.473, (231.077, 265.372, 201.398)), (' A 205  SER  HB3', ' A 226  LEU HD12', -0.473, (239.446, 275.572, 236.118)), (' B 551  VAL HG23', ' B 590  CYS  HB3', -0.472, (221.398, 200.733, 231.827)), (' A 983  ARG  HD2', ' C 517  LEU  HG ', -0.471, (242.089, 249.218, 242.48)), (' H  11  VAL HG21', ' H 157  PRO  HG3', -0.471, (219.589, 214.336, 331.767)), (' A 559  PHE  CG ', ' A 584  ILE HG12', -0.47, (190.535, 238.891, 231.928)), (' C 384  PRO  HA ', ' C 387  LEU  HG ', -0.47, (244.278, 246.143, 252.043)), (' A 763  LEU HD22', ' A1008  VAL HG21', -0.469, (238.826, 230.568, 217.604)), (' C 914  ASN  OD1', ' C 915  VAL  N  ', -0.468, (241.843, 211.057, 160.678)), (' H 161  THR HG23', ' H 209  ASN  HB3', -0.467, (212.892, 226.983, 335.607)), (' C  46  SER  N  ', ' C 279  TYR  O  ', -0.467, (248.855, 202.307, 223.726)), (' C 359  SER  HB3', ' C 394  ASN  OD1', -0.466, (245.099, 263.239, 250.242)), (' C 676  THR  HA ', ' C 690  GLN  HA ', -0.466, (273.269, 216.428, 202.768)), (' A 574  ASP  O  ', ' A 587  ILE  N  ', -0.466, (197.964, 244.221, 227.925)), (' B 853  GLN  O  ', ' B 858  LEU  HB2', -0.465, (210.749, 241.144, 216.581)), (' L 123  ASP  O  ', ' L 127  LYS  HG2', -0.465, (208.238, 218.4, 357.906)), (' B 111  ASP  OD1', ' B 112  SER  N  ', -0.464, (192.369, 209.134, 265.715)), (' B 196  ASN  ND2', ' B 233  ILE  O  ', -0.464, (200.038, 216.672, 252.585)), (' B 439  ASN  O  ', ' B 443  SER  OG ', -0.463, (233.922, 195.943, 292.526)), (' L 185  ALA  O  ', ' L 189  LYS  HG3', -0.461, (218.838, 211.779, 366.427)), (' A1040  VAL HG21', ' B1035  GLY  HA3', -0.46, (224.437, 232.942, 175.559)), (' A 317  ASN HD21', ' A 592  PHE  HD2', -0.459, (211.832, 249.41, 217.53)), (' A 570  ALA  HB2', ' B 963  VAL HG13', -0.458, (208.182, 236.534, 222.323)), (' H 105  SER  HB2', ' P   1  NAG  H5 ', -0.457, (242.002, 232.003, 300.469)), (' A 742  ILE  O  ', ' A1000  ARG  NH1', -0.456, (243.208, 238.609, 229.292)), (' A 206  LYS  HB2', ' A 223  LEU  HA ', -0.456, (238.144, 273.432, 229.745)), (' A  64  TRP  HE1', ' A 264  ALA  HB1', -0.456, (225.793, 288.798, 229.736)), (' A 564  GLN  NE2', ' A 564  GLN  O  ', -0.456, (195.28, 241.048, 237.135)), (' A 324  GLU  HB2', ' A 539  VAL HG12', -0.455, (200.291, 257.961, 231.755)), (' B 126  VAL  O  ', ' B 171  VAL  HA ', -0.455, (182.977, 226.03, 254.374)), (' L  48  LEU  HA ', ' L  59  ILE HG13', -0.455, (240.029, 237.672, 319.574)), (' C 106  PHE  HB2', ' C 117  LEU  HB2', -0.455, (261.258, 209.931, 255.597)), (' L 109  ARG  HG2', ' L 110  THR  H  ', -0.454, (236.969, 245.87, 346.785)), (' L  48  LEU HD23', ' L  59  ILE HD12', -0.453, (238.951, 237.936, 321.705)), (' A 766  ALA  O  ', ' A 770  ILE HG12', -0.451, (241.69, 228.58, 210.086)), (' B 319  ARG  HD2', ' B 629  LEU HD11', -0.449, (210.87, 203.742, 226.453)), (' B 385  THR  OG1', ' B 386  LYS  N  ', -0.448, (223.356, 208.726, 264.065)), (' H  50  TRP  NE1', ' H  59  ASN  HB2', -0.446, (244.918, 215.723, 314.11)), (' B 759  PHE  CD2', ' B1001  LEU HD21', -0.446, (228.679, 240.231, 224.052)), (' C 749  CYS  HB2', ' C 977  LEU HD21', -0.445, (223.366, 216.864, 236.034)), (' H  28  THR  OG1', ' H 102  ASN  O  ', -0.445, (235.469, 226.924, 301.351)), (' A 422  ASN  OD1', ' A 454  ARG  N  ', -0.444, (213.235, 219.118, 267.047)), (' C  40  ASP  N  ', ' C  40  ASP  OD1', -0.444, (249.393, 208.004, 236.159)), (' B 598  ILE HG23', ' B 664  ILE HG21', -0.443, (209.145, 207.714, 207.512)), (' C 715  PRO  HA ', ' C1072  GLU  HA ', -0.443, (254.176, 219.087, 167.17)), (' H   4  LEU  O  ', ' H 114  GLY  HA2', -0.443, (228.813, 225.812, 317.504)), (' A 330  PRO  HB2', ' A 332  ILE HD13', -0.443, (192.598, 245.854, 247.856)), (' B 472  ILE HD13', ' B 482  GLY  HA2', -0.442, (256.202, 219.065, 300.496)), (' B  52  GLN  N  ', ' B  52  GLN  OE1', -0.442, (206.591, 220.349, 232.515)), (' A 965  GLN  NE2', ' A1003  SER  OG ', -0.441, (233.868, 240.736, 222.895)), (' B 781  VAL HG22', ' B1026  ALA  HB2', -0.441, (222.274, 235.816, 190.099)), (' A 122  ASN  O  ', ' A 124  THR  N  ', -0.439, (244.114, 286.227, 245.554)), (' B 393  THR HG23', ' B 394  ASN HD22', -0.439, (245.079, 213.517, 262.013)), (' A 230  PRO  HG3', ' C 396  TYR  CE1', -0.439, (238.869, 264.44, 250.696)), (' B 534  VAL HG23', ' B 539  VAL HG21', -0.439, (221.541, 197.218, 239.336)), (' B1102  TRP  HB2', ' B1135  ASN  ND2', -0.439, (226.331, 203.205, 150.778)), (' C 374  PHE  HA ', ' C 436  TRP  HB3', -0.438, (238.555, 246.847, 266.473)), (' A  46  SER  HA ', ' A 279  TYR  O  ', -0.438, (243.537, 261.115, 218.249)), (' H   2  VAL  HA ', ' H  25  SER  O  ', -0.437, (228.944, 229.584, 308.612)), (' L 171  ASP  OD2', ' L 173  THR  OG1', -0.437, (229.122, 241.184, 346.174)), (' A 403  ARG  NH1', ' A 405  ASP  OD2', -0.437, (224.872, 226.656, 269.863)), (' B 193  VAL HG23', ' B 223  LEU HD22', -0.436, (190.821, 217.252, 238.051)), (' C 376  THR  HB ', ' C 435  ALA  HB3', -0.436, (233.83, 246.255, 262.814)), (' C 905  ARG  HD2', ' C1049  LEU  O  ', -0.435, (234.781, 212.366, 174.986)), (' H 196  SER  HA ', ' H 199  LEU HD23', -0.435, (213.266, 241.894, 357.272)), (' A 864  LEU  O  ', ' C 669  GLY  N  ', -0.435, (257.077, 233.776, 199.148)), (' B 770  ILE  O  ', ' B 774  GLN  HG2', -0.434, (221.465, 239.814, 202.908)), (' C 810  SER  O  ', ' C 810  SER  OG ', -0.434, (235.717, 187.642, 191.707)), (' B 617  CYS  SG ', ' B 644  GLN  HB2', -0.434, (216.075, 192.858, 213.49)), (' B 393  THR  HA ', ' B 523  THR  H  ', -0.432, (243.191, 210.432, 258.624)), (' A 392  PHE  CD1', ' A 392  PHE  N  ', -0.432, (202.238, 240.724, 248.708)), (' B  31  SER  HB3', ' B  60  SER  N  ', -0.431, (193.424, 206.118, 231.959)), (' A 903  ALA  HB1', ' A 913  GLN  HB2', -0.431, (240.915, 233.995, 160.763)), (' B 902  MET  HE1', ' B1049  LEU HD13', -0.43, (213.662, 224.44, 170.914)), (' B 710  ASN  HB3', ' B1307  NAG  H82', -0.43, (230.779, 196.139, 162.468)), (' B 642  VAL HG22', ' B 651  ILE HG12', -0.428, (210.02, 195.511, 216.011)), (' B 544  ASN HD22', ' B 565  PHE  HE1', -0.428, (236.785, 200.424, 242.535)), (' D   1  NAG  H61', ' D   2  NAG  HN2', -0.428, (214.462, 270.063, 250.49)), (' L   6  GLN  NE2', ' L  87  TYR  O  ', -0.428, (244.679, 230.937, 329.991)), (' A 805  ILE HG22', ' A 818  ILE HD12', -0.428, (247.175, 246.345, 181.094)), (' C 578  ASP  HB3', ' C 581  THR  O  ', -0.427, (259.346, 261.074, 236.76)), (' B 433  VAL HG22', ' B 512  VAL HG22', -0.427, (234.772, 211.149, 277.4)), (' B 811  LYS  O  ', ' B 813  SER  N  ', -0.426, (198.479, 243.9, 187.655)), (' C 206  LYS  HB2', ' C 223  LEU  HA ', -0.425, (259.945, 201.439, 237.308)), (' A 131  CYS  HB2', ' A 133  PHE  CE2', -0.425, (232.632, 279.67, 256.378)), (' L 191  LYS  HG2', ' L 211  ASN  OD1', -0.425, (219.141, 224.179, 371.736)), (' A 821  LEU  O  ', ' A 825  LYS  HG2', -0.425, (246.266, 252.215, 191.474)), (' L 146  LYS  HB3', ' L 198  THR  HB ', -0.425, (237.632, 229.971, 357.55)), (' B 319  ARG  HB2', ' B 629  LEU HD21', -0.425, (210.208, 204.717, 228.316)), (' B 125  ASN  HA ', ' B 172  SER  O  ', -0.424, (179.113, 226.72, 251.834)), (' B 119  ILE HG23', ' B 128  ILE HG12', -0.424, (185.985, 221.09, 252.404)), (' C1093  GLY  O  ', ' C1107  ARG  NH1', -0.423, (242.537, 227.169, 160.4)), (' A 894  LEU HD13', ' C 715  PRO  HD3', -0.423, (251.075, 222.044, 168.179)), (' L  92  TYR  HA ', ' L  97  TRP  CG ', -0.422, (247.48, 222.133, 317.428)), (' C  34  ARG  CZ ', ' C 217  PRO  HG2', -0.422, (269.482, 202.662, 232.281)), (' B 498  GLN  HB2', ' B 501  ASN  OD1', -0.421, (232.698, 200.362, 298.982)), (' B1101  HIS  CE1', ' J   1  NAG  H3 ', -0.421, (217.328, 200.393, 148.879)), (' B 722  VAL HG22', ' B1065  VAL HG22', -0.421, (210.028, 224.741, 177.486)), (' A1005  GLN  OE1', ' C1002  GLN  NE2', -0.42, (232.749, 230.265, 223.65)), (' C 296  LEU HD13', ' C 608  VAL HG11', -0.42, (262.123, 218.232, 214.111)), (' A 857  GLY  HA2', ' C 592  PHE  CE2', -0.419, (251.174, 238.456, 220.465)), (' A 206  LYS  HG3', ' A 207  HIS  H  ', -0.418, (239.622, 277.183, 228.689)), (' B 822  LEU HD22', ' B 945  LEU HD21', -0.418, (206.673, 228.718, 191.92)), (' B 544  ASN  HB2', ' B 565  PHE  CZ ', -0.418, (237.574, 202.326, 243.197)), (' B 901  GLN  O  ', ' B 905  ARG  HG2', -0.418, (217.509, 229.307, 167.95)), (' A 326  ILE HD11', ' A 534  VAL  HB ', -0.418, (197.096, 256.443, 232.603)), (' B 418  ILE  HA ', ' B 422  ASN  HB2', -0.417, (239.058, 215.306, 288.054)), (' B 853  GLN  HG2', ' B 963  VAL HG21', -0.417, (208.816, 236.564, 217.44)), (' B 276  LEU  O  ', ' B 288  ALA  HA ', -0.417, (198.506, 219.37, 224.577)), (' C1024  LEU  HG ', ' C1028  LYS  HE2', -0.416, (234.522, 220.342, 190.27)), (' A 736  VAL HG22', ' A 858  LEU HD22', -0.416, (244.564, 238.272, 217.521)), (' B 194  PHE  HB3', ' B 201  PHE  CZ ', -0.415, (193.035, 216.681, 247.844)), (' A 303  LEU HD12', ' A 308  VAL HG22', -0.414, (228.694, 257.81, 209.767)), (' A 740  MET  HB2', ' C 319  ARG HH22', -0.413, (251.315, 235.55, 224.706)), (' A 902  MET  HE1', ' A1049  LEU HD13', -0.413, (239.625, 239.601, 169.69)), (' H 154  ASP  HA ', ' H 185  LEU  HB3', -0.412, (218.47, 215.16, 344.397)), (' B 159  VAL HG11', ' B 241  LEU HD21', -0.411, (183.001, 212.86, 258.146)), (' B 388  ASN  O  ', ' B 526  GLY  HA3', -0.411, (233.167, 204.886, 259.036)), (' A 720  ILE HG13', ' A 923  ILE HG23', -0.411, (239.202, 244.84, 167.911)), (' A 654  GLU  HB3', ' A 693  ILE HG22', -0.411, (213.001, 266.73, 196.404)), (' B  45  SER  HB2', ' B 281  GLU  HA ', -0.411, (193.657, 233.03, 222.52)), (' B 328  ARG  HA ', ' B 530  SER  HB2', -0.411, (229.475, 197.314, 248.351)), (' B 201  PHE  N  ', ' B 229  LEU  O  ', -0.41, (197.031, 222.789, 250.27)), (' B 612  TYR  O  ', ' B 648  GLY  HA3', -0.409, (218.252, 200.501, 214.833)), (' B 376  THR  HB ', ' B 435  ALA  HB3', -0.409, (229.62, 206.195, 280.992)), (' A 912  THR  OG1', ' A1106  GLN  NE2', -0.409, (232.81, 235.896, 158.137)), (' A 343  ASN  O  ', ' A 509  ARG  NH1', -0.408, (207.359, 237.906, 271.742)), (' B 594  GLY  O  ', ' B 613  GLN  HG2', -0.408, (218.355, 205.211, 217.035)), (' C 358  ILE  HB ', ' C 395  VAL  HB ', -0.407, (244.254, 258.87, 253.828)), (' A 206  LYS  HG3', ' A 207  HIS  N  ', -0.407, (239.592, 277.607, 228.951)), (' C 611  LEU HD22', ' C 666  ILE HG23', -0.407, (259.854, 230.431, 207.534)), (' H 176  PHE  CD2', ' L 165  THR HG23', -0.406, (226.622, 230.779, 345.507)), (' B 401  VAL HG22', ' B 509  ARG  HG2', -0.406, (238.281, 201.996, 285.045)), (' B1049  LEU  HB2', ' B1065  VAL  O  ', -0.406, (215.24, 223.951, 174.822)), (' A 449  TYR  HB3', ' A 494  SER  HB3', -0.406, (213.096, 221.856, 278.597)), (' B 903  ALA  HB1', ' B 913  GLN  HG2', -0.406, (217.628, 226.533, 161.492)), (' A 557  LYS  HE2', ' B  43  PHE  HE2', -0.405, (194.68, 236.888, 226.371)), (' B 961  THR HG21', ' C 765  ARG HH22', -0.405, (214.42, 226.78, 216.369)), (' B1101  HIS  ND1', ' J   1  NAG  H3 ', -0.405, (217.26, 200.545, 149.582)), (' B 804  GLN  HB3', ' B 935  GLN  OE1', -0.404, (200.246, 229.934, 181.391)), (' A 715  PRO  HA ', ' A1072  GLU  HA ', -0.404, (224.133, 245.95, 162.463)), (' B 676  THR  HA ', ' B 690  GLN  HA ', -0.404, (197.225, 199.917, 202.732)), (' B 497  PHE  CD2', ' B 507  PRO  HB3', -0.404, (236.588, 201.915, 291.224)), (' A 770  ILE  O  ', ' A 774  GLN  HG2', -0.403, (243.687, 230.979, 204.736)), (' B 226  LEU  HA ', ' B 226  LEU HD12', -0.403, (187.548, 226.183, 242.065)), (' B  53  ASP  HB2', ' B  55  PHE  CE1', -0.402, (201.547, 219.237, 235.27)), (' A 339  GLY  HA2', ' A1303  NAG  C7 ', -0.4, (204.558, 243.964, 265.677)), (' H 199  LEU  HA ', ' H 199  LEU HD13', -0.4, (210.009, 239.745, 354.691)), (' C 927  PHE  HE1', ' C1065  VAL HG21', -0.4, (240.02, 206.72, 179.689)), (' A 714  ILE HD12', ' A1096  VAL HG11', -0.4, (221.103, 239.437, 157.298)), (' A 191  GLU  O  ', ' A 205  SER  HA ', -0.4, (236.647, 275.916, 232.951)), (' L  67  GLY  HA3', ' L  72  PHE  HA ', -0.4, (254.921, 234.385, 323.133))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

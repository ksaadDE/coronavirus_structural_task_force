
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' C 599  THR HG22', ' C 601  GLY  H  ', -0.702, (153.765, 194.682, 168.31)), (' A 362  VAL HG12', ' A 525  CYS  HB2', -0.649, (162.084, 128.048, 120.844)), (' A 617  CYS  HA ', ' A 620  VAL HG23', -0.61, (183.138, 130.686, 157.281)), (' B1103  PHE  HZ ', ' B1312  NAG  H61', -0.558, (141.76, 150.302, 227.188)), (' C 813  SER  HB3', ' C 815  ARG  HG3', -0.542, (131.557, 168.713, 183.165)), (' C1081  ILE HD12', ' C1135  ASN  HB3', -0.536, (174.65, 174.572, 226.336)), (' C 362  VAL HG12', ' C 525  CYS  HB2', -0.501, (185.298, 182.609, 121.509)), (' B1082  CYS  HG ', ' B1126  CYS  HB3', -0.493, (142.694, 171.679, 226.606)), (' A 332  ILE  HB ', ' A 362  VAL HG13', -0.475, (161.158, 125.419, 120.229)), (' B1032  CYS  HG ', ' B1043  CYS  HG ', -0.474, (160.001, 151.245, 192.509)), (' A 611  LEU  HA ', ' A 649  CYS  O  ', -0.467, (184.175, 136.843, 161.364)), (' C 804  GLN  H  ', ' C 804  GLN  HG2', -0.466, (136.61, 176.235, 196.194)), (' C 599  THR HG22', ' C 601  GLY  N  ', -0.462, (153.931, 194.23, 168.589)), (' A 801  ASN  ND2', ' A 803  SER  OG ', -0.45, (190.25, 175.66, 197.094)), (' B  31  SER  HB3', ' B  62  VAL HG13', -0.43, (126.144, 126.342, 145.509)), (' C 394  ASN  H  ', ' C 516  GLU  HG3', -0.423, (187.267, 170.678, 123.91)), (' B1101  HIS  ND1', ' B1312  NAG  H5 ', -0.421, (138.739, 151.242, 228.718)), (' A 877  LEU HD13', ' A1029  MET  SD ', -0.417, (171.652, 174.648, 188.383)), (' B 877  LEU HD13', ' B1029  MET  SD ', -0.407, (168.695, 144.523, 188.153)), (' B 332  ILE HD11', ' B 362  VAL HG21', -0.406, (122.839, 178.274, 123.612)), (' A 331  ASN  N  ', ' A 331  ASN  OD1', -0.406, (162.274, 121.198, 125.745)), (' C1082  CYS  CB ', ' C1126  CYS  HG ', -0.406, (181.23, 171.343, 226.463)), (' A 617  CYS  SG ', ' A 644  GLN  OE1', -0.405, (181.974, 129.403, 161.766)), (' C 335  LEU  HG ', ' C 336  CYS  N  ', -0.404, (185.174, 181.251, 112.851)), (' A1103  PHE  HZ ', ' A1310  NAG  H62', -0.403, (181.471, 146.916, 225.314)), (' C 814  LYS  HA ', ' C 814  LYS  HD3', -0.401, (128.517, 168.392, 187.696))]
data['cbeta'] = [('A', ' 336 ', 'CYS', ' ', 0.2906443451621191, (157.255, 130.09799999999996, 114.99000000000001)), ('A', ' 487 ', 'ASN', ' ', 0.25891957753527084, (120.144, 161.293, 111.294)), ('C', ' 198 ', 'ASP', ' ', 0.34185202107126655, (144.489, 184.18499999999995, 130.008)), ('C', ' 336 ', 'CYS', ' ', 0.3469779859852988, (185.414, 178.442, 114.555)), ('C', ' 487 ', 'ASN', ' ', 0.27725076792827497, (180.56, 131.65899999999993, 104.14200000000002)), ('C', ' 516 ', 'GLU', ' ', 0.2661030610719345, (186.096, 167.803, 124.869)), ('C', ' 617 ', 'CYS', ' ', 0.38476817376734357, (175.486, 197.657, 160.378))]
data['smoc'] = [('A', 27, u'ALA', 0.7045498941683751, (210.916, 139.08100000000002, 136.453)), ('A', 37, u'TYR', 0.6764403996435845, (196.93800000000002, 160.33800000000002, 139.178)), ('A', 69, u'HIS', 0.811407502155608, (220.845, 143.375, 126.559)), ('A', 84, u'LEU', 0.8180390496584188, (203.202, 143.0, 125.842)), ('A', 105, u'ILE', 0.807513204649008, (203.95100000000002, 151.35200000000003, 119.75)), ('A', 117, u'LEU', 0.8568474061670296, (199.995, 154.26, 116.998)), ('A', 119, u'ILE', 0.8364887067575507, (205.24299999999997, 157.626, 119.87499999999999)), ('A', 124, u'THR', 0.8493563798067547, (213.069, 166.844, 123.18199999999999)), ('A', 132, u'GLU', 0.8202935521502233, (198.768, 151.009, 109.026)), ('A', 137, u'ASN', 0.8392143377336747, (210.866, 142.702, 113.85499999999999)), ('A', 142, u'GLY', 0.7851644023576161, (219.01399999999998, 156.374, 117.312)), ('A', 165, u'ASN', 0.711562105928403, (199.261, 156.207, 106.504)), ('A', 167, u'THR', 0.8672629219962208, (195.595, 159.138, 109.57799999999999)), ('A', 186, u'PHE', 0.7536735659927019, (219.809, 155.503, 138.45600000000002)), ('A', 198, u'ASP', 0.7896309439149657, (185.859, 156.497, 123.897)), ('A', 216, u'LEU', 0.7478747062881741, (210.08, 151.313, 142.459)), ('A', 220, u'PHE', 0.7487432522939756, (203.92100000000002, 159.034, 147.377)), ('A', 267, u'VAL', 0.7394579385660573, (204.85600000000002, 147.67499999999998, 133.64399999999998)), ('A', 285, u'ILE', 0.717356904651078, (197.147, 164.61399999999998, 146.30800000000002)), ('A', 309, u'GLU', 0.7892625449487161, (189.39600000000002, 154.701, 165.98600000000002)), ('A', 326, u'ILE', 0.8388595055677917, (173.105, 128.05800000000002, 132.45200000000003)), ('A', 345, u'THR', 0.8120590324446867, (149.591, 137.92800000000003, 99.593)), ('A', 365, u'TYR', 0.8506314090477053, (162.69, 137.873, 115.62299999999999)), ('A', 370, u'ASN', 0.8426171921548189, (166.845, 143.853, 111.327)), ('A', 375, u'SER', 0.853696595704866, (158.225, 151.15, 107.44500000000001)), ('A', 384, u'PRO', 0.8235037307287354, (162.721, 144.335, 119.79700000000001)), ('A', 403, u'ARG', 0.8350104509691177, (145.87800000000001, 154.11499999999998, 105.37799999999999)), ('A', 415, u'THR', 0.8443983866037321, (141.6, 156.78, 120.488)), ('A', 424, u'LYS', 0.8597616558433039, (141.63299999999998, 148.281, 120.01400000000001)), ('A', 427, u'ASP', 0.8542595337909015, (146.737, 149.916, 127.971)), ('A', 439, u'ASN', 0.8652460359370978, (150.71699999999998, 150.91899999999998, 97.624)), ('A', 445, u'VAL', 0.8327672013647373, (143.373, 152.375, 89.43)), ('A', 458, u'LYS', 0.8457782817261124, (126.94900000000001, 152.36200000000002, 119.577)), ('A', 465, u'GLU', 0.8485741794388424, (137.258, 142.844, 120.367)), ('A', 479, u'PRO', 0.8017769308039564, (114.784, 154.40800000000002, 114.738)), ('A', 486, u'PHE', 0.8327834029646458, (117.753, 160.606, 107.391)), ('A', 493, u'GLN', 0.8762749956388007, (133.042, 152.721, 104.627)), ('A', 500, u'THR', 0.8368913221322362, (148.475, 157.963, 92.78)), ('A', 505, u'TYR', 0.8512061518998583, (146.48200000000003, 157.98800000000003, 102.12199999999999)), ('A', 509, u'ARG', 0.8638950132369612, (149.791, 146.467, 105.738)), ('A', 512, u'VAL', 0.8412740625526469, (150.546, 143.27899999999997, 115.535)), ('A', 519, u'HIS', 0.6645045334670491, (152.72, 130.894, 135.047)), ('A', 542, u'ASN', 0.8107749939070716, (167.88100000000003, 131.164, 132.80800000000002)), ('A', 567, u'ARG', 0.7861103608356425, (157.505, 131.803, 144.92600000000002)), ('A', 571, u'ASP', 0.6709177624905431, (157.89800000000002, 137.666, 144.411)), ('A', 586, u'ASP', 0.814638378354406, (164.936, 124.471, 144.89600000000002)), ('A', 590, u'CYS', 0.8569701026876396, (174.415, 133.078, 146.77399999999997)), ('A', 598, u'ILE', 0.7255771084530094, (187.343, 144.70899999999997, 164.16299999999998)), ('A', 620, u'VAL', 0.6088203085633714, (182.54, 131.914, 154.65800000000002)), ('A', 649, u'CYS', 0.6882078205659545, (183.157, 133.89000000000001, 162.032)), ('A', 650, u'LEU', 0.7461521336819247, (186.30700000000002, 135.537, 163.495)), ('A', 668, u'ALA', 0.7108074281381664, (176.258, 136.687, 171.84)), ('A', 671, u'CYS', 0.7205273230549621, (184.27899999999997, 140.39000000000001, 172.631)), ('A', 721, u'SER', 0.6513563893552832, (183.072, 160.22299999999998, 197.05700000000002)), ('A', 729, u'VAL', 0.6459256523146806, (171.04399999999998, 170.01, 177.409)), ('A', 738, u'CYS', 0.6763061455432636, (164.86700000000002, 175.43800000000002, 152.21699999999998)), ('A', 767, u'LEU', 0.6802959448345058, (163.602, 173.82100000000003, 162.329)), ('A', 781, u'VAL', 0.6025266671452705, (168.015, 173.54399999999998, 183.559)), ('A', 814, u'LYS', 0.6804829881759124, (182.23499999999999, 183.87800000000001, 186.024)), ('A', 815, u'ARG', 0.7094604506782917, (183.783, 180.533, 184.925)), ('A', 822, u'LEU', 0.657305745654216, (185.156, 171.407, 180.853)), ('A', 854, u'LYS', 0.6584656516683979, (178.03, 174.978, 154.191)), ('A', 869, u'MET', 0.6704621856437083, (175.40800000000002, 184.132, 181.595)), ('A', 870, u'ILE', 0.6072090352498202, (175.221, 180.318, 181.99)), ('A', 874, u'THR', 0.5753006936965761, (175.82200000000003, 177.929, 187.846)), ('A', 877, u'LEU', 0.5401596337385968, (173.11299999999997, 177.934, 192.18)), ('A', 881, u'THR', 0.553438411122842, (173.879, 175.809, 197.847)), ('A', 905, u'ARG', 0.6383898702738365, (172.99200000000002, 166.257, 205.064)), ('A', 915, u'VAL', 0.5979142846618678, (179.64299999999997, 161.547, 213.379)), ('A', 923, u'ILE', 0.5915267286881565, (185.51399999999998, 164.732, 206.107)), ('A', 950, u'ASP', 0.7152941604380176, (178.788, 162.86200000000002, 170.60899999999998)), ('A', 958, u'ALA', 0.7118917093039686, (173.946, 165.54, 159.848)), ('A', 962, u'LEU', 0.7039344654364469, (172.92700000000002, 167.447, 154.033)), ('A', 965, u'GLN', 0.695458254605496, (173.74299999999997, 165.642, 148.94)), ('A', 979, u'ASP', 0.7094639778939354, (175.19899999999998, 173.975, 134.466)), ('A', 980, u'ILE', 0.7289669643750043, (171.593, 173.055, 133.55100000000002)), ('A', 988, u'GLU', 0.7635486711395909, (163.947, 170.96200000000002, 128.843)), ('A', 1002, u'GLN', 0.6419694216676327, (163.72, 164.548, 149.95200000000003)), ('A', 1013, u'ILE', 0.6675277866920866, (163.904, 162.787, 166.586)), ('A', 1028, u'LYS', 0.6319897806076051, (168.666, 166.535, 188.73299999999998)), ('A', 1040, u'VAL', 0.6122674545726996, (168.95800000000003, 155.38500000000002, 195.1)), ('A', 1049, u'LEU', 0.6711879650888053, (174.904, 164.372, 200.459)), ('A', 1051, u'SER', 0.615995203862497, (175.8, 168.11499999999998, 194.319)), ('A', 1062, u'PHE', 0.5782171850407221, (177.05800000000002, 167.58700000000002, 188.284)), ('A', 1077, u'THR', 0.6741318762418375, (173.22, 140.24899999999997, 216.055)), ('A', 1087, u'ALA', 0.6472286375722073, (161.21599999999998, 141.876, 224.648)), ('A', 1115, u'ILE', 0.6718559542905617, (171.65200000000002, 148.93, 225.87800000000001)), ('A', 1121, u'PHE', 0.7122463316804988, (161.29, 150.171, 223.37800000000001)), ('A', 1137, u'VAL', 0.7593357001064236, (168.94299999999998, 146.429, 229.77299999999997)), ('A', 1145, u'LEU', 0.7796064396829173, (166.738, 155.985, 243.148)), ('A', 1312, u'NAG', 0.7910163817229552, (211.742, 164.39200000000002, 113.99300000000001)), ('A', 1304, u'NAG', 0.773630343005976, (199.22299999999998, 153.798, 172.598)), ('A', 1306, u'NAG', 0.8180548464174511, (192.373, 128.037, 174.23)), ('A', 1309, u'NAG', 0.6773826471150493, (186.406, 142.24099999999999, 208.06)), ('B', 27, u'ALA', 0.8162964365028753, (114.82799999999999, 123.833, 142.847)), ('B', 44, u'ARG', 0.819499403186348, (153.039, 127.633, 147.52100000000002)), ('B', 54, u'LEU', 0.8341622399620087, (136.19899999999998, 134.39000000000001, 139.567)), ('B', 66, u'HIS', 0.767738491377603, (118.474, 115.292, 138.36700000000002)), ('B', 81, u'ASN', 0.7138741594231647, (118.49000000000001, 118.077, 128.89700000000002)), ('B', 90, u'VAL', 0.7900907448401919, (130.156, 127.644, 136.065)), ('B', 91, u'TYR', 0.8153022331617574, (130.757, 125.32499999999999, 138.98100000000002)), ('B', 96, u'GLU', 0.7636647313380162, (129.23999999999998, 109.79400000000001, 140.792)), ('B', 97, u'LYS', 0.7531397776953132, (128.98600000000002, 105.96700000000001, 140.38100000000003)), ('B', 122, u'ASN', 0.7785705888431467, (133.27499999999998, 107.82499999999999, 127.085)), ('B', 125, u'ASN', 0.8151194127389436, (138.738, 108.98, 127.233)), ('B', 134, u'GLN', 0.8215259659763438, (123.11, 121.395, 115.30499999999999)), ('B', 164, u'ASN', 0.7609984988158723, (131.51, 122.44200000000001, 109.823)), ('B', 169, u'GLU', 0.8390837194937533, (139.441, 118.854, 118.208)), ('B', 195, u'LYS', 0.837742612050082, (135.85500000000002, 129.212, 133.147)), ('B', 198, u'ASP', 0.7277386344666851, (138.86800000000002, 135.999, 127.861)), ('B', 214, u'ARG', 0.7479300617603577, (124.65199999999999, 113.68599999999999, 148.48000000000002)), ('B', 226, u'LEU', 0.8785060930557674, (142.70399999999998, 119.553, 133.811)), ('B', 231, u'ILE', 0.8415405648549613, (139.42000000000002, 127.67699999999999, 121.35199999999999)), ('B', 242, u'LEU', 0.7292004190107818, (122.666, 112.606, 130.21499999999997)), ('B', 266, u'TYR', 0.8639288988433299, (124.15599999999999, 120.978, 140.791)), ('B', 267, u'VAL', 0.8184194750244509, (125.004, 124.236, 138.94299999999998)), ('B', 275, u'PHE', 0.7774014730046306, (139.823, 134.76299999999998, 148.627)), ('B', 277, u'LEU', 0.7724903176509657, (143.76, 130.43800000000002, 150.546)), ('B', 287, u'ASP', 0.8286178792530474, (140.839, 125.82, 153.68200000000002)), ('B', 290, u'ASP', 0.7695840112638362, (135.66, 134.389, 151.14499999999998)), ('B', 297, u'SER', 0.7046521181763497, (135.395, 136.762, 156.977)), ('B', 301, u'CYS', 0.7275175667287751, (141.22899999999998, 138.575, 155.45000000000002)), ('B', 304, u'LYS', 0.8183772575459425, (145.738, 137.57899999999998, 156.92200000000003)), ('B', 315, u'THR', 0.7006647740982548, (138.222, 146.092, 158.166)), ('B', 326, u'ILE', 0.8307769506617393, (123.17399999999999, 166.77499999999998, 138.459)), ('B', 349, u'SER', 0.8178023203077052, (125.061, 184.585, 93.48700000000001)), ('B', 356, u'LYS', 0.7840686362431099, (128.447, 186.789, 108.45)), ('B', 357, u'ARG', 0.8214155524951925, (130.894, 186.62800000000001, 111.433)), ('B', 360, u'ASN', 0.8533852613743136, (129.567, 185.722, 121.21100000000001)), ('B', 372, u'ALA', 0.8246915154308461, (114.971, 167.02200000000002, 107.51100000000001)), ('B', 375, u'SER', 0.8236883713659369, (119.584, 167.38600000000002, 100.94200000000001)), ('B', 389, u'ASP', 0.8592446055757811, (130.162, 169.914, 122.368)), ('B', 403, u'ARG', 0.8432143461799826, (122.592, 174.10999999999999, 90.02499999999999)), ('B', 411, u'ALA', 0.7973537990818285, (134.08, 169.561, 99.259)), ('B', 427, u'ASP', 0.6976664689915135, (142.346, 169.818, 101.015)), ('B', 434, u'ILE', 0.8320784834691843, (124.927, 172.108, 104.15799999999999)), ('B', 437, u'ASN', 0.8193814710831122, (116.99900000000001, 172.07299999999998, 96.67599999999999)), ('B', 445, u'VAL', 0.7209579713079832, (109.089, 180.642, 84.24700000000001)), ('B', 455, u'LEU', 0.7989998935069058, (133.27599999999998, 180.72899999999998, 84.304)), ('B', 463, u'PRO', 0.797046350874885, (140.81, 178.80200000000002, 99.95)), ('B', 470, u'THR', 0.7505282951978213, (133.447, 191.796, 85.509)), ('B', 471, u'GLU', 0.7131363057550307, (136.77399999999997, 192.2, 83.566)), ('B', 477, u'SER', 0.5826388637307717, (146.435, 188.38400000000001, 71.381)), ('B', 487, u'ASN', 0.7303166361450357, (138.572, 186.383, 72.048)), ('B', 493, u'GLN', 0.7991554954422774, (127.438, 183.009, 83.331)), ('B', 500, u'THR', 0.7780059666843193, (110.386, 172.61599999999999, 84.821)), ('B', 503, u'VAL', 0.7706661470661044, (117.066, 168.016, 89.37299999999999)), ('B', 505, u'TYR', 0.8241257466900488, (119.827, 171.848, 86.60199999999999)), ('B', 515, u'PHE', 0.8352040903143786, (134.964, 177.42600000000002, 111.727)), ('B', 517, u'LEU', 0.8131084623413073, (139.912, 178.834, 116.637)), ('B', 529, u'LYS', 0.856814152652839, (121.90400000000001, 170.92200000000003, 128.875)), ('B', 559, u'PHE', 0.8440555615145756, (126.654, 185.765, 148.591)), ('B', 571, u'ASP', 0.8146065078183986, (140.03, 175.947, 150.08)), ('B', 583, u'GLU', 0.8401156975641738, (119.599, 180.394, 145.52)), ('B', 585, u'LEU', 0.8018405031094378, (123.074, 175.73399999999998, 148.21099999999998)), ('B', 641, u'ASN', 0.7810022660819613, (119.81700000000001, 144.676, 166.796)), ('B', 697, u'MET', 0.7288129246451815, (131.43800000000002, 151.656, 180.785)), ('B', 712, u'ILE', 0.7079522235406516, (139.461, 157.929, 212.072)), ('B', 763, u'LEU', 0.6555222668229115, (169.963, 154.657, 156.32600000000002)), ('B', 774, u'GLN', 0.6277035595739893, (169.736, 148.15200000000002, 172.248)), ('B', 777, u'ASN', 0.6051720106169942, (169.52800000000002, 149.90800000000002, 176.999)), ('B', 796, u'ASP', 0.7821042832954229, (168.086, 130.494, 206.38000000000002)), ('B', 805, u'ILE', 0.6826116004419387, (162.814, 133.314, 191.846)), ('B', 812, u'PRO', 0.7702283865834414, (170.53, 124.644, 180.601)), ('B', 870, u'ILE', 0.6133806860808928, (171.071, 138.454, 181.65)), ('B', 871, u'ALA', 0.5938275167559982, (170.095, 135.60399999999998, 184.035)), ('B', 885, u'GLY', 0.6109067283912626, (169.38800000000003, 144.718, 201.656)), ('B', 888, u'PHE', 0.6260603881686057, (175.10999999999999, 146.532, 197.818)), ('B', 927, u'PHE', 0.739547742270867, (154.829, 136.272, 201.076)), ('B', 942, u'ALA', 0.8130597342001543, (150.02, 133.995, 178.097)), ('B', 976, u'VAL', 0.7202280329826931, (160.782, 141.82100000000003, 139.598)), ('B', 996, u'LEU', 0.6897718378398345, (161.76899999999998, 150.686, 141.548)), ('B', 1028, u'LYS', 0.5534927356666336, (162.975, 151.085, 188.762)), ('B', 1049, u'LEU', 0.56990173022309, (158.85800000000003, 146.89000000000001, 200.976)), ('B', 1054, u'GLN', 0.6038533071566374, (163.267, 138.591, 186.791)), ('B', 1077, u'THR', 0.7166131752483711, (139.969, 160.71099999999998, 217.578)), ('B', 1090, u'PRO', 0.6792784918216705, (151.267, 162.453, 220.02700000000002)), ('B', 1094, u'VAL', 0.5948296021414651, (147.39600000000002, 159.20399999999998, 216.592)), ('B', 1123, u'SER', 0.6211804539940653, (152.85500000000002, 172.701, 223.446)), ('B', 1138, u'TYR', 0.7628477363834029, (150.40800000000002, 158.84, 232.918)), ('B', 1147, u'SER', 0.8374442297392969, (158.55200000000002, 154.154, 246.33)), ('B', 1301, u'NAG', 0.7777618847518604, (119.79100000000001, 127.65899999999999, 152.147)), ('B', 1304, u'NAG', 0.880908185843339, (119.262, 182.78, 134.683)), ('B', 1305, u'NAG', 0.7454910445366626, (136.86, 129.58800000000002, 175.564)), ('B', 1307, u'NAG', 0.7033309284468133, (117.584, 145.95800000000003, 177.474)), ('B', 1311, u'NAG', 0.7576168022960678, (135.15, 149.05, 208.433)), ('C', 27, u'ALA', 0.7805081208566128, (151.39200000000002, 216.18200000000002, 139.317)), ('C', 42, u'VAL', 0.7459481199104399, (134.268, 183.418, 145.546)), ('C', 62, u'VAL', 0.7599193007218719, (149.095, 208.11299999999997, 141.67899999999997)), ('C', 81, u'ASN', 0.8129660027366729, (144.6, 215.242, 128.24299999999997)), ('C', 97, u'LYS', 0.7807929491999615, (128.964, 213.494, 138.424)), ('C', 106, u'PHE', 0.7888654498562171, (142.701, 201.317, 124.79400000000001)), ('C', 125, u'ASN', 0.8505829927962355, (124.66499999999999, 203.414, 130.20899999999997)), ('C', 132, u'GLU', 0.828086212950843, (140.071, 199.88400000000001, 114.005)), ('C', 135, u'PHE', 0.8019076393401579, (139.411, 208.77399999999997, 114.979)), ('C', 220, u'PHE', 0.8276120547523311, (138.99, 201.601, 152.441)), ('C', 233, u'ILE', 0.7926585572935666, (143.018, 192.059, 121.96400000000001)), ('C', 270, u'LEU', 0.7533874514463865, (148.848, 197.736, 139.131)), ('C', 277, u'LEU', 0.7326714862214793, (142.177, 190.436, 152.542)), ('C', 285, u'ILE', 0.7403063190573663, (136.28, 192.672, 151.85800000000003)), ('C', 290, u'ASP', 0.7472858919109859, (149.939, 194.965, 151.416)), ('C', 291, u'CYS', 0.7817079841889532, (152.605, 192.348, 152.292)), ('C', 297, u'SER', 0.7404484772792705, (152.89200000000002, 194.254, 157.11599999999999)), ('C', 309, u'GLU', 0.7753743999955279, (151.206, 189.38000000000002, 169.798)), ('C', 318, u'PHE', 0.8132532354119508, (167.72899999999998, 188.829, 153.15800000000002)), ('C', 340, u'GLU', 0.877792545542089, (185.989, 173.903, 105.912)), ('C', 350, u'VAL', 0.8823606205705591, (181.29299999999998, 156.67899999999997, 106.64)), ('C', 369, u'TYR', 0.8164276183347217, (170.997, 176.64399999999998, 113.708)), ('C', 390, u'LEU', 0.7905808142466569, (179.17299999999997, 178.555, 126.21000000000001)), ('C', 394, u'ASN', 0.787952186700163, (188.01399999999998, 171.632, 121.776)), ('C', 400, u'PHE', 0.8320164385134257, (180.751, 161.76399999999998, 106.492)), ('C', 406, u'GLU', 0.8675271264927453, (170.29, 155.90200000000002, 108.18199999999999)), ('C', 408, u'ARG', 0.838177553852074, (168.346, 158.13299999999998, 112.613)), ('C', 417, u'ASN', 0.8436965432283685, (174.804, 149.21499999999997, 110.18599999999999)), ('C', 427, u'ASP', 0.8266071747907829, (175.842, 156.911, 125.51700000000001)), ('C', 429, u'PHE', 0.8679675796836435, (177.23499999999999, 162.137, 123.892)), ('C', 432, u'CYS', 0.8505656247151757, (175.08100000000002, 168.526, 117.99100000000001)), ('C', 444, u'LYS', 0.8630393723629611, (175.76399999999998, 161.20499999999998, 89.96100000000001)), ('C', 465, u'GLU', 0.8465308636493997, (186.2, 153.74899999999997, 117.271)), ('C', 468, u'ILE', 0.8975992543822175, (189.647, 151.483, 107.777)), ('C', 485, u'GLY', 0.8423809277892925, (184.004, 133.08800000000002, 97.832)), ('C', 508, u'TYR', 0.8870832492858138, (173.004, 163.157, 103.144)), ('C', 519, u'HIS', 0.7287205817032101, (186.503, 171.656, 133.38800000000003)), ('C', 524, u'VAL', 0.7718868878384922, (186.489, 177.305, 121.424)), ('C', 545, u'GLY', 0.8038588176862367, (180.177, 179.89100000000002, 130.20299999999997)), ('C', 547, u'THR', 0.8134444281547563, (177.38500000000002, 181.41299999999998, 135.187)), ('C', 559, u'PHE', 0.8226359111391733, (196.212, 175.74099999999999, 141.137)), ('C', 597, u'VAL', 0.6814612252006429, (160.73, 191.624, 163.11899999999997)), ('C', 599, u'THR', 0.6830579529017705, (157.054, 193.77299999999997, 167.59)), ('C', 641, u'ASN', 0.7699374513478751, (168.829, 203.803, 164.63899999999998)), ('C', 643, u'PHE', 0.7811917750595674, (173.191, 198.73999999999998, 166.09)), ('C', 649, u'CYS', 0.7506994946405685, (172.56, 193.95700000000002, 162.17)), ('C', 694, u'ALA', 0.7156129514423784, (167.73899999999998, 196.811, 173.07)), ('C', 695, u'TYR', 0.7185719773396443, (169.96200000000002, 195.85000000000002, 176.042)), ('C', 697, u'MET', 0.6998475857382138, (169.502, 191.136, 179.797)), ('C', 715, u'PRO', 0.6706575436574665, (161.631, 181.553, 209.591)), ('C', 725, u'GLU', 0.6079212781175961, (150.589, 173.39600000000002, 187.07399999999998)), ('C', 764, u'ASN', 0.7038323103322889, (146.303, 153.924, 158.678)), ('C', 774, u'GLN', 0.6747985750115769, (145.431, 158.806, 173.416)), ('C', 782, u'PHE', 0.6589269279530893, (142.88600000000002, 159.759, 185.607)), ('C', 796, u'ASP', 0.8104023539387656, (133.43, 170.281, 208.117)), ('C', 812, u'PRO', 0.7746623611541922, (127.101, 172.123, 182.365)), ('C', 819, u'GLU', 0.641441160156505, (137.129, 172.94299999999998, 185.88400000000001)), ('C', 870, u'ILE', 0.693415177153515, (137.003, 162.48200000000003, 183.37)), ('C', 876, u'ALA', 0.65704724036059, (136.871, 160.54899999999998, 192.966)), ('C', 881, u'THR', 0.6108590151363323, (142.254, 162.98000000000002, 198.931)), ('C', 901, u'GLN', 0.5599391209266373, (145.459, 164.977, 207.71499999999997)), ('C', 942, u'ALA', 0.7768292247153373, (143.57, 182.537, 178.602)), ('C', 949, u'GLN', 0.7192520138106991, (145.80800000000002, 175.69899999999998, 173.79)), ('C', 959, u'LEU', 0.7235015994306294, (145.16899999999998, 169.32600000000002, 159.434)), ('C', 993, u'ILE', 0.6714296874742298, (148.02800000000002, 161.803, 137.88100000000003)), ('C', 1008, u'VAL', 0.607359110457586, (151.85500000000002, 160.9, 159.727)), ('C', 1015, u'ALA', 0.624972073358842, (152.38800000000003, 161.90200000000002, 169.918)), ('C', 1019, u'ARG', 0.6201333508157117, (153.117, 160.598, 175.7)), ('C', 1022, u'ALA', 0.5829970801266575, (151.101, 162.026, 179.877)), ('C', 1026, u'ALA', 0.5921872485979317, (150.45000000000002, 160.10899999999998, 185.539)), ('C', 1029, u'MET', 0.560820368892587, (148.906, 161.97299999999998, 189.954)), ('C', 1042, u'PHE', 0.6498386731298983, (158.568, 168.39800000000002, 191.493)), ('C', 1062, u'PHE', 0.6147183587508315, (147.24599999999998, 170.304, 189.475)), ('C', 1065, u'VAL', 0.6223563131042416, (149.556, 173.316, 197.864)), ('C', 1074, u'ASN', 0.7037814611403029, (169.097, 186.045, 212.10999999999999)), ('C', 1077, u'THR', 0.6768481153395458, (174.168, 179.258, 216.394)), ('C', 1089, u'PHE', 0.6187329971792934, (173.836, 167.818, 220.206)), ('C', 1094, u'VAL', 0.6408309482460817, (169.196, 173.24899999999997, 215.925)), ('C', 1111, u'GLU', 0.7007082389457017, (159.787, 177.642, 218.228)), ('C', 1147, u'SER', 0.8487085630406208, (161.306, 166.025, 246.287))]
data['rota'] = [('A', ' 331 ', 'ASN', 0.016487323137906348, (162.646, 120.695, 123.971)), ('A', ' 332 ', 'ILE', 0.03365794640248659, (161.328, 122.26499999999997, 120.714)), ('A', ' 650 ', 'LEU', 0.006159150846414758, (186.307, 135.53699999999995, 163.495)), ('A', ' 651 ', 'ILE', 0.018548074558870163, (189.064, 135.374, 160.811)), ('A', ' 709 ', 'ASN', 0.06287016142143362, (170.889, 134.317, 210.251)), ('A', ' 801 ', 'ASN', 0.0, (187.554, 174.354, 199.949)), ('B', ' 115 ', 'GLN', 0.10999039628054369, (131.21, 127.327, 116.355)), ('B', ' 281 ', 'GLU', 0.0, (153.07, 121.616, 153.819)), ('C', ' 328 ', 'ARG', 0.16914063431812673, (185.196, 186.669, 131.336)), ('C', ' 362 ', 'VAL', 0.040628400647412674, (185.67, 182.059, 118.77000000000001)), ('C', ' 618 ', 'THR', 0.1501313293042012, (178.05, 197.278, 156.207)), ('C', ' 804 ', 'GLN', 0.0, (135.534, 175.92399999999995, 193.825)), ('C', ' 810 ', 'SER', 0.0, (124.225, 172.69, 188.323)), ('C', ' 814 ', 'LYS', 0.0, (129.583, 167.336, 186.773)), ('C', ' 907 ', 'ASN', 0.07162295990278615, (154.842, 166.574, 210.152))]
data['clusters'] = [('A', '1028', 1, 'smoc Outlier', (168.666, 166.535, 188.73299999999998)), ('A', '1032', 1, 'Dihedral angle:CA:C', (169.756, 167.101, 194.04)), ('A', '1033', 1, 'Dihedral angle:N:CA', (171.39800000000002, 170.554, 193.787)), ('A', '1040', 1, 'smoc Outlier', (168.95800000000003, 155.38500000000002, 195.1)), ('A', '1041', 1, 'Bond angle:CA:CB:CG', (171.622, 155.88800000000003, 192.359)), ('A', '1043', 1, 'cablam Outlier', (172.9, 161.1, 192.3)), ('A', '1048', 1, 'Bond angle:CB:CG:CD2', (173.694, 161.34, 198.454)), ('A', '1049', 1, 'smoc Outlier', (174.904, 164.372, 200.459)), ('A', '1051', 1, 'smoc Outlier', (175.8, 168.11499999999998, 194.319)), ('A', '1054', 1, 'Bond angle:OE1:CD:NE2', (179.26899999999998, 173.186, 186.583)), ('A', '1062', 1, 'smoc Outlier', (177.05800000000002, 167.58700000000002, 188.284)), ('A', '1064', 1, 'Bond angle:CB:CG:CD2', (177.667, 164.51399999999998, 193.08100000000002)), ('A', '781', 1, 'smoc Outlier', (168.015, 173.54399999999998, 183.559)), ('A', '784', 1, 'Bond angle:OE1:CD:NE2', (165.91, 177.51299999999998, 188.554)), ('A', '803', 1, 'side-chain clash', (171.652, 174.648, 188.383)), ('A', '814', 1, 'smoc Outlier', (182.23499999999999, 183.87800000000001, 186.024)), ('A', '815', 1, 'smoc Outlier', (183.783, 180.533, 184.925)), ('A', '819', 1, 'Dihedral angle:CB:CG:CD:OE1', (184.31, 174.935, 184.141)), ('A', '822', 1, 'smoc Outlier', (185.156, 171.407, 180.853)), ('A', '868', 1, 'Dihedral angle:CB:CG:CD:OE1', (179.112, 183.829, 180.595)), ('A', '869', 1, 'smoc Outlier', (175.40800000000002, 184.132, 181.595)), ('A', '870', 1, 'smoc Outlier', (175.221, 180.318, 181.99)), ('A', '874', 1, 'smoc Outlier', (175.82200000000003, 177.929, 187.846)), ('A', '877', 1, 'smoc Outlier', (173.11299999999997, 177.934, 192.18)), ('A', '881', 1, 'smoc Outlier', (173.879, 175.809, 197.847)), ('A', '905', 1, 'Planar group:CD:NE:CZ:NH1:NH2\nsmoc Outlier', (172.99200000000002, 166.257, 205.064)), ('A', '1305', 2, 'Planar group:C2:C7:C8:N2:O7', (176.39100000000002, 124.729, 157.439)), ('A', '1306', 2, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (192.373, 128.037, 174.23)), ('A', '611', 2, 'backbone clash', (184.175, 136.843, 161.364)), ('A', '617', 2, 'side-chain clash\nDihedral angle:CA:C', (183.342, 129.142, 158.765)), ('A', '618', 2, 'Dihedral angle:N:CA', (182.94299999999998, 126.357, 156.181)), ('A', '620', 2, 'side-chain clash\nsmoc Outlier', (183.138, 130.686, 157.281)), ('A', '643', 2, 'Bond angle:CA:CB:CG', (186.83700000000002, 131.112, 165.60399999999998)), ('A', '644', 2, 'side-chain clash', (181.974, 129.403, 161.766)), ('A', '649', 2, 'backbone clash\nsmoc Outlier', (184.175, 136.843, 161.364)), ('A', '650', 2, 'Rotamer\nsmoc Outlier', (186.307, 135.53699999999995, 163.495)), ('A', '651', 2, 'Rotamer', (189.064, 135.374, 160.811)), ('A', '655', 2, 'Bond angle:CB:CG:CD2', (190.412, 132.61599999999999, 170.666)), ('A', '105', 3, 'smoc Outlier', (203.95100000000002, 151.35200000000003, 119.75)), ('A', '112', 3, 'Ramachandran\ncablam Outlier', (200.255, 145.266, 108.513)), ('A', '115', 3, 'Bond angle:OE1:CD:NE2', (196.017, 150.724, 112.235)), ('A', '117', 3, 'smoc Outlier', (199.995, 154.26, 116.998)), ('A', '119', 3, 'smoc Outlier', (205.24299999999997, 157.626, 119.87499999999999)), ('A', '131', 3, 'Dihedral angle:CA:C', (199.369, 154.501, 110.377)), ('A', '132', 3, 'Dihedral angle:N:CA\nDihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (198.768, 151.009, 109.026)), ('A', '133', 3, 'cablam Outlier', (202.5, 150.6, 109.9)), ('A', '165', 3, 'smoc Outlier', (199.261, 156.207, 106.504)), ('A', '167', 3, 'Dihedral angle:CA:C\nsmoc Outlier', (195.595, 159.138, 109.57799999999999)), ('A', '168', 3, 'Dihedral angle:N:CA', (196.431, 161.07, 112.76700000000001)), ('A', '169', 3, 'Dihedral angle:CB:CG:CD:OE1', (199.65800000000002, 163.02800000000002, 113.49700000000001)), ('A', '1083', 4, 'Bond angle:CB:CG:CD2', (165.04399999999998, 141.61399999999998, 230.32800000000003)), ('A', '1087', 4, 'smoc Outlier', (161.21599999999998, 141.876, 224.648)), ('A', '1115', 4, 'smoc Outlier', (171.65200000000002, 148.93, 225.87800000000001)), ('A', '1121', 4, 'smoc Outlier', (161.29, 150.171, 223.37800000000001)), ('A', '1122', 4, 'Dihedral angle:CA:C', (159.342, 147.159, 224.752)), ('A', '1123', 4, 'Dihedral angle:N:CA\ncablam Outlier', (156.718, 145.078, 223.02)), ('A', '1137', 4, 'smoc Outlier', (168.94299999999998, 146.429, 229.77299999999997)), ('A', '267', 5, 'smoc Outlier', (204.85600000000002, 147.67499999999998, 133.64399999999998)), ('A', '84', 5, 'smoc Outlier', (203.202, 143.0, 125.842)), ('A', '86', 5, 'cablam Outlier', (197.8, 146.5, 127.0)), ('A', '88', 5, 'cablam Outlier', (192.4, 148.1, 130.1)), ('A', '90', 5, 'Dihedral angle:CA:C', (199.105, 150.583, 131.39800000000002)), ('A', '91', 5, 'Dihedral angle:N:CA', (201.096, 152.185, 134.148)), ('A', '330', 6, 'Dihedral angle:CA:C', (162.35500000000002, 123.586, 126.428)), ('A', '331', 6, 'Rotamer\nside-chain clash\nDihedral angle:N:CA\ncablam Outlier', (162.646, 120.695, 123.971)), ('A', '332', 6, 'Rotamer\nside-chain clash', (161.158, 125.419, 120.229)), ('A', '360', 6, 'Ramachandran\ncablam Outlier', (154.677, 124.987, 120.58200000000001)), ('A', '362', 6, 'side-chain clash', (161.158, 125.419, 120.229)), ('A', '525', 6, 'side-chain clash', (162.084, 128.048, 120.844)), ('A', '479', 7, 'smoc Outlier', (114.784, 154.40800000000002, 114.738)), ('A', '480', 7, 'cablam Outlier', (116.1, 153.2, 111.4)), ('A', '486', 7, 'cablam CA Geom Outlier\nsmoc Outlier', (117.8, 160.6, 107.4)), ('A', '487', 7, 'C-beta', (120.144, 161.293, 111.294)), ('A', '488', 7, 'Dihedral angle:CA:C', (120.268, 156.441, 109.753)), ('A', '489', 7, 'Dihedral angle:N:CA', (123.60799999999999, 155.309, 108.256)), ('A', '1307', 8, 'Planar group:C2:C7:C8:N2:O7', (168.678, 133.27299999999997, 214.85600000000002)), ('A', '707', 8, 'Dihedral angle:CA:C', (175.185, 135.545, 204.974)), ('A', '708', 8, 'Dihedral angle:N:CA', (174.14299999999997, 133.869, 208.23299999999998)), ('A', '709', 8, 'Rotamer', (170.889, 134.317, 210.251)), ('A', '666', 9, 'cablam Outlier', (181.1, 141.2, 168.9)), ('A', '667', 9, 'cablam Outlier', (177.8, 139.7, 170.0)), ('A', '668', 9, 'smoc Outlier', (176.258, 136.687, 171.84)), ('A', '671', 9, 'smoc Outlier', (184.27899999999997, 140.39000000000001, 172.631)), ('A', '348', 10, 'Dihedral angle:CA:C', (141.89100000000002, 141.69899999999998, 105.956)), ('A', '349', 10, 'Dihedral angle:N:CA', (139.909, 144.933, 106.386)), ('A', '353', 10, 'cablam Outlier', (141.2, 141.7, 111.3)), ('A', '354', 10, 'Bond angle:CA:CB:CG', (142.622, 138.181, 111.032)), ('A', '357', 11, 'Dihedral angle:CD:NE:CZ:NH1', (147.96800000000002, 131.829, 116.842)), ('A', '396', 11, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (149.167, 136.11499999999998, 118.429)), ('A', '515', 11, 'Dihedral angle:CA:C', (152.86200000000002, 138.20999999999998, 123.44000000000001)), ('A', '516', 11, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA', (151.655, 136.38200000000003, 126.536)), ('A', '1105', 12, 'Dihedral angle:CA:C', (174.63899999999998, 150.90800000000002, 217.18200000000002)), ('A', '1106', 12, 'Dihedral angle:N:CA', (173.298, 153.253, 214.531)), ('A', '1107', 12, 'Dihedral angle:CD:NE:CZ:NH1', (172.893, 151.255, 211.26999999999998)), ('A', '1109', 12, 'cablam Outlier', (178.4, 153.6, 211.2)), ('A', '324', 13, 'Dihedral angle:CB:CG:CD:OE1', (178.80700000000002, 128.667, 135.656)), ('A', '326', 13, 'smoc Outlier', (173.105, 128.05800000000002, 132.45200000000003)), ('A', '542', 13, 'smoc Outlier', (167.88100000000003, 131.164, 132.80800000000002)), ('A', '958', 14, 'smoc Outlier', (173.946, 165.54, 159.848)), ('A', '962', 14, 'smoc Outlier', (172.92700000000002, 167.447, 154.033)), ('A', '965', 14, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (173.74299999999997, 165.642, 148.94)), ('A', '375', 15, 'smoc Outlier', (158.225, 151.15, 107.44500000000001)), ('A', '436', 15, 'Planar group:CB:CG:CD1:CD2:NE1:CE2:CE3:CZ2:CZ3:CH2', (154.692, 148.71299999999997, 105.91400000000002)), ('A', '509', 15, 'Planar group:CD:NE:CZ:NH1:NH2\nsmoc Outlier', (149.791, 146.467, 105.738)), ('A', '424', 16, 'smoc Outlier', (141.63299999999998, 148.281, 120.01400000000001)), ('A', '465', 16, 'smoc Outlier', (137.258, 142.844, 120.367)), ('A', '466', 16, 'Dihedral angle:CD:NE:CZ:NH1', (136.098, 141.90800000000002, 116.807)), ('A', '186', 17, 'smoc Outlier', (219.809, 155.503, 138.45600000000002)), ('A', '95', 17, 'Dihedral angle:CA:C', (214.38200000000003, 154.20299999999997, 136.783)), ('A', '96', 17, 'Dihedral angle:N:CA', (216.761, 156.218, 134.689)), ('A', '1072', 18, 'Dihedral angle:CB:CG:CD:OE1', (182.98700000000002, 146.89000000000001, 207.685)), ('A', '1309', 18, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (186.406, 142.24099999999999, 208.06)), ('A', '403', 19, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (145.87800000000001, 154.11499999999998, 105.37799999999999)), ('A', '505', 19, 'smoc Outlier', (146.48200000000003, 157.98800000000003, 102.12199999999999)), ('A', '220', 20, 'cablam CA Geom Outlier\nsmoc Outlier', (203.9, 159.0, 147.4)), ('A', '34', 20, 'Planar group:CD:NE:CZ:NH1:NH2\ncablam Outlier', (202.64499999999998, 153.95000000000002, 142.748)), ('A', '915', 21, 'smoc Outlier', (179.64299999999997, 161.547, 213.379)), ('A', '917', 21, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (181.394, 167.091, 214.02)), ('A', '293', 22, 'cablam CA Geom Outlier', (193.5, 146.2, 149.1)), ('A', '294', 22, 'Bond angle:CA:CB:CG', (192.55, 144.82100000000003, 152.562)), ('A', '923', 23, 'smoc Outlier', (185.51399999999998, 164.732, 206.107)), ('A', '926', 23, 'Bond angle:OE1:CD:NE2', (188.271, 163.635, 201.95100000000002)), ('A', '191', 24, 'Dihedral angle:CB:CG:CD:OE1', (206.27899999999997, 157.646, 135.554)), ('A', '207', 24, 'Bond angle:CA:CB:CG', (209.16299999999998, 163.04399999999998, 137.323)), ('A', '796', 25, 'Bond angle:CA:CB:CG', (185.097, 179.978, 206.221)), ('A', '797', 25, 'cablam CA Geom Outlier', (183.2, 176.9, 205.0)), ('A', '554', 26, 'Dihedral angle:CB:CG:CD:OE1', (167.345, 118.832, 143.945)), ('A', '586', 26, 'smoc Outlier', (164.936, 124.471, 144.89600000000002)), ('A', '309', 27, 'smoc Outlier', (189.39600000000002, 154.701, 165.98600000000002)), ('A', '310', 27, 'cablam CA Geom Outlier', (188.9, 151.5, 168.1)), ('A', '1058', 28, 'Bond angle:CB:CG:CD2\ncablam Outlier', (175.9, 172.329, 175.257)), ('A', '729', 28, 'smoc Outlier', (171.04399999999998, 170.01, 177.409)), ('A', '519', 29, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (152.72, 130.894, 135.047)), ('A', '564', 29, 'Bond angle:OE1:CD:NE2', (155.772, 125.079, 137.033)), ('A', '567', 30, 'smoc Outlier', (157.505, 131.803, 144.92600000000002)), ('A', '571', 30, 'smoc Outlier', (157.89800000000002, 137.666, 144.411)), ('A', '854', 31, 'smoc Outlier', (178.03, 174.978, 154.191)), ('A', '856', 31, 'cablam CA Geom Outlier', (174.4, 177.0, 150.5)), ('A', '979', 32, 'smoc Outlier', (175.19899999999998, 173.975, 134.466)), ('A', '980', 32, 'smoc Outlier', (171.593, 173.055, 133.55100000000002)), ('A', '40', 33, 'Bond angle:CA:CB:CG', (189.89600000000002, 165.319, 136.89000000000001)), ('A', '41', 33, 'cablam Outlier', (191.1, 168.9, 136.1)), ('B', '275', 1, 'smoc Outlier', (139.823, 134.76299999999998, 148.627)), ('B', '277', 1, 'smoc Outlier', (143.76, 130.43800000000002, 150.546)), ('B', '279', 1, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (148.21499999999997, 126.109, 151.572)), ('B', '281', 1, 'Rotamer', (153.07, 121.616, 153.819)), ('B', '287', 1, 'smoc Outlier', (140.839, 125.82, 153.68200000000002)), ('B', '290', 1, 'smoc Outlier', (135.66, 134.389, 151.14499999999998)), ('B', '293', 1, 'cablam CA Geom Outlier', (130.8, 136.5, 152.9)), ('B', '297', 1, 'smoc Outlier', (135.395, 136.762, 156.977)), ('B', '301', 1, 'smoc Outlier', (141.22899999999998, 138.575, 155.45000000000002)), ('B', '304', 1, 'smoc Outlier', (145.738, 137.57899999999998, 156.92200000000003)), ('B', '44', 1, 'smoc Outlier', (153.039, 127.633, 147.52100000000002)), ('B', '49', 1, 'Bond angle:CB:CG:CD2', (147.74599999999998, 133.73299999999998, 150.202)), ('B', '195', 2, 'smoc Outlier', (135.85500000000002, 129.212, 133.147)), ('B', '197', 2, 'Bond angle:C', (137.687, 134.60399999999998, 131.305)), ('B', '198', 2, 'Bond angle:N:CA\ncablam Outlier\nsmoc Outlier', (138.86800000000002, 135.999, 127.861)), ('B', '199', 2, 'cablam CA Geom Outlier', (142.3, 134.2, 128.2)), ('B', '200', 2, 'cablam CA Geom Outlier', (140.8, 130.9, 126.8)), ('B', '231', 2, 'smoc Outlier', (139.42000000000002, 127.67699999999999, 121.35199999999999)), ('B', '266', 2, 'smoc Outlier', (124.15599999999999, 120.978, 140.791)), ('B', '267', 2, 'smoc Outlier', (125.004, 124.236, 138.94299999999998)), ('B', '90', 2, 'Dihedral angle:CA:C\nsmoc Outlier', (130.156, 127.644, 136.065)), ('B', '91', 2, 'Dihedral angle:N:CA\nsmoc Outlier', (130.757, 125.32499999999999, 138.98100000000002)), ('B', '1090', 3, 'smoc Outlier', (151.267, 162.453, 220.02700000000002)), ('B', '1091', 3, 'Dihedral angle:CA:C', (155.08800000000002, 162.207, 219.64899999999997)), ('B', '1092', 3, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\ncablam Outlier', (154.45200000000003, 159.765, 216.82700000000003)), ('B', '1094', 3, 'smoc Outlier', (147.39600000000002, 159.20399999999998, 216.592)), ('B', '1105', 3, 'Dihedral angle:CA:C', (148.566, 154.159, 218.197)), ('B', '1106', 3, 'Dihedral angle:N:CA', (151.039, 154.136, 215.30700000000002)), ('B', '1109', 3, 'cablam Outlier', (148.7, 149.4, 212.3)), ('B', '1118', 3, 'Dihedral angle:CA:C', (157.011, 160.09, 226.871)), ('B', '1119', 3, 'Dihedral angle:N:CA', (154.45600000000002, 158.91, 224.24299999999997)), ('B', '1304', 4, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (119.262, 182.78, 134.683)), ('B', '564', 4, 'Bond angle:OE1:CD:NE2', (129.226, 182.032, 142.37)), ('B', '577', 4, 'Planar group:CD:NE:CZ:NH1:NH2', (124.84400000000001, 179.575, 143.737)), ('B', '581', 4, 'Dihedral angle:CA:C', (117.44100000000002, 180.05100000000002, 140.17399999999998)), ('B', '582', 4, 'Dihedral angle:N:CA', (119.992, 182.156, 142.08)), ('B', '583', 4, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (119.599, 180.394, 145.52)), ('B', '585', 4, 'smoc Outlier', (123.074, 175.73399999999998, 148.21099999999998)), ('B', '1069', 5, 'Dihedral angle:CA:C', (146.666, 147.523, 205.296)), ('B', '1070', 5, 'Dihedral angle:N:CA', (143.752, 145.09, 205.071)), ('B', '718', 5, 'Dihedral angle:CA:C', (147.738, 143.64, 206.79)), ('B', '719', 5, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (148.439, 141.625, 203.648)), ('B', '720', 5, 'Dihedral angle:N:CA', (151.836, 141.376, 202.026)), ('B', '926', 5, 'Bond angle:OE1:CD:NE2', (151.636, 135.662, 203.11599999999999)), ('B', '927', 5, 'smoc Outlier', (154.829, 136.272, 201.076)), ('B', '111', 6, 'cablam CA Geom Outlier', (122.5, 125.3, 117.9)), ('B', '112', 6, 'Bond angle:C\ncablam CA Geom Outlier', (123.864, 126.238, 114.35799999999999)), ('B', '113', 6, 'Bond angle:N:CA', (125.113, 129.63299999999998, 112.90700000000001)), ('B', '134', 6, 'smoc Outlier', (123.11, 121.395, 115.30499999999999)), ('B', '135', 6, 'Dihedral angle:CA:C', (121.35, 118.533, 117.22)), ('B', '136', 6, 'Dihedral angle:N:CA', (118.399, 117.433, 119.353)), ('B', '115', 7, 'Rotamer', (131.21, 127.327, 116.355)), ('B', '131', 7, 'cablam Outlier', (132.1, 122.8, 115.2)), ('B', '164', 7, 'smoc Outlier', (131.51, 122.44200000000001, 109.823)), ('B', '167', 7, 'cablam Outlier', (138.8, 124.6, 114.3)), ('B', '169', 7, 'smoc Outlier', (139.441, 118.854, 118.208)), ('B', '403', 8, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (122.592, 174.10999999999999, 90.02499999999999)), ('B', '500', 8, 'smoc Outlier', (110.386, 172.61599999999999, 84.821)), ('B', '501', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (114.199, 171.854, 85.021)), ('B', '503', 8, 'smoc Outlier', (117.066, 168.016, 89.37299999999999)), ('B', '505', 8, 'smoc Outlier', (119.827, 171.848, 86.60199999999999)), ('B', '348', 9, 'Dihedral angle:CA:C', (123.65799999999999, 185.108, 97.005)), ('B', '349', 9, 'Dihedral angle:N:CA\nsmoc Outlier', (125.061, 184.585, 93.48700000000001)), ('B', '398', 9, 'Dihedral angle:CA:C', (129.627, 181.202, 103.557)), ('B', '399', 9, 'Dihedral angle:N:CA', (126.473, 180.93200000000002, 101.41600000000001)), ('B', '214', 10, 'smoc Outlier', (124.65199999999999, 113.68599999999999, 148.48000000000002)), ('B', '215', 10, 'cablam CA Geom Outlier', (123.3, 117.3, 148.4)), ('B', '216', 10, 'cablam Outlier', (126.9, 118.9, 148.5)), ('B', '122', 11, 'smoc Outlier', (133.27499999999998, 107.82499999999999, 127.085)), ('B', '123', 11, 'cablam Outlier', (134.9, 104.8, 128.8)), ('B', '125', 11, 'smoc Outlier', (138.738, 108.98, 127.233)), ('B', '326', 12, 'smoc Outlier', (123.17399999999999, 166.77499999999998, 138.459)), ('B', '531', 12, 'Dihedral angle:CA:C', (118.99000000000001, 168.554, 134.94299999999998)), ('B', '532', 12, 'Dihedral angle:N:CA', (116.43100000000001, 168.995, 137.689)), ('B', '773', 13, 'Dihedral angle:CB:CG:CD:OE1', (171.54, 151.483, 171.517)), ('B', '774', 13, 'smoc Outlier', (169.736, 148.15200000000002, 172.248)), ('B', '777', 13, 'smoc Outlier', (169.52800000000002, 149.90800000000002, 176.999)), ('B', '421', 14, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (136.566, 180.425, 90.425)), ('B', '455', 14, 'smoc Outlier', (133.27599999999998, 180.72899999999998, 84.304)), ('B', '493', 14, 'smoc Outlier', (127.438, 183.009, 83.331)), ('B', '515', 15, 'Bond angle:CA:CB:CG\nsmoc Outlier', (134.964, 177.42600000000002, 111.727)), ('B', '516', 15, 'Dihedral angle:CB:CG:CD:OE1', (138.054, 179.11899999999997, 113.27499999999999)), ('B', '517', 15, 'smoc Outlier', (139.912, 178.834, 116.637)), ('B', '1036', 16, 'cablam Outlier', (163.2, 151.2, 199.1)), ('B', '1048', 16, 'Bond angle:CB:CG:CD2', (156.757, 149.417, 199.01)), ('B', '1049', 16, 'smoc Outlier', (158.85800000000003, 146.89000000000001, 200.976)), ('B', '666', 17, 'cablam Outlier', (134.0, 151.5, 171.3)), ('B', '667', 17, 'cablam Outlier', (134.2, 155.3, 172.1)), ('B', '661', 18, 'Dihedral angle:CB:CG:CD:OE1', (134.089, 147.161, 183.237)), ('B', '697', 18, 'smoc Outlier', (131.43800000000002, 151.656, 180.785)), ('B', '870', 19, 'smoc Outlier', (171.071, 138.454, 181.65)), ('B', '871', 19, 'smoc Outlier', (170.095, 135.60399999999998, 184.035)), ('B', '1077', 20, 'smoc Outlier', (139.969, 160.71099999999998, 217.578)), ('B', '712', 20, 'smoc Outlier', (139.461, 157.929, 212.072)), ('B', '375', 21, 'smoc Outlier', (119.584, 167.38600000000002, 100.94200000000001)), ('B', '437', 21, 'smoc Outlier', (116.99900000000001, 172.07299999999998, 96.67599999999999)), ('B', '589', 22, 'Dihedral angle:CA:C', (130.148, 165.661, 151.96)), ('B', '590', 22, 'Dihedral angle:N:CA', (128.814, 162.17899999999997, 151.255)), ('B', '1122', 23, 'Dihedral angle:CA:C', (153.472, 169.435, 225.289)), ('B', '1123', 23, 'Dihedral angle:N:CA\nsmoc Outlier', (152.85500000000002, 172.701, 223.446)), ('B', '796', 24, 'smoc Outlier', (168.086, 130.494, 206.38000000000002)), ('B', '797', 24, 'cablam Outlier', (166.0, 133.5, 205.2)), ('B', '140', 25, 'Dihedral angle:CA:C', (123.82799999999999, 110.422, 122.45700000000001)), ('B', '141', 25, 'Dihedral angle:N:CA', (121.143, 109.015, 120.085)), ('B', '917', 26, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (158.95200000000003, 140.126, 214.594)), ('B', '918', 26, 'Dihedral angle:CB:CG:CD:OE1', (155.66299999999998, 139.509, 216.47299999999998)), ('B', '332', 27, 'side-chain clash', (122.839, 178.274, 123.612)), ('B', '362', 27, 'side-chain clash', (122.839, 178.274, 123.612)), ('B', '33', 28, 'cablam Outlier', (132.5, 125.9, 151.3)), ('B', '34', 28, 'cablam CA Geom Outlier', (132.9, 124.6, 147.7)), ('B', '31', 29, 'side-chain clash', (168.695, 144.523, 188.153)), ('B', '62', 29, 'side-chain clash', (168.695, 144.523, 188.153)), ('B', '641', 30, 'smoc Outlier', (119.81700000000001, 144.676, 166.796)), ('B', '643', 30, 'Bond angle:CA:CB:CG', (121.793, 151.008, 168.038)), ('B', '570', 31, 'cablam Outlier', (141.1, 175.6, 153.8)), ('B', '571', 31, 'Ramachandran\nsmoc Outlier', (140.03, 175.947, 150.08)), ('B', '744', 32, 'Ramachandran', (169.625, 142.58899999999994, 144.513)), ('B', '745', 32, 'cablam Outlier', (172.7, 141.6, 142.4)), ('B', '310', 33, 'cablam CA Geom Outlier', (139.4, 139.5, 171.0)), ('B', '600', 33, 'Bond angle:N:CA:C', (135.42100000000002, 137.985, 170.996)), ('B', '96', 34, 'smoc Outlier', (129.23999999999998, 109.79400000000001, 140.792)), ('B', '97', 34, 'cablam Outlier\nsmoc Outlier', (129.0, 106.0, 140.4)), ('B', '40', 35, 'Bond angle:CA:CB:CG', (147.602, 129.873, 139.165)), ('B', '41', 35, 'cablam Outlier', (150.3, 127.3, 138.2)), ('B', '356', 36, 'smoc Outlier', (128.447, 186.789, 108.45)), ('B', '357', 36, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (130.894, 186.62800000000001, 111.433)), ('B', '470', 37, 'smoc Outlier', (133.447, 191.796, 85.509)), ('B', '471', 37, 'smoc Outlier', (136.77399999999997, 192.2, 83.566)), ('B', '804', 38, 'Bond angle:OE1:CD:NE2', (160.784, 130.11399999999998, 192.67499999999998)), ('B', '805', 38, 'smoc Outlier', (162.814, 133.314, 191.846)), ('C', '1008', 1, 'smoc Outlier', (151.85500000000002, 160.9, 159.727)), ('C', '1011', 1, 'Bond angle:OE1:CD:NE2', (151.983, 163.17499999999998, 164.24599999999998)), ('C', '1015', 1, 'smoc Outlier', (152.38800000000003, 161.90200000000002, 169.918)), ('C', '1019', 1, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (153.117, 160.598, 175.7)), ('C', '1022', 1, 'smoc Outlier', (151.101, 162.026, 179.877)), ('C', '1026', 1, 'smoc Outlier', (150.45000000000002, 160.10899999999998, 185.539)), ('C', '1029', 1, 'smoc Outlier', (148.906, 161.97299999999998, 189.954)), ('C', '1032', 1, 'Dihedral angle:CA:C', (151.678, 163.996, 194.752)), ('C', '1033', 1, 'Dihedral angle:N:CA', (147.872, 163.67299999999997, 194.561)), ('C', '1034', 1, 'cablam Outlier', (147.8, 160.1, 195.9)), ('C', '881', 1, 'smoc Outlier', (142.254, 162.98000000000002, 198.931)), ('C', '886', 1, 'Planar group:CB:CG:CD1:CD2:NE1:CE2:CE3:CZ2:CZ3:CH2', (147.477, 159.21699999999998, 201.23999999999998)), ('C', '1042', 2, 'smoc Outlier', (158.568, 168.39800000000002, 191.493)), ('C', '1043', 2, 'cablam Outlier', (155.3, 169.8, 192.9)), ('C', '1054', 2, 'Bond angle:OE1:CD:NE2', (141.28, 169.40800000000002, 187.999)), ('C', '1062', 2, 'smoc Outlier', (147.24599999999998, 170.304, 189.475)), ('C', '1064', 2, 'Bond angle:CB:CG:CD2', (149.843, 172.189, 194.21899999999997)), ('C', '1065', 2, 'smoc Outlier', (149.556, 173.316, 197.864)), ('C', '725', 2, 'smoc Outlier', (150.589, 173.39600000000002, 187.07399999999998)), ('C', '819', 2, 'smoc Outlier', (137.129, 172.94299999999998, 185.88400000000001)), ('C', '808', 3, 'Bond angle:CA:C', (128.974, 171.641, 191.071)), ('C', '809', 3, 'Bond angle:N', (125.73, 169.661, 190.184)), ('C', '810', 3, 'Rotamer', (124.225, 172.69, 188.323)), ('C', '812', 3, 'smoc Outlier', (127.101, 172.123, 182.365)), ('C', '813', 3, 'side-chain clash', (131.557, 168.713, 183.165)), ('C', '814', 3, 'Rotamer\nside-chain clash\ncablam Outlier', (128.517, 168.392, 187.696)), ('C', '815', 3, 'side-chain clash', (131.557, 168.713, 183.165)), ('C', '613', 4, 'Bond angle:OE1:CD:NE2', (170.501, 187.676, 161.474)), ('C', '617', 4, 'C-beta\nBond angle:C:CA:CB', (175.759, 196.728, 159.25)), ('C', '618', 4, 'Rotamer', (178.05, 197.278, 156.207)), ('C', '641', 4, 'smoc Outlier', (168.829, 203.803, 164.63899999999998)), ('C', '643', 4, 'Bond angle:CA:CB:CG\nsmoc Outlier', (173.191, 198.73999999999998, 166.09)), ('C', '644', 4, 'Bond angle:OE1:CD:NE2', (175.485, 195.67899999999997, 165.537)), ('C', '649', 4, 'smoc Outlier', (172.56, 193.95700000000002, 162.17)), ('C', '328', 5, 'Rotamer', (185.196, 186.669, 131.336)), ('C', '329', 5, 'Bond angle:CA:CB:CG', (185.971, 184.785, 128.102)), ('C', '362', 5, 'Rotamer\nside-chain clash', (185.298, 182.609, 121.509)), ('C', '524', 5, 'smoc Outlier', (186.489, 177.305, 121.424)), ('C', '525', 5, 'side-chain clash', (185.298, 182.609, 121.509)), ('C', '531', 5, 'Dihedral angle:CA:C', (183.626, 192.959, 130.26)), ('C', '532', 5, 'Dihedral angle:N:CA', (186.21899999999997, 194.503, 132.553)), ('C', '290', 6, 'smoc Outlier', (149.939, 194.965, 151.416)), ('C', '291', 6, 'smoc Outlier', (152.605, 192.348, 152.292)), ('C', '293', 6, 'cablam CA Geom Outlier', (154.7, 197.8, 152.4)), ('C', '297', 6, 'smoc Outlier', (152.89200000000002, 194.254, 157.11599999999999)), ('C', '298', 6, 'Dihedral angle:CB:CG:CD:OE1', (155.224, 191.317, 156.34)), ('C', '58', 6, 'Bond angle:CA:CB:CG', (149.39700000000002, 200.783, 149.309)), ('C', '309', 7, 'smoc Outlier', (151.206, 189.38000000000002, 169.798)), ('C', '310', 7, 'cablam CA Geom Outlier', (154.5, 190.8, 171.2)), ('C', '597', 7, 'smoc Outlier', (160.73, 191.624, 163.11899999999997)), ('C', '599', 7, 'side-chain clash\nbackbone clash\nBond angle:CA:C\nsmoc Outlier', (157.054, 193.77299999999997, 167.59)), ('C', '600', 7, 'Bond angle:N\ncablam Outlier', (155.657, 195.43800000000002, 170.833)), ('C', '601', 7, 'side-chain clash\nbackbone clash', (153.931, 194.23, 168.589)), ('C', '111', 8, 'Bond angle:C', (144.29399999999998, 204.562, 115.44100000000002)), ('C', '112', 8, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (143.09, 202.761, 112.21600000000001)), ('C', '132', 8, 'smoc Outlier', (140.071, 199.88400000000001, 114.005)), ('C', '135', 8, 'Bond angle:CA:CB:CG\nsmoc Outlier', (139.411, 208.77399999999997, 114.979)), ('C', '136', 8, 'cablam Outlier', (141.4, 211.9, 115.9)), ('C', '1069', 9, 'Dihedral angle:CA:C', (158.768, 179.82000000000002, 204.936)), ('C', '1070', 9, 'Dihedral angle:N:CA', (158.202, 183.584, 205.045)), ('C', '1109', 9, 'cablam Outlier', (159.8, 177.3, 212.1)), ('C', '1111', 9, 'smoc Outlier', (159.787, 177.642, 218.228)), ('C', '715', 9, 'smoc Outlier', (161.631, 181.553, 209.591)), ('C', '270', 10, 'smoc Outlier', (148.848, 197.736, 139.131)), ('C', '86', 10, 'cablam Outlier', (148.9, 200.8, 130.3)), ('C', '88', 10, 'cablam Outlier', (150.2, 195.4, 133.4)), ('C', '90', 10, 'Dihedral angle:CA:C', (145.444, 200.471, 135.48800000000003)), ('C', '91', 10, 'Dihedral angle:N:CA', (143.632, 201.795, 138.518)), ('C', '661', 11, 'Dihedral angle:CB:CG:CD:OE1', (165.13299999999998, 191.534, 182.537)), ('C', '694', 11, 'smoc Outlier', (167.73899999999998, 196.811, 173.07)), ('C', '695', 11, 'smoc Outlier', (169.96200000000002, 195.85000000000002, 176.042)), ('C', '697', 11, 'smoc Outlier', (169.502, 191.136, 179.797)), ('C', '403', 12, 'Dihedral angle:CD:NE:CZ:NH1', (171.86200000000002, 157.517, 102.857)), ('C', '406', 12, 'smoc Outlier', (170.29, 155.90200000000002, 108.18199999999999)), ('C', '408', 12, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (168.346, 158.13299999999998, 112.613)), ('C', '508', 12, 'smoc Outlier', (173.004, 163.157, 103.144)), ('C', '122', 13, 'cablam Outlier', (126.5, 207.5, 126.9)), ('C', '123', 13, 'Dihedral angle:CA:C', (124.495, 209.212, 129.748)), ('C', '124', 13, 'Dihedral angle:N:CA\ncablam Outlier', (122.048, 206.218, 129.653)), ('C', '125', 13, 'cablam CA Geom Outlier\nsmoc Outlier', (124.7, 203.4, 130.2)), ('C', '1303', 14, 'Planar group:C2:C7:C8:N2:O7', (196.537, 187.20999999999998, 127.453)), ('C', '581', 14, 'Dihedral angle:CA:C', (194.929, 187.001, 133.0)), ('C', '582', 14, 'Dihedral angle:N:CA', (195.787, 183.778, 134.82000000000002)), ('C', '390', 15, 'smoc Outlier', (179.17299999999997, 178.555, 126.21000000000001)), ('C', '545', 15, 'smoc Outlier', (180.177, 179.89100000000002, 130.20299999999997)), ('C', '547', 15, 'smoc Outlier', (177.38500000000002, 181.41299999999998, 135.187)), ('C', '1098', 16, 'cablam Outlier', (169.1, 185.7, 221.1)), ('C', '1101', 16, 'Bond angle:CB:CG:CD2', (170.187, 182.90200000000002, 226.12800000000001)), ('C', '1311', 16, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2\nBond angle:C2:C1:O5', (164.516, 185.994, 219.55100000000002)), ('C', '782', 17, 'smoc Outlier', (142.88600000000002, 159.759, 185.607)), ('C', '784', 17, 'Bond angle:OE1:CD:NE2', (144.416, 155.65800000000002, 189.19899999999998)), ('C', '870', 17, 'smoc Outlier', (137.003, 162.48200000000003, 183.37)), ('C', '394', 18, 'side-chain clash\nsmoc Outlier', (187.267, 170.678, 123.91)), ('C', '515', 18, 'Dihedral angle:CA:C', (181.972, 169.11399999999998, 122.359)), ('C', '516', 18, 'C-beta\nside-chain clash\nDihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA', (184.634, 168.268, 124.971)), ('C', '734', 19, 'Dihedral angle:CA:C', (142.553, 161.508, 163.87)), ('C', '735', 19, 'Dihedral angle:N:CA', (142.266, 158.80100000000002, 161.225)), ('C', '764', 19, 'smoc Outlier', (146.303, 153.924, 158.678)), ('C', '465', 20, 'smoc Outlier', (186.2, 153.74899999999997, 117.271)), ('C', '466', 20, 'Dihedral angle:CD:NE:CZ:NH1', (187.45200000000003, 154.15800000000002, 113.65299999999999)), ('C', '468', 20, 'smoc Outlier', (189.647, 151.483, 107.777)), ('C', '228', 21, 'Dihedral angle:CA:C', (134.69899999999998, 190.178, 131.946)), ('C', '229', 21, 'Dihedral angle:N:CA', (134.997, 190.686, 128.185)), ('C', '230', 21, 'cablam Outlier', (136.4, 187.8, 125.9)), ('C', '277', 22, 'smoc Outlier', (142.177, 190.436, 152.542)), ('C', '285', 22, 'smoc Outlier', (136.28, 192.672, 151.85800000000003)), ('C', '49', 22, 'Bond angle:CB:CG:CD2', (142.778, 185.265, 152.817)), ('C', '350', 23, 'smoc Outlier', (181.29299999999998, 156.67899999999997, 106.64)), ('C', '353', 23, 'cablam Outlier', (184.6, 159.2, 108.9)), ('C', '400', 23, 'smoc Outlier', (180.751, 161.76399999999998, 106.492)), ('C', '40', 24, 'Bond angle:CA:CB:CG', (137.978, 186.002, 142.466)), ('C', '41', 24, 'cablam Outlier', (134.2, 185.2, 142.2)), ('C', '42', 24, 'smoc Outlier', (134.268, 183.418, 145.546)), ('C', '485', 25, 'smoc Outlier', (184.004, 133.08800000000002, 97.832)), ('C', '486', 25, 'cablam CA Geom Outlier', (181.3, 131.1, 99.6)), ('C', '487', 25, 'C-beta', (180.56, 131.65899999999993, 104.14200000000002)), ('C', '666', 26, 'cablam Outlier', (167.0, 188.5, 170.4)), ('C', '667', 26, 'cablam Outlier', (170.0, 186.2, 171.0)), ('C', '495', 27, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (175.23299999999998, 153.187, 98.16799999999999)), ('C', '496', 27, 'cablam Outlier', (176.0, 154.0, 94.5)), ('C', '427', 28, 'smoc Outlier', (175.842, 156.911, 125.51700000000001)), ('C', '429', 28, 'smoc Outlier', (177.23499999999999, 162.137, 123.892)), ('C', '1074', 29, 'smoc Outlier', (169.097, 186.045, 212.10999999999999)), ('C', '1310', 29, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5', (165.165, 190.333, 210.33800000000002)), ('C', '1092', 30, 'Dihedral angle:CB:CG:CD:OE1', (165.76, 167.236, 216.212)), ('C', '1094', 30, 'smoc Outlier', (169.196, 173.24899999999997, 215.925)), ('C', '1082', 31, 'Dihedral angle:CA:C', (179.13299999999998, 171.83800000000002, 226.58700000000002)), ('C', '1083', 31, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA', (177.753, 170.819, 229.97299999999998)), ('C', '707', 32, 'Dihedral angle:CA:C', (176.85500000000002, 183.914, 205.702)), ('C', '708', 32, 'Dihedral angle:N:CA', (179.177, 183.52700000000002, 208.69)), ('C', '985', 33, 'Dihedral angle:CA:C', (143.933, 161.21099999999998, 126.811)), ('C', '986', 33, 'Dihedral angle:N:CA', (144.60399999999998, 158.084, 128.964)), ('C', '796', 34, 'Bond angle:CA:CB:CG\nsmoc Outlier', (133.43, 170.281, 208.117)), ('C', '797', 34, 'cablam CA Geom Outlier', (137.0, 170.1, 206.6)), ('C', '773', 35, 'Dihedral angle:CB:CG:CD:OE1', (147.687, 155.76, 172.771)), ('C', '774', 35, 'smoc Outlier', (145.431, 158.806, 173.416)), ('C', '335', 36, 'backbone clash\nPlanar group:CA:C:O', (186.534, 182.895, 113.71400000000001)), ('C', '336', 36, 'C-beta\nbackbone clash\nPlanar group:N\nBond angle:CA:CB:SG\nBond angle:C:CA:CB', (186.112, 179.148, 113.42)), ('C', '96', 37, 'cablam CA Geom Outlier', (132.8, 213.1, 138.8)), ('C', '97', 37, 'smoc Outlier', (128.964, 213.494, 138.424)), ('C', '559', 38, 'Bond angle:CA:CB:CG\nsmoc Outlier', (196.212, 175.74099999999999, 141.137)), ('C', '563', 38, 'Bond angle:OE1:CD:NE2', (193.26999999999998, 173.29299999999998, 136.404)), ('C', '220', 39, 'cablam CA Geom Outlier\nsmoc Outlier', (139.0, 201.6, 152.4)), ('C', '221', 39, 'cablam Outlier', (136.2, 200.1, 150.2)), ('C', '803', 40, 'cablam Outlier', (133.7, 174.7, 197.0)), ('C', '804', 40, 'Rotamer\nside-chain clash', (136.61, 176.235, 196.194))]
data['rama'] = [('A', ' 112 ', 'SER', 0.04006426664004439, (200.255, 145.266, 108.513)), ('A', ' 360 ', 'ASN', 0.04490570420034639, (154.677, 124.987, 120.58200000000001)), ('B', ' 571 ', 'ASP', 0.03440350485281918, (140.03, 175.947, 150.08)), ('B', ' 744 ', 'GLY', 0.010712134041790696, (169.625, 142.58899999999994, 144.513)), ('C', ' 112 ', 'SER', 0.000825773328210714, (143.09, 202.761, 112.21600000000001))]
data['cablam'] = [('A', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \nTT---', (202.6, 154.0, 142.7)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (191.1, 168.9, 136.1)), ('A', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (197.8, 146.5, 127.0)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (192.4, 148.1, 130.1)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (195.6, 145.3, 117.7)), ('A', '112', 'SER', ' alpha helix', 'bend\nSSSSS', (200.3, 145.3, 108.5)), ('A', '124', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (213.1, 166.8, 123.2)), ('A', '133', 'PHE', ' beta sheet', ' \nES---', (202.5, 150.6, 109.9)), ('A', '331', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (162.6, 120.7, 124.0)), ('A', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (141.2, 141.7, 111.3)), ('A', '360', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SEE', (154.7, 125.0, 120.6)), ('A', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--TT', (116.1, 153.2, 111.4)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (174.8, 122.2, 144.3)), ('A', '614', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (175.6, 134.8, 160.4)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (181.1, 141.2, 168.9)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (177.8, 139.7, 170.0)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (172.9, 161.1, 192.3)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (175.9, 172.3, 175.3)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (178.4, 153.6, 211.2)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (156.7, 145.1, 223.0)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (203.9, 159.0, 147.4)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (193.5, 146.2, 149.1)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (188.9, 151.5, 168.1)), ('A', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (117.8, 160.6, 107.4)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (171.5, 133.5, 140.0)), ('A', '797', 'PHE', 'check CA trace', 'bend\n--STT', (183.2, 176.9, 205.0)), ('A', '856', 'ASN', 'check CA trace', 'turn\n-TTTE', (174.4, 177.0, 150.5)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (132.5, 125.9, 151.3)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (150.3, 127.3, 138.2)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (130.9, 134.6, 134.0)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (129.0, 106.0, 140.4)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (125.5, 131.6, 122.5)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (134.9, 104.8, 128.8)), ('B', '131', 'CYS', ' beta sheet', ' \nE----', (132.1, 122.8, 115.2)), ('B', '167', 'THR', 'check CA trace,carbonyls, peptide', ' \n----E', (138.8, 124.6, 114.3)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (138.9, 136.0, 127.9)), ('B', '216', 'LEU', ' beta sheet', ' \n-S--S', (126.9, 118.9, 148.5)), ('B', '346', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (116.8, 186.2, 98.8)), ('B', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (139.3, 197.4, 75.8)), ('B', '496', 'GLY', ' beta sheet', ' \nE--B-', (118.7, 180.5, 84.1)), ('B', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (141.1, 175.6, 153.8)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (134.0, 151.5, 171.3)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (134.2, 155.3, 172.1)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-H', (172.7, 141.6, 142.4)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (166.0, 133.5, 205.2)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (163.2, 151.2, 199.1)), ('B', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (146.2, 167.4, 231.1)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (154.5, 159.8, 216.8)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (148.7, 149.4, 212.3)), ('B', '34', 'ARG', 'check CA trace', ' \n-S---', (132.9, 124.6, 147.7)), ('B', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (122.5, 125.3, 117.9)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (123.9, 126.2, 114.4)), ('B', '199', 'GLY', 'check CA trace', 'bend\n-SS-E', (142.3, 134.2, 128.2)), ('B', '200', 'TYR', 'check CA trace', ' \nSS-EE', (140.8, 130.9, 126.8)), ('B', '215', 'GLY', 'check CA trace', 'bend\n--S--', (123.3, 117.3, 148.4)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (130.8, 136.5, 152.9)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (139.4, 139.5, 171.0)), ('B', '484', 'LYS', 'check CA trace', ' \nTS-BT', (132.6, 192.0, 74.7)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (129.9, 165.0, 144.9)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (134.2, 185.2, 142.2)), ('C', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (148.9, 200.8, 130.3)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (150.2, 195.4, 133.4)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (148.5, 199.9, 120.8)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (143.1, 202.8, 112.2)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (126.5, 207.5, 126.9)), ('C', '124', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SSSE', (122.0, 206.2, 129.7)), ('C', '136', 'CYS', 'check CA trace,carbonyls, peptide', ' \n---SS', (141.4, 211.9, 115.9)), ('C', '221', 'SER', 'check CA trace,carbonyls, peptide', ' \nS---B', (136.2, 200.1, 150.2)), ('C', '230', 'PRO', ' beta sheet', ' \nEE---', (136.4, 187.8, 125.9)), ('C', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (184.6, 159.2, 108.9)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (176.0, 154.0, 94.5)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (155.7, 195.4, 170.8)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (167.0, 188.5, 170.4)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (170.0, 186.2, 171.0)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nGTTHH', (151.3, 148.7, 151.4)), ('C', '803', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (133.7, 174.7, 197.0)), ('C', '814', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSS-B', (129.6, 167.3, 186.8)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (147.8, 160.1, 195.9)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (155.3, 169.8, 192.9)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (143.2, 167.6, 176.4)), ('C', '1098', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (169.1, 185.7, 221.1)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (159.8, 177.3, 212.1)), ('C', '96', 'GLU', 'check CA trace', ' \nEE-SS', (132.8, 213.1, 138.8)), ('C', '125', 'ASN', 'check CA trace', 'bend\nSSSEE', (124.7, 203.4, 130.2)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (139.0, 201.6, 152.4)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (154.7, 197.8, 152.4)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (154.5, 190.8, 171.2)), ('C', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (181.3, 131.1, 99.6)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (176.6, 185.0, 141.6)), ('C', '797', 'PHE', 'check CA trace', 'bend\n--STT', (137.0, 170.1, 206.6))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23596/7lyn/Model_validation_1/validation_cootdata/molprobity_probe7lyn_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('B', ' 318 ', 'GLN', 0.0032484399999999996, (231.9120000000001, 200.68199999999993, 247.103))]
data['omega'] = []
data['rota'] = [('A', '  29 ', 'THR', 0.12501894595254964, (209.39000000000013, 282.773, 242.8)), ('A', '  44 ', 'ARG', 0.09758371326861702, (238.51700000000014, 267.59, 240.96999999999997)), ('A', ' 537 ', 'ASN', 0.20068292953857406, (200.25900000000016, 244.39699999999996, 250.16599999999997)), ('A', ' 612 ', 'VAL', 0.24561949879610498, (202.05900000000005, 248.351, 230.56099999999998)), ('A', ' 716 ', 'THR', 0.033842964085812575, (228.80400000000003, 253.557, 188.031)), ('A', ' 875 ', 'LEU', 0.003071712671348691, (248.43400000000008, 248.50999999999996, 197.644)), ('A', ' 926 ', 'SER', 0.10109001395015953, (235.3160000000001, 261.024, 192.31400000000002)), ('B', '  29 ', 'THR', 0.14917886286840112, (199.06700000000006, 189.119, 245.59899999999996)), ('B', '  44 ', 'ARG', 0.05361568146264013, (198.53500000000003, 221.85599999999994, 241.637)), ('B', ' 317 ', 'VAL', 0.2995425812078384, (230.63100000000009, 199.49399999999997, 243.65499999999997)), ('B', ' 318 ', 'GLN', 0.00247190926192549, (231.9120000000001, 200.68199999999993, 247.103)), ('B', ' 329 ', 'ILE', 0.0, (256.348, 199.129, 266.938)), ('B', ' 340 ', 'ASN', 0.23877980015050282, (255.65900000000008, 196.98000000000002, 288.294)), ('B', ' 612 ', 'VAL', 0.15397229376110183, (233.3530000000001, 199.43999999999997, 233.843)), ('B', ' 788 ', 'THR', 0.03878931248795885, (205.1850000000001, 239.44399999999996, 192.66499999999996)), ('B', ' 875 ', 'LEU', 0.0007014994914142146, (211.33200000000005, 235.62799999999993, 197.135)), ('B', '1069 ', 'GLU', 0.033478725563433384, (224.801, 207.442, 184.623)), ('C', '  29 ', 'THR', 0.13151807164380133, (285.47, 229.154, 248.852)), ('C', '  44 ', 'ARG', 0.03211613632058673, (259.222, 210.316, 242.22399999999996)), ('C', '  65 ', 'PHE', 0.27839663282399224, (288.503, 225.91899999999998, 258.283)), ('C', ' 307 ', 'LYS', 0.056123478301769794, (264.547, 230.21599999999995, 222.066)), ('C', ' 612 ', 'VAL', 0.0992311685980975, (260.868, 251.48599999999996, 232.001)), ('C', ' 716 ', 'THR', 0.007920245773635808, (256.019, 223.95299999999995, 190.24899999999997)), ('C', ' 875 ', 'LEU', 0.0004391206548327706, (240.888, 209.924, 199.26)), ('H', '  12 ', 'VAL', 0.03780638799071312, (208.3760000000001, 313.44, 303.246)), ('E', '  12 ', 'VAL', 0.03780638799071312, (172.07200000000003, 177.724, 306.813)), ('J', '  12 ', 'VAL', 0.03780638799071312, (302.02, 215.61200000000002, 313.236))]
data['cbeta'] = []
data['probe'] = [(' A 378  GLY  HA2', ' B 970  ILE HG21', -0.819, (216.907, 232.268, 261.269)), (' B 977  ILE HG23', ' B 981  LEU HD12', -0.785, (216.59, 236.354, 258.656)), (' B 567  ALA  HB1', ' C 960  VAL HG11', -0.716, (245.292, 214.996, 240.203)), (' C1113  THR HG22', ' C1135  TYR  HB3', -0.692, (246.572, 233.421, 161.995)), (' C 143  VAL HG12', ' C 154  GLU  HB3', -0.685, (290.037, 207.88, 269.664)), (' B 143  VAL HG12', ' B 154  GLU  HB3', -0.682, (176.406, 196.031, 265.021)), (' A 143  VAL HG12', ' A 154  GLU  HB3', -0.68, (224.832, 299.563, 262.602)), (' C 663  ILE HD11', ' C 669  ALA  HB2', -0.672, (265.576, 241.677, 221.244)), (' B 970  ILE HD12', ' B 980  ARG  NH2', -0.669, (214.407, 232.493, 259.071)), (' C1111  ILE  O  ', ' C1116  ASN  ND2', -0.668, (246.905, 233.343, 166.555)), (' C 653  VAL HG12', ' C 655  ASN  H  ', -0.664, (273.317, 246.036, 212.225)), (' C1025  LYS  NZ ', ' C1039  PHE  O  ', -0.663, (241.714, 227.23, 203.824)), (' B1088  ARG  NH1', ' B1117  THR  O  ', -0.662, (238.187, 223.508, 167.753)), (' A 980  ARG  O  ', ' C 380  SER  N  ', -0.659, (243.338, 248.513, 265.109)), (' A 325  ARG  NH2', ' A 528  THR  O  ', -0.653, (189.739, 241.072, 256.091)), (' A1025  LYS  NZ ', ' A1039  PHE  O  ', -0.651, (233.879, 240.942, 202.765)), (' A 947  ASP  OD2', ' A 951  GLN  NE2', -0.643, (231.654, 246.903, 221.195)), (' B 560  GLN  O  ', ' B 574  ARG  NH1', -0.638, (260.44, 202.479, 249.891)), (' A 378  GLY  HA2', ' B 970  ILE HD13', -0.633, (216.347, 232.525, 260.824)), (' B 900  ALA  HB1', ' B 910  GLN  HB2', -0.632, (219.539, 228.215, 178.93)), (' A 653  VAL HG12', ' A 655  ASN  H  ', -0.621, (202.042, 259.82, 209.602)), (' B1025  LYS  NZ ', ' B1039  PHE  O  ', -0.621, (225.585, 227.245, 203.169)), (' B1111  ILE  O  ', ' B1116  ASN  ND2', -0.618, (231.217, 218.021, 167.074)), (' A  53  ASP  OD1', ' A  54  LEU  N  ', -0.616, (222.887, 266.334, 250.164)), (' A 143  VAL HG12', ' A 154  GLU  CB ', -0.613, (224.884, 299.995, 263.359)), (' B 143  VAL HG12', ' B 154  GLU  CB ', -0.613, (176.161, 195.759, 265.747)), (' C 143  VAL HG12', ' C 154  GLU  CB ', -0.611, (289.979, 207.297, 270.595)), (' B 563  GLY  O  ', ' B 571  ASP  N  ', -0.605, (251.424, 206.936, 244.111)), (' B 700  ASN  ND2', ' C 784  GLN  OE1', -0.604, (229.171, 204.274, 195.168)), (' A 728  MET  N  ', ' A 771  GLN  OE1', -0.604, (243.114, 243.443, 219.512)), (' A 383  LYS  HB3', ' B 979  SER  O  ', -0.601, (209.101, 239.484, 262.716)), (' B 293  LEU HD11', ' B 599  THR HG22', -0.597, (210.023, 204.376, 228.448)), (' B 663  ILE HD11', ' B 669  ALA  HB2', -0.594, (223.155, 199.585, 221.688)), (' C  96  GLU  N  ', ' C  96  GLU  OE1', -0.592, (287.295, 214.526, 255.056)), (' C 411  GLN  O  ', ' C 421  LYS  NZ ', -0.592, (222.282, 247.167, 269.875)), (' H  61  ALA  HA ', ' L  96  HIS  CE1', -0.589, (219.077, 304.071, 285.189)), (' E  61  ALA  HA ', ' F  96  HIS  CE1', -0.588, (174.979, 190.736, 287.651)), (' J  61  ALA  HA ', ' K  96  HIS  CE1', -0.586, (292.109, 210.024, 292.83)), (' A 979  SER  O  ', ' C 383  LYS  HB3', -0.586, (247.712, 251.264, 263.248)), (' A 143  VAL HG13', ' A 243  ILE HD11', -0.582, (221.984, 299.199, 262.019)), (' A 344  PHE  HB2', ' A 398  VAL HG23', -0.582, (212.863, 221.893, 284.952)), (' B1045  HIS  HA ', ' B1063  THR HG22', -0.582, (222.336, 222.989, 194.43)), (' B 451  ARG  NH2', ' B 466  SER  O  ', -0.582, (260.688, 218.398, 302.272)), (' B  96  GLU  N  ', ' B  96  GLU  OE1', -0.581, (185.312, 195.716, 251.324)), (' B  52  GLN  O  ', ' B  53  ASP  OD1', -0.579, (208.651, 212.866, 250.36)), (' A 716  THR HG22', ' A1067  ALA  HB2', -0.578, (225.68, 253.576, 186.968)), (' B 143  VAL HG13', ' B 243  ILE HD11', -0.573, (178.796, 194.292, 264.545)), (' C 143  VAL HG13', ' C 243  ILE HD11', -0.572, (290.079, 210.351, 269.204)), (' A 384  LEU  HA ', ' A 387  LEU HD12', -0.568, (206.873, 236.204, 265.045)), (' E  34  MET  HB3', ' E  79  LEU HD22', -0.568, (172.96, 175.475, 284.51)), (' B 666  GLY  HA2', ' C 866  MET  HE1', -0.566, (231.379, 202.232, 215.668)), (' C 961  LYS  O  ', ' C 964  SER  OG ', -0.564, (246.074, 221.553, 245.147)), (' C 293  LEU HD11', ' C 599  THR HG22', -0.563, (269.049, 228.476, 229.071)), (' J  34  MET  HB3', ' J  79  LEU HD22', -0.56, (305.882, 216.775, 291.229)), (' H  34  MET  HB3', ' H  79  LEU HD22', -0.559, (207.349, 313.248, 280.784)), (' A  96  GLU  N  ', ' A  96  GLU  OE1', -0.559, (220.813, 291.846, 248.539)), (' B 982  ASP  O  ', ' B 986  ALA  N  ', -0.558, (217.998, 240.639, 261.483)), (' C1069  GLU  N  ', ' C1069  GLU  OE1', -0.558, (259.221, 233.811, 186.054)), (' A 977  ILE HG23', ' A 981  LEU HD12', -0.553, (241.374, 245.463, 259.589)), (' L  22  CYS  HB3', ' L  70  VAL HG13', -0.553, (232.719, 315.393, 274.843)), (' B 317  VAL  O  ', ' B 318  GLN  HB2', -0.553, (229.955, 199.956, 247.042)), (' A 336  GLY  O  ', ' A 340  ASN  HB2', -0.552, (203.194, 228.613, 282.943)), (' C 735  CYS  SG ', ' C 736  THR  N  ', -0.549, (228.757, 216.244, 241.668)), (' F  22  CYS  HB3', ' F  70  VAL HG13', -0.547, (159.229, 196.08, 277.471)), (' A1111  ILE  O  ', ' A1116  ASN  ND2', -0.546, (225.971, 238.756, 166.003)), (' A 663  ILE HD11', ' A 669  ALA  HB2', -0.546, (209.096, 256.429, 219.397)), (' A 641  GLN  NE2', ' A 645  GLY  O  ', -0.544, (201.25, 250.397, 224.908)), (' C 560  GLN  O  ', ' C 574  ARG  NH2', -0.543, (244.359, 273.512, 248.838)), (' B1113  THR HG22', ' B1135  TYR  HB3', -0.541, (232.645, 217.192, 162.154)), (' A 614  CYS  N  ', ' A 641  GLN  OE1', -0.54, (198.07, 251.574, 228.008)), (' K  22  CYS  HB3', ' K  70  VAL HG13', -0.538, (297.743, 193.353, 283.477)), (' A1123  CYS  SG ', ' A1129  ILE HD13', -0.537, (212.688, 227.801, 167.731)), (' A 247  THR  O  ', ' H 102  SER  HB2', -0.537, (213.593, 309.073, 263.069)), (' A 148  ASN  OD1', ' L  50  ASN  HB2', -0.535, (227.655, 315.801, 265.654)), (' B 247  THR  O  ', ' E 102  SER  HB2', -0.534, (173.322, 181.708, 265.94)), (' L  27  ILE HD13', ' L  70  VAL HG11', -0.533, (232.351, 312.784, 274.366)), (' F  27  ILE HD13', ' F  70  VAL HG11', -0.532, (161.199, 196.706, 276.22)), (' C  52  GLN  O  ', ' C  53  ASP  OD1', -0.528, (259.668, 224.492, 250.55)), (' C 286  VAL HG23', ' C 303  PHE  CE2', -0.528, (268.015, 221.854, 236.362)), (' A 668  CYS  SG ', ' A 694  MET  HE2', -0.527, (210.448, 251.03, 213.068)), (' C 575  ASP  OD2', ' C 578  THR  OG1', -0.525, (256.049, 271.937, 252.541)), (' K  27  ILE HD13', ' K  70  VAL HG11', -0.525, (295.712, 194.859, 282.68)), (' C 733  VAL HG11', ' C1001  LEU HD21', -0.521, (234.384, 218.693, 238.039)), (' C 247  THR  O  ', ' J 102  SER  HB2', -0.52, (303.128, 212.648, 272.322)), (' C 415  ILE HD13', ' C 419  ASN HD22', -0.519, (220.487, 252.322, 279.897)), (' C 390  THR  O  ', ' C 520  THR  OG1', -0.519, (240.598, 267.002, 263.761)), (' A  99  ASN  OD1', ' A 190  ARG  NH2', -0.518, (226.991, 293.755, 251.379)), (' H  61  ALA  HA ', ' L  96  HIS  HE1', -0.518, (219.814, 304.058, 285.563)), (' B  99  ASN  OD1', ' B 190  ARG  NH2', -0.516, (181.156, 199.827, 253.383)), (' C 736  THR  O  ', ' C 740  CYS  N  ', -0.516, (232.512, 215.591, 246.595)), (' C 816  GLU  OE2', ' C1052  SER  N  ', -0.514, (244.131, 211.141, 207.972)), (' B 653  VAL HG12', ' B 655  ASN  H  ', -0.512, (224.074, 191.045, 213.413)), (' B 311  GLN  NE2', ' B 313  SER  O  ', -0.511, (225.135, 208.166, 235.484)), (' B 524  PRO  O  ', ' B 525  LYS  C  ', -0.51, (246.491, 199.86, 266.062)), (' A 228  ASP  N  ', ' A 228  ASP  OD1', -0.506, (232.1, 273.477, 258.755)), (' A 124  THR  O  ', ' A 175  PHE  N  ', -0.505, (235.36, 293.085, 262.224)), (' A 380  SER  N  ', ' B 980  ARG  O  ', -0.504, (213.53, 236.894, 264.632)), (' A 414  ASN  N  ', ' A 414  ASN  OD1', -0.504, (227.663, 217.416, 278.11)), (' C 527  SER  OG ', ' C 577  GLN  NE2', -0.504, (256.251, 267.761, 259.624)), (' E  61  ALA  HA ', ' F  96  HIS  HE1', -0.504, (174.899, 191.005, 288.353)), (' J  61  ALA  HA ', ' K  96  HIS  HE1', -0.501, (291.812, 209.81, 293.511)), (' C 898  GLN  O  ', ' C 902  ARG  HG2', -0.5, (241.925, 217.771, 187.231)), (' C 124  THR  O  ', ' C 175  PHE  N  ', -0.498, (279.387, 201.337, 267.173)), (' A 378  GLY  CA ', ' B 970  ILE HG21', -0.497, (216.932, 231.472, 261.845)), (' A1069  GLU  N  ', ' A1069  GLU  OE1', -0.497, (218.604, 250.796, 184.088)), (' C 216  LEU HD12', ' C 217  PRO  HD2', -0.496, (283.537, 219.873, 248.983)), (' C 187  LYS  NZ ', ' C 213  VAL  O  ', -0.495, (293.439, 217.391, 249.933)), (' A 293  LEU HD11', ' A 599  THR HG22', -0.495, (218.648, 265.716, 226.516)), (' A 666  GLY  HA2', ' A 694  MET  HE3', -0.494, (208.953, 248.825, 212.957)), (' C 557  LEU  O  ', ' C 574  ARG  NH2', -0.494, (243.817, 274.763, 248.51)), (' F  46  VAL  HA ', ' F  57  ILE HG13', -0.493, (155.207, 180.936, 275.478)), (' B 124  THR  O  ', ' B 175  PHE  N  ', -0.493, (177.463, 208.262, 263.586)), (' A 922  ASN  O  ', ' A 926  SER  OG ', -0.492, (235.212, 260.999, 189.46)), (' B 216  LEU HD12', ' B 217  PRO  HD2', -0.491, (192.326, 195.749, 245.675)), (' B  29  THR HG22', ' B  30  ASN  H  ', -0.491, (198.092, 190.601, 243.503)), (' K  46  VAL  HA ', ' K  57  ILE HG13', -0.488, (312.615, 198.751, 283.812)), (' C 347  VAL HG22', ' C 419  ASN  HB3', -0.488, (222.61, 254.966, 278.592)), (' B 666  GLY  CA ', ' C 866  MET  HE1', -0.488, (231.843, 201.661, 215.771)), (' B 593  SER  OG ', ' B 610  GLN  OE1', -0.484, (225.852, 206.877, 229.62)), (' B 567  ALA  CB ', ' C 960  VAL HG11', -0.483, (245.834, 214.872, 240.399)), (' B 595  ILE HG23', ' B 661  ILE HG21', -0.482, (220.114, 203.822, 222.703)), (' A 733  VAL HG11', ' A1001  LEU HD21', -0.482, (243.713, 242.271, 237.052)), (' C 613  ASN  OD1', ' C 614  CYS  N  ', -0.482, (265.336, 255.097, 230.562)), (' A 216  LEU HD12', ' A 217  PRO  HD2', -0.481, (218.599, 285.488, 243.294)), (' B 723  ILE HD13', ' B 942  LEU HD13', -0.481, (213.722, 224.062, 210.962)), (' C 726  VAL HG23', ' C1056  GLY  HA2', -0.481, (241.177, 217.759, 213.74)), (' B 293  LEU HD11', ' B 599  THR  CG2', -0.48, (209.85, 204.841, 228.124)), (' B 286  VAL HG23', ' B 303  PHE  CE2', -0.479, (204.434, 209.011, 235.442)), (' A 376  CYS  HB3', ' A 379  VAL HG13', -0.479, (213.911, 233.53, 267.19)), (' C 388  CYS  HB3', ' C 519  ALA  HB1', -0.476, (245.363, 263.134, 260.946)), (' A 711  ILE HD12', ' A1093  VAL HG11', -0.475, (218.929, 243.484, 176.36)), (' L  46  VAL  HA ', ' L  57  ILE HG13', -0.475, (221.117, 325.99, 272.474)), (' A 342  THR  O  ', ' A 506  ARG  NH2', -0.475, (209.102, 223.98, 289.291)), (' C 100  ILE  HA ', ' C 243  ILE HG22', -0.475, (289.646, 213.561, 263.986)), (' B 148  ASN  OD1', ' F  50  ASN  HB2', -0.473, (160.906, 191.091, 268.163)), (' A 898  GLN  O  ', ' A 902  ARG  HG2', -0.472, (241.016, 244.341, 186.483)), (' C 228  ASP  N  ', ' C 228  ASP  OD1', -0.471, (264.2, 213.145, 261.423)), (' B 562  PHE  O  ', ' C  43  PHE  N  ', -0.47, (257.641, 208.284, 246.552)), (' B1128  GLY  HA2', ' B1307  NAG  H81', -0.47, (245.876, 205.783, 176.769)), (' C 148  ASN  OD1', ' K  50  ASN  HB2', -0.469, (301.714, 197.518, 275.446)), (' A1073  THR  O  ', ' A1094  SER  N  ', -0.467, (214.285, 242.113, 172.264)), (' C 721  THR HG23', ' C1058  VAL HG13', -0.467, (248.842, 218.295, 207.182)), (' A 187  LYS  NZ ', ' A 213  VAL  O  ', -0.466, (216.367, 295.717, 242.716)), (' C 900  ALA  HB1', ' C 910  GLN  HB2', -0.466, (243.252, 218.481, 180.277)), (' B 802  ILE HD12', ' B 875  LEU HD21', -0.466, (209.816, 230.343, 197.148)), (' A 823  VAL HG23', ' A 942  LEU HD12', -0.464, (239.114, 255.708, 213.172)), (' B 187  LYS  NZ ', ' B 213  VAL  O  ', -0.464, (184.906, 188.946, 245.306)), (' H  99  SER  HB3', ' H 113  LEU HD23', -0.463, (214.7, 314.919, 275.51)), (' A 578  THR  O  ', ' A 580  GLU  N  ', -0.463, (186.746, 232.29, 250.955)), (' A 337  GLU  OE2', ' A 353  LYS  NZ ', -0.463, (199.668, 222.331, 277.506)), (' A  29  THR HG22', ' A  30  ASN  H  ', -0.462, (211.246, 282.457, 241.05)), (' C 578  THR  O  ', ' C 580  GLU  N  ', -0.461, (252.888, 273.582, 250.963)), (' B 976  ASP  O  ', ' B 980  ARG  HG3', -0.461, (210.445, 235.493, 259.139)), (' J  99  SER  HB3', ' J 113  LEU HD23', -0.461, (305.175, 209.387, 285.568)), (' A 388  CYS  HB3', ' A 519  ALA  HB1', -0.46, (200.18, 230.955, 260.557)), (' B 143  VAL  HA ', ' B 154  GLU  HA ', -0.459, (175.581, 194.322, 266.73)), (' A 712  PRO  HA ', ' A1069  GLU  HA ', -0.458, (220.059, 249.418, 182.021)), (' E  99  SER  HB3', ' E 113  LEU HD23', -0.456, (168.307, 180.693, 278.392)), (' A1122  ASN  ND2', ' A1124  ASP  OD2', -0.454, (210.127, 220.011, 165.483)), (' C  29  THR HG22', ' C  30  ASN  H  ', -0.454, (285.13, 227.606, 246.905)), (' C1078  ILE HD12', ' C1112  ILE HD13', -0.453, (248.251, 240.737, 168.275)), (' A 390  THR  O  ', ' A 520  THR  OG1', -0.453, (199.656, 225.004, 263.438)), (' A 877  GLY  O  ', ' A 881  SER  OG ', -0.453, (251.109, 243.671, 191.963)), (' A 733  VAL  O  ', ' A 761  ASN  ND2', -0.452, (248.081, 239.677, 235.938)), (' B1008  GLN  OE1', ' B1011  ARG  NH1', -0.452, (221.146, 231.614, 228.006)), (' B 454  ARG  NH1', ' B 456  SER  OG ', -0.451, (254.122, 225.853, 299.711)), (' C 373  THR  HB ', ' C 432  ALA  HB3', -0.45, (235.118, 248.035, 279.674)), (' A 666  GLY  CA ', ' B 866  MET  HE1', -0.45, (207.489, 248.02, 212.452)), (' B 329  ILE HG21', ' B 332  LEU  CD2', -0.45, (255.461, 198.438, 270.919)), (' A 666  GLY  HA2', ' B 866  MET  HE1', -0.45, (207.699, 248.198, 212.843)), (' A 100  ILE  HA ', ' A 243  ILE HG22', -0.449, (220.488, 295.855, 256.727)), (' C1045  HIS  HA ', ' C1063  THR HG22', -0.449, (245.953, 224.91, 195.205)), (' A 575  ASP  HB3', ' A 578  THR  O  ', -0.449, (188.057, 233.709, 251.669)), (' B 733  VAL HG11', ' B1001  LEU HD21', -0.448, (218.877, 238.251, 237.219)), (' C 109  THR  OG1', ' C 111  ASP  OD1', -0.448, (273.664, 229.406, 277.21)), (' B1127  ILE HD12', ' C 917  GLN  OE1', -0.448, (250.722, 210.891, 180.626)), (' B 721  THR HG23', ' B1058  VAL HG13', -0.447, (214.268, 224.527, 205.713)), (' A 875  LEU HD11', ' A1049  PHE  HB3', -0.447, (244.012, 250.671, 198.685)), (' B 398  VAL HG22', ' B 506  ARG  HG2', -0.447, (252.622, 201.821, 295.851)), (' C 193  VAL HG23', ' C 223  LEU HD22', -0.446, (273.024, 218.892, 252.852)), (' C  53  ASP  HB2', ' C  55  PHE  CE2', -0.445, (263.549, 223.65, 249.204)), (' F  45  LEU HD21', ' F  48  TYR  HB3', -0.444, (161.739, 182.345, 274.578)), (' A 913  LEU  C  ', ' A 913  LEU HD13', -0.443, (238.538, 250.129, 179.582)), (' C 143  VAL  HA ', ' C 154  GLU  HA ', -0.443, (291.455, 207.612, 271.811)), (' C  31  SER  OG ', ' C  60  SER  N  ', -0.442, (277.414, 228.777, 246.455)), (' A 574  ARG  HE ', ' A 579  LEU  HB3', -0.442, (187.548, 227.709, 251.417)), (' K  45  LEU HD21', ' K  48  TYR  HB3', -0.442, (307.908, 203.159, 281.983)), (' A 143  VAL  HA ', ' A 154  GLU  HA ', -0.441, (223.392, 301.627, 264.239)), (' B1104  ARG  CZ ', ' C 901  TYR  CE1', -0.439, (237.346, 218.092, 181.46)), (' B 422  LEU HD21', ' B 509  VAL HG11', -0.438, (248.004, 213.415, 288.903)), (' B 700  ASN  O  ', ' C 786  TYR  HA ', -0.438, (233.981, 203.019, 197.499)), (' B 228  ASP  N  ', ' B 228  ASP  OD1', -0.437, (196.076, 214.655, 260.245)), (' A1104  ARG  HD2', ' B 901  TYR  CZ ', -0.437, (222.145, 236.179, 180.357)), (' B 347  VAL HG22', ' B 419  ASN  HB3', -0.435, (252.486, 212.789, 298.698)), (' C 414  ASN  N  ', ' C 414  ASN  OD1', -0.434, (219.059, 247.454, 278.554)), (' C 718  SER  OG ', ' C1063  THR  OG1', -0.433, (251.01, 224.926, 195.875)), (' C1004  TYR  CE2', ' C1008  GLN  HG3', -0.432, (236.288, 221.274, 232.067)), (' L  53  ARG  NH2', ' L  59  GLU  HG2', -0.431, (224.146, 330.263, 264.61)), (' C 338  VAL HG11', ' C 394  ALA  HB1', -0.431, (236.78, 261.141, 276.745)), (' B 100  ILE  HA ', ' B 243  ILE HG22', -0.43, (182.126, 193.186, 259.478)), (' A 808  LYS  NZ ', ' A 817  ASP  OD2', -0.43, (249.318, 262.077, 206.387)), (' L  45  LEU HD21', ' L  48  TYR  HB3', -0.43, (219.76, 319.4, 271.221)), (' C1138  LEU HD11', ' C1142  LEU HD13', -0.429, (237.664, 229.983, 152.304)), (' H  34  MET  HG2', ' H  72  ARG  NH2', -0.428, (206.425, 311.252, 276.728)), (' E  34  MET  HG2', ' E  72  ARG  NH2', -0.427, (175.206, 175.288, 280.494)), (' B 913  LEU  C  ', ' B 913  LEU HD13', -0.427, (214.855, 224.842, 180.308)), (' A1028  GLU  OE1', ' A1036  ARG  NH1', -0.427, (235.552, 234.63, 200.94)), (' A 965  SER  HB2', ' A 967  PHE  CE2', -0.427, (234.874, 245.601, 246.154)), (' B 288  CYS  O  ', ' B 295  GLU  HG3', -0.426, (214.074, 205.243, 238.237)), (' A  57  PRO  O  ', ' A  60  SER  OG ', -0.426, (214.192, 272.905, 243.001)), (' B  27  ALA  HB3', ' B  64  TRP  NE1', -0.426, (195.832, 185.932, 249.414)), (' C 716  THR HG23', ' C1065  VAL  HB ', -0.426, (255.031, 226.652, 192.224)), (' K  53  ARG  NH2', ' K  59  GLU  HG2', -0.425, (316.103, 194.234, 276.177)), (' C  27  ALA  HB3', ' C  64  TRP  NE1', -0.425, (289.525, 228.612, 253.555)), (' J  34  MET  HG2', ' J  72  ARG  NH2', -0.425, (305.893, 218.287, 287.29)), (' F  53  ARG  NH2', ' F  59  GLU  HG2', -0.425, (150.45, 181.137, 267.516)), (' B 711  ILE HD12', ' B1093  VAL HG11', -0.425, (230.876, 210.775, 177.867)), (' C 974  LEU HD11', ' C 990  ILE HG12', -0.425, (234.55, 218.671, 254.925)), (' A1042  LYS  NZ ', ' B 887  ALA  O  ', -0.425, (223.403, 246.271, 194.547)), (' B 319  PRO  HA ', ' B 535  CYS  SG ', -0.424, (235.892, 199.147, 247.317)), (' B 361  ASP  HA ', ' B 524  PRO  HG3', -0.423, (247.78, 199.428, 272.347)), (' C 194  PHE  HB3', ' C 201  PHE  CZ ', -0.423, (271.364, 220.812, 262.441)), (' A 148  ASN  ND2', ' L  51  SER  OG ', -0.423, (229.715, 318.382, 265.144)), (' A  27  ALA  HB3', ' A  64  TRP  NE1', -0.422, (207.729, 287.253, 246.241)), (' B 578  THR  O  ', ' B 580  GLU  N  ', -0.422, (256.341, 195.482, 252.729)), (' B 753  TYR  HB3', ' B 756  PHE  CD2', -0.422, (228.843, 243.431, 243.94)), (' A 557  LEU  N  ', ' A 560  GLN  OE1', -0.422, (190.767, 222.361, 245.445)), (' B 600  ASN  O  ', ' B 600  ASN  OD1', -0.421, (204.142, 203.763, 221.235)), (' B 131  CYS  HA ', ' B 166  CYS  HA ', -0.421, (195.616, 206.162, 277.217)), (' B 723  ILE HG22', ' B 945  LEU HD13', -0.421, (216.167, 226.32, 212.414)), (' B 724  LEU HD11', ' B1025  LYS  HD2', -0.42, (223.037, 228.88, 206.616)), (' A 193  VAL HG23', ' A 223  LEU HD22', -0.42, (224.053, 277.576, 248.709)), (' A  13  SER  OG ', ' A  14  GLN  N  ', -0.419, (218.551, 294.94, 276.529)), (' A  96  GLU  HB3', ' A 260  ALA  CB ', -0.418, (218.569, 293.719, 250.99)), (' A 293  LEU  O  ', ' A 296  THR  OG1', -0.417, (218.366, 262.461, 229.503)), (' B 194  PHE  HB3', ' B 201  PHE  CZ ', -0.417, (198.696, 204.228, 260.195)), (' A 900  ALA  HB1', ' A 910  GLN  HB2', -0.417, (239.833, 244.276, 179.176)), (' A 595  ILE HG23', ' A 661  ILE HG21', -0.417, (213.652, 257.459, 220.531)), (' A 726  VAL HG23', ' A1056  GLY  HA2', -0.417, (241.652, 245.755, 212.291)), (' L  32  VAL HG21', ' L  70  VAL HG21', -0.416, (230.348, 314.738, 272.947)), (' B 712  PRO  HA ', ' B1069  GLU  HA ', -0.416, (224.617, 209.422, 183.971)), (' C 305  VAL  HB ', ' C 599  THR HG23', -0.416, (266.561, 228.014, 228.387)), (' A 906  ILE HD13', ' A1046  LEU HD21', -0.416, (234.003, 245.219, 187.177)), (' B1104  ARG  NH2', ' C 901  TYR  CE1', -0.415, (237.622, 218.128, 181.149)), (' A 122  ASN  OD1', ' A 125  ASN  O  ', -0.415, (230.019, 291.617, 264.551)), (' C 598  GLY  O  ', ' C 601  THR  N  ', -0.414, (270.951, 226.819, 223.487)), (' B 390  THR HG22', ' B 517  ALA  O  ', -0.414, (252.327, 216.849, 269.542)), (' B 575  ASP  HB3', ' B 578  THR  O  ', -0.413, (254.472, 195.789, 253.394)), (' B1127  ILE HD12', ' C 917  GLN  CD ', -0.413, (250.815, 210.776, 181.015)), (' K  32  VAL HG21', ' K  70  VAL HG21', -0.412, (298.294, 195.994, 281.713)), (' H 102  SER  OG ', ' H 103  GLY  N  ', -0.412, (211.625, 307.857, 264.621)), (' A 388  CYS  HB3', ' A 519  ALA  CB ', -0.411, (200.021, 230.583, 260.34)), (' A1004  TYR  CZ ', ' A1008  GLN  HG3', -0.411, (240.497, 242.33, 230.719)), (' H  98  ARG  HG2', ' H 115  VAL  HB ', -0.411, (210.394, 320.222, 275.586)), (' B 564  ARG  NH2', ' C  42  VAL HG21', -0.41, (255.019, 214.039, 248.473)), (' F  32  VAL HG21', ' F  70  VAL HG21', -0.41, (161.116, 194.284, 275.312)), (' A 784  GLN  OE1', ' C 700  ASN  ND2', -0.41, (259.678, 240.945, 195.1)), (' A1113  THR HG22', ' A1135  TYR  HB3', -0.409, (224.851, 237.686, 161.158)), (' K   4  LEU  HA ', ' K   4  LEU HD23', -0.409, (292.936, 196.717, 287.926)), (' A 194  PHE  HB3', ' A 201  PHE  CZ ', -0.408, (222.014, 276.452, 258.648)), (' J 102  SER  OG ', ' J 103  GLY  N  ', -0.407, (302.53, 215.465, 274.234)), (' B  96  GLU  HB3', ' B 260  ALA  CB ', -0.407, (184.862, 192.88, 253.321)), (' C 711  ILE HD12', ' C1093  VAL HG11', -0.407, (252.964, 236.932, 177.69)), (' C 148  ASN  ND2', ' K  51  SER  OG ', -0.407, (303.356, 194.575, 274.703)), (' C  13  SER  OG ', ' C  14  GLN  N  ', -0.406, (286.108, 215.197, 283.282)), (' B  13  SER  OG ', ' B  14  GLN  N  ', -0.405, (183.621, 193.639, 279.224)), (' C 913  LEU HD22', ' C 920  ILE HD13', -0.405, (249.924, 218.154, 184.298)), (' E  98  ARG  HG2', ' E 115  VAL  HB ', -0.405, (165.35, 174.492, 279.16)), (' C 331  ASN  O  ', ' C 359  VAL HG12', -0.405, (249.613, 267.384, 270.261)), (' A 700  ASN  O  ', ' B 786  TYR  HA ', -0.405, (209.018, 245.007, 194.813)), (' J  98  ARG  HG2', ' J 115  VAL  HB ', -0.405, (311.829, 210.695, 286.873)), (' C 712  PRO  HA ', ' C1069  GLU  HA ', -0.404, (257.225, 232.974, 183.979)), (' C 575  ASP  HB3', ' C 578  THR  O  ', -0.404, (253.624, 271.78, 251.79)), (' C 195  LYS  HG2', ' C 197  ILE HG12', -0.404, (264.307, 223.733, 259.277)), (' A 194  PHE  CE1', ' A 203  ILE HG23', -0.404, (224.791, 279.356, 256.135)), (' C  48  LEU  CD1', ' C 302  SER  HA ', -0.403, (262.051, 220.374, 233.506)), (' A 297  LYS  HE3', ' A 599  THR HG21', -0.403, (220.706, 266.563, 227.612)), (' C1073  THR  HB ', ' C1094  SER  HB3', -0.403, (256.54, 242.965, 172.767)), (' A 767  ILE  O  ', ' A 770  GLU  HG2', -0.403, (245.516, 237.697, 222.645)), (' A 802  ILE HD12', ' A 875  LEU HD21', -0.402, (245.599, 252.747, 197.174)), (' C 913  LEU  C  ', ' C 913  LEU HD13', -0.401, (248.826, 217.048, 181.69)), (' A 746  CYS  HB2', ' A 974  LEU HD21', -0.401, (246.646, 243.274, 251.648)), (' E  83  MET  HB3', ' E  86  LEU HD21', -0.401, (175.192, 181.082, 298.863)), (' F  38  LYS  HG2', ' F  83  ALA  HB2', -0.401, (149.983, 182.341, 285.87)), (' K  38  LYS  HG2', ' K  83  ALA  HB2', -0.401, (312.947, 193.863, 294.42)), (' B 148  ASN  ND2', ' F  51  SER  OG ', -0.4, (157.476, 191.413, 267.299)), (' C 122  ASN  OD1', ' C 125  ASN  O  ', -0.4, (280.027, 206.611, 269.83)), (' C  96  GLU  HB3', ' C 260  ALA  CB ', -0.4, (289.252, 216.191, 257.332)), (' A1139  GLN  N  ', ' A1140  PRO  HD2', -0.4, (228.868, 235.06, 153.635)), (' E  62  ASP  H  ', ' F  96  HIS  HE1', -0.4, (175.083, 191.847, 288.825))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' B 165  ASN HD21', ' B1303  NAG  C1 ', -1.677, (150.517, 105.648, 165.911)), (' B 165  ASN  ND2', ' B1303  NAG  C1 ', -1.367, (150.419, 105.207, 164.948)), (' B 714  ASN HD21', ' E   1  NAG  C1 ', -1.289, (139.181, 101.475, 55.537)), (' B 714  ASN  ND2', ' E   1  NAG  C1 ', -1.174, (138.824, 102.404, 55.657)), (' A2104  NAG  H3 ', ' A2104  NAG  H83', -1.08, (112.946, 75.082, 98.865)), (' C 164  ASN HD21', ' C1402  NAG  H61', -1.076, (105.381, 152.767, 167.159)), (' C 165  ASN  ND2', ' C1402  NAG  C1 ', -1.064, (107.441, 150.066, 165.006)), (' A 165  ASN HD21', ' A2103  NAG  C1 ', -1.033, (89.493, 90.174, 166.11)), (' C 919  LEU HD11', ' D   1  NAG  H5 ', -1.023, (119.302, 143.781, 56.3)), (' A1071  ASN  ND2', ' A2106  NAG  C1 ', -1.015, (104.311, 86.548, 55.515)), (' C 165  ASN HD21', ' C1402  NAG  C1 ', -0.982, (107.111, 150.409, 166.062)), (' A1071  ASN HD21', ' A2106  NAG  C1 ', -0.934, (103.818, 87.856, 56.339)), (' C 165  ASN  ND2', ' C1402  NAG  O5 ', -0.918, (106.635, 151.503, 165.378)), (' A 165  ASN  ND2', ' A2103  NAG  C1 ', -0.831, (89.236, 90.221, 165.196)), (' C 100  ILE HD11', ' C 263  ALA  HB2', -0.827, (109.033, 174.308, 139.512)), (' A 100  ILE HD11', ' A 263  ALA  HB2', -0.826, (68.348, 80.206, 138.955)), (' B 568  ASP  OD2', ' B 572  THR  OG1', -0.81, (132.135, 134.255, 122.581)), (' B 100  ILE HD11', ' B 263  ALA  HB2', -0.809, (169.485, 92.264, 139.005)), (' A 568  ASP  OD2', ' A 572  THR  OG1', -0.802, (123.401, 91.644, 122.662)), (' C 568  ASP  OD2', ' C 572  THR  OG1', -0.797, (90.831, 120.641, 122.672)), (' B1071  ASN  ND2', ' B1305  NAG  C1 ', -0.781, (145.939, 119.622, 55.306)), (' C 919  LEU  CD1', ' D   1  NAG  H5 ', -0.728, (119.957, 143.918, 56.093)), (' B 789  PRO  O  ', ' B 792  LYS  NZ ', -0.714, (117.884, 81.855, 66.191)), (' C 789  PRO  O  ', ' C 792  LYS  NZ ', -0.713, (143.525, 134.413, 66.253)), (' C 164  ASN  ND2', ' C1402  NAG  H61', -0.708, (105.352, 153.405, 166.658)), (' E   1  NAG  H62', ' E   2  NAG  HN2', -0.702, (140.923, 97.032, 57.855)), (' B 234  ASN  CG ', ' B1307  NAG  C1 ', -0.699, (149.509, 112.928, 148.958)), (' C 599  THR HG22', ' C 601  GLY  H  ', -0.696, (108.27, 148.695, 102.114)), (' A 599  THR HG22', ' A 601  GLY  H  ', -0.695, (90.401, 92.717, 102.111)), (' A 789  PRO  O  ', ' A 792  LYS  NZ ', -0.693, (85.167, 130.287, 66.42)), (' B 599  THR HG22', ' B 601  GLY  H  ', -0.693, (147.368, 105.405, 102.593)), (' A 100  ILE  CD1', ' A 263  ALA  HB2', -0.69, (68.061, 80.679, 139.797)), (' B 100  ILE  CD1', ' B 263  ALA  HB2', -0.687, (170.331, 91.961, 139.949)), (' C 100  ILE  CD1', ' C 263  ALA  HB2', -0.684, (108.428, 174.837, 139.784)), (' E   2  NAG  H2 ', ' E   2  NAG  H61', -0.678, (142.709, 94.594, 55.521)), (' A  67  ALA  CB ', ' A 263  ALA  HB3', -0.654, (69.929, 78.1, 138.348)), (' C 714  ASN HD21', ' D   1  NAG  C1 ', -0.647, (115.841, 143.08, 55.544)), (' C  67  ALA  CB ', ' C 263  ALA  HB3', -0.643, (105.467, 173.925, 138.43)), (' B  67  ALA  CB ', ' B 263  ALA  HB3', -0.643, (171.035, 95.047, 138.455)), (' B1071  ASN HD22', ' B1305  NAG  C1 ', -0.613, (146.015, 119.373, 55.295)), (' B 234  ASN  ND2', ' B1307  NAG  C1 ', -0.605, (148.755, 113.15, 148.774)), (' A1071  ASN HD22', ' A2106  NAG  C1 ', -0.604, (103.274, 87.027, 55.276)), (' B 714  ASN  ND2', ' E   1  NAG  O5 ', -0.592, (140.114, 101.344, 56.529)), (' A 324  GLU  OE2', ' A 534  VAL HG21', -0.584, (111.798, 74.73, 132.654)), (' A 822  LYS  NZ ', ' A 935  LEU  O  ', -0.581, (84.449, 111.051, 84.361)), (' B 324  GLU  OE2', ' B 534  VAL HG21', -0.577, (152.614, 132.677, 132.608)), (' C 324  GLU  OE2', ' C 534  VAL HG21', -0.576, (81.941, 139.183, 132.677)), (' C  67  ALA  HB3', ' C 263  ALA  HB3', -0.575, (105.789, 174.329, 138.448)), (' C 822  LYS  NZ ', ' C 935  LEU  O  ', -0.575, (127.727, 144.023, 84.341)), (' A2104  NAG  O4 ', ' A2104  NAG  O6 ', -0.563, (114.326, 71.985, 99.132)), (' B 108  THR HG23', ' B1307  NAG  H61', -0.563, (153.529, 112.928, 149.466)), (' C 461  LEU HD22', ' C 465  GLU  HB3', -0.563, (98.171, 94.561, 152.484)), (' B  67  ALA  HB3', ' B 263  ALA  HB3', -0.562, (171.259, 94.582, 138.435)), (' F   1  NAG  H61', ' F   2  NAG  H82', -0.562, (87.169, 104.36, 59.369)), (' A 461  LEU HD22', ' A 465  GLU  HB3', -0.561, (142.201, 111.362, 152.769)), (' A2104  NAG  C8 ', ' A2104  NAG  H3 ', -0.561, (112.21, 75.394, 100.081)), (' A  67  ALA  HB3', ' A 263  ALA  HB3', -0.555, (69.406, 77.64, 138.627)), (' B 461  LEU HD22', ' B 465  GLU  HB3', -0.552, (105.881, 140.638, 152.923)), (' B 822  LYS  NZ ', ' B 935  LEU  O  ', -0.549, (134.943, 90.958, 84.286)), (' C 805  ASP  O  ', ' C 805  ASP  OD2', -0.535, (143.285, 138.886, 77.642)), (' B 805  ASP  O  ', ' B 805  ASP  OD2', -0.533, (121.8, 79.803, 77.668)), (' A 805  ASP  O  ', ' A 805  ASP  OD2', -0.531, (81.248, 127.853, 77.577)), (' A 520  ALA  HB1', ' A 521  PRO  HD2', -0.531, (133.527, 89.464, 139.176)), (' B 520  ALA  HB1', ' B 521  PRO  HD2', -0.53, (129.245, 143.926, 139.335)), (' B 108  THR  CG2', ' B1307  NAG  H61', -0.529, (153.77, 112.732, 149.943)), (' C 520  ALA  HB1', ' C 521  PRO  HD2', -0.526, (83.411, 112.808, 139.369)), (' E   2  NAG  C6 ', ' E   2  NAG  H2 ', -0.523, (143.508, 94.996, 55.224)), (' C 560  LEU  N  ', ' C 563  GLN  OE1', -0.518, (77.296, 112.113, 131.231)), (' A 231  ILE HD12', ' A 233  ILE HG12', -0.517, (88.617, 93.301, 150.604)), (' B1301  NAG  H83', ' B1301  NAG  O3 ', -0.516, (130.825, 81.198, 63.416)), (' B 108  THR HG21', ' B1307  NAG  H62', -0.512, (153.462, 113.368, 151.032)), (' C 714  ASN  ND2', ' D   1  NAG  C1 ', -0.512, (115.381, 142.839, 55.736)), (' B 560  LEU  N  ', ' B 563  GLN  OE1', -0.507, (131.945, 150.11, 131.023)), (' C 231  ILE HD12', ' C 233  ILE HG12', -0.506, (110.009, 150.036, 150.265)), (' C 805  ASP  O  ', ' C 807  SER  N  ', -0.503, (145.957, 138.654, 77.632)), (' B1071  ASN HD21', ' B1305  NAG  C1 ', -0.503, (145.553, 119.711, 56.243)), (' A 919  LEU HD11', ' F   1  NAG  H5 ', -0.502, (88.912, 104.694, 57.003)), (' A 122  ASN  OD1', ' A 125  ASN  N  ', -0.501, (66.614, 93.871, 152.011)), (' B 314  GLN  OE1', ' B 596  SER  OG ', -0.501, (142.012, 118.397, 105.286)), (' B 231  ILE HD12', ' B 233  ILE HG12', -0.499, (147.961, 103.247, 150.669)), (' B1071  ASN  ND2', ' B1305  NAG  N2 ', -0.497, (145.905, 118.477, 56.469)), (' A 805  ASP  O  ', ' A 807  SER  N  ', -0.496, (80.081, 130.189, 77.42)), (' A 108  THR HG22', ' A 109  THR HG23', -0.484, (92.909, 82.39, 152.099)), (' B1304  NAG  O4 ', ' B1304  NAG  O6 ', -0.484, (153.87, 136.041, 99.32)), (' B 805  ASP  O  ', ' B 807  SER  N  ', -0.483, (120.401, 77.517, 77.568)), (' A 314  GLN  OE1', ' A 596  SER  OG ', -0.483, (104.836, 91.05, 105.232)), (' A2105  NAG  C3 ', ' A2105  NAG  H82', -0.48, (78.581, 119.738, 64.164)), (' C 122  ASN  OD1', ' C 125  ASN  N  ', -0.478, (121.167, 168.525, 151.932)), (' B 234  ASN  OD1', ' B1307  NAG  O5 ', -0.476, (150.747, 112.588, 149.449)), (' B 108  THR HG22', ' B 109  THR HG23', -0.473, (155.743, 112.798, 152.397)), (' C 108  THR HG22', ' C 109  THR HG23', -0.473, (98.166, 151.845, 152.042)), (' B 108  THR HG21', ' B1307  NAG  C6 ', -0.471, (153.089, 113.512, 150.459)), (' B 793  ASP  O  ', ' B 793  ASP  OD1', -0.469, (120.571, 85.722, 56.476)), (' A 309  GLU  O  ', ' A 313  TYR  OH ', -0.468, (93.698, 97.236, 102.546)), (' B 898  GLN  OE1', ' B 902  ARG  NH2', -0.466, (117.483, 98.897, 63.696)), (' A1097  THR  HG1', ' A1098  HIS  CE1', -0.464, (104.128, 90.793, 36.505)), (' B 122  ASN  OD1', ' B 125  ASN  N  ', -0.463, (158.5, 84.007, 152.153)), (' C 118  LEU  O  ', ' C 128  ILE  O  ', -0.462, (113.449, 159.011, 152.206)), (' E   2  NAG  C2 ', ' E   2  NAG  C6 ', -0.459, (143.378, 95.378, 55.742)), (' C 793  ASP  O  ', ' C 793  ASP  OD1', -0.459, (138.8, 134.862, 56.522)), (' B 309  GLU  O  ', ' B 313  TYR  OH ', -0.457, (142.202, 105.725, 102.538)), (' A 560  LEU  N  ', ' A 563  GLN  OE1', -0.456, (137.276, 84.008, 131.175)), (' C 898  GLN  OE1', ' C 902  ARG  NH2', -0.454, (128.793, 125.701, 63.824)), (' A 793  ASP  O  ', ' A 793  ASP  OD1', -0.452, (87.536, 126.278, 56.88)), (' B 118  LEU  O  ', ' B 128  ILE  O  ', -0.45, (153.751, 95.616, 152.355)), (' A 118  LEU  O  ', ' A 128  ILE  O  ', -0.449, (78.877, 92.026, 152.14)), (' C 309  GLU  O  ', ' C 313  TYR  OH ', -0.447, (110.592, 143.485, 102.44)), (' B 108  THR  CG2', ' B1307  NAG  C6 ', -0.447, (153.307, 113.345, 150.133)), (' C 314  GLN  OE1', ' C 596  SER  OG ', -0.445, (99.584, 136.898, 105.323)), (' A  67  ALA  C  ', ' A  78  ARG  HE ', -0.443, (68.388, 73.248, 136.984)), (' B 975  ASN  O  ', ' B 979  SER  OG ', -0.442, (117.666, 93.693, 135.351)), (' A 898  GLN  OE1', ' A 902  ARG  NH2', -0.441, (99.97, 121.861, 63.862)), (' A1071  ASN  ND2', ' A2106  NAG  N2 ', -0.434, (103.283, 88.184, 56.348)), (' C  67  ALA  HB2', ' C 263  ALA  HB3', -0.433, (105.306, 173.532, 138.918)), (' A 452  LEU HD23', ' A 494  SER  OG ', -0.432, (140.093, 113.608, 172.204)), (' A2105  NAG  H3 ', ' A2105  NAG  H82', -0.43, (78.507, 120.082, 64.184)), (' C 452  LEU HD23', ' C 494  SER  OG ', -0.43, (101.571, 95.005, 172.157)), (' B 452  LEU HD23', ' B 494  SER  OG ', -0.429, (104.884, 137.633, 172.148)), (' B  67  ALA  C  ', ' B  78  ARG  HE ', -0.427, (175.302, 95.511, 137.161)), (' C  67  ALA  C  ', ' C  78  ARG  HE ', -0.427, (102.522, 177.355, 136.86)), (' C1097  THR  HG1', ' C1098  HIS  CE1', -0.427, (99.844, 137.371, 36.534)), (' A 481  ASN  N  ', ' A 481  ASN  OD1', -0.423, (159.729, 125.171, 166.349)), (' B 481  ASN  N  ', ' B 481  ASN  OD1', -0.423, (85.046, 149.02, 166.381)), (' C 481  ASN  N  ', ' C 481  ASN  OD1', -0.421, (101.736, 72.391, 166.447)), (' B1037  VAL HG12', ' B1038  ASP  OD2', -0.421, (127.988, 114.805, 71.992)), (' C1037  VAL HG12', ' C1038  ASP  OD2', -0.42, (109.843, 126.282, 71.787)), (' C 164  ASN HD21', ' C1402  NAG  C6 ', -0.419, (106.127, 153.061, 167.832)), (' E   2  NAG  O3 ', ' E   2  NAG  O7 ', -0.418, (143.522, 93.749, 58.504)), (' A  67  ALA  HB2', ' A 263  ALA  HB3', -0.414, (70.358, 77.707, 139.135)), (' B 712  PRO  HA ', ' B1068  GLN  O  ', -0.413, (139.142, 110.665, 56.329)), (' A1037  VAL HG12', ' A1038  ASP  OD2', -0.412, (108.716, 104.934, 71.99)), (' A 712  PRO  HA ', ' A1068  GLN  O  ', -0.412, (99.872, 97.595, 56.295)), (' C 712  PRO  HA ', ' C1068  GLN  O  ', -0.403, (107.876, 137.973, 56.198)), (' A 810  SER  O  ', ' A 812  ARG  N  ', -0.402, (84.507, 128.044, 81.5))]
data['cbeta'] = [('B', ' 798 ', 'ASN', ' ', 0.30589785702545824, (128.472, 87.307, 65.856))]
data['smoc'] = [('C', 25, u'PRO', 0.7096983307050482, (91.721, 170.318, 134.059)), ('C', 79, u'PHE', 0.6201190455363133, (100.506, 174.142, 141.82700000000003)), ('C', 80, u'ASP', 0.592618263497043, (100.069, 170.475, 140.87)), ('C', 88, u'ASP', 0.5736477459211348, (104.24300000000001, 148.511, 138.262)), ('C', 106, u'PHE', 0.549208958950201, (106.21700000000001, 156.503, 148.23399999999998)), ('C', 117, u'LEU', 0.5231647225863316, (109.74400000000001, 155.876, 151.93)), ('C', 124, u'THR', 0.6795920034970753, (122.702, 170.36800000000002, 151.21599999999998)), ('C', 127, u'VAL', 0.5912011704370426, (117.94800000000001, 161.599, 152.58700000000002)), ('C', 160, u'TYR', 0.615701816372245, (105.563, 165.178, 157.966)), ('C', 232, u'GLY', 0.5377071074085573, (111.068, 145.707, 151.786)), ('C', 276, u'LEU', 0.5456255134185968, (115.286, 145.147, 120.232)), ('C', 283, u'GLY', 0.5223270791997708, (129.098, 150.029, 123.71700000000001)), ('C', 285, u'ILE', 0.534708714223524, (122.657, 152.127, 122.971)), ('C', 308, u'VAL', 0.6037060973571515, (112.95700000000001, 146.141, 105.67399999999999)), ('C', 309, u'GLU', 0.6126020904943467, (112.85799999999999, 145.46200000000002, 101.94400000000002)), ('C', 350, u'VAL', 0.5373484102861416, (99.48, 100.702, 162.71499999999997)), ('C', 376, u'THR', 0.5214120844567461, (106.52799999999999, 116.396, 159.036)), ('C', 386, u'LYS', 0.4373468198286018, (98.077, 125.538, 145.268)), ('C', 389, u'ASP', 0.4460469401810426, (92.51400000000001, 127.12899999999999, 144.753)), ('C', 398, u'ASP', 0.5497186885148476, (94.113, 107.269, 157.36)), ('C', 400, u'PHE', 0.5358458194456116, (97.71900000000001, 105.60199999999999, 163.201)), ('C', 406, u'GLU', 0.45078672888918053, (109.924, 104.88199999999999, 161.71299999999997)), ('C', 414, u'GLN', 0.4520992372821512, (111.086, 102.651, 151.77899999999997)), ('C', 431, u'GLY', 0.49554299869231677, (98.085, 113.117, 148.563)), ('C', 454, u'ARG', 0.5075286316901538, (103.093, 93.287, 163.38400000000001)), ('C', 471, u'GLU', 0.5882191551373821, (98.10499999999999, 83.20100000000001, 163.997)), ('C', 476, u'GLY', 0.6716787191637699, (111.56400000000001, 76.59100000000001, 161.298)), ('C', 481, u'ASN', 0.6644355056593677, (99.99400000000001, 73.063, 166.334)), ('C', 504, u'GLY', 0.4770853803499429, (113.49600000000001, 108.277, 168.555)), ('C', 512, u'VAL', 0.5238695632754944, (97.718, 110.3, 155.465)), ('C', 550, u'GLY', 0.566138950951188, (88.254, 131.594, 126.40700000000001)), ('C', 563, u'GLN', 0.491746542977219, (80.763, 113.23700000000001, 134.267)), ('C', 574, u'ASP', 0.458057091778116, (85.97, 121.728, 125.367)), ('C', 575, u'ALA', 0.5730031067585131, (82.902, 121.364, 127.614)), ('C', 609, u'ALA', 0.538512054614134, (98.992, 147.97899999999998, 104.181)), ('C', 648, u'GLY', 0.5752587188015735, (90.832, 138.847, 102.85499999999999)), ('C', 661, u'GLU', 0.5303142776270361, (101.839, 143.64399999999998, 85.903)), ('C', 664, u'ILE', 0.5515785780387087, (104.02799999999999, 142.612, 94.94800000000001)), ('C', 675, u'GLN', 0.6155476841480816, (102.765, 155.11899999999997, 93.07799999999999)), ('C', 692, u'TYR', 0.5921602462095018, (94.833, 145.92100000000002, 91.27199999999999)), ('C', 696, u'LEU', 0.6227232666773345, (98.093, 138.354, 81.62799999999999)), ('C', 816, u'GLU', 0.4983109300541597, (133.889, 136.718, 81.62599999999999)), ('C', 829, u'GLY', 0.35932787454564596, (138.853, 128.14899999999997, 100.771)), ('C', 840, u'ASP', 0.5037794966037304, (140.16899999999998, 141.866, 116.377)), ('C', 864, u'ASP', 0.48817568497914543, (139.05700000000002, 129.65, 87.866)), ('C', 866, u'MET', 0.4693744001936137, (141.593, 126.117, 84.534)), ('C', 881, u'SER', 0.4562583255467016, (135.691, 122.846, 63.26800000000001)), ('C', 891, u'LEU', 0.5334036718380015, (138.02200000000002, 118.68199999999999, 60.71)), ('C', 920, u'ILE', 0.4840647344122574, (124.023, 138.86200000000002, 58.912)), ('C', 947, u'ASP', 0.4750747174059513, (121.26100000000001, 133.315, 95.867)), ('C', 956, u'LEU', 0.44665836743518544, (126.69, 129.024, 108.691)), ('C', 959, u'LEU', 0.44522545135639313, (124.71600000000001, 127.871, 113.18499999999999)), ('C', 981, u'LEU', 0.4724007146815466, (128.505, 123.474, 140.18)), ('C', 994, u'ILE', 0.4107324310606936, (125.04700000000001, 118.516, 124.393)), ('C', 997, u'ARG', 0.4083313155563251, (123.71100000000001, 121.394, 120.008)), ('C', 1012, u'ALA', 0.4360106619048993, (122.832, 119.607, 97.053)), ('C', 1013, u'ALA', 0.4093707181677072, (120.194, 117.67799999999998, 95.099)), ('C', 1019, u'ALA', 0.4225789961431599, (124.353, 120.74100000000001, 86.793)), ('C', 1047, u'MET', 0.46040722994539146, (124.616, 128.195, 67.59700000000001)), ('C', 1057, u'VAL', 0.4756921061555705, (127.935, 128.88800000000003, 83.49300000000001)), ('C', 1063, u'THR', 0.4629195942426443, (118.96900000000001, 132.20399999999998, 67.038)), ('C', 1069, u'GLU', 0.601097849303332, (105.293, 139.12, 57.05)), ('B', 15, u'CYS', 0.6129281465086938, (171.291, 99.421, 158.561)), ('B', 40, u'ASP', 0.5291212367650343, (137.045, 95.208, 132.257)), ('B', 80, u'ASP', 0.6078151983266985, (170.815, 101.35199999999999, 140.88700000000003)), ('B', 84, u'LEU', 0.5922662652362306, (161.76899999999998, 107.607, 141.654)), ('B', 86, u'PHE', 0.5366698900930141, (155.086, 107.90700000000001, 141.183)), ('B', 88, u'ASP', 0.5307691177029007, (149.712, 108.73, 138.27499999999998)), ('B', 90, u'VAL', 0.5588585784997746, (153.755, 103.07, 136.88200000000003)), ('B', 106, u'PHE', 0.5348453070153332, (155.641, 103.02199999999999, 148.248)), ('B', 108, u'THR', 0.5339952247142487, (155.20999999999998, 109.94800000000001, 150.36100000000002)), ('B', 124, u'THR', 0.5569439571537227, (159.394, 81.81, 151.23)), ('B', 133, u'PHE', 0.4900130748924341, (157.915, 102.405, 158.617)), ('B', 135, u'PHE', 0.5559279551138248, (163.11399999999998, 103.043, 156.238)), ('B', 189, u'LEU', 0.6241037967276902, (160.277, 89.259, 131.502)), ('B', 193, u'VAL', 0.5477792626466275, (151.471, 97.801, 136.29299999999998)), ('B', 201, u'PHE', 0.5825868757009951, (145.863, 99.96100000000001, 144.98600000000002)), ('B', 204, u'TYR', 0.5710939987848503, (148.305, 93.929, 136.89800000000002)), ('B', 210, u'ILE', 0.6946193676965953, (161.57899999999998, 86.16, 126.12599999999999)), ('B', 232, u'GLY', 0.554407347990012, (143.865, 104.224, 151.797)), ('B', 263, u'ALA', 0.6372174476314043, (169.123, 93.133, 137.431)), ('B', 265, u'TYR', 0.5773623401141325, (164.796, 96.96100000000001, 135.183)), ('B', 336, u'CYS', 0.48870745554587813, (134.284, 138.903, 157.295)), ('B', 350, u'VAL', 0.4919579938018767, (110.7, 136.78, 162.721)), ('B', 361, u'CYS', 0.5272816205456892, (136.017, 140.98800000000003, 153.40800000000002)), ('B', 379, u'CYS', 0.5006134868681109, (122.803, 126.115, 149.537)), ('B', 398, u'ASP', 0.46419981227971235, (119.07199999999999, 138.14, 157.36800000000002)), ('B', 402, u'ILE', 0.4904458848584754, (111.91000000000001, 130.69299999999998, 165.344)), ('B', 405, u'ASP', 0.480142566529738, (109.282, 122.539, 163.95600000000002)), ('B', 411, u'ALA', 0.5206431284152616, (112.495, 127.342, 151.689)), ('B', 442, u'ASP', 0.4928024477689232, (116.998, 132.122, 174.374)), ('B', 493, u'GLN', 0.5233692432045335, (101.596, 136.42700000000002, 169.612)), ('B', 522, u'ALA', 0.4486468429911843, (132.256, 141.064, 143.283)), ('B', 534, u'VAL', 0.5319490816762974, (150.87, 136.317, 131.859)), ('B', 559, u'PHE', 0.548434431228011, (134.086, 149.935, 130.31)), ('B', 563, u'GLN', 0.5470803076510136, (130.925, 146.712, 134.277)), ('B', 572, u'THR', 0.5543264264615038, (130.88200000000003, 133.89200000000002, 125.577)), ('B', 595, u'VAL', 0.5385153921468716, (144.491, 119.48100000000001, 109.26700000000001)), ('B', 596, u'SER', 0.46464793819718925, (144.376, 116.691, 106.68299999999999)), ('B', 597, u'VAL', 0.4933485017188614, (146.278, 113.452, 106.111)), ('B', 609, u'ALA', 0.5871350247712305, (151.88500000000002, 113.543, 104.195)), ('B', 613, u'GLN', 0.5091669065827685, (145.254, 124.585, 105.68199999999999)), ('B', 634, u'ARG', 0.5602290057199013, (151.914, 125.91900000000001, 113.96100000000001)), ('B', 641, u'ASN', 0.5943789515184698, (159.99800000000002, 118.758, 102.21300000000001)), ('B', 647, u'ALA', 0.5170726427938648, (145.49, 125.096, 100.057)), ('B', 648, u'GLY', 0.5379350341732605, (148.063, 125.17699999999999, 102.868)), ('B', 671, u'CYS', 0.5318376284988556, (147.266, 116.456, 93.26400000000001)), ('B', 692, u'TYR', 0.5428166883201538, (152.187, 118.17399999999999, 91.286)), ('B', 696, u'LEU', 0.5817138231283412, (144.006, 119.139, 81.64)), ('B', 709, u'ILE', 0.5592313336979202, (138.49, 121.44400000000002, 54.246)), ('B', 722, u'GLU', 0.516871278258387, (126.813, 102.718, 80.054)), ('B', 740, u'CYS', 0.44237981594718756, (112.054, 98.062, 123.889)), ('B', 816, u'GLU', 0.5247906677033751, (124.67499999999998, 88.96700000000001, 81.634)), ('B', 817, u'ASP', 0.5205061142815608, (126.339, 86.113, 83.533)), ('B', 829, u'GLY', 0.4258682245511329, (114.769, 88.958, 100.777)), ('B', 840, u'ASP', 0.5350650993610537, (125.983, 80.953, 116.38499999999999)), ('B', 875, u'LEU', 0.4560919016029237, (116.62599999999999, 92.20700000000001, 71.891)), ('B', 894, u'PRO', 0.4663916989841627, (116.17999999999999, 91.96400000000001, 56.789)), ('B', 898, u'GLN', 0.4923941282390035, (117.85799999999999, 98.024, 58.446)), ('B', 900, u'ALA', 0.4518372692158178, (121.012, 100.87199999999999, 55.476)), ('B', 921, u'ALA', 0.5236084261605103, (130.252, 93.107, 60.29800000000001)), ('B', 924, u'PHE', 0.5406130501559172, (131.208, 94.865, 64.998)), ('B', 925, u'ASN', 0.5852664131253669, (132.071, 91.301, 65.979)), ('B', 932, u'GLN', 0.5401359812737666, (133.61299999999997, 90.342, 76.536)), ('B', 952, u'ASN', 0.47001279659867806, (122.41900000000001, 100.17099999999999, 102.384)), ('B', 956, u'LEU', 0.4474833609773255, (121.612, 99.05, 108.698)), ('B', 981, u'LEU', 0.4787052584494692, (115.893, 100.255, 140.186)), ('B', 991, u'ASP', 0.4972102857201944, (112.364, 107.533, 128.96800000000002)), ('B', 1019, u'ALA', 0.43730903217531164, (115.615, 105.21900000000001, 86.799)), ('B', 1026, u'MET', 0.4242679745370934, (115.45400000000001, 102.636, 76.68799999999999)), ('B', 1039, u'PHE', 0.4640803191755638, (123.05799999999999, 110.96300000000001, 74.67399999999999)), ('B', 1063, u'THR', 0.5010806188013093, (128.237, 104.143, 67.04700000000001)), ('B', 1069, u'GLU', 0.5502689493935281, (141.07, 112.523, 57.061)), ('B', 1074, u'THR', 0.5699496585652783, (136.942, 124.51700000000001, 48.734)), ('B', 1086, u'PHE', 0.5898744787691901, (125.229, 125.483, 44.711)), ('B', 1091, u'VAL', 0.5984704725699316, (130.569, 120.399, 49.074)), ('B', 1102, u'THR', 0.6037431118292875, (131.08200000000002, 115.253, 47.468)), ('B', 1113, u'THR', 0.6438190424294133, (126.32799999999999, 118.509, 36.597)), ('B', 1135, u'TYR', 0.6485175851917055, (127.877, 119.67499999999998, 32.671)), ('B', 1302, u'NAG', 0.5465400791073778, (127.86999999999999, 133.39200000000002, 173.085)), ('B', 1310, u'EIC', 0.40329705011597566, (130.092, 132.425, 151.32500000000002)), ('A', 15, u'CYS', 0.6393999797631106, (73.699, 75.2, 158.563)), ('A', 47, u'VAL', 0.5937650498767028, (85.902, 109.687, 118.085)), ('A', 53, u'ASP', 0.4899933242698309, (93.04100000000001, 97.848, 130.60399999999998)), ('A', 80, u'ASP', 0.592937442124344, (75.60799999999999, 74.651, 140.88800000000003)), ('A', 141, u'LEU', 0.6702170967825987, (68.859, 81.792, 151.272)), ('A', 200, u'TYR', 0.5492995937044692, (89.612, 99.364, 146.041)), ('A', 204, u'TYR', 0.5643625498633082, (80.41900000000001, 97.861, 136.903)), ('A', 223, u'LEU', 0.5877002120211374, (78.827, 98.733, 131.32000000000002)), ('A', 278, u'LYS', 0.5764280828449538, (84.13, 104.06400000000001, 119.192)), ('A', 318, u'PHE', 0.594542627342864, (106.23700000000001, 86.44100000000002, 115.505)), ('A', 336, u'CYS', 0.5484307243747018, (126.386, 87.542, 157.29299999999998)), ('A', 350, u'VAL', 0.5077110518577491, (136.32700000000003, 109.033, 162.722)), ('A', 361, u'CYS', 0.5596020887751744, (127.32799999999999, 85.0, 153.406)), ('A', 379, u'CYS', 0.5110222239268408, (121.042, 103.87599999999999, 149.538)), ('A', 389, u'ASP', 0.46856211531852837, (116.922, 89.785, 144.76399999999998)), ('A', 395, u'VAL', 0.4987283774004504, (131.44299999999998, 94.336, 150.099)), ('A', 414, u'GLN', 0.4280262509033841, (128.833, 118.109, 151.787)), ('A', 419, u'ALA', 0.4564423778316821, (134.184, 115.705, 155.17399999999998)), ('A', 422, u'ASN', 0.4981746105179051, (138.339, 113.02, 158.515)), ('A', 473, u'TYR', 0.5846255096885654, (150.112, 122.47, 162.86700000000002)), ('A', 475, u'ALA', 0.6082613501323791, (148.907, 128.51, 161.67499999999998)), ('A', 492, u'LEU', 0.517596424399555, (143.369, 116.21300000000001, 167.20399999999998)), ('A', 497, u'PHE', 0.5135684957025579, (129.664, 112.998, 175.15800000000002)), ('A', 511, u'VAL', 0.5130515131242673, (128.189, 102.256, 159.191)), ('A', 542, u'ASN', 0.5206165366588932, (117.576, 85.48, 137.12800000000001)), ('A', 548, u'GLY', 0.42823655654731285, (115.849, 88.543, 131.507)), ('A', 563, u'GLN', 0.5635481708723497, (134.82700000000003, 86.556, 134.27399999999997)), ('A', 566, u'GLY', 0.4883853335222417, (129.736, 88.10799999999999, 128.167)), ('A', 609, u'ALA', 0.5549411361056984, (95.61999999999999, 84.968, 104.196)), ('A', 613, u'GLN', 0.5611847320325429, (108.498, 85.198, 105.681)), ('A', 648, u'GLY', 0.5480212871248767, (107.60799999999999, 82.46900000000001, 102.867)), ('A', 671, u'CYS', 0.5761709434790194, (100.45, 87.51700000000001, 93.265)), ('A', 690, u'ILE', 0.612967313647824, (93.96400000000001, 82.20700000000001, 95.056)), ('A', 698, u'ALA', 0.6213980606838534, (101.862, 86.973, 75.24400000000001)), ('A', 709, u'ILE', 0.5451316631626708, (109.149, 92.634, 54.247)), ('A', 710, u'ALA', 0.5114289774805385, (105.868, 93.70700000000001, 55.838)), ('A', 737, u'MET', 0.4620504854490025, (100.0, 129.12800000000001, 119.07499999999999)), ('A', 741, u'GLY', 0.4672130520971931, (98.538, 128.191, 123.038)), ('A', 760, u'LEU', 0.4342787186789029, (111.062, 126.684, 110.074)), ('A', 763, u'ALA', 0.44343019072121936, (111.77199999999999, 127.087, 104.86)), ('A', 774, u'ASN', 0.3959543363706775, (106.1, 126.239, 88.936)), ('A', 778, u'VAL', 0.4116378765614355, (104.166, 125.732, 82.88199999999999)), ('A', 816, u'GLU', 0.5786934063243776, (87.91600000000001, 120.819, 81.641)), ('A', 829, u'GLY', 0.49291904081835375, (92.85799999999999, 129.403, 100.786)), ('A', 840, u'ASP', 0.5980475718491033, (80.323, 123.68299999999999, 116.393)), ('A', 867, u'ILE', 0.4606143586154982, (94.759, 129.35800000000003, 83.95100000000001)), ('A', 874, u'LEU', 0.4845848571080982, (97.474, 128.192, 73.627)), ('A', 882, u'GLY', 0.36365112505723607, (100.776, 126.001, 63.963)), ('A', 899, u'MET', 0.4956751135193862, (98.229, 118.54100000000001, 58.775000000000006)), ('A', 923, u'GLN', 0.5603470393765098, (88.519, 109.232, 62.997)), ('A', 936, u'SER', 0.6164413233662485, (81.79700000000001, 111.009, 81.786)), ('A', 941, u'ALA', 0.5747337526849101, (92.23700000000001, 108.47, 85.27199999999999)), ('A', 972, u'SER', 0.5347642997644234, (99.60799999999999, 116.757, 127.804)), ('A', 976, u'ASP', 0.4025520246604197, (96.356, 120.95, 134.374)), ('A', 996, u'GLY', 0.4222754757473276, (108.60499999999999, 117.35499999999999, 121.929)), ('A', 1003, u'THR', 0.4457002392062796, (109.65599999999999, 116.62899999999999, 111.13199999999999)), ('A', 1018, u'SER', 0.4130897117786042, (107.225, 116.896, 87.6)), ('A', 1024, u'THR', 0.4136880207571532, (109.364, 120.70100000000001, 78.69)), ('A', 1046, u'LEU', 0.47432481879606014, (101.228, 114.51700000000001, 65.076)), ('A', 1063, u'THR', 0.4973913659506278, (99.284, 110.15599999999999, 67.051)), ('A', 1074, u'THR', 0.5837751282420072, (112.584, 92.44200000000001, 48.734)), ('A', 1084, u'ALA', 0.600246529779354, (123.394, 98.799, 40.41)), ('A', 1087, u'PRO', 0.5713188208882808, (115.9, 103.67899999999999, 45.550999999999995)), ('A', 1123, u'CYS', 0.6024877042010435, (126.631, 94.306, 39.866)), ('A', 2102, u'NAG', 0.5553195137933118, (119.897, 90.862, 169.68200000000002))]
data['rota'] = [('C', '  45 ', 'SER', 0.269692857755497, (129.658, 146.029, 121.128)), ('C', '  50 ', 'SER', 0.010642402048688382, (116.52100000000003, 141.558, 122.232)), ('C', '  97 ', 'LYS', 0.12289412906471744, (115.818, 175.685, 135.398)), ('C', ' 112 ', 'SER', 0.05009132595980622, (101.18, 156.23200000000006, 160.654)), ('C', ' 128 ', 'ILE', 0.21527353785998626, (115.917, 158.429, 152.034)), ('C', ' 187 ', 'LYS', 0.0, (117.477, 174.19200000000006, 130.542)), ('C', ' 205 ', 'SER', 0.2180968407712757, (118.604, 158.257, 135.853)), ('C', ' 221 ', 'SER', 0.2641330720312244, (118.919, 158.672, 125.461)), ('C', ' 298 ', 'GLU', 0.2919157304739831, (106.759, 143.014, 114.547)), ('C', ' 316 ', 'SER', 0.280636596089724, (101.45, 136.533, 114.137)), ('C', ' 359 ', 'SER', 0.003990900586359203, (82.79, 114.974, 151.945)), ('C', ' 452 ', 'LEU', 0.2948831590044935, (100.903, 97.193, 168.67599999999996)), ('C', ' 469 ', 'SER', 0.2508439126749853, (95.129, 87.998, 161.753)), ('C', ' 470 ', 'THR', 0.2729417844502304, (96.386, 86.44100000000003, 164.994)), ('C', ' 477 ', 'SER', 0.28971836365407067, (110.077, 73.473, 159.754)), ('C', ' 481 ', 'ASN', 0.08019273197689183, (99.994, 73.06300000000003, 166.334)), ('C', ' 533 ', 'LEU', 0.28438942988297705, (78.715, 133.717, 134.915)), ('C', ' 604 ', 'THR', 0.28019589836381337, (111.193, 155.135, 100.605)), ('C', ' 632 ', 'THR', 0.29404024217745545, (84.189, 144.651, 109.693)), ('C', ' 637 ', 'SER', 0.0049756580276383465, (92.294, 149.596, 113.038)), ('C', ' 695 ', 'SER', 0.19475530262918142, (97.337, 141.501, 83.59499999999998)), ('C', ' 713 ', 'THR', 0.25196414457417116, (110.379, 138.495, 53.763)), ('C', ' 755 ', 'SER', 0.29332959090439786, (128.72, 107.58000000000003, 116.327)), ('C', ' 776 ', 'GLN', 0.2946799254842365, (134.028, 118.101, 85.83699999999999)), ('C', ' 800 ', 'SER', 0.10928599979385085, (136.892, 139.555, 70.138)), ('C', ' 918 ', 'LYS', 0.2599039497068546, (127.443, 141.08, 55.251000000000005)), ('C', ' 926 ', 'SER', 0.010642402048688382, (125.637, 144.532, 67.109)), ('C', ' 998 ', 'LEU', 0.28766879074623647, (123.80800000000006, 117.93, 118.44499999999998)), ('C', '1069 ', 'GLU', 0.24685800638604818, (105.293, 139.12, 57.04999999999999)), ('C', '1074 ', 'THR', 0.28344112703489915, (96.976, 129.541, 48.723)), ('C', '1120 ', 'SER', 0.2942236238038987, (99.385, 112.031, 42.046)), ('C', '1136 ', 'ASP', 0.0, (108.94300000000003, 122.327, 31.768)), ('B', '  45 ', 'SER', 0.2693567521795264, (134.846, 87.96900000000002, 121.137)), ('B', '  50 ', 'SER', 0.010642402048688382, (137.55, 101.58, 122.24299999999998)), ('B', '  97 ', 'LYS', 0.12341702829584912, (167.445, 85.11000000000003, 135.414)), ('B', ' 112 ', 'SER', 0.04997046390876755, (157.925, 107.518, 160.668)), ('B', ' 128 ', 'ILE', 0.2149429253610907, (152.453, 93.66, 152.047)), ('B', ' 187 ', 'LYS', 0.0, (165.323, 84.42, 130.558)), ('B', ' 205 ', 'SER', 0.2166615913627125, (150.96299999999997, 91.42000000000004, 135.866)), ('B', ' 221 ', 'SER', 0.26202134751951395, (151.165, 90.939, 125.474)), ('B', ' 298 ', 'GLU', 0.2931738176162926, (143.698, 109.304, 114.559)), ('B', ' 316 ', 'SER', 0.27898389643105864, (140.743, 117.14300000000003, 114.148)), ('B', ' 359 ', 'SER', 0.003990900586359203, (131.40999999999994, 144.08700000000005, 151.955)), ('B', ' 469 ', 'SER', 0.2511898664886882, (101.878, 146.905, 161.758)), ('B', ' 470 ', 'THR', 0.27435484297411983, (99.901, 146.59500000000003, 164.999)), ('B', ' 477 ', 'SER', 0.2891564544421685, (81.823, 141.233, 159.755)), ('B', ' 481 ', 'ASN', 0.07978560325891756, (86.512, 150.167, 166.336)), ('B', ' 533 ', 'LEU', 0.28542513570424305, (149.68, 138.23500000000007, 134.929)), ('B', ' 604 ', 'THR', 0.2831933814081419, (151.975, 99.399, 100.618)), ('B', ' 632 ', 'THR', 0.29012673728393745, (156.411, 128.024, 109.708)), ('B', ' 637 ', 'SER', 0.004961224739281941, (156.635, 118.533, 113.052)), ('B', ' 695 ', 'SER', 0.19546515226038622, (147.109, 118.218, 83.607)), ('B', ' 713 ', 'THR', 0.24985768260792268, (137.985, 108.432, 53.774)), ('B', ' 755 ', 'SER', 0.2932700644880014, (102.02900000000002, 108.024, 116.331)), ('B', ' 776 ', 'GLN', 0.29187573001619865, (108.487, 98.16300000000001, 85.84200000000001)), ('B', ' 798 ', 'ASN', 0.14139296450143002, (127.004, 87.6, 65.46)), ('B', ' 800 ', 'SER', 0.1093713198693951, (125.631, 84.947, 70.146)), ('B', ' 918 ', 'LYS', 0.2586627723391775, (131.682, 92.36500000000002, 55.261)), ('B', ' 926 ', 'SER', 0.010642402048688382, (135.573, 92.20100000000001, 67.119)), ('B', ' 998 ', 'LEU', 0.29258456687659745, (113.44800000000002, 107.097, 118.45100000000001)), ('B', '1069 ', 'GLU', 0.246828994097499, (141.07000000000002, 112.52300000000002, 57.061)), ('B', '1074 ', 'THR', 0.28315938597593354, (136.942, 124.517, 48.73400000000001)), ('B', '1120 ', 'SER', 0.2932667050203122, (120.577, 131.195, 42.054)), ('B', '1136 ', 'ASP', 0.0, (124.70900000000005, 117.767, 31.777)), ('A', '  45 ', 'SER', 0.27151226615407165, (81.97600000000003, 112.499, 121.144)), ('A', '  50 ', 'SER', 0.010642402048688382, (92.41700000000003, 103.359, 122.247)), ('A', '  97 ', 'LYS', 0.12443566139775933, (63.219, 85.68300000000004, 135.418)), ('A', ' 112 ', 'SER', 0.05001099249196631, (87.389, 82.735, 160.67)), ('A', ' 128 ', 'ILE', 0.21527144151940736, (78.116, 94.399, 152.052)), ('A', ' 187 ', 'LYS', 0.0, (63.68099999999999, 87.867, 130.562)), ('A', ' 205 ', 'SER', 0.21729819491021546, (76.918, 96.81100000000004, 135.871)), ('A', ' 221 ', 'SER', 0.261588514953916, (76.399, 96.877, 125.479)), ('A', ' 298 ', 'GLU', 0.29107057157679006, (96.037, 94.177, 114.561)), ('A', ' 316 ', 'SER', 0.2808504591872035, (104.304, 92.82100000000003, 114.149)), ('A', ' 359 ', 'SER', 0.003990900586359203, (132.31199999999995, 87.443, 151.953)), ('A', ' 452 ', 'LEU', 0.2959290650894939, (138.65600000000003, 112.02, 168.68199999999996)), ('A', ' 469 ', 'SER', 0.2531240082485688, (149.50500000000002, 111.619, 161.757)), ('A', ' 470 ', 'THR', 0.276180490471618, (150.225, 113.486, 164.998)), ('A', ' 477 ', 'SER', 0.28864425041170394, (154.607, 131.827, 159.757)), ('A', ' 481 ', 'ASN', 0.07834791169259546, (160.006, 123.301, 166.336)), ('A', ' 533 ', 'LEU', 0.28427931479098123, (118.11599999999999, 74.54100000000003, 134.925)), ('A', ' 604 ', 'THR', 0.2844066042242401, (83.321, 91.955, 100.621)), ('A', ' 632 ', 'THR', 0.29489818742066537, (105.906, 73.814, 109.706)), ('A', ' 637 ', 'SER', 0.005021468140040642, (97.571, 78.359, 113.052)), ('A', ' 695 ', 'SER', 0.19458481684095458, (102.054, 86.774, 83.60800000000002)), ('A', ' 713 ', 'THR', 0.25101789967203847, (98.129, 99.571, 53.777)), ('A', ' 755 ', 'SER', 0.29460870748518064, (115.74000000000002, 130.915, 116.33799999999998)), ('A', ' 776 ', 'GLN', 0.2923009404821938, (103.969, 130.25, 85.85)), ('A', ' 800 ', 'SER', 0.10907778264161176, (83.95500000000003, 122.001, 70.155)), ('A', ' 918 ', 'LYS', 0.2602889465612269, (87.357, 113.056, 55.267)), ('A', ' 926 ', 'SER', 0.010642402048688382, (85.273, 109.765, 67.125)), ('A', ' 998 ', 'LEU', 0.2838178092699838, (109.23400000000005, 121.48500000000003, 118.457)), ('A', '1069 ', 'GLU', 0.24929990292291382, (100.132, 94.855, 57.063)), ('A', '1074 ', 'THR', 0.28185743852949796, (112.584, 92.442, 48.73400000000001)), ('A', '1120 ', 'SER', 0.2943443656700144, (126.542, 103.285, 42.055)), ('A', '1136 ', 'ASP', 0.0, (112.844, 106.414, 31.779))]
data['clusters'] = [('C', '106', 1, 'smoc Outlier', (106.21700000000001, 156.503, 148.23399999999998)), ('C', '117', 1, 'smoc Outlier', (109.74400000000001, 155.876, 151.93)), ('C', '118', 1, 'backbone clash', (113.449, 159.011, 152.206)), ('C', '127', 1, 'smoc Outlier', (117.94800000000001, 161.599, 152.58700000000002)), ('C', '128', 1, 'Rotamer\nbackbone clash\nDihedral angle:CA:C\ncablam Outlier', (115.91700000000002, 158.429, 152.034)), ('C', '129', 1, 'Dihedral angle:N:CA\ncablam Outlier', (114.906, 157.346, 155.524)), ('C', '231', 1, 'side-chain clash', (110.009, 150.036, 150.265)), ('C', '232', 1, 'smoc Outlier', (111.068, 145.707, 151.786)), ('C', '233', 1, 'side-chain clash', (110.009, 150.036, 150.265)), ('C', '237', 1, 'Dihedral angle:CD:NE:CZ:NH1', (100.926, 155.536, 145.61499999999998)), ('C', '100', 2, 'side-chain clash', (115.841, 143.08, 55.544)), ('C', '1069', 2, 'Rotamer\nsmoc Outlier', (105.293, 139.12, 57.04999999999999)), ('C', '1106', 2, 'cablam Outlier', (111.4, 133.0, 53.3)), ('C', '1405', 2, 'Bond angle:C1:C2:C3', (101.4, 140.608, 57.553)), ('C', '481', 2, 'Rotamer\nside-chain clash\nsmoc Outlier', (107.876, 137.973, 56.198)), ('C', '560', 2, 'side-chain clash', (115.381, 142.839, 55.736)), ('C', '563', 2, 'side-chain clash\nsmoc Outlier', (115.381, 142.839, 55.736)), ('C', '568', 2, 'side-chain clash', (119.957, 143.918, 56.093)), ('C', '572', 2, 'side-chain clash', (119.957, 143.918, 56.093)), ('C', '713', 2, 'Rotamer', (110.379, 138.495, 53.763)), ('C', '308', 3, 'smoc Outlier', (112.95700000000001, 146.141, 105.67399999999999)), ('C', '309', 3, 'side-chain clash\nsmoc Outlier', (110.592, 143.485, 102.44)), ('C', '310', 3, 'cablam CA Geom Outlier', (110.0, 145.7, 99.5)), ('C', '313', 3, 'side-chain clash', (110.592, 143.485, 102.44)), ('C', '599', 3, 'side-chain clash', (108.27, 148.695, 102.114)), ('C', '600', 3, 'cablam Outlier', (107.2, 149.2, 99.8)), ('C', '601', 3, 'side-chain clash', (108.27, 148.695, 102.114)), ('C', '262', 4, 'cablam Outlier', (108.7, 176.6, 136.1)), ('C', '263', 4, 'side-chain clash', (105.306, 173.532, 138.918)), ('C', '67', 4, 'side-chain clash', (102.522, 177.355, 136.86)), ('C', '78', 4, 'side-chain clash', (102.522, 177.355, 136.86)), ('C', '79', 4, 'smoc Outlier', (100.506, 174.142, 141.82700000000003)), ('C', '80', 4, 'smoc Outlier', (100.069, 170.475, 140.87)), ('C', '1042', 5, 'cablam Outlier', (114.0, 131.3, 71.8)), ('C', '1047', 5, 'smoc Outlier', (124.616, 128.195, 67.59700000000001)), ('C', '1063', 5, 'smoc Outlier', (118.96900000000001, 132.20399999999998, 67.038)), ('C', '898', 5, 'side-chain clash', (128.793, 125.701, 63.824)), ('C', '902', 5, 'side-chain clash', (128.793, 125.701, 63.824)), ('C', '1403', 6, 'Bond angle:C2:C1:O5\nPlanar group:C2:C7:C8:N2:O7', (85.021, 136.202, 99.326)), ('C', '643', 6, 'cablam Outlier', (88.7, 146.6, 99.4)), ('C', '644', 6, 'cablam Outlier', (87.6, 143.0, 100.4)), ('C', '646', 6, 'Dihedral angle:CD:NE:CZ:NH1', (89.076, 137.063, 97.87599999999999)), ('C', '648', 6, 'smoc Outlier', (90.832, 138.847, 102.85499999999999)), ('C', '281', 7, 'Dihedral angle:CB:CG:CD:OE1', (131.126, 150.045, 118.607)), ('C', '283', 7, 'smoc Outlier', (129.098, 150.029, 123.71700000000001)), ('C', '285', 7, 'smoc Outlier', (122.657, 152.127, 122.971)), ('C', '45', 7, 'Rotamer', (129.658, 146.029, 121.128)), ('C', '1136', 8, 'Rotamer\nside-chain clash', (106.635, 151.503, 165.378)), ('C', '1402', 8, 'Planar group:C2:C7:C8:N2:O7', (109.163, 146.47899999999998, 164.60999999999999)), ('C', '789', 8, 'side-chain clash', (105.352, 153.405, 166.658)), ('C', '792', 8, 'side-chain clash', (105.352, 153.405, 166.658)), ('C', '664', 9, 'smoc Outlier', (104.02799999999999, 142.612, 94.94800000000001)), ('C', '666', 9, 'cablam Outlier', (98.9, 139.3, 97.3)), ('C', '667', 9, 'cablam Outlier', (96.7, 136.5, 95.9)), ('C', '661', 10, 'smoc Outlier', (101.839, 143.64399999999998, 85.903)), ('C', '695', 10, 'Rotamer', (97.337, 141.501, 83.59499999999998)), ('C', '696', 10, 'smoc Outlier', (98.093, 138.354, 81.62799999999999)), ('C', '403', 11, 'Dihedral angle:CD:NE:CZ:NH1', (107.617, 105.371, 166.74899999999997)), ('C', '406', 11, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (109.924, 104.88199999999999, 161.71299999999997)), ('C', '504', 11, 'smoc Outlier', (113.49600000000001, 108.277, 168.555)), ('C', '994', 12, 'smoc Outlier', (125.04700000000001, 118.516, 124.393)), ('C', '997', 12, 'smoc Outlier', (123.71100000000001, 121.394, 120.008)), ('C', '998', 12, 'Rotamer', (123.80800000000006, 117.93, 118.44499999999998)), ('C', '122', 13, 'backbone clash\ncablam Outlier', (121.167, 168.525, 151.932)), ('C', '124', 13, 'smoc Outlier', (122.702, 170.36800000000002, 151.21599999999998)), ('C', '125', 13, 'backbone clash', (121.167, 168.525, 151.932)), ('C', '414', 14, 'cablam Outlier\nsmoc Outlier', (111.1, 102.7, 151.8)), ('C', '415', 14, 'cablam Outlier', (111.4, 99.0, 152.7)), ('C', '420', 14, 'Dihedral angle:CA:CB:CG:OD1', (106.66, 95.458, 154.661)), ('C', '324', 15, 'side-chain clash', (81.941, 139.183, 132.677)), ('C', '533', 15, 'Rotamer', (78.715, 133.717, 134.915)), ('C', '534', 15, 'side-chain clash', (81.941, 139.183, 132.677)), ('C', '703', 16, 'cablam Outlier', (92.7, 136.1, 61.2)), ('C', '704', 16, 'Dihedral angle:CA:C\ncablam Outlier', (92.468, 132.563, 59.726000000000006)), ('C', '705', 16, 'Dihedral angle:N:CA', (90.91600000000001, 132.63899999999998, 56.342)), ('C', '469', 17, 'Rotamer', (95.129, 87.998, 161.753)), ('C', '470', 17, 'Rotamer', (96.386, 86.44100000000003, 164.994)), ('C', '471', 17, 'smoc Outlier', (98.10499999999999, 83.20100000000001, 163.997)), ('C', '158', 18, 'Dihedral angle:CD:NE:CZ:NH1', (106.979, 170.967, 156.04399999999998)), ('C', '159', 18, 'cablam Outlier', (106.5, 167.3, 155.0)), ('C', '160', 18, 'smoc Outlier', (105.563, 165.178, 157.966)), ('C', '864', 19, 'smoc Outlier', (139.05700000000002, 129.65, 87.866)), ('C', '865', 19, 'Dihedral angle:CB:CG:CD:OE1', (142.007, 129.784, 85.46300000000001)), ('C', '866', 19, 'smoc Outlier', (141.593, 126.117, 84.534)), ('C', '452', 20, 'Rotamer\nside-chain clash', (101.571, 95.005, 172.157)), ('C', '494', 20, 'side-chain clash', (101.571, 95.005, 172.157)), ('C', '496', 21, 'cablam Outlier', (106.8, 100.7, 175.5)), ('C', '497', 21, 'cablam Outlier', (106.2, 104.5, 175.2)), ('C', '350', 22, 'smoc Outlier', (99.48, 100.702, 162.71499999999997)), ('C', '400', 22, 'smoc Outlier', (97.71900000000001, 105.60199999999999, 163.201)), ('C', '549', 23, 'cablam CA Geom Outlier', (91.0, 131.3, 129.0)), ('C', '550', 23, 'smoc Outlier', (88.254, 131.594, 126.40700000000001)), ('C', '822', 24, 'backbone clash', (127.727, 144.023, 84.341)), ('C', '935', 24, 'backbone clash', (127.727, 144.023, 84.341)), ('C', '520', 25, 'side-chain clash', (83.411, 112.808, 139.369)), ('C', '521', 25, 'side-chain clash\ncablam Outlier', (83.411, 112.808, 139.369)), ('C', '981', 26, 'smoc Outlier', (128.505, 123.474, 140.18)), ('C', '982', 26, 'Dihedral angle:CA:CB:CG:OD1', (130.194, 120.18599999999999, 141.031)), ('C', '276', 27, 'smoc Outlier', (115.286, 145.147, 120.232)), ('C', '50', 27, 'Rotamer', (116.52100000000003, 141.558, 122.232)), ('C', '1012', 28, 'smoc Outlier', (122.832, 119.607, 97.053)), ('C', '1013', 28, 'smoc Outlier', (120.194, 117.67799999999998, 95.099)), ('C', '918', 29, 'Rotamer', (127.443, 141.08, 55.251000000000005)), ('C', '920', 29, 'smoc Outlier', (124.023, 138.86200000000002, 58.912)), ('C', '314', 30, 'side-chain clash', (99.584, 136.898, 105.323)), ('C', '596', 30, 'side-chain clash', (99.584, 136.898, 105.323)), ('C', '111', 31, 'Dihedral angle:CA:CB:CG:OD1', (99.751, 157.687, 157.434)), ('C', '112', 31, 'Rotamer', (101.18, 156.23200000000006, 160.654)), ('C', '398', 32, 'smoc Outlier', (94.113, 107.269, 157.36)), ('C', '512', 32, 'smoc Outlier', (97.718, 110.3, 155.465)), ('C', '108', 33, 'side-chain clash\ncablam Outlier', (98.166, 151.845, 152.042)), ('C', '109', 33, 'side-chain clash', (98.166, 151.845, 152.042)), ('C', '386', 34, 'smoc Outlier', (98.077, 125.538, 145.268)), ('C', '389', 34, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (92.51400000000001, 127.12899999999999, 144.753)), ('C', '574', 35, 'smoc Outlier', (85.97, 121.728, 125.367)), ('C', '575', 35, 'smoc Outlier', (82.902, 121.364, 127.614)), ('C', '1039', 36, 'cablam Outlier', (115.7, 124.3, 74.7)), ('C', '1040', 36, 'cablam Outlier', (118.7, 126.2, 73.3)), ('C', '187', 37, 'Rotamer', (117.477, 174.19200000000006, 130.542)), ('C', '97', 37, 'Rotamer', (115.818, 175.685, 135.398)), ('C', '754', 38, 'cablam Outlier', (130.2, 109.2, 119.4)), ('C', '755', 38, 'Rotamer', (128.72, 107.58000000000003, 116.327)), ('C', '461', 39, 'side-chain clash', (98.171, 94.561, 152.484)), ('C', '465', 39, 'side-chain clash', (98.171, 94.561, 152.484)), ('C', '881', 40, 'smoc Outlier', (135.691, 122.846, 63.26800000000001)), ('C', '891', 40, 'smoc Outlier', (138.02200000000002, 118.68199999999999, 60.71)), ('C', '956', 41, 'smoc Outlier', (126.69, 129.024, 108.691)), ('C', '959', 41, 'smoc Outlier', (124.71600000000001, 127.871, 113.18499999999999)), ('C', '485', 42, 'Dihedral angle:CA:C', (107.482, 76.853, 171.444)), ('C', '486', 42, 'Dihedral angle:N:CA', (110.988, 77.96300000000001, 170.541)), ('C', '476', 43, 'smoc Outlier', (111.56400000000001, 76.59100000000001, 161.298)), ('C', '477', 43, 'Rotamer', (110.077, 73.473, 159.754)), ('C', '805', 44, 'side-chain clash\nbackbone clash\nDihedral angle:CA:CB:CG:OD1', (143.227, 138.568, 75.516)), ('C', '807', 44, 'backbone clash', (145.957, 138.654, 77.632)), ('B', '1304', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5', (148.602, 131.51, 99.42)), ('B', '314', 1, 'side-chain clash', (142.012, 118.397, 105.286)), ('B', '316', 1, 'Rotamer', (140.743, 117.14300000000003, 114.148)), ('B', '595', 1, 'smoc Outlier', (144.491, 119.48100000000001, 109.26700000000001)), ('B', '596', 1, 'side-chain clash\nsmoc Outlier', (142.012, 118.397, 105.286)), ('B', '597', 1, 'smoc Outlier', (146.278, 113.452, 106.111)), ('B', '609', 1, 'smoc Outlier', (151.88500000000002, 113.543, 104.195)), ('B', '613', 1, 'smoc Outlier', (145.254, 124.585, 105.68199999999999)), ('B', '641', 1, 'smoc Outlier', (159.99800000000002, 118.758, 102.21300000000001)), ('B', '643', 1, 'cablam Outlier', (155.8, 123.2, 99.4)), ('B', '644', 1, 'cablam Outlier', (153.3, 125.9, 100.4)), ('B', '646', 1, 'Dihedral angle:CD:NE:CZ:NH1', (147.399, 127.59100000000001, 97.889)), ('B', '647', 1, 'smoc Outlier', (145.49, 125.096, 100.057)), ('B', '648', 1, 'smoc Outlier', (148.063, 125.17699999999999, 102.868)), ('B', '666', 1, 'cablam Outlier', (144.5, 118.0, 97.3)), ('B', '667', 1, 'cablam Outlier', (143.1, 121.2, 95.9)), ('B', '671', 1, 'smoc Outlier', (147.266, 116.456, 93.26400000000001)), ('B', '692', 1, 'smoc Outlier', (152.187, 118.17399999999999, 91.286)), ('B', '108', 2, 'side-chain clash\ncablam Outlier\nsmoc Outlier', (153.089, 113.512, 150.459)), ('B', '109', 2, 'side-chain clash', (153.089, 113.512, 150.459)), ('B', '118', 2, 'backbone clash\nside-chain clash', (153.307, 113.345, 150.133)), ('B', '324', 2, 'side-chain clash', (153.529, 112.928, 149.466)), ('B', '520', 2, 'side-chain clash', (153.462, 113.368, 151.032)), ('B', '521', 2, 'side-chain clash\ncablam Outlier', (153.462, 113.368, 151.032)), ('B', '534', 2, 'side-chain clash\nsmoc Outlier', (153.529, 112.928, 149.466)), ('B', '789', 2, 'side-chain clash', (149.509, 112.928, 148.958)), ('B', '792', 2, 'side-chain clash', (149.509, 112.928, 148.958)), ('B', '807', 2, 'backbone clash\nside-chain clash', (150.747, 112.588, 149.449)), ('B', '106', 3, 'smoc Outlier', (155.641, 103.02199999999999, 148.248)), ('B', '193', 3, 'smoc Outlier', (151.471, 97.801, 136.29299999999998)), ('B', '204', 3, 'smoc Outlier', (148.305, 93.929, 136.89800000000002)), ('B', '205', 3, 'Rotamer', (150.96299999999997, 91.42000000000004, 135.866)), ('B', '237', 3, 'Dihedral angle:CD:NE:CZ:NH1', (157.45200000000003, 108.086, 145.629)), ('B', '84', 3, 'smoc Outlier', (161.76899999999998, 107.607, 141.654)), ('B', '86', 3, 'smoc Outlier', (155.086, 107.90700000000001, 141.183)), ('B', '88', 3, 'cablam Outlier\nsmoc Outlier', (149.7, 108.7, 138.3)), ('B', '90', 3, 'smoc Outlier', (153.755, 103.07, 136.88200000000003)), ('B', '1301', 4, 'Planar group:C2:C7:C8:N2:O7', (129.946, 82.17899999999999, 62.364)), ('B', '798', 4, 'Rotamer\nC-beta\nside-chain clash\nBond angle:CA:CB:CG\nBond angle:CB:CG:ND2\nBond angle:OD1:CG:ND2', (127.004, 87.6, 65.46000000000001)), ('B', '800', 4, 'Rotamer', (125.631, 84.947, 70.146)), ('B', '918', 4, 'Rotamer', (131.682, 92.36500000000002, 55.261)), ('B', '921', 4, 'smoc Outlier', (130.252, 93.107, 60.29800000000001)), ('B', '924', 4, 'smoc Outlier', (131.208, 94.865, 64.998)), ('B', '925', 4, 'smoc Outlier', (132.071, 91.301, 65.979)), ('B', '926', 4, 'Rotamer', (135.573, 92.20100000000001, 67.119)), ('B', '111', 5, 'Dihedral angle:CA:CB:CG:OD1', (159.901, 108.027, 157.448)), ('B', '112', 5, 'Rotamer', (157.925, 107.518, 160.668)), ('B', '133', 5, 'smoc Outlier', (157.915, 102.405, 158.617)), ('B', '135', 5, 'smoc Outlier', (163.11399999999998, 103.043, 156.238)), ('B', '15', 5, 'smoc Outlier', (171.291, 99.421, 158.561)), ('B', '158', 5, 'Dihedral angle:CD:NE:CZ:NH1', (167.781, 95.12299999999999, 156.06)), ('B', '159', 5, 'cablam Outlier', (164.9, 97.3, 155.0)), ('B', '309', 6, 'side-chain clash', (142.202, 105.725, 102.538)), ('B', '310', 6, 'cablam CA Geom Outlier', (144.4, 105.2, 99.5)), ('B', '313', 6, 'side-chain clash', (142.202, 105.725, 102.538)), ('B', '599', 6, 'side-chain clash', (147.368, 105.405, 102.593)), ('B', '600', 6, 'cablam Outlier', (148.9, 105.8, 99.9)), ('B', '601', 6, 'side-chain clash', (147.368, 105.405, 102.593)), ('B', '1069', 7, 'Rotamer\nsmoc Outlier', (141.07000000000002, 112.52300000000002, 57.061)), ('B', '1106', 7, 'cablam Outlier', (132.7, 110.3, 53.3)), ('B', '1305', 7, 'Dihedral angle:C2:C1:O5:C5\nDihedral angle:C3:C1:C2:O5\nDihedral angle:C1:C5:O5:C4', (144.45100000000002, 116.266, 57.63)), ('B', '481', 7, 'Rotamer\nside-chain clash', (139.142, 110.665, 56.329)), ('B', '713', 7, 'Rotamer', (137.985, 108.432, 53.774)), ('B', '350', 8, 'smoc Outlier', (110.7, 136.78, 162.721)), ('B', '402', 8, 'smoc Outlier', (111.91000000000001, 130.69299999999998, 165.344)), ('B', '403', 8, 'Dihedral angle:CD:NE:CZ:NH1', (110.669, 127.399, 166.755)), ('B', '405', 8, 'smoc Outlier', (109.282, 122.539, 163.95600000000002)), ('B', '406', 8, 'Dihedral angle:CB:CG:CD:OE1', (109.092, 125.646, 161.71899999999997)), ('B', '100', 9, 'side-chain clash', (170.331, 91.961, 139.949)), ('B', '262', 9, 'cablam Outlier', (171.8, 90.8, 136.1)), ('B', '263', 9, 'side-chain clash\nsmoc Outlier', (171.259, 94.582, 138.435)), ('B', '67', 9, 'side-chain clash', (175.302, 95.511, 137.161)), ('B', '78', 9, 'side-chain clash', (175.302, 95.511, 137.161)), ('B', '187', 10, 'Rotamer', (165.323, 84.42, 130.558)), ('B', '189', 10, 'cablam Outlier\nsmoc Outlier', (160.3, 89.3, 131.5)), ('B', '210', 10, 'smoc Outlier', (161.57899999999998, 86.16, 126.12599999999999)), ('B', '97', 10, 'Rotamer', (167.445, 85.11000000000003, 135.414)), ('B', '411', 11, 'smoc Outlier', (112.495, 127.342, 151.689)), ('B', '414', 11, 'cablam Outlier', (106.6, 125.8, 151.8)), ('B', '415', 11, 'cablam Outlier', (103.3, 127.3, 152.7)), ('B', '420', 11, 'Dihedral angle:CA:CB:CG:OD1', (102.568, 133.18800000000002, 154.666)), ('B', '201', 12, 'smoc Outlier', (145.863, 99.96100000000001, 144.98600000000002)), ('B', '231', 12, 'side-chain clash', (147.961, 103.247, 150.669)), ('B', '232', 12, 'smoc Outlier', (143.865, 104.224, 151.797)), ('B', '233', 12, 'side-chain clash', (147.961, 103.247, 150.669)), ('B', '452', 13, 'side-chain clash', (104.884, 137.633, 172.148)), ('B', '493', 13, 'smoc Outlier', (101.596, 136.42700000000002, 169.612)), ('B', '494', 13, 'side-chain clash', (104.884, 137.633, 172.148)), ('B', '122', 14, 'backbone clash\ncablam Outlier', (158.5, 84.007, 152.153)), ('B', '124', 14, 'smoc Outlier', (159.394, 81.81, 151.23)), ('B', '125', 14, 'backbone clash', (158.5, 84.007, 152.153)), ('B', '703', 15, 'cablam Outlier', (144.8, 124.9, 61.2)), ('B', '704', 15, 'Dihedral angle:CA:C\ncablam Outlier', (141.811, 126.90700000000001, 59.73800000000001)), ('B', '705', 15, 'Dihedral angle:N:CA', (142.655, 128.21299999999997, 56.35399999999999)), ('B', '336', 16, 'smoc Outlier', (134.284, 138.903, 157.295)), ('B', '359', 16, 'Rotamer', (131.40999999999994, 144.08700000000005, 151.955)), ('B', '361', 16, 'smoc Outlier', (136.017, 140.98800000000003, 153.40800000000002)), ('B', '1113', 17, 'smoc Outlier', (126.32799999999999, 118.509, 36.597)), ('B', '1135', 17, 'smoc Outlier', (127.877, 119.67499999999998, 32.671)), ('B', '1136', 17, 'Rotamer', (124.70900000000005, 117.767, 31.777)), ('B', '559', 18, 'smoc Outlier', (134.086, 149.935, 130.31)), ('B', '560', 18, 'side-chain clash', (131.945, 150.11, 131.023)), ('B', '563', 18, 'side-chain clash\nsmoc Outlier', (131.945, 150.11, 131.023)), ('B', '952', 19, 'smoc Outlier', (122.41900000000001, 100.17099999999999, 102.384)), ('B', '956', 19, 'smoc Outlier', (121.612, 99.05, 108.698)), ('B', '496', 20, 'cablam Outlier', (107.1, 130.5, 175.5)), ('B', '497', 20, 'cablam Outlier', (110.6, 129.0, 175.2)), ('B', '695', 21, 'Rotamer', (147.109, 118.218, 83.607)), ('B', '696', 21, 'smoc Outlier', (144.006, 119.139, 81.64)), ('B', '1074', 22, 'Rotamer\nsmoc Outlier', (136.942, 124.517, 48.73400000000001)), ('B', '709', 22, 'smoc Outlier', (138.49, 121.44400000000002, 54.246)), ('B', '281', 23, 'Dihedral angle:CB:CG:CD:OE1', (137.59, 84.689, 118.617)), ('B', '45', 23, 'Rotamer', (134.846, 87.96900000000002, 121.137)), ('B', '822', 24, 'backbone clash', (134.943, 90.958, 84.286)), ('B', '935', 24, 'backbone clash', (134.943, 90.958, 84.286)), ('B', '981', 25, 'smoc Outlier', (115.893, 100.255, 140.186)), ('B', '982', 25, 'Dihedral angle:CA:CB:CG:OD1', (112.20100000000001, 100.438, 141.037)), ('B', '1091', 26, 'smoc Outlier', (130.569, 120.399, 49.074)), ('B', '1102', 26, 'smoc Outlier', (131.08200000000002, 115.253, 47.468)), ('B', '1026', 27, 'smoc Outlier', (115.45400000000001, 102.636, 76.68799999999999)), ('B', '1031', 27, 'cablam Outlier', (113.3, 101.5, 70.4)), ('B', '128', 28, 'Rotamer\nbackbone clash\nside-chain clash\nDihedral angle:CA:C\ncablam Outlier', (152.453, 93.66, 152.047)), ('B', '129', 28, 'Dihedral angle:N:CA\ncablam Outlier', (152.02100000000002, 95.077, 155.537)), ('B', '1042', 29, 'cablam Outlier', (130.0, 108.9, 71.8)), ('B', '1063', 29, 'smoc Outlier', (128.237, 104.143, 67.04700000000001)), ('B', '898', 30, 'side-chain clash\nsmoc Outlier', (117.483, 98.897, 63.696)), ('B', '902', 30, 'side-chain clash', (117.483, 98.897, 63.696)), ('B', '568', 31, 'side-chain clash', (132.135, 134.255, 122.581)), ('B', '572', 31, 'side-chain clash\nsmoc Outlier', (132.135, 134.255, 122.581)), ('B', '975', 32, 'side-chain clash', (117.666, 93.693, 135.351)), ('B', '979', 32, 'side-chain clash', (117.666, 93.693, 135.351)), ('B', '1039', 33, 'cablam Outlier\nsmoc Outlier', (123.1, 111.0, 74.7)), ('B', '1040', 33, 'cablam Outlier', (123.2, 107.4, 73.3)), ('B', '632', 34, 'Rotamer', (156.411, 128.024, 109.708)), ('B', '634', 34, 'smoc Outlier', (151.914, 125.91900000000001, 113.96100000000001)), ('B', '469', 35, 'Rotamer', (101.878, 146.905, 161.758)), ('B', '470', 35, 'Rotamer', (99.901, 146.59500000000003, 164.999)), ('B', '754', 36, 'cablam Outlier', (102.7, 105.9, 119.4)), ('B', '755', 36, 'Rotamer', (102.02900000000002, 108.024, 116.331)), ('B', '461', 37, 'side-chain clash', (105.881, 140.638, 152.923)), ('B', '465', 37, 'side-chain clash', (105.881, 140.638, 152.923)), ('B', '816', 38, 'smoc Outlier', (124.67499999999998, 88.96700000000001, 81.634)), ('B', '817', 38, 'smoc Outlier', (126.339, 86.113, 83.533)), ('B', '485', 39, 'Dihedral angle:CA:C', (86.045, 141.788, 171.446)), ('B', '486', 39, 'Dihedral angle:N:CA', (85.252, 138.197, 170.54299999999998)), ('A', '1069', 1, 'Rotamer', (100.132, 94.855, 57.063)), ('A', '1074', 1, 'Rotamer\nsmoc Outlier', (112.584, 92.442, 48.73400000000001)), ('A', '1106', 1, 'cablam Outlier', (102.4, 103.2, 53.3)), ('A', '263', 1, 'side-chain clash', (99.872, 97.595, 56.295)), ('A', '67', 1, 'side-chain clash', (99.872, 97.595, 56.295)), ('A', '709', 1, 'smoc Outlier', (109.149, 92.634, 54.247)), ('A', '710', 1, 'smoc Outlier', (105.868, 93.70700000000001, 55.838)), ('A', '713', 1, 'Rotamer', (98.129, 99.571, 53.777)), ('A', '2104', 2, 'Bond angle:C2:C1:O5\nPlanar group:C2:C7:C8:N2:O7', (111.41600000000001, 76.112, 99.691)), ('A', '314', 2, 'side-chain clash', (104.836, 91.05, 105.232)), ('A', '596', 2, 'side-chain clash', (104.836, 91.05, 105.232)), ('A', '613', 2, 'smoc Outlier', (108.498, 85.198, 105.681)), ('A', '643', 2, 'cablam Outlier', (102.0, 76.8, 99.4)), ('A', '644', 2, 'cablam Outlier', (105.6, 77.6, 100.4)), ('A', '646', 2, 'Dihedral angle:CD:NE:CZ:NH1', (110.03, 81.84, 97.88799999999999)), ('A', '648', 2, 'smoc Outlier', (107.60799999999999, 82.46900000000001, 102.867)), ('A', '350', 3, 'smoc Outlier', (136.32700000000003, 109.033, 162.722)), ('A', '414', 3, 'cablam Outlier\nsmoc Outlier', (128.8, 118.1, 151.8)), ('A', '415', 3, 'cablam Outlier', (131.9, 120.2, 152.7)), ('A', '419', 3, 'smoc Outlier', (134.184, 115.705, 155.17399999999998)), ('A', '420', 3, 'Dihedral angle:CA:CB:CG:OD1', (137.27599999999998, 117.87299999999999, 154.667)), ('A', '422', 3, 'smoc Outlier', (138.339, 113.02, 158.515)), ('A', '309', 4, 'side-chain clash', (93.698, 97.236, 102.546)), ('A', '310', 4, 'cablam CA Geom Outlier', (92.2, 95.6, 99.5)), ('A', '313', 4, 'side-chain clash', (93.698, 97.236, 102.546)), ('A', '599', 4, 'side-chain clash', (90.401, 92.717, 102.111)), ('A', '600', 4, 'cablam Outlier', (90.4, 91.5, 99.9)), ('A', '601', 4, 'side-chain clash', (90.401, 92.717, 102.111)), ('A', '204', 5, 'smoc Outlier', (80.41900000000001, 97.861, 136.903)), ('A', '205', 5, 'Rotamer', (76.918, 96.81100000000004, 135.871)), ('A', '221', 5, 'Rotamer', (76.399, 96.877, 125.479)), ('A', '223', 5, 'smoc Outlier', (78.827, 98.733, 131.32000000000002)), ('A', '805', 6, 'side-chain clash\nbackbone clash\nDihedral angle:CA:CB:CG:OD1', (81.642, 127.98, 75.533)), ('A', '807', 6, 'backbone clash', (80.081, 130.189, 77.42)), ('A', '810', 6, 'backbone clash', (84.507, 128.044, 81.5)), ('A', '812', 6, 'backbone clash', (84.507, 128.044, 81.5)), ('A', '278', 7, 'smoc Outlier', (84.13, 104.06400000000001, 119.192)), ('A', '281', 7, 'Dihedral angle:CB:CG:CD:OE1', (77.763, 111.762, 118.624)), ('A', '45', 7, 'Rotamer', (81.97600000000003, 112.499, 121.144)), ('A', '47', 7, 'smoc Outlier', (85.902, 109.687, 118.085)), ('A', '882', 8, 'smoc Outlier', (100.776, 126.001, 63.963)), ('A', '898', 8, 'side-chain clash', (99.97, 121.861, 63.862)), ('A', '899', 8, 'smoc Outlier', (98.229, 118.54100000000001, 58.775000000000006)), ('A', '902', 8, 'side-chain clash', (99.97, 121.861, 63.862)), ('A', '141', 9, 'smoc Outlier', (68.859, 81.792, 151.272)), ('A', '15', 9, 'smoc Outlier', (73.699, 75.2, 158.563)), ('A', '158', 9, 'Dihedral angle:CD:NE:CZ:NH1', (71.728, 80.38799999999999, 156.063)), ('A', '159', 9, 'cablam Outlier', (75.1, 81.8, 155.0)), ('A', '666', 10, 'cablam Outlier', (103.2, 89.2, 97.3)), ('A', '667', 10, 'cablam Outlier', (106.7, 88.8, 95.9)), ('A', '671', 10, 'smoc Outlier', (100.45, 87.51700000000001, 93.265)), ('A', '452', 11, 'Rotamer\nside-chain clash', (140.093, 113.608, 172.204)), ('A', '492', 11, 'smoc Outlier', (143.369, 116.21300000000001, 167.20399999999998)), ('A', '494', 11, 'side-chain clash', (140.093, 113.608, 172.204)), ('A', '1084', 12, 'smoc Outlier', (123.394, 98.799, 40.41)), ('A', '1120', 12, 'Rotamer', (126.542, 103.285, 42.055)), ('A', '1123', 12, 'cablam Outlier\nsmoc Outlier', (126.6, 94.3, 39.9)), ('A', '542', 13, 'smoc Outlier', (117.576, 85.48, 137.12800000000001)), ('A', '548', 13, 'smoc Outlier', (115.849, 88.543, 131.507)), ('A', '549', 13, 'cablam CA Geom Outlier', (114.0, 86.3, 129.0)), ('A', '822', 14, 'backbone clash', (84.449, 111.051, 84.361)), ('A', '935', 14, 'backbone clash', (84.449, 111.051, 84.361)), ('A', '936', 14, 'smoc Outlier', (81.79700000000001, 111.009, 81.786)), ('A', '100', 15, 'side-chain clash', (68.061, 80.679, 139.797)), ('A', '262', 15, 'cablam Outlier', (65.9, 79.1, 136.1)), ('A', '78', 15, 'side-chain clash', (68.388, 73.248, 136.984)), ('A', '118', 16, 'backbone clash', (78.877, 92.026, 152.14)), ('A', '128', 16, 'Rotamer\nbackbone clash\nDihedral angle:CA:C\ncablam Outlier', (78.116, 94.399, 152.05200000000002)), ('A', '129', 16, 'Dihedral angle:N:CA\ncablam Outlier', (79.56, 94.065, 155.542)), ('A', '1042', 17, 'cablam Outlier', (102.6, 106.3, 71.8)), ('A', '1046', 17, 'smoc Outlier', (101.228, 114.51700000000001, 65.076)), ('A', '1063', 17, 'smoc Outlier', (99.284, 110.15599999999999, 67.051)), ('A', '324', 18, 'side-chain clash', (111.798, 74.73, 132.654)), ('A', '533', 18, 'Rotamer', (118.11599999999999, 74.54100000000003, 134.925)), ('A', '534', 18, 'side-chain clash', (111.798, 74.73, 132.654)), ('A', '316', 19, 'Rotamer', (104.304, 92.82100000000003, 114.149)), ('A', '318', 19, 'smoc Outlier', (106.23700000000001, 86.44100000000002, 115.505)), ('A', '592', 19, 'cablam Outlier', (111.9, 86.4, 115.5)), ('A', '703', 20, 'cablam Outlier', (109.0, 85.5, 61.2)), ('A', '704', 20, 'Dihedral angle:CA:C\ncablam Outlier', (112.224, 87.02799999999999, 59.737)), ('A', '705', 20, 'Dihedral angle:N:CA', (112.93400000000001, 85.645, 56.352999999999994)), ('A', '789', 21, 'side-chain clash', (85.167, 130.287, 66.42)), ('A', '791', 21, 'cablam Outlier', (83.7, 130.7, 61.7)), ('A', '792', 21, 'side-chain clash', (85.167, 130.287, 66.42)), ('A', '336', 22, 'smoc Outlier', (126.386, 87.542, 157.29299999999998)), ('A', '359', 22, 'Rotamer', (132.31199999999995, 87.443, 151.953)), ('A', '361', 22, 'smoc Outlier', (127.32799999999999, 85.0, 153.406)), ('A', '774', 23, 'smoc Outlier', (106.1, 126.239, 88.936)), ('A', '776', 23, 'Rotamer', (103.969, 130.25, 85.85)), ('A', '778', 23, 'smoc Outlier', (104.166, 125.732, 82.88199999999999)), ('A', '473', 24, 'smoc Outlier', (150.112, 122.47, 162.86700000000002)), ('A', '475', 24, 'smoc Outlier', (148.907, 128.51, 161.67499999999998)), ('A', '477', 24, 'Rotamer', (154.607, 131.827, 159.757)), ('A', '760', 25, 'smoc Outlier', (111.062, 126.684, 110.074)), ('A', '763', 25, 'smoc Outlier', (111.77199999999999, 127.087, 104.86)), ('A', '496', 26, 'cablam Outlier', (132.7, 115.3, 175.5)), ('A', '497', 26, 'cablam Outlier\nsmoc Outlier', (129.7, 113.0, 175.2)), ('A', '403', 27, 'Dihedral angle:CD:NE:CZ:NH1', (128.21599999999998, 113.745, 166.757)), ('A', '406', 27, 'Dihedral angle:CB:CG:CD:OE1', (127.48400000000001, 115.988, 161.721)), ('A', '520', 28, 'side-chain clash', (133.527, 89.464, 139.176)), ('A', '521', 28, 'side-chain clash\ncablam Outlier', (133.527, 89.464, 139.176)), ('A', '996', 29, 'smoc Outlier', (108.60499999999999, 117.35499999999999, 121.929)), ('A', '998', 29, 'Rotamer', (109.23400000000005, 121.48500000000003, 118.457)), ('A', '122', 30, 'backbone clash\ncablam Outlier', (66.614, 93.871, 152.011)), ('A', '125', 30, 'backbone clash', (66.614, 93.871, 152.011)), ('A', '923', 31, 'smoc Outlier', (88.519, 109.232, 62.997)), ('A', '926', 31, 'Rotamer', (85.273, 109.765, 67.125)), ('A', '698', 32, 'smoc Outlier', (101.862, 86.973, 75.24400000000001)), ('A', '700', 32, 'cablam Outlier', (104.3, 86.7, 69.0)), ('A', '111', 33, 'Dihedral angle:CA:CB:CG:OD1', (86.843, 80.77, 157.44899999999998)), ('A', '112', 33, 'Rotamer', (87.389, 82.735, 160.67)), ('A', '1136', 34, 'Rotamer\nside-chain clash', (89.236, 90.221, 165.196)), ('A', '2103', 34, 'Bond angle:C2:C1:O5\nBond angle:C2:N2:C7\nBond angle:C6:C5:O5\nPlanar group:C2:C7:C8:N2:O7', (88.31400000000001, 87.061, 169.999)), ('A', '108', 35, 'side-chain clash\ncablam Outlier', (92.909, 82.39, 152.099)), ('A', '109', 35, 'side-chain clash', (92.909, 82.39, 152.099)), ('A', '737', 36, 'smoc Outlier', (100.0, 129.12800000000001, 119.07499999999999)), ('A', '741', 36, 'smoc Outlier', (98.538, 128.191, 123.038)), ('A', '568', 37, 'side-chain clash', (123.401, 91.644, 122.662)), ('A', '572', 37, 'side-chain clash', (123.401, 91.644, 122.662)), ('A', '1039', 38, 'cablam Outlier', (107.8, 111.2, 74.7)), ('A', '1040', 38, 'cablam Outlier', (104.6, 112.9, 73.3)), ('A', '187', 39, 'Rotamer', (63.68099999999999, 87.867, 130.562)), ('A', '97', 39, 'Rotamer', (63.219, 85.68300000000004, 135.418)), ('A', '469', 40, 'Rotamer', (149.50500000000002, 111.619, 161.757)), ('A', '470', 40, 'Rotamer', (150.225, 113.486, 164.998)), ('A', '754', 41, 'cablam Outlier', (113.6, 131.4, 119.4)), ('A', '755', 41, 'Rotamer', (115.74000000000002, 130.915, 116.33799999999998)), ('A', '461', 42, 'side-chain clash', (142.201, 111.362, 152.769)), ('A', '465', 42, 'side-chain clash', (142.201, 111.362, 152.769)), ('A', '560', 43, 'side-chain clash', (137.276, 84.008, 131.175)), ('A', '563', 43, 'side-chain clash\nsmoc Outlier', (137.276, 84.008, 131.175)), ('A', '865', 44, 'Dihedral angle:CB:CG:CD:OE1', (89.861, 131.316, 85.479)), ('A', '867', 44, 'smoc Outlier', (94.759, 129.35800000000003, 83.95100000000001)), ('A', '231', 45, 'side-chain clash', (88.912, 104.694, 57.003)), ('A', '233', 45, 'side-chain clash', (88.912, 104.694, 57.003)), ('A', '485', 46, 'Dihedral angle:CA:C', (152.98000000000002, 127.89, 171.448)), ('A', '486', 46, 'Dihedral angle:N:CA', (150.265, 130.371, 170.545)), ('D', '1', 1, 'side-chain clash\nPlanar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nBond angle:C6:C5:O5\nBond angle:C2:C3:C4\nBond angle:C4:C5:C6\nBond angle:C3:C2:N2\nDihedral angle:C2:C1:O5:C5\nDihedral angle:C1:C5:O5:C4', (115.331, 143.054, 51.579)), ('D', '2', 1, 'Planar group:C2:C7:C8:N2:O7\nDihedral angle:C2:C3:C4:C5\nDihedral angle:C3:C4:C5:O5', (121.863, 145.63299999999998, 59.79600000000001)), ('E', '1', 1, 'side-chain clash\nPlanar group:C2:C7:C8:N2:O7', (141.964, 101.593, 51.266000000000005)), ('E', '2', 1, 'side-chain clash\nPlanar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nDihedral angle:C1:C5:O5:C4\nDihedral angle:C3:C4:C5:O5', (139.95600000000002, 94.423, 58.605000000000004)), ('F', '1', 1, 'side-chain clash', (88.912, 104.694, 57.003)), ('F', '2', 1, 'side-chain clash\nPlanar group:C2:C7:C8:N2:O7', (86.2, 105.54, 59.745000000000005))]
data['cablam'] = [('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (104.2, 148.5, 138.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (100.4, 152.7, 150.3)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (117.4, 169.3, 151.6)), ('C', '128', 'ILE', ' beta sheet', ' \nEE---', (115.9, 158.4, 152.0)), ('C', '129', 'LYS', ' beta sheet', ' \nE---B', (114.9, 157.3, 155.5)), ('C', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\n-EEEE', (106.5, 167.3, 155.0)), ('C', '189', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (115.8, 167.4, 131.5)), ('C', '262', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----E', (108.7, 176.6, 136.1)), ('C', '414', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS--S', (111.1, 102.7, 151.8)), ('C', '415', 'THR', ' beta sheet', ' \nS--SH', (111.4, 99.0, 152.7)), ('C', '496', 'GLY', ' beta sheet', ' \nE----', (106.8, 100.7, 175.5)), ('C', '497', 'PHE', ' beta sheet', ' \n----T', (106.2, 104.5, 175.2)), ('C', '521', 'PRO', 'check CA trace,carbonyls, peptide', ' \nSS---', (82.7, 116.3, 140.3)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (87.9, 128.6, 150.5)), ('C', '592', 'PHE', 'check CA trace,carbonyls, peptide', ' \nS----', (92.1, 133.1, 115.4)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (107.2, 149.2, 99.8)), ('C', '643', 'PHE', ' beta sheet', ' \n-B---', (88.7, 146.6, 99.4)), ('C', '644', 'GLN', 'check CA trace,carbonyls, peptide', ' \nB---S', (87.6, 143.0, 100.4)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (98.9, 139.3, 97.3)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (96.7, 136.5, 95.9)), ('C', '700', 'ASN', ' beta sheet', ' \nEE---', (96.1, 139.6, 69.0)), ('C', '703', 'ALA', ' beta sheet', ' \n-----', (92.7, 136.1, 61.2)), ('C', '704', 'TYR', ' beta sheet', ' \n----S', (92.5, 132.6, 59.7)), ('C', '754', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-HH', (130.2, 109.2, 119.4)), ('C', '791', 'ILE', 'check CA trace,carbonyls, peptide', ' \n-S---', (144.6, 135.4, 61.7)), ('C', '1031', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (128.7, 120.6, 70.4)), ('C', '1039', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (115.7, 124.3, 74.7)), ('C', '1040', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (118.7, 126.2, 73.3)), ('C', '1042', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (114.0, 131.3, 71.8)), ('C', '1055', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (129.8, 128.7, 90.6)), ('C', '1081', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (95.7, 118.0, 32.3)), ('C', '1106', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\nTTEEE', (111.4, 133.0, 53.3)), ('C', '1123', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (91.6, 116.4, 39.9)), ('C', '34', 'ARG', 'check CA trace', ' \n-S--E', (111.9, 157.8, 125.8)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (103.6, 148.5, 118.6)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (110.0, 145.7, 99.5)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (91.0, 131.3, 129.0)), ('C', '1095', 'ASN', 'check CA trace', 'bend\nEESSS', (100.0, 137.7, 44.3)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (149.7, 108.7, 138.3)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (155.2, 109.9, 150.4)), ('B', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (161.1, 87.0, 151.6)), ('B', '128', 'ILE', ' beta sheet', ' \nEE---', (152.5, 93.7, 152.0)), ('B', '129', 'LYS', ' beta sheet', ' \nE---B', (152.0, 95.1, 155.5)), ('B', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\n-EEEE', (164.9, 97.3, 155.0)), ('B', '189', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (160.3, 89.3, 131.5)), ('B', '262', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----E', (171.8, 90.8, 136.1)), ('B', '414', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS--S', (106.6, 125.8, 151.8)), ('B', '415', 'THR', ' beta sheet', ' \nS--SH', (103.3, 127.3, 152.7)), ('B', '496', 'GLY', ' beta sheet', ' \nE----', (107.1, 130.5, 175.5)), ('B', '497', 'PHE', ' beta sheet', ' \n----T', (110.6, 129.0, 175.2)), ('B', '521', 'PRO', 'check CA trace,carbonyls, peptide', ' \nSS---', (132.6, 143.5, 140.3)), ('B', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (140.7, 132.8, 150.5)), ('B', '592', 'PHE', 'check CA trace,carbonyls, peptide', ' \nS----', (142.5, 126.9, 115.5)), ('B', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (148.9, 105.8, 99.9)), ('B', '643', 'PHE', ' beta sheet', ' \n-B---', (155.8, 123.2, 99.4)), ('B', '644', 'GLN', 'check CA trace,carbonyls, peptide', ' \nB---S', (153.3, 125.9, 100.4)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (144.5, 118.0, 97.3)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (143.1, 121.2, 95.9)), ('B', '700', 'ASN', ' beta sheet', ' \nEE---', (146.1, 120.2, 69.0)), ('B', '703', 'ALA', ' beta sheet', ' \n-----', (144.8, 124.9, 61.2)), ('B', '704', 'TYR', ' beta sheet', ' \n----S', (141.8, 126.9, 59.7)), ('B', '754', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-HH', (102.7, 105.9, 119.4)), ('B', '791', 'ILE', 'check CA trace,carbonyls, peptide', ' \n-S---', (118.2, 80.4, 61.7)), ('B', '1031', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (113.3, 101.5, 70.4)), ('B', '1039', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (123.1, 111.0, 74.7)), ('B', '1040', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (123.2, 107.4, 73.3)), ('B', '1042', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (130.0, 108.9, 71.8)), ('B', '1055', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (119.8, 96.5, 90.6)), ('B', '1081', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (127.7, 131.4, 32.3)), ('B', '1106', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\nTTEEE', (132.7, 110.3, 53.3)), ('B', '1123', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (128.3, 135.8, 39.9)), ('B', '34', 'ARG', 'check CA trace', ' \n-S--E', (154.0, 97.5, 125.8)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (150.0, 109.3, 118.6)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (144.4, 105.2, 99.5)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (141.5, 128.8, 129.0)), ('B', '1095', 'ASN', 'check CA trace', 'bend\nEESSS', (142.5, 117.8, 44.3)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (92.5, 89.2, 138.3)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (90.8, 83.9, 150.4)), ('A', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (68.0, 90.3, 151.6)), ('A', '128', 'ILE', ' beta sheet', ' \nEE---', (78.1, 94.4, 152.1)), ('A', '129', 'LYS', ' beta sheet', ' \nE---B', (79.6, 94.1, 155.5)), ('A', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\n-EEEE', (75.1, 81.8, 155.0)), ('A', '189', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (70.4, 89.8, 131.5)), ('A', '262', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----E', (65.9, 79.1, 136.1)), ('A', '414', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS--S', (128.8, 118.1, 151.8)), ('A', '415', 'THR', ' beta sheet', ' \nS--SH', (131.9, 120.2, 152.7)), ('A', '496', 'GLY', ' beta sheet', ' \nE----', (132.7, 115.3, 175.5)), ('A', '497', 'PHE', ' beta sheet', ' \n----T', (129.7, 113.0, 175.2)), ('A', '521', 'PRO', 'check CA trace,carbonyls, peptide', ' \nSS---', (131.2, 86.7, 140.3)), ('A', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (117.9, 85.0, 150.5)), ('A', '592', 'PHE', 'check CA trace,carbonyls, peptide', ' \nS----', (111.9, 86.4, 115.5)), ('A', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (90.4, 91.5, 99.9)), ('A', '643', 'PHE', ' beta sheet', ' \n-B---', (102.0, 76.8, 99.4)), ('A', '644', 'GLN', 'check CA trace,carbonyls, peptide', ' \nB---S', (105.6, 77.6, 100.4)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (103.2, 89.2, 97.3)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (106.7, 88.8, 95.9)), ('A', '700', 'ASN', ' beta sheet', ' \nEE---', (104.3, 86.7, 69.0)), ('A', '703', 'ALA', ' beta sheet', ' \n-----', (109.0, 85.5, 61.2)), ('A', '704', 'TYR', ' beta sheet', ' \n----S', (112.2, 87.0, 59.7)), ('A', '754', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-HH', (113.6, 131.4, 119.4)), ('A', '791', 'ILE', 'check CA trace,carbonyls, peptide', ' \n-S---', (83.7, 130.7, 61.7)), ('A', '1031', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (104.5, 124.4, 70.4)), ('A', '1039', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (107.8, 111.2, 74.7)), ('A', '1040', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (104.6, 112.9, 73.3)), ('A', '1042', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (102.6, 106.3, 71.8)), ('A', '1055', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (96.9, 121.2, 90.6)), ('A', '1081', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (123.2, 97.0, 32.3)), ('A', '1106', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\nTTEEE', (102.4, 103.2, 53.3)), ('A', '1123', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (126.6, 94.3, 39.9)), ('A', '34', 'ARG', 'check CA trace', ' \n-S--E', (80.7, 91.2, 125.8)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (92.9, 88.7, 118.6)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (92.2, 95.6, 99.5)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (114.0, 86.3, 129.0)), ('A', '1095', 'ASN', 'check CA trace', 'bend\nEESSS', (104.0, 91.0, 44.3))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11145/6zb5/Model_validation_1/validation_cootdata/molprobity_probe6zb5_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

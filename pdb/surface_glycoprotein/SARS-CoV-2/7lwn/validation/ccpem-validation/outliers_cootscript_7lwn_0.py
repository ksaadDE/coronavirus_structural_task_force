
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' C 599  THR HG22', ' C 601  GLY  H  ', -0.615, (134.336, 138.214, 167.785)), (' A 616  ASN  O  ', ' A 618  THR  N  ', -0.586, (177.778, 196.548, 157.827)), (' B 130  VAL HG11', ' B 233  ILE HD11', -0.544, (200.368, 158.913, 116.512)), (' B 368  LEU HD22', ' B 434  ILE HD11', -0.542, (164.532, 124.186, 106.826)), (' C 644  GLN  OE1', ' C 649  CYS  SG ', -0.541, (122.845, 156.924, 162.999)), (' A  64  TRP  HD1', ' A 266  TYR  CE2', -0.518, (143.425, 214.87, 141.553)), (' A1032  CYS  CB ', ' A1043  CYS  HG ', -0.505, (152.29, 165.898, 192.887)), (' A 165  ASN  HB3', ' A 167  THR HG23', -0.493, (142.876, 198.414, 110.823)), (' C1032  CYS  SG ', ' C1043  CYS  SG ', -0.492, (159.792, 150.975, 192.2)), (' A1032  CYS  HG ', ' A1043  CYS  HB3', -0.485, (152.525, 168.509, 193.658)), (' B  81  ASN  N  ', ' B 265  TYR  HH ', -0.483, (215.42, 148.155, 129.543)), (' A 328  ARG HH11', ' A 580  GLN  HB2', -0.468, (190.672, 189.254, 130.334)), (' A 117  LEU HD23', ' A 130  VAL HG22', -0.462, (142.009, 198.89, 119.86)), (' A 736  VAL HG22', ' A 858  LEU  CD2', -0.45, (143.108, 163.406, 156.944)), (' A1032  CYS  SG ', ' A1043  CYS  SG ', -0.442, (152.749, 166.867, 193.06)), (' A1032  CYS  HG ', ' A1043  CYS  CB ', -0.441, (152.625, 167.9, 193.201)), (' A 736  VAL HG22', ' A 858  LEU HD23', -0.431, (143.253, 163.02, 157.11)), (' A 770  ILE HD12', ' A1015  ALA  CB ', -0.425, (151.063, 159.579, 168.06)), (' A 901  GLN  O  ', ' A 904  TYR  HB2', -0.417, (147.643, 164.956, 206.936)), (' B  28  TYR  HB3', ' B  61  ASN HD22', -0.414, (209.556, 143.31, 143.226)), (' C 394  ASN  H  ', ' C 516  GLU  HG3', -0.41, (136.467, 181.533, 125.978)), (' A 308  VAL  HB ', ' A 602  THR HG23', -0.404, (150.791, 192.852, 164.279))]
data['cbeta'] = [('A', ' 369 ', 'TYR', ' ', 0.2709727645440928, (171.553, 176.076, 113.637)), ('A', ' 571 ', 'ASP', ' ', 0.26527787746221243, (180.92800000000005, 170.142, 142.95)), ('A', ' 616 ', 'ASN', ' ', 0.34761645710264194, (178.785, 194.034, 159.40500000000003)), ('C', ' 198 ', 'ASP', ' ', 0.2806245980443736, (145.782, 136.302, 129.098)), ('C', ' 649 ', 'CYS', ' ', 0.3209393172258475, (124.06200000000007, 154.633, 162.344)), ('C', '1041 ', 'ASP', ' ', 0.26362120471046185, (151.02000000000007, 154.131, 192.004))]
data['smoc'] = [('A', 53, u'ASP', 0.6410979276936359, (149.429, 190.49, 140.01399999999998)), ('A', 92, u'PHE', 0.6873692882941155, (142.991, 205.85700000000003, 136.459)), ('A', 97, u'LYS', 0.8065980516337057, (130.32200000000003, 216.24099999999999, 139.231)), ('A', 106, u'PHE', 0.6455857184436081, (146.32100000000003, 203.636, 123.67199999999998)), ('A', 134, u'GLN', 0.7691193511623753, (144.74499999999998, 209.86700000000002, 112.585)), ('A', 138, u'ASP', 0.772252131312465, (145.178, 217.594, 121.506)), ('A', 141, u'LEU', 0.6998772895870433, (134.972, 214.813, 121.83)), ('A', 198, u'ASP', 0.7218163597828261, (148.875, 187.95000000000002, 125.763)), ('A', 214, u'ARG', 0.7938806492016189, (139.297, 217.623, 147.323)), ('A', 216, u'LEU', 0.7148274575239687, (141.061, 210.467, 146.511)), ('A', 267, u'VAL', 0.659845681690068, (146.99200000000002, 208.45000000000002, 137.15)), ('A', 270, u'LEU', 0.6127242120903514, (150.547, 199.261, 138.24899999999997)), ('A', 290, u'ASP', 0.6576856390330402, (150.35800000000003, 195.373, 149.999)), ('A', 297, u'SER', 0.6422007043376804, (152.854, 194.30800000000002, 155.916)), ('A', 306, u'PHE', 0.6970709829661612, (145.73999999999998, 190.961, 159.45700000000002)), ('A', 340, u'GLU', 0.7845693365922005, (186.79, 171.872, 105.792)), ('A', 350, u'VAL', 0.8154808283365885, (180.48800000000003, 155.032, 107.922)), ('A', 356, u'LYS', 0.7747405282537986, (188.26299999999998, 166.238, 112.645)), ('A', 365, u'TYR', 0.7568768849828732, (177.407, 177.842, 115.516)), ('A', 387, u'LEU', 0.6868834947441945, (176.072, 177.22, 121.561)), ('A', 390, u'LEU', 0.6784007358172632, (179.315, 178.32700000000003, 125.557)), ('A', 405, u'ASP', 0.8007227420643879, (166.73399999999998, 156.285, 106.697)), ('A', 410, u'ILE', 0.8063864980822364, (172.772, 158.403, 114.74600000000001)), ('A', 414, u'GLN', 0.8634757466426316, (170.003, 153.621, 119.612)), ('A', 415, u'THR', 0.8316413819368815, (170.40800000000002, 150.006, 118.34)), ('A', 423, u'TYR', 0.8178622624730673, (179.495, 154.29299999999998, 114.80799999999999)), ('A', 427, u'ASP', 0.8061332923859093, (174.849, 157.05700000000002, 126.362)), ('A', 442, u'ASP', 0.8055511654398942, (177.372, 161.517, 96.498)), ('A', 445, u'VAL', 0.7308143901325871, (175.272, 157.084, 87.31400000000001)), ('A', 446, u'GLY', 0.6942889147295251, (175.833, 153.292, 87.426)), ('A', 449, u'TYR', 0.8110640469518973, (179.757, 152.076, 95.332)), ('A', 477, u'SER', 0.6187700244675663, (178.607, 124.55799999999999, 110.65299999999999)), ('A', 478, u'THR', 0.6490360457928271, (181.697, 125.351, 108.384)), ('A', 483, u'VAL', 0.8006064209632479, (186.564, 131.71499999999997, 101.51400000000001)), ('A', 486, u'PHE', 0.7608233474253239, (178.37, 128.524, 103.196)), ('A', 492, u'LEU', 0.831152933724917, (181.334, 144.82800000000003, 104.60199999999999)), ('A', 493, u'GLN', 0.8293366769576773, (178.572, 145.993, 102.15199999999999)), ('A', 495, u'TYR', 0.8134489218120643, (175.041, 151.54, 99.307)), ('A', 501, u'ASN', 0.7742748690928355, (166.963, 156.377, 94.554)), ('A', 519, u'HIS', 0.5091165916766105, (188.01299999999998, 170.10999999999999, 134.525)), ('A', 524, u'VAL', 0.7379594772662901, (186.76, 176.71099999999998, 121.436)), ('A', 547, u'THR', 0.7352451765654632, (177.92700000000002, 181.69, 134.753)), ('A', 554, u'GLU', 0.7591298409430024, (192.45000000000002, 188.88400000000001, 143.684)), ('A', 582, u'LEU', 0.8082380939404712, (196.561, 184.767, 134.66299999999998)), ('A', 590, u'CYS', 0.7737267855043984, (176.637, 188.198, 147.376)), ('A', 597, u'VAL', 0.5668045042262255, (160.721, 191.77299999999997, 162.146)), ('A', 598, u'ILE', 0.6387973832067362, (160.36800000000002, 192.642, 165.864)), ('A', 697, u'MET', 0.6027818572761242, (168.51899999999998, 191.009, 179.27299999999997)), ('A', 711, u'SER', 0.5475791792764547, (174.48000000000002, 183.096, 211.684)), ('A', 735, u'SER', 0.6049489852630807, (141.70299999999997, 159.63299999999998, 160.869)), ('A', 775, u'ASP', 0.5488870383612301, (142.503, 157.137, 174.83)), ('A', 796, u'ASP', 0.6113799428077953, (132.647, 169.73299999999998, 207.611)), ('A', 819, u'GLU', 0.5325882915683435, (136.638, 173.425, 185.447)), ('A', 876, u'ALA', 0.5233801471821936, (136.266, 160.895, 192.44)), ('A', 901, u'GLN', 0.46606770013136517, (144.925, 164.92000000000002, 207.35800000000003)), ('A', 908, u'GLY', 0.43450801679386775, (155.445, 165.291, 205.787)), ('A', 909, u'ILE', 0.4982343894997707, (157.27899999999997, 168.659, 205.198)), ('A', 913, u'GLN', 0.5511399258329583, (151.785, 169.256, 213.737)), ('A', 938, u'LEU', 0.6597308380788451, (141.33100000000002, 182.256, 185.10399999999998)), ('A', 948, u'LEU', 0.566876322819051, (146.8, 173.484, 175.823)), ('A', 972, u'ALA', 0.6439184235841471, (150.48200000000003, 168.48700000000002, 136.67)), ('A', 993, u'ILE', 0.5535118989736525, (147.583, 161.85700000000003, 137.69299999999998)), ('A', 997, u'ILE', 0.5214417671446165, (149.71399999999997, 160.877, 143.349)), ('A', 1022, u'ALA', 0.4848774140760427, (150.593, 162.2, 179.54299999999998)), ('A', 1025, u'ALA', 0.5019997546887315, (150.61899999999997, 163.944, 184.107)), ('A', 1026, u'ALA', 0.40393924581649626, (149.959, 160.298, 185.121)), ('A', 1033, u'VAL', 0.4920681122983324, (147.259, 163.813, 194.112)), ('A', 1077, u'THR', 0.5315499599672909, (173.657, 179.336, 216.031)), ('A', 1078, u'ALA', 0.5955101715364657, (176.04, 176.58800000000002, 217.267)), ('A', 1082, u'CYS', 0.5470814395266318, (179.003, 171.911, 226.30700000000002)), ('A', 1137, u'VAL', 0.6371788177645191, (171.126, 171.803, 229.568)), ('A', 1145, u'LEU', 0.8332608691500872, (163.096, 164.53, 242.931)), ('A', 1147, u'SER', 0.7733948427260496, (159.95600000000002, 168.192, 245.349)), ('A', 1301, u'NAG', 0.5598347644100794, (166.523, 187.783, 207.096)), ('A', 1307, u'NAG', 0.7397392937666403, (145.864, 196.612, 106.56400000000001)), ('B', 44, u'ARG', 0.7283512601843347, (191.933, 172.21499999999997, 146.43)), ('B', 66, u'HIS', 0.766006313098849, (219.80100000000002, 148.366, 134.26)), ('B', 84, u'LEU', 0.7408392544126847, (207.772, 145.88200000000003, 127.55799999999999)), ('B', 97, u'LYS', 0.7754603210160761, (223.24599999999998, 161.848, 137.281)), ('B', 101, u'ILE', 0.8151345042389911, (218.162, 157.876, 129.67499999999998)), ('B', 113, u'LYS', 0.7896774340435276, (200.477, 149.266, 109.928)), ('B', 117, u'LEU', 0.6722154134174388, (204.819, 157.71099999999998, 119.636)), ('B', 121, u'ASN', 0.7672003218353353, (214.536, 165.007, 126.01400000000001)), ('B', 124, u'THR', 0.7531882043890511, (217.55100000000002, 172.26899999999998, 126.509)), ('B', 132, u'GLU', 0.818570009621322, (204.417, 155.21699999999998, 110.94300000000001)), ('B', 137, u'ASN', 0.6190661925078728, (213.662, 148.412, 119.039)), ('B', 186, u'PHE', 0.7493823161626569, (222.048, 158.334, 141.23499999999999)), ('B', 212, u'LEU', 0.7214653196685646, (222.977, 156.689, 148.164)), ('B', 216, u'LEU', 0.7682290676095335, (213.58, 153.80800000000002, 145.35700000000003)), ('B', 235, u'ILE', 0.7729748497148283, (199.21699999999998, 151.594, 122.54400000000001)), ('B', 238, u'PHE', 0.7723938387149113, (206.77399999999997, 150.64299999999997, 125.05499999999999)), ('B', 240, u'THR', 0.7884095170812602, (213.309, 153.21699999999998, 126.846)), ('B', 268, u'GLY', 0.7143668598960328, (205.238, 149.60999999999999, 137.45000000000002)), ('B', 276, u'LEU', 0.6671188206246277, (191.98600000000002, 159.48200000000003, 149.48700000000002)), ('B', 285, u'ILE', 0.708426022525155, (199.036, 166.728, 147.60899999999998)), ('B', 314, u'GLN', 0.6445143477353137, (181.608, 148.583, 159.14899999999997)), ('B', 334, u'ASN', 0.8170067582341418, (157.283, 117.167, 120.274)), ('B', 344, u'ALA', 0.6479942663912885, (159.108, 113.063, 101.44900000000001)), ('B', 359, u'SER', 0.7200541972777748, (151.20499999999998, 124.282, 115.988)), ('B', 363, u'ALA', 0.7832610249012059, (161.33200000000002, 123.793, 116.074)), ('B', 368, u'LEU', 0.764698466039139, (167.683, 124.512, 108.357)), ('B', 397, u'ALA', 0.800812352237695, (155.20399999999998, 125.55, 105.762)), ('B', 401, u'VAL', 0.7688944044631898, (159.298, 122.311, 92.80799999999999)), ('B', 410, u'ILE', 0.7146249828918503, (160.72899999999998, 133.60399999999998, 96.474)), ('B', 417, u'LYS', 0.679468995024511, (156.137, 134.08100000000002, 86.515)), ('B', 418, u'ILE', 0.7407569082533604, (156.151, 132.406, 89.98)), ('B', 432, u'CYS', 0.7673239256768333, (162.43200000000002, 131.86, 106.24700000000001)), ('B', 437, u'ASN', 0.7858673876338365, (168.813, 121.208, 93.96900000000001)), ('B', 441, u'LEU', 0.7488828453522194, (164.641, 113.41600000000001, 93.21400000000001)), ('B', 449, u'TYR', 0.524558409657406, (155.948, 115.71100000000001, 83.23100000000001)), ('B', 458, u'LYS', 0.6224463701498153, (143.76399999999998, 137.208, 84.17999999999999)), ('B', 462, u'LYS', 0.7543119373833809, (147.118, 137.964, 95.881)), ('B', 466, u'ARG', 0.7318090999726264, (146.403, 129.212, 95.436)), ('B', 470, u'THR', 0.573375906828493, (141.72, 125.117, 84.641)), ('B', 477, u'SER', 0.24323260264542682, (139.56, 141.305, 72.846)), ('B', 482, u'GLY', 0.34235115776962183, (135.935, 128.129, 78.766)), ('B', 505, u'TYR', 0.6585832774094721, (166.757, 123.89, 83.842)), ('B', 517, u'LEU', 0.7817080937554759, (152.24499999999998, 135.88800000000003, 116.557)), ('B', 519, u'HIS', 0.65915531862396, (145.88100000000003, 137.444, 119.979)), ('B', 529, u'LYS', 0.8203458737699375, (168.89100000000002, 124.051, 126.29100000000001)), ('B', 530, u'SER', 0.8307702479146419, (169.448, 122.472, 129.74099999999999)), ('B', 546, u'LEU', 0.8509500419485063, (162.047, 131.406, 136.864)), ('B', 557, u'LYS', 0.8386594042624224, (159.291, 119.187, 151.04)), ('B', 574, u'ASP', 0.6563947590849762, (162.21499999999997, 129.14499999999998, 148.68800000000002)), ('B', 580, u'GLN', 0.8045819918843345, (163.589, 116.724, 134.437)), ('B', 611, u'LEU', 0.6334393050748046, (184.76399999999998, 140.42600000000002, 161.42600000000002)), ('B', 648, u'GLY', 0.6456162973706426, (180.599, 135.82200000000003, 162.642)), ('B', 666, u'ILE', 0.6404137917718147, (181.96, 142.123, 168.847)), ('B', 676, u'THR', 0.7644072559134683, (200.48700000000002, 141.36800000000002, 174.766)), ('B', 697, u'MET', 0.6682725289866206, (183.376, 139.348, 178.232)), ('B', 699, u'LEU', 0.6311076338798146, (180.377, 140.636, 183.85700000000003)), ('B', 707, u'TYR', 0.6671760642136549, (174.906, 135.46200000000002, 204.65200000000002)), ('B', 738, u'CYS', 0.587580328721645, (164.84, 176.207, 151.38500000000002)), ('B', 762, u'GLN', 0.5471301926441683, (156.691, 173.813, 156.42800000000003)), ('B', 773, u'GLU', 0.47254762173808795, (163.015, 174.77299999999997, 171.839)), ('B', 774, u'GLN', 0.5288842698350767, (166.83700000000002, 174.931, 172.377)), ('B', 781, u'VAL', 0.44800601662020173, (167.797, 173.824, 183.272)), ('B', 796, u'ASP', 0.6261228460637889, (184.61299999999997, 180.354, 206.14399999999998)), ('B', 797, u'PHE', 0.506226328244283, (182.907, 177.10299999999998, 204.95700000000002)), ('B', 800, u'PHE', 0.505662595246447, (185.334, 172.621, 202.63899999999998)), ('B', 813, u'SER', 0.5074719491402447, (183.57899999999998, 184.71899999999997, 180.74899999999997)), ('B', 819, u'GLU', 0.561555611012234, (184.157, 175.117, 183.97)), ('B', 870, u'ILE', 0.44890706937514485, (174.915, 180.51899999999998, 181.691)), ('B', 874, u'THR', 0.48158845815833234, (175.57, 178.19899999999998, 187.612)), ('B', 877, u'LEU', 0.5016369845437041, (172.82800000000003, 178.18200000000002, 191.895)), ('B', 884, u'SER', 0.586968839840639, (171.696, 178.572, 202.32200000000003)), ('B', 905, u'ARG', 0.5473979432707954, (172.48200000000003, 166.35000000000002, 204.895)), ('B', 916, u'LEU', 0.567629140963135, (179.98800000000003, 164.864, 210.91)), ('B', 930, u'ALA', 0.578717550339785, (187.909, 164.296, 195.626)), ('B', 944, u'ALA', 0.723690143279683, (184.60299999999998, 161.767, 179.939)), ('B', 950, u'ASP', 0.651950562898289, (178.813, 163.236, 170.313)), ('B', 960, u'ASN', 0.6223636119792332, (177.995, 167.925, 156.015)), ('B', 962, u'LEU', 0.5551932606516283, (173.131, 168.157, 153.62)), ('B', 994, u'ASP', 0.5687085623613696, (162.761, 169.354, 138.42800000000003)), ('B', 1001, u'LEU', 0.5798741909873357, (163.726, 168.65200000000002, 148.539)), ('B', 1002, u'GLN', 0.5546891420276344, (163.841, 164.925, 149.57899999999998)), ('B', 1009, u'THR', 0.5846319350605874, (162.914, 164.73, 160.002)), ('B', 1013, u'ILE', 0.4848783568835564, (163.762, 163.08800000000002, 166.137)), ('B', 1051, u'SER', 0.5286940120592075, (175.45600000000002, 168.195, 194.04899999999998)), ('B', 1064, u'HIS', 0.4864363969932618, (177.418, 164.591, 192.853)), ('B', 1066, u'THR', 0.5246123800864831, (177.784, 161.045, 198.097)), ('B', 1077, u'THR', 0.5518906820517876, (172.782, 140.17399999999998, 215.547)), ('B', 1087, u'ALA', 0.5040779843654641, (160.556, 141.578, 224.212)), ('B', 1115, u'ILE', 0.5613583820409144, (171.042, 148.79899999999998, 225.448)), ('B', 1121, u'PHE', 0.5907829552206415, (160.68200000000002, 149.901, 222.92800000000003)), ('B', 1142, u'GLN', 0.8271205170750824, (167.666, 152.864, 238.35800000000003)), ('B', 1306, u'NAG', 0.5242774956842594, (194.534, 130.32700000000003, 175.595)), ('B', 1310, u'NAG', 0.5118503099927394, (207.691, 139.85700000000003, 143.32500000000002)), ('C', 27, u'ALA', 0.7716447703458661, (115.15899999999999, 124.896, 140.126)), ('C', 86, u'PHE', 0.7291880334394768, (129.305, 131.08800000000002, 130.197)), ('C', 106, u'PHE', 0.749033718572738, (131.823, 125.667, 124.507)), ('C', 134, u'GLN', 0.8028036103129671, (128.349, 120.856, 112.095)), ('C', 140, u'PHE', 0.7805196562196871, (123.486, 113.20100000000001, 122.616)), ('C', 165, u'ASN', 0.7201442896638114, (138.876, 125.233, 113.335)), ('C', 186, u'PHE', 0.7520677743636911, (124.295, 108.766, 144.49800000000002)), ('C', 202, u'LYS', 0.7237003376026372, (141.755, 126.37599999999999, 132.13299999999998)), ('C', 223, u'LEU', 0.7054114825891747, (139.689, 121.568, 142.768)), ('C', 235, u'ILE', 0.777799924024055, (133.607, 131.533, 124.566)), ('C', 273, u'ARG', 0.6813923546883142, (136.373, 137.989, 144.406)), ('C', 275, u'PHE', 0.667666346791747, (139.58, 134.86700000000002, 148.959)), ('C', 285, u'ILE', 0.7034454888594509, (144.147, 124.061, 150.463)), ('C', 297, u'SER', 0.629295357119957, (134.659, 137.553, 156.686)), ('C', 304, u'LYS', 0.6832082529123439, (144.694, 137.641, 157.524)), ('C', 326, u'ILE', 0.7257726416730906, (122.935, 165.58100000000002, 136.27899999999997)), ('C', 332, u'ILE', 0.8113759192532757, (122.086, 177.444, 123.54400000000001)), ('C', 333, u'THR', 0.8173371883992331, (121.066, 175.54399999999998, 120.31400000000001)), ('C', 339, u'GLY', 0.8151302311127208, (132.606, 176.625, 107.836)), ('C', 370, u'ASN', 0.8044375628846546, (137.565, 162.237, 112.76700000000001)), ('C', 378, u'LYS', 0.8345705832681223, (147.334, 168.201, 117.524)), ('C', 382, u'VAL', 0.7139465004112229, (143.186, 168.92600000000002, 125.98)), ('C', 383, u'SER', 0.7704854635399313, (142.44, 165.681, 124.021)), ('C', 388, u'ASN', 0.7957077860481516, (132.497, 167.33200000000002, 122.773)), ('C', 395, u'VAL', 0.6966104615235045, (137.18, 180.086, 121.371)), ('C', 400, u'PHE', 0.8380484620903208, (146.812, 181.687, 108.05)), ('C', 401, u'VAL', 0.7943279405856771, (148.621, 180.04899999999998, 105.05499999999999)), ('C', 408, u'ARG', 0.7714696018250274, (156.61499999999998, 172.638, 112.843)), ('C', 410, u'ILE', 0.7879609711968888, (153.25, 176.284, 115.12599999999999)), ('C', 415, u'THR', 0.7692086679870358, (161.854, 179.74699999999999, 118.17499999999998)), ('C', 423, u'TYR', 0.7533869388865324, (152.91899999999998, 184.282, 115.081)), ('C', 434, u'ILE', 0.7807840860579054, (144.969, 171.917, 112.65199999999999)), ('C', 437, u'ASN', 0.8545592773423479, (147.791, 170.82200000000003, 102.28)), ('C', 439, u'ASN', 0.8019515953630708, (148.477, 173.135, 96.865)), ('C', 445, u'VAL', 0.7644807215194189, (151.657, 178.74899999999997, 87.863)), ('C', 456, u'PHE', 0.8302300773207463, (163.2, 190.41, 110.293)), ('C', 468, u'ILE', 0.7992701912469009, (151.306, 194.78, 110.18799999999999)), ('C', 471, u'GLU', 0.8244508796887402, (159.08800000000002, 199.94899999999998, 107.87299999999999)), ('C', 475, u'ALA', 0.7997697374941617, (170.295, 194.323, 107.88499999999999)), ('C', 484, u'GLU', 0.8074119456906098, (165.632, 201.18800000000002, 100.71600000000001)), ('C', 493, u'GLN', 0.8342875486069068, (158.667, 188.36800000000002, 101.84700000000001)), ('C', 513, u'LEU', 0.7349229318228735, (141.864, 176.997, 118.076)), ('C', 517, u'LEU', 0.726353750915978, (139.008, 178.157, 129.88000000000002)), ('C', 544, u'ASN', 0.7345728973334145, (129.508, 173.416, 131.96)), ('C', 557, u'LYS', 0.7574634614715529, (125.798, 182.88400000000001, 148.829)), ('C', 571, u'ASP', 0.6171011297606449, (140.63299999999998, 174.259, 145.221)), ('C', 587, u'ILE', 0.6754928512884337, (127.77799999999999, 171.56, 146.93200000000002)), ('C', 590, u'CYS', 0.6389856434230687, (128.45800000000003, 162.341, 149.591)), ('C', 595, u'VAL', 0.6182629776557917, (133.317, 150.92100000000002, 158.871)), ('C', 615, u'VAL', 0.6720460942389297, (127.23100000000001, 158.38800000000003, 159.86200000000002)), ('C', 670, u'ILE', 0.6274534503877089, (129.536, 153.85100000000003, 174.453)), ('C', 711, u'SER', 0.5613104231997914, (135.54399999999998, 159.672, 212.461)), ('C', 712, u'ILE', 0.574722860236783, (138.718, 157.781, 211.39600000000002)), ('C', 713, u'ALA', 0.5352560630007613, (139.185, 154.303, 209.86)), ('C', 741, u'TYR', 0.5908356376702673, (167.76299999999998, 145.69299999999998, 148.809)), ('C', 759, u'PHE', 0.5766355081554876, (171.258, 158.20899999999997, 150.936)), ('C', 763, u'LEU', 0.4899562734311245, (170.29299999999998, 154.89200000000002, 156.06)), ('C', 764, u'ASN', 0.6058218192718892, (172.99200000000002, 152.483, 157.35000000000002)), ('C', 767, u'LEU', 0.5110722174594858, (170.19299999999998, 151.906, 161.632)), ('C', 774, u'GLN', 0.4710641705727287, (169.742, 148.545, 171.916)), ('C', 813, u'SER', 0.6243946735748054, (170.989, 128.95200000000003, 180.423)), ('C', 819, u'GLU', 0.6145261650673762, (162.198, 133.21599999999998, 183.85100000000003)), ('C', 874, u'THR', 0.5173024648797956, (169.303, 139.187, 187.231)), ('C', 905, u'ARG', 0.5003261833122065, (161.32200000000003, 147.70399999999998, 204.933)), ('C', 932, u'GLY', 0.7220706524143373, (152.664, 130.82200000000003, 193.82700000000003)), ('C', 933, u'LYS', 0.7409799187405507, (149.875, 132.818, 192.063)), ('C', 940, u'SER', 0.6723201363816131, (147.231, 130.999, 182.009)), ('C', 950, u'ASP', 0.6790352627080838, (153.814, 143.509, 170.65800000000002)), ('C', 979, u'ASP', 0.6596417632369309, (162.466, 141.236, 133.68800000000002)), ('C', 996, u'LEU', 0.5071880302959016, (161.847, 150.975, 141.136)), ('C', 1022, u'ALA', 0.42591290369641177, (164.42100000000002, 151.23899999999998, 178.85000000000002)), ('C', 1039, u'ARG', 0.5704193426804849, (157.032, 157.424, 195.30700000000002)), ('C', 1051, u'SER', 0.5038077547009073, (160.88800000000003, 144.178, 194.16299999999998)), ('C', 1062, u'PHE', 0.5363491814604986, (159.524, 143.32100000000003, 188.122)), ('C', 1087, u'ALA', 0.5296672750238399, (147.20299999999997, 170.324, 225.107)), ('C', 1094, u'VAL', 0.5047301338998079, (146.869, 159.159, 216.066)), ('C', 1120, u'THR', 0.5783401251918293, (152.94899999999998, 162.517, 223.30800000000002)), ('C', 1307, u'NAG', 0.7189546201244724, (134.096, 173.167, 108.644)), ('C', 1308, u'NAG', 0.6878598794856825, (148.939, 118.968, 158.48600000000002)), ('C', 1309, u'NAG', 0.7871166389770726, (120.311, 129.967, 147.08100000000002))]
data['rota'] = [('A', ' 132 ', 'GLU', 0.06435863058400812, (145.865, 203.14300000000006, 112.27800000000002)), ('A', ' 233 ', 'ILE', 0.09422448885256315, (148.173, 195.099, 119.893)), ('A', ' 331 ', 'ASN', 0.20872871030556728, (191.64300000000006, 186.519, 123.498)), ('A', ' 403 ', 'ARG', 0.1837276036562872, (171.361, 156.649, 103.45600000000003)), ('A', ' 602 ', 'THR', 0.07420802221372533, (149.45600000000005, 195.132, 166.407)), ('A', ' 801 ', 'ASN', 0.1888501502171482, (136.537, 175.48, 201.293)), ('A', '1072 ', 'GLU', 0.21999396056768453, (162.566, 185.102, 208.46100000000004)), ('C', ' 165 ', 'ASN', 0.04553310513944848, (138.876, 125.233, 113.335)), ('C', ' 403 ', 'ARG', 0.1083360900575414, (154.538, 176.372, 103.549)), ('C', ' 602 ', 'THR', 0.05952746763868337, (135.17, 133.901, 166.871)), ('C', ' 619 ', 'GLU', 0.024495469272470156, (122.19, 157.21, 155.073)), ('C', '1092 ', 'GLU', 0.225023750673487, (153.86900000000006, 159.469, 216.051)), ('C', '1113 ', 'GLN', 0.1858314674899739, (148.821, 152.1, 223.30200000000002))]
data['clusters'] = [('A', '106', 1, 'smoc Outlier', (146.32100000000003, 203.636, 123.67199999999998)), ('A', '108', 1, 'cablam Outlier', (153.0, 202.7, 120.4)), ('A', '109', 1, 'Bond angle:C', (153.063, 205.82000000000002, 118.15799999999999)), ('A', '110', 1, 'Bond angle:N:CA', (149.465, 206.48100000000002, 119.46400000000001)), ('A', '111', 1, 'cablam CA Geom Outlier', (148.5, 208.0, 116.0)), ('A', '112', 1, 'Ramachandran\ncablam Outlier', (149.39200000000005, 207.791, 112.247)), ('A', '117', 1, 'side-chain clash\nDihedral angle:CA:C', (142.834, 201.85800000000003, 120.52)), ('A', '118', 1, 'Dihedral angle:N:CA', (140.07899999999998, 204.411, 120.935)), ('A', '130', 1, 'side-chain clash', (142.009, 198.89, 119.86)), ('A', '1307', 1, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (145.864, 196.612, 106.56400000000001)), ('A', '131', 1, 'Dihedral angle:CA:C', (142.648, 201.601, 113.503)), ('A', '132', 1, 'Rotamer\nDihedral angle:N:CA\ncablam CA Geom Outlier', (145.865, 203.14299999999997, 112.27799999999999)), ('A', '134', 1, 'smoc Outlier', (144.74499999999998, 209.86700000000002, 112.585)), ('A', '165', 1, 'side-chain clash', (142.876, 198.414, 110.823)), ('A', '167', 1, 'side-chain clash', (142.876, 198.414, 110.823)), ('A', '191', 2, 'Dihedral angle:CB:CG:CD:OE1', (137.89200000000002, 204.363, 139.24899999999997)), ('A', '207', 2, 'Bond angle:CB:CG:CD2', (131.82000000000002, 204.10299999999998, 140.76999999999998)), ('A', '208', 2, 'Dihedral angle:CA:C', (130.654, 205.953, 143.95100000000002)), ('A', '209', 2, 'Dihedral angle:N:CA', (129.466, 209.271, 145.42200000000003)), ('A', '267', 2, 'smoc Outlier', (146.99200000000002, 208.45000000000002, 137.15)), ('A', '270', 2, 'smoc Outlier', (150.547, 199.261, 138.24899999999997)), ('A', '53', 2, 'smoc Outlier', (149.429, 190.49, 140.01399999999998)), ('A', '55', 2, 'Bond angle:CA:CB:CG', (148.484, 196.311, 141.254)), ('A', '88', 2, 'cablam Outlier', (153.0, 197.6, 132.7)), ('A', '90', 2, 'Dihedral angle:CA:C', (147.495, 201.92100000000002, 134.563)), ('A', '91', 2, 'Dihedral angle:N:CA', (145.137, 202.833, 137.36800000000002)), ('A', '92', 2, 'smoc Outlier', (142.991, 205.85700000000003, 136.459)), ('A', '1077', 3, 'smoc Outlier', (173.657, 179.336, 216.031)), ('A', '1078', 3, 'smoc Outlier', (176.04, 176.58800000000002, 217.267)), ('A', '1304', 3, 'Planar group:C2:C7:C8:N2:O7', (181.404, 179.034, 214.991)), ('A', '707', 3, 'Dihedral angle:CA:C', (176.433, 184.134, 205.329)), ('A', '708', 3, 'Dihedral angle:N:CA', (178.648, 183.762, 208.417)), ('A', '711', 3, 'smoc Outlier', (174.48000000000002, 183.096, 211.684)), ('A', '214', 4, 'cablam CA Geom Outlier\nsmoc Outlier', (139.3, 217.6, 147.3)), ('A', '215', 4, 'Bond angle:CA:CB:CG\ncablam CA Geom Outlier', (140.843, 214.316, 146.062)), ('A', '216', 4, 'smoc Outlier', (141.061, 210.467, 146.511)), ('A', '266', 4, 'side-chain clash', (143.425, 214.87, 141.553)), ('A', '64', 4, 'side-chain clash', (143.425, 214.87, 141.553)), ('A', '66', 4, 'Bond angle:CB:CG:CD2', (142.46, 219.45200000000003, 136.40200000000002)), ('A', '445', 5, 'smoc Outlier', (175.272, 157.084, 87.31400000000001)), ('A', '446', 5, 'smoc Outlier', (175.833, 153.292, 87.426)), ('A', '447', 5, 'cablam Outlier', (175.6, 153.6, 91.3)), ('A', '449', 5, 'smoc Outlier', (179.757, 152.076, 95.332)), ('A', '495', 5, 'smoc Outlier', (175.041, 151.54, 99.307)), ('A', '496', 5, 'cablam Outlier', (175.9, 151.9, 95.5)), ('A', '328', 6, 'side-chain clash', (190.672, 189.254, 130.334)), ('A', '329', 6, 'Bond angle:CA:CB:CG', (186.904, 184.288, 127.343)), ('A', '331', 6, 'Rotamer', (191.64300000000006, 186.519, 123.498)), ('A', '578', 6, 'Bond angle:CA:CB:CG', (191.166, 184.846, 134.48800000000003)), ('A', '580', 6, 'side-chain clash', (190.672, 189.254, 130.334)), ('A', '582', 6, 'smoc Outlier', (196.561, 184.767, 134.66299999999998)), ('A', '474', 7, 'Bond angle:OE1:CD:NE2', (181.161, 133.02800000000002, 110.79700000000001)), ('A', '475', 7, 'cablam Outlier', (177.5, 131.9, 111.6)), ('A', '477', 7, 'Ramachandran\ncablam Outlier\nsmoc Outlier', (178.607, 124.558, 110.653)), ('A', '478', 7, 'Bond angle:CA:CB:CG2\nsmoc Outlier', (181.697, 125.351, 108.384)), ('A', '486', 7, 'smoc Outlier', (178.37, 128.524, 103.196)), ('A', '487', 7, 'cablam Outlier', (177.9, 130.0, 106.8)), ('A', '1306', 8, 'Bond angle:C2:C1:O5', (184.395, 196.43200000000002, 158.34)), ('A', '616', 8, 'C-beta\nbackbone clash\nBond angle:C:CA:CB\nBond angle:C\nBond angle:CA:C:O\nDihedral angle:CA:C', (177.284, 194.107, 159.707)), ('A', '617', 8, 'Ramachandran\nBond angle:N:CA\nDihedral angle:N:CA\ncablam Outlier', (175.804, 197.55, 159.771)), ('A', '618', 8, 'backbone clash', (177.778, 196.548, 157.827)), ('A', '644', 8, 'Bond angle:OE1:CD:NE2', (175.1, 196.238, 165.737)), ('A', '290', 9, 'smoc Outlier', (150.35800000000003, 195.373, 149.999)), ('A', '291', 9, 'cablam Outlier', (152.9, 192.7, 151.0)), ('A', '294', 9, 'Bond angle:CA:CB:CG', (156.727, 197.92800000000003, 154.759)), ('A', '297', 9, 'smoc Outlier', (152.854, 194.30800000000002, 155.916)), ('A', '58', 9, 'Bond angle:CA:CB:CG', (149.73999999999998, 201.469, 148.464)), ('A', '1036', 10, 'cablam Outlier', (152.8, 163.8, 199.0)), ('A', '1043', 10, 'cablam Outlier', (154.6, 169.4, 192.8)), ('A', '1045', 10, 'cablam Outlier', (157.4, 175.6, 194.4)), ('A', '1048', 10, 'Bond angle:CB:CG:CD2', (154.394, 170.23899999999998, 198.843)), ('A', '1064', 10, 'Bond angle:CB:CG:CD2', (149.484, 172.444, 193.77599999999998)), ('A', '1082', 11, 'Dihedral angle:CA:C\nsmoc Outlier', (179.003, 171.911, 226.30700000000002)), ('A', '1083', 11, 'Bond angle:CB:CG:CD2\nBond angle:C:CA:CB\nDihedral angle:N:CA', (177.314, 170.95200000000003, 229.58800000000002)), ('A', '1084', 11, 'cablam Outlier', (179.1, 168.9, 232.3)), ('A', '1136', 11, 'Dihedral angle:CA:C', (173.008, 174.92800000000003, 230.702)), ('A', '1137', 11, 'Dihedral angle:N:CA\nsmoc Outlier', (171.126, 171.803, 229.568)), ('A', '403', 12, 'Rotamer\nDihedral angle:CD:NE:CZ:NH1', (171.36100000000002, 156.64899999999997, 103.456)), ('A', '405', 12, 'smoc Outlier', (166.73399999999998, 156.285, 106.697)), ('A', '408', 12, 'Dihedral angle:CD:NE:CZ:NH1', (167.727, 158.029, 112.91300000000001)), ('A', '410', 12, 'smoc Outlier', (172.772, 158.403, 114.74600000000001)), ('A', '348', 13, 'Dihedral angle:CA:C', (183.909, 158.83, 104.774)), ('A', '349', 13, 'Dihedral angle:N:CA', (182.237, 155.442, 104.521)), ('A', '350', 13, 'smoc Outlier', (180.48800000000003, 155.032, 107.922)), ('A', '423', 13, 'smoc Outlier', (179.495, 154.29299999999998, 114.80799999999999)), ('A', '365', 14, 'smoc Outlier', (177.407, 177.842, 115.516)), ('A', '369', 14, 'C-beta', (171.553, 176.076, 113.637)), ('A', '387', 14, 'smoc Outlier', (176.072, 177.22, 121.561)), ('A', '390', 14, 'smoc Outlier', (179.315, 178.32700000000003, 125.557)), ('A', '1022', 15, 'smoc Outlier', (150.593, 162.2, 179.54299999999998)), ('A', '1025', 15, 'smoc Outlier', (150.61899999999997, 163.944, 184.107)), ('A', '1026', 15, 'smoc Outlier', (149.959, 160.298, 185.121)), ('A', '780', 15, 'Dihedral angle:CB:CG:CD:OE1', (146.602, 156.54399999999998, 182.406)), ('A', '1105', 16, 'Dihedral angle:CA:C', (163.83100000000002, 175.2, 217.46200000000002)), ('A', '1106', 16, 'Bond angle:OE1:CD:NE2\nDihedral angle:N:CA', (162.283, 172.98000000000002, 214.812)), ('A', '1107', 16, 'Dihedral angle:CD:NE:CZ:NH1', (164.0, 173.88800000000003, 211.52)), ('A', '1109', 16, 'cablam Outlier', (159.2, 177.5, 211.7)), ('A', '1071', 17, 'Bond angle:OE1:CD:NE2', (159.05800000000002, 186.478, 207.71699999999998)), ('A', '1072', 17, 'Rotamer\nDihedral angle:CB:CG:CD:OE1', (162.566, 185.102, 208.461)), ('A', '1301', 17, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (166.523, 187.783, 207.096)), ('A', '935', 18, 'Bond angle:OE1:CD:NE2', (139.26899999999998, 182.11499999999998, 190.08100000000002)), ('A', '938', 18, 'smoc Outlier', (141.33100000000002, 182.256, 185.10399999999998)), ('A', '939', 18, 'cablam Outlier', (138.3, 184.6, 185.1)), ('A', '519', 19, 'Bond angle:CB:CG:CD2\nDihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (188.01299999999998, 170.10999999999999, 134.525)), ('A', '520', 19, 'Dihedral angle:N:CA', (190.41, 172.0, 132.24099999999999)), ('A', '564', 19, 'Bond angle:OE1:CD:NE2', (192.343, 176.567, 136.086)), ('A', '1302', 20, 'Planar group:C2:C7:C8:N2:O7', (134.32600000000002, 180.77299999999997, 199.046)), ('A', '801', 20, 'Rotamer', (136.537, 175.48, 201.293)), ('A', '492', 21, 'smoc Outlier', (181.334, 144.82800000000003, 104.60199999999999)), ('A', '493', 21, 'smoc Outlier', (178.572, 145.993, 102.15199999999999)), ('A', '1145', 22, 'smoc Outlier', (163.096, 164.53, 242.931)), ('A', '1147', 22, 'smoc Outlier', (159.95600000000002, 168.192, 245.349)), ('A', '1054', 23, 'Bond angle:OE1:CD:NE2', (140.85000000000002, 169.72899999999998, 187.43800000000002)), ('A', '819', 23, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (136.638, 173.425, 185.447)), ('A', '220', 24, 'cablam CA Geom Outlier', (138.7, 200.6, 150.6)), ('A', '221', 24, 'cablam Outlier', (136.3, 199.3, 147.9)), ('A', '993', 25, 'smoc Outlier', (147.583, 161.85700000000003, 137.69299999999998)), ('A', '997', 25, 'smoc Outlier', (149.71399999999997, 160.877, 143.349)), ('A', '414', 26, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (170.003, 153.621, 119.612)), ('A', '415', 26, 'smoc Outlier', (170.40800000000002, 150.006, 118.34)), ('A', '913', 27, 'smoc Outlier', (151.785, 169.256, 213.737)), ('A', '917', 27, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (146.21399999999997, 173.03, 214.954)), ('A', '597', 28, 'smoc Outlier', (160.721, 191.77299999999997, 162.146)), ('A', '598', 28, 'smoc Outlier', (160.36800000000002, 192.642, 165.864)), ('A', '1122', 29, 'Dihedral angle:CA:C', (175.155, 163.412, 224.17399999999998)), ('A', '1123', 29, 'Dihedral angle:N:CA', (178.20999999999998, 162.333, 222.201)), ('A', '796', 30, 'Bond angle:CA:CB:CG\nsmoc Outlier', (132.647, 169.73299999999998, 207.611)), ('A', '797', 30, 'cablam Outlier', (136.3, 170.2, 206.3)), ('A', '308', 31, 'side-chain clash', (150.791, 192.852, 164.279)), ('A', '602', 31, 'Rotamer\nside-chain clash', (150.791, 192.852, 164.279)), ('A', '901', 32, 'side-chain clash\nBond angle:OE1:CD:NE2\nsmoc Outlier', (144.925, 164.92000000000002, 207.35800000000003)), ('A', '904', 32, 'side-chain clash', (147.643, 164.956, 206.936)), ('A', '908', 33, 'smoc Outlier', (155.445, 165.291, 205.787)), ('A', '909', 33, 'smoc Outlier', (157.27899999999997, 168.659, 205.198)), ('A', '736', 34, 'side-chain clash', (151.063, 159.579, 168.06)), ('A', '858', 34, 'side-chain clash', (151.063, 159.579, 168.06)), ('A', '97', 35, 'Dihedral angle:CA:C\nsmoc Outlier', (130.32200000000003, 216.24099999999999, 139.231)), ('A', '98', 35, 'Dihedral angle:N:CA', (129.817, 216.655, 135.453)), ('A', '228', 36, 'Dihedral angle:CA:C', (138.811, 191.341, 128.38500000000002)), ('A', '229', 36, 'Dihedral angle:N:CA', (139.14899999999997, 192.429, 124.74100000000001)), ('A', '1058', 37, 'Bond angle:CB:CG:CD2', (142.83, 167.844, 175.994)), ('A', '948', 37, 'smoc Outlier', (146.8, 173.484, 175.823)), ('A', '554', 38, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:CA:C\nsmoc Outlier', (192.45000000000002, 188.88400000000001, 143.684)), ('A', '555', 38, 'Dihedral angle:N:CA', (193.71299999999997, 186.198, 146.06)), ('A', '356', 39, 'smoc Outlier', (188.26299999999998, 166.238, 112.645)), ('A', '357', 39, 'Dihedral angle:CD:NE:CZ:NH1', (189.695, 167.836, 115.84100000000001)), ('A', '481', 40, 'cablam Outlier', (189.7, 129.6, 105.9)), ('A', '483', 40, 'smoc Outlier', (186.564, 131.71499999999997, 101.51400000000001)), ('B', '117', 1, 'smoc Outlier', (204.819, 157.71099999999998, 119.636)), ('B', '130', 1, 'side-chain clash', (200.368, 158.913, 116.512)), ('B', '167', 1, 'cablam Outlier', (200.0, 162.9, 112.3)), ('B', '197', 1, 'Bond angle:C', (192.925, 157.254, 129.37)), ('B', '198', 1, 'Bond angle:N:CA\ncablam Outlier', (190.656, 157.224, 126.199)), ('B', '200', 1, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (194.33, 160.625, 124.37899999999999)), ('B', '201', 1, 'Dihedral angle:N:CA', (197.74099999999999, 160.67499999999998, 126.101)), ('B', '230', 1, 'Dihedral angle:CA:C', (195.754, 164.54899999999998, 121.31700000000001)), ('B', '231', 1, 'Dihedral angle:N:CA', (197.46200000000002, 161.672, 119.44400000000002)), ('B', '233', 1, 'side-chain clash', (200.368, 158.913, 116.512)), ('B', '1082', 2, 'Dihedral angle:CA:C', (164.24099999999999, 139.37, 226.237)), ('B', '1083', 2, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA', (164.27399999999997, 141.207, 229.564)), ('B', '1087', 2, 'smoc Outlier', (160.556, 141.578, 224.212)), ('B', '1115', 2, 'smoc Outlier', (171.042, 148.79899999999998, 225.448)), ('B', '1121', 2, 'smoc Outlier', (160.68200000000002, 149.901, 222.92800000000003)), ('B', '1122', 2, 'Dihedral angle:CA:C', (158.702, 146.944, 224.38100000000003)), ('B', '1123', 2, 'Dihedral angle:N:CA\ncablam Outlier', (156.14399999999998, 144.788, 222.59)), ('B', '1135', 2, 'Dihedral angle:CA:C', (170.072, 140.35700000000003, 227.757)), ('B', '1136', 2, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (170.164, 142.99800000000002, 230.48200000000003)), ('B', '1137', 2, 'Dihedral angle:N:CA', (168.41899999999998, 146.24399999999997, 229.5)), ('B', '108', 3, 'cablam Outlier', (202.1, 148.1, 119.1)), ('B', '110', 3, 'cablam Outlier', (206.8, 149.6, 116.3)), ('B', '111', 3, 'cablam CA Geom Outlier', (207.1, 148.8, 112.5)), ('B', '112', 3, 'Bond angle:C\ncablam CA Geom Outlier', (204.349, 149.80100000000002, 109.892)), ('B', '113', 3, 'Ramachandran\nBond angle:N:CA\nsmoc Outlier', (200.477, 149.266, 109.928)), ('B', '132', 3, 'smoc Outlier', (204.417, 155.21699999999998, 110.94300000000001)), ('B', '135', 3, 'Bond angle:CA:CB:CG', (212.853, 151.418, 112.988)), ('B', '137', 3, 'smoc Outlier', (213.662, 148.412, 119.039)), ('B', '139', 3, 'cablam Outlier', (217.0, 153.6, 117.4)), ('B', '235', 3, 'smoc Outlier', (199.21699999999998, 151.594, 122.54400000000001)), ('B', '1310', 4, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (207.691, 139.85700000000003, 143.32500000000002)), ('B', '215', 4, 'cablam CA Geom Outlier', (216.3, 151.1, 145.4)), ('B', '216', 4, 'cablam Outlier\nsmoc Outlier', (213.6, 153.8, 145.4)), ('B', '218', 4, 'cablam CA Geom Outlier', (210.8, 155.9, 150.8)), ('B', '220', 4, 'cablam CA Geom Outlier', (206.3, 160.9, 149.4)), ('B', '28', 4, 'side-chain clash', (209.556, 143.31, 143.226)), ('B', '29', 4, 'Bond angle:CA:CB:CG2', (211.752, 146.441, 144.068)), ('B', '34', 4, 'cablam CA Geom Outlier', (205.3, 156.4, 145.0)), ('B', '61', 4, 'side-chain clash', (209.556, 143.31, 143.226)), ('B', '348', 5, 'Dihedral angle:CA:C', (154.171, 119.736, 94.91900000000001)), ('B', '349', 5, 'Dihedral angle:N:CA', (153.795, 121.41600000000001, 91.501)), ('B', '354', 5, 'Bond angle:CA:CB:CG', (151.344, 122.163, 99.354)), ('B', '355', 5, 'Dihedral angle:CA:C', (151.02100000000002, 123.78, 102.85199999999999)), ('B', '356', 5, 'Dihedral angle:N:CA', (151.631, 122.195, 106.276)), ('B', '357', 5, 'Dihedral angle:CD:NE:CZ:NH1', (150.168, 124.11, 109.285)), ('B', '359', 5, 'smoc Outlier', (151.20499999999998, 124.282, 115.988)), ('B', '397', 5, 'smoc Outlier', (155.20399999999998, 125.55, 105.762)), ('B', '401', 5, 'smoc Outlier', (159.298, 122.311, 92.80799999999999)), ('B', '1069', 6, 'Dihedral angle:CA:C', (180.423, 153.315, 203.651)), ('B', '1070', 6, 'Dihedral angle:N:CA', (183.999, 151.95200000000003, 203.642)), ('B', '718', 6, 'Dihedral angle:CA:C', (183.18200000000002, 156.17, 205.29899999999998)), ('B', '719', 6, 'Dihedral angle:N:CA', (184.483, 157.959, 202.198)), ('B', '926', 6, 'Bond angle:OE1:CD:NE2', (188.045, 163.82700000000003, 201.608)), ('B', '930', 6, 'smoc Outlier', (187.909, 164.296, 195.626)), ('B', '1036', 7, 'cablam Outlier', (168.7, 166.2, 198.6)), ('B', '1043', 7, 'cablam CA Geom Outlier', (172.4, 161.5, 191.6)), ('B', '1048', 7, 'Bond angle:CB:CG:CD2', (173.42200000000003, 161.52800000000002, 198.084)), ('B', '1051', 7, 'smoc Outlier', (175.45600000000002, 168.195, 194.04899999999998)), ('B', '1064', 7, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (177.418, 164.591, 192.853)), ('B', '1066', 7, 'smoc Outlier', (177.784, 161.045, 198.097)), ('B', '1307', 8, 'Planar group:C2:C7:C8:N2:O7', (160.818, 115.471, 131.85200000000003)), ('B', '580', 8, 'smoc Outlier', (163.589, 116.724, 134.437)), ('B', '581', 8, 'Dihedral angle:CA:C', (164.403, 114.642, 137.566)), ('B', '582', 8, 'Dihedral angle:N:CA', (161.39100000000002, 115.728, 139.65200000000002)), ('B', '583', 8, 'Dihedral angle:CB:CG:CD:OE1', (163.13299999999998, 116.15499999999999, 143.075)), ('B', '1054', 9, 'Bond angle:OE1:CD:NE2', (179.01899999999998, 173.372, 186.278)), ('B', '819', 9, 'smoc Outlier', (184.157, 175.117, 183.97)), ('B', '870', 9, 'smoc Outlier', (174.915, 180.51899999999998, 181.691)), ('B', '874', 9, 'smoc Outlier', (175.57, 178.19899999999998, 187.612)), ('B', '877', 9, 'smoc Outlier', (172.82800000000003, 178.18200000000002, 191.895)), ('B', '1302', 10, 'Planar group:C2:C7:C8:N2:O7', (189.17499999999998, 177.666, 202.075)), ('B', '796', 10, 'smoc Outlier', (184.61299999999997, 180.354, 206.14399999999998)), ('B', '797', 10, 'cablam Outlier\nsmoc Outlier', (182.9, 177.1, 205.0)), ('B', '800', 10, 'smoc Outlier', (185.334, 172.621, 202.63899999999998)), ('B', '240', 11, 'smoc Outlier', (213.309, 153.21699999999998, 126.846)), ('B', '265', 11, 'side-chain clash', (215.42, 148.155, 129.543)), ('B', '66', 11, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (219.80100000000002, 148.366, 134.26)), ('B', '81', 11, 'side-chain clash', (215.42, 148.155, 129.543)), ('B', '529', 12, 'smoc Outlier', (168.89100000000002, 124.051, 126.29100000000001)), ('B', '530', 12, 'smoc Outlier', (169.448, 122.472, 129.74099999999999)), ('B', '531', 12, 'Dihedral angle:CA:C', (172.752, 122.301, 131.69299999999998)), ('B', '532', 12, 'Dihedral angle:N:CA', (173.77299999999997, 119.774, 134.32500000000002)), ('B', '611', 13, 'smoc Outlier', (184.76399999999998, 140.42600000000002, 161.42600000000002)), ('B', '643', 13, 'Bond angle:CA:CB:CG', (188.141, 131.92600000000002, 164.63299999999998)), ('B', '644', 13, 'Bond angle:OE1:CD:NE2', (184.36, 131.287, 164.448)), ('B', '648', 13, 'smoc Outlier', (180.599, 135.82200000000003, 162.642)), ('B', '1092', 14, 'cablam Outlier', (166.3, 153.5, 215.9)), ('B', '1105', 14, 'Dihedral angle:CA:C', (174.111, 150.89000000000001, 216.811)), ('B', '1106', 14, 'Bond angle:OE1:CD:NE2\nDihedral angle:N:CA', (172.812, 153.201, 214.124)), ('B', '1107', 14, 'Planar group:CD:NE:CZ:NH1:NH2', (172.772, 151.094, 210.90200000000002)), ('B', '268', 15, 'smoc Outlier', (205.238, 149.60999999999999, 137.45000000000002)), ('B', '90', 15, 'Dihedral angle:CA:C', (202.942, 153.072, 133.377)), ('B', '91', 15, 'Dihedral angle:N:CA', (204.765, 154.6, 136.29)), ('B', '515', 16, 'Bond angle:CA:CB:CG', (155.657, 133.04, 110.96300000000001)), ('B', '516', 16, 'Dihedral angle:CB:CG:CD:OE1', (152.785, 134.696, 112.94100000000002)), ('B', '517', 16, 'smoc Outlier', (152.24499999999998, 135.88800000000003, 116.557)), ('B', '462', 17, 'smoc Outlier', (147.118, 137.964, 95.881)), ('B', '465', 17, 'Dihedral angle:CA:C', (146.474, 132.864, 96.65299999999999)), ('B', '466', 17, 'Dihedral angle:CD:NE:CZ:NH1\nDihedral angle:N:CA\nsmoc Outlier', (146.403, 129.212, 95.436)), ('B', '960', 18, 'smoc Outlier', (177.995, 167.925, 156.015)), ('B', '962', 18, 'smoc Outlier', (173.131, 168.157, 153.62)), ('B', '965', 18, 'Bond angle:OE1:CD:NE2', (173.94899999999998, 166.21099999999998, 148.686)), ('B', '600', 19, 'Ramachandran', (192.777, 149.927, 168.703)), ('B', '602', 19, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (196.05700000000002, 154.677, 165.489)), ('B', '603', 19, 'Dihedral angle:N:CA', (197.795, 156.218, 168.52200000000002)), ('B', '470', 20, 'smoc Outlier', (141.72, 125.117, 84.641)), ('B', '471', 20, 'Dihedral angle:CB:CG:CD:OE1', (140.126, 128.376, 83.289)), ('B', '482', 20, 'smoc Outlier', (135.935, 128.129, 78.766)), ('B', '666', 21, 'cablam Outlier\nsmoc Outlier', (182.0, 142.1, 168.8)), ('B', '667', 21, 'cablam Outlier', (178.6, 140.6, 169.8)), ('B', '697', 22, 'smoc Outlier', (183.376, 139.348, 178.232)), ('B', '699', 22, 'smoc Outlier', (180.377, 140.636, 183.85700000000003)), ('B', '403', 23, 'Dihedral angle:CD:NE:CZ:NH1', (163.529, 125.13, 87.857)), ('B', '505', 23, 'smoc Outlier', (166.757, 123.89, 83.842)), ('B', '408', 24, 'Dihedral angle:CD:NE:CZ:NH1', (165.266, 134.05800000000002, 93.23100000000001)), ('B', '410', 24, 'smoc Outlier', (160.72899999999998, 133.60399999999998, 96.474)), ('B', '1098', 25, 'cablam Outlier', (181.2, 141.7, 219.7)), ('B', '1101', 25, 'Bond angle:CB:CG:CD2', (178.596, 141.89100000000002, 224.863)), ('B', '123', 26, 'Ramachandran\ncablam Outlier', (220.25, 169.493, 126.419)), ('B', '124', 26, 'smoc Outlier', (217.55100000000002, 172.26899999999998, 126.509)), ('B', '417', 27, 'smoc Outlier', (156.137, 134.08100000000002, 86.515)), ('B', '418', 27, 'smoc Outlier', (156.151, 132.406, 89.98)), ('B', '773', 28, 'smoc Outlier', (163.015, 174.77299999999997, 171.839)), ('B', '774', 28, 'smoc Outlier', (166.83700000000002, 174.931, 172.377)), ('B', '707', 29, 'Dihedral angle:CA:C\nsmoc Outlier', (174.906, 135.46200000000002, 204.65200000000002)), ('B', '708', 29, 'Dihedral angle:N:CA', (173.591, 133.69299999999998, 207.76399999999998)), ('B', '238', 30, 'smoc Outlier', (206.77399999999997, 150.64299999999997, 125.05499999999999)), ('B', '84', 30, 'smoc Outlier', (207.772, 145.88200000000003, 127.55799999999999)), ('B', '368', 31, 'side-chain clash\nsmoc Outlier', (164.532, 124.186, 106.826)), ('B', '434', 31, 'side-chain clash', (164.532, 124.186, 106.826)), ('B', '1009', 32, 'smoc Outlier', (162.914, 164.73, 160.002)), ('B', '1013', 32, 'smoc Outlier', (163.762, 163.08800000000002, 166.137)), ('B', '781', 33, 'smoc Outlier', (167.797, 173.824, 183.272)), ('B', '784', 33, 'Bond angle:OE1:CD:NE2', (165.67499999999998, 177.728, 188.198)), ('B', '904', 34, 'Bond angle:CA:CB:CG', (171.472, 168.21299999999997, 208.12800000000001)), ('B', '905', 34, 'smoc Outlier', (172.48200000000003, 166.35000000000002, 204.895)), ('B', '1001', 35, 'smoc Outlier', (163.726, 168.65200000000002, 148.539)), ('B', '1002', 35, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (163.841, 164.925, 149.57899999999998)), ('B', '337', 36, 'cablam Outlier', (156.2, 117.6, 111.3)), ('B', '338', 36, 'Bond angle:CA:CB:CG', (159.26999999999998, 118.896, 109.363)), ('B', '557', 37, 'smoc Outlier', (159.291, 119.187, 151.04)), ('B', '559', 37, 'Bond angle:CA:CB:CG', (154.948, 119.45, 146.566)), ('B', '744', 38, 'Ramachandran', (170.00300000000001, 179.469, 145.059)), ('B', '745', 38, 'cablam Outlier', (170.2, 182.8, 143.0)), ('B', '186', 39, 'smoc Outlier', (222.048, 158.334, 141.23499999999999)), ('B', '97', 39, 'cablam Outlier\nsmoc Outlier', (223.2, 161.8, 137.3)), ('B', '276', 40, 'smoc Outlier', (191.98600000000002, 159.48200000000003, 149.48700000000002)), ('B', '49', 40, 'Bond angle:CB:CG:CD2', (189.45800000000003, 164.38400000000001, 148.684)), ('B', '949', 41, 'Bond angle:OE1:CD:NE2', (181.134, 165.969, 171.77599999999998)), ('B', '950', 41, 'Bond angle:CA:CB:CG\nsmoc Outlier', (178.813, 163.236, 170.313)), ('C', '297', 1, 'smoc Outlier', (134.659, 137.553, 156.686)), ('C', '298', 1, 'Dihedral angle:CB:CG:CD:OE1', (135.983, 141.085, 155.94299999999998)), ('C', '315', 1, 'Dihedral angle:CA:C', (137.67399999999998, 146.594, 157.946)), ('C', '316', 1, 'Dihedral angle:N:CA', (136.504, 149.111, 155.347)), ('C', '318', 1, 'Dihedral angle:CA:C', (131.74899999999997, 153.638, 153.41299999999998)), ('C', '319', 1, 'Dihedral angle:N:CA', (130.39200000000002, 156.343, 151.099)), ('C', '321', 1, 'Bond angle:OE1:CD:NE2', (126.589, 156.134, 146.24499999999998)), ('C', '326', 1, 'smoc Outlier', (122.935, 165.58100000000002, 136.27899999999997)), ('C', '531', 1, 'Dihedral angle:CA:C', (118.96000000000001, 166.85700000000003, 132.335)), ('C', '532', 1, 'Dihedral angle:N:CA', (116.55799999999999, 168.218, 134.92600000000002)), ('C', '536', 1, 'Ramachandran\ncablam Outlier', (119.104, 166.887, 148.461)), ('C', '537', 1, 'Dihedral angle:CA:C', (120.019, 163.47, 146.846)), ('C', '538', 1, 'Dihedral angle:N:CA', (123.619, 162.36, 146.312)), ('C', '539', 1, 'Dihedral angle:CA:C', (124.24300000000001, 162.646, 142.51399999999998)), ('C', '540', 1, 'Dihedral angle:N:CA', (126.93400000000001, 162.80700000000002, 139.875)), ('C', '549', 1, 'cablam CA Geom Outlier', (129.8, 163.9, 142.9)), ('C', '590', 1, 'smoc Outlier', (128.45800000000003, 162.341, 149.591)), ('C', '595', 1, 'smoc Outlier', (133.317, 150.92100000000002, 158.871)), ('C', '1036', 2, 'cablam Outlier', (162.7, 151.1, 198.6)), ('C', '1041', 2, 'C-beta', (151.02000000000007, 154.131, 192.004)), ('C', '1043', 2, 'cablam Outlier', (156.4, 150.1, 192.3)), ('C', '1048', 2, 'Bond angle:CB:CG:CD2', (156.3, 149.304, 198.45700000000002)), ('C', '1051', 2, 'smoc Outlier', (160.88800000000003, 144.178, 194.16299999999998)), ('C', '1054', 2, 'Bond angle:OE1:CD:NE2', (163.27299999999997, 138.59, 186.22)), ('C', '1062', 2, 'smoc Outlier', (159.524, 143.32100000000003, 188.122)), ('C', '1064', 2, 'Bond angle:CB:CG:CD2', (156.778, 144.266, 193.11899999999997)), ('C', '819', 2, 'smoc Outlier', (162.198, 133.21599999999998, 183.85100000000003)), ('C', '874', 2, 'smoc Outlier', (169.303, 139.187, 187.231)), ('C', '357', 3, 'Dihedral angle:CD:NE:CZ:NH1', (135.872, 184.845, 117.834)), ('C', '394', 3, 'side-chain clash', (136.467, 181.533, 125.978)), ('C', '395', 3, 'smoc Outlier', (137.18, 180.086, 121.371)), ('C', '513', 3, 'smoc Outlier', (141.864, 176.997, 118.076)), ('C', '516', 3, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (139.847, 180.379, 126.863)), ('C', '517', 3, 'smoc Outlier', (139.008, 178.157, 129.88000000000002)), ('C', '518', 3, 'Dihedral angle:CA:C', (139.01399999999998, 181.342, 132.107)), ('C', '519', 3, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (136.097, 180.849, 134.472)), ('C', '520', 3, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (133.48700000000002, 183.4, 133.45700000000002)), ('C', '521', 3, 'Dihedral angle:N:CA', (130.036, 182.011, 132.461)), ('C', '1091', 4, 'Dihedral angle:CA:C', (154.784, 162.04, 218.67499999999998)), ('C', '1092', 4, 'Rotamer\nDihedral angle:N:CA', (153.869, 159.469, 216.05100000000002)), ('C', '1094', 4, 'smoc Outlier', (146.869, 159.159, 216.066)), ('C', '1105', 4, 'Dihedral angle:CA:C', (147.87800000000001, 153.883, 217.632)), ('C', '1106', 4, 'Dihedral angle:N:CA', (150.48600000000002, 153.88500000000002, 214.91)), ('C', '1113', 4, 'Rotamer\nBond angle:OE1:CD:NE2', (148.82100000000003, 152.1, 223.30200000000002)), ('C', '1118', 4, 'Bond angle:CA:CB:CG', (156.33200000000002, 159.788, 226.259)), ('C', '1120', 4, 'smoc Outlier', (152.94899999999998, 162.517, 223.30800000000002)), ('C', '1301', 5, 'Planar group:C2:C7:C8:N2:O7', (131.134, 155.18800000000002, 210.15)), ('C', '707', 5, 'Dihedral angle:CA:C', (133.49200000000002, 161.168, 206.411)), ('C', '708', 5, 'Dihedral angle:N:CA', (132.74599999999998, 163.187, 209.572)), ('C', '711', 5, 'smoc Outlier', (135.54399999999998, 159.672, 212.461)), ('C', '712', 5, 'smoc Outlier', (138.718, 157.781, 211.39600000000002)), ('C', '713', 5, 'smoc Outlier', (139.185, 154.303, 209.86)), ('C', '348', 6, 'Dihedral angle:CA:C', (145.46, 185.55700000000002, 105.807)), ('C', '349', 6, 'Dihedral angle:N:CA', (149.186, 186.08, 105.228)), ('C', '353', 6, 'cablam Outlier', (147.1, 186.3, 110.7)), ('C', '400', 6, 'smoc Outlier', (146.812, 181.687, 108.05)), ('C', '401', 6, 'smoc Outlier', (148.621, 180.04899999999998, 105.05499999999999)), ('C', '1082', 7, 'Dihedral angle:CA:C', (143.597, 168.099, 227.48100000000002)), ('C', '1083', 7, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA', (145.445, 167.369, 230.731)), ('C', '1087', 7, 'smoc Outlier', (147.20299999999997, 170.324, 225.107)), ('C', '1135', 7, 'Dihedral angle:CA:C', (141.631, 162.62, 229.08700000000002)), ('C', '1136', 7, 'Dihedral angle:N:CA', (144.091, 161.323, 231.66899999999998)), ('C', '202', 8, 'smoc Outlier', (141.755, 126.37599999999999, 132.13299999999998)), ('C', '228', 8, 'Dihedral angle:CA:C', (145.772, 124.585, 130.691)), ('C', '229', 8, 'Dihedral angle:N:CA', (145.349, 125.13, 126.94600000000001)), ('C', '230', 8, 'Dihedral angle:CA:C\ncablam Outlier', (146.66899999999998, 127.866, 124.48100000000001)), ('C', '231', 8, 'Dihedral angle:N:CA', (143.472, 127.71700000000001, 122.35499999999999)), ('C', '1306', 9, 'Planar group:C2:C7:C8:N2:O7', (122.693, 162.201, 163.817)), ('C', '615', 9, 'smoc Outlier', (127.23100000000001, 158.38800000000003, 159.86200000000002)), ('C', '644', 9, 'side-chain clash\nBond angle:OE1:CD:NE2', (122.289, 156.036, 166.524)), ('C', '649', 9, 'C-beta\nside-chain clash', (122.845, 156.924, 162.999)), ('C', '1302', 10, 'Planar group:C2:C7:C8:N2:O7', (163.757, 128.525, 200.495)), ('C', '796', 10, 'Bond angle:CA:CB:CG', (167.89800000000002, 130.257, 205.761)), ('C', '797', 10, 'cablam Outlier', (165.7, 133.3, 204.7)), ('C', '803', 10, 'cablam Outlier', (163.2, 129.2, 194.5)), ('C', '86', 11, 'smoc Outlier', (129.305, 131.08800000000002, 130.197)), ('C', '88', 11, 'cablam Outlier', (133.3, 135.1, 133.3)), ('C', '90', 11, 'Dihedral angle:CA:C', (131.58700000000002, 128.29299999999998, 135.083)), ('C', '91', 11, 'Dihedral angle:N:CA', (131.525, 125.925, 138.035)), ('C', '759', 12, 'smoc Outlier', (171.258, 158.20899999999997, 150.936)), ('C', '763', 12, 'smoc Outlier', (170.29299999999998, 154.89200000000002, 156.06)), ('C', '764', 12, 'smoc Outlier', (172.99200000000002, 152.483, 157.35000000000002)), ('C', '767', 12, 'smoc Outlier', (170.19299999999998, 151.906, 161.632)), ('C', '122', 13, 'Bond angle:C', (135.472, 108.729, 125.31700000000001)), ('C', '123', 13, 'Ramachandran\nBond angle:N:CA', (135.859, 106.02499999999999, 128.106)), ('C', '125', 13, 'Dihedral angle:CA:C', (140.592, 108.836, 127.04)), ('C', '126', 13, 'Dihedral angle:N:CA', (139.348, 112.409, 127.46900000000001)), ('C', '599', 14, 'side-chain clash\nBond angle:CA:C', (133.34, 140.966, 167.48700000000002)), ('C', '600', 14, 'Bond angle:N\ncablam CA Geom Outlier', (132.697, 138.88800000000003, 170.732)), ('C', '601', 14, 'side-chain clash', (134.336, 138.214, 167.785)), ('C', '602', 14, 'Rotamer', (135.17, 133.901, 166.871)), ('C', '578', 15, 'Bond angle:CA:CB:CG', (123.12299999999999, 176.88100000000003, 137.517)), ('C', '581', 15, 'Dihedral angle:CA:C', (118.142, 178.945, 136.10999999999999)), ('C', '582', 15, 'Dihedral angle:N:CA', (120.61, 181.464, 137.576)), ('C', '583', 15, 'Dihedral angle:CB:CG:CD:OE1', (120.269, 180.35800000000003, 141.272)), ('C', '129', 16, 'Dihedral angle:CA:C', (138.92800000000003, 119.143, 119.70100000000001)), ('C', '130', 16, 'Dihedral angle:N:CA', (138.27299999999997, 122.71300000000001, 118.609)), ('C', '165', 16, 'Rotamer\nsmoc Outlier', (138.876, 125.233, 113.335)), ('C', '1069', 17, 'Dihedral angle:CA:C', (146.07, 147.403, 204.48800000000003)), ('C', '1070', 17, 'Dihedral angle:N:CA', (143.097, 144.983, 204.58800000000002)), ('C', '1071', 17, 'Bond angle:OE1:CD:NE2', (140.566, 145.01899999999998, 207.529)), ('C', '111', 18, 'Bond angle:C', (127.54400000000001, 125.118, 115.17599999999999)), ('C', '112', 18, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (129.403, 125.16999999999999, 111.774)), ('C', '134', 18, 'smoc Outlier', (128.349, 120.856, 112.095)), ('C', '331', 19, 'cablam Outlier', (120.1, 176.6, 126.8)), ('C', '332', 19, 'smoc Outlier', (122.086, 177.444, 123.54400000000001)), ('C', '333', 19, 'smoc Outlier', (121.066, 175.54399999999998, 120.31400000000001)), ('C', '388', 20, 'smoc Outlier', (132.497, 167.33200000000002, 122.773)), ('C', '525', 20, 'Dihedral angle:CA:C', (129.315, 174.272, 124.433)), ('C', '526', 20, 'Dihedral angle:N:CA', (130.16899999999998, 170.74299999999997, 123.34400000000001)), ('C', '106', 21, 'smoc Outlier', (131.823, 125.667, 124.507)), ('C', '108', 21, 'cablam Outlier', (129.7, 131.3, 120.5)), ('C', '235', 21, 'smoc Outlier', (133.607, 131.533, 124.566)), ('C', '1307', 22, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (134.096, 173.167, 108.644)), ('C', '339', 22, 'smoc Outlier', (132.606, 176.625, 107.836)), ('C', '666', 23, 'cablam Outlier', (132.9, 152.2, 170.6)), ('C', '670', 23, 'smoc Outlier', (129.536, 153.85100000000003, 174.453)), ('C', '932', 24, 'smoc Outlier', (152.664, 130.82200000000003, 193.82700000000003)), ('C', '933', 24, 'smoc Outlier', (149.875, 132.818, 192.063)), ('C', '408', 25, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (156.61499999999998, 172.638, 112.843)), ('C', '410', 25, 'smoc Outlier', (153.25, 176.284, 115.12599999999999)), ('C', '992', 26, 'Bond angle:OE1:CD:NE2', (161.686, 152.10899999999998, 134.316)), ('C', '996', 26, 'smoc Outlier', (161.847, 150.975, 141.136)), ('C', '378', 27, 'smoc Outlier', (147.334, 168.201, 117.524)), ('C', '434', 27, 'smoc Outlier', (144.969, 171.917, 112.65199999999999)), ('C', '414', 28, 'Bond angle:OE1:CD:NE2', (159.17399999999998, 177.288, 119.46400000000001)), ('C', '415', 28, 'smoc Outlier', (161.854, 179.74699999999999, 118.17499999999998)), ('C', '273', 29, 'smoc Outlier', (136.373, 137.989, 144.406)), ('C', '275', 29, 'smoc Outlier', (139.58, 134.86700000000002, 148.959)), ('C', '1019', 30, 'Dihedral angle:CD:NE:CZ:NH1', (164.561, 154.047, 174.848)), ('C', '1022', 30, 'smoc Outlier', (164.42100000000002, 151.23899999999998, 178.85000000000002)), ('C', '445', 31, 'smoc Outlier', (151.657, 178.74899999999997, 87.863)), ('C', '447', 31, 'cablam Outlier', (153.7, 182.0, 91.7)), ('C', '382', 32, 'smoc Outlier', (143.186, 168.92600000000002, 125.98)), ('C', '383', 32, 'smoc Outlier', (142.44, 165.681, 124.021)), ('C', '901', 33, 'Bond angle:OE1:CD:NE2', (165.844, 143.347, 206.282)), ('C', '905', 33, 'smoc Outlier', (161.32200000000003, 147.70399999999998, 204.933)), ('C', '220', 34, 'cablam CA Geom Outlier', (135.1, 121.7, 151.6)), ('C', '34', 34, 'cablam CA Geom Outlier', (132.2, 124.7, 147.4)), ('C', '437', 35, 'smoc Outlier', (147.791, 170.82200000000003, 102.28)), ('C', '439', 35, 'smoc Outlier', (148.477, 173.135, 96.865)), ('C', '557', 36, 'smoc Outlier', (125.798, 182.88400000000001, 148.829)), ('C', '559', 36, 'Bond angle:CA:CB:CG', (127.59, 185.74599999999998, 144.06)), ('C', '466', 37, 'Dihedral angle:CD:NE:CZ:NH1', (150.094, 191.076, 115.866)), ('C', '468', 37, 'smoc Outlier', (151.306, 194.78, 110.18799999999999)), ('C', '950', 38, 'smoc Outlier', (153.814, 143.509, 170.65800000000002)), ('C', '954', 38, 'Bond angle:OE1:CD:NE2', (155.819, 145.32700000000003, 165.389)), ('C', '40', 39, 'Bond angle:CA:CB:CG', (148.38500000000002, 129.08, 140.944)), ('C', '41', 39, 'cablam Outlier', (150.9, 126.2, 140.6)), ('D', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (184.752, 178.475, 224.66)), ('D', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (188.95200000000003, 172.66, 227.64399999999998)), ('E', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (168.059, 190.15, 223.83200000000002)), ('E', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (163.89800000000002, 183.474, 230.623)), ('F', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (167.651, 132.648, 224.122)), ('F', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (161.127, 128.19, 232.601)), ('G', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (181.505, 145.505, 230.572)), ('H', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (132.972, 149.642, 224.296))]
data['rama'] = [('A', ' 112 ', 'SER', 0.031213064611215893, (149.39200000000005, 207.791, 112.247)), ('A', ' 477 ', 'SER', 0.03219914317524169, (178.607, 124.558, 110.653)), ('A', ' 600 ', 'PRO', 0.039824671441709605, (154.79600000000005, 194.403, 170.024)), ('A', ' 617 ', 'CYS', 0.011365822362408332, (175.804, 197.55, 159.771)), ('B', ' 113 ', 'LYS', 0.04361438283131926, (200.47700000000006, 149.266, 109.928)), ('B', ' 123 ', 'ALA', 0.009466764246297778, (220.25, 169.493, 126.419)), ('B', ' 600 ', 'PRO', 0.04550577965356797, (192.777, 149.927, 168.703)), ('B', ' 744 ', 'GLY', 0.060067774800701544, (170.00300000000001, 179.469, 145.059)), ('C', ' 112 ', 'SER', 0.003947710411652036, (129.40300000000005, 125.17, 111.774)), ('C', ' 123 ', 'ALA', 0.040598259725008204, (135.859, 106.025, 128.106)), ('C', ' 536 ', 'ASN', 0.046338380611569564, (119.104, 166.887, 148.461))]
data['cablam'] = [('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (153.0, 197.6, 132.7)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (153.0, 202.7, 120.4)), ('A', '112', 'SER', ' alpha helix', 'bend\nSSSSS', (149.4, 207.8, 112.2)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (126.0, 208.5, 127.5)), ('A', '221', 'SER', 'check CA trace,carbonyls, peptide', ' \n----B', (136.3, 199.3, 147.9)), ('A', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (152.9, 192.7, 151.0)), ('A', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-BT', (175.6, 153.6, 91.3)), ('A', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (177.5, 131.9, 111.6)), ('A', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (178.6, 124.6, 110.7)), ('A', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (189.7, 129.6, 105.9)), ('A', '487', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (177.9, 130.0, 106.8)), ('A', '496', 'GLY', ' beta sheet', ' \nE--B-', (175.9, 151.9, 95.5)), ('A', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (188.0, 170.1, 134.5)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (185.4, 194.3, 144.9)), ('A', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (175.8, 197.6, 159.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.7, 188.9, 169.8)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (136.3, 170.2, 206.3)), ('A', '939', 'SER', ' alpha helix', 'turn\nHHTT-', (138.3, 184.6, 185.1)), ('A', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (152.8, 163.8, 199.0)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (154.6, 169.4, 192.8)), ('A', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (157.4, 175.6, 194.4)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (179.1, 168.9, 232.3)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (159.2, 177.5, 211.7)), ('A', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (148.5, 208.0, 116.0)), ('A', '132', 'GLU', 'check CA trace', 'bend\nEES--', (145.9, 203.1, 112.3)), ('A', '214', 'ARG', 'check CA trace', 'bend\n-SSS-', (139.3, 217.6, 147.3)), ('A', '215', 'ASP', 'check CA trace', 'bend\nSSS--', (140.8, 214.3, 146.1)), ('A', '220', 'PHE', 'check CA trace', ' \nS----', (138.7, 200.6, 150.6)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (177.0, 185.9, 140.7)), ('A', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (138.9, 165.3, 151.7)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (193.4, 170.6, 137.0)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (196.5, 150.4, 131.3)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (223.2, 161.8, 137.3)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (202.1, 148.1, 119.1)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (206.8, 149.6, 116.3)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (220.2, 169.5, 126.4)), ('B', '139', 'PRO', 'check CA trace,carbonyls, peptide', ' \nS--GG', (217.0, 153.6, 117.4)), ('B', '167', 'THR', 'check CA trace,carbonyls, peptide', ' \n---EE', (200.0, 162.9, 112.3)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (190.7, 157.2, 126.2)), ('B', '216', 'LEU', ' beta sheet', ' \n-S---', (213.6, 153.8, 145.4)), ('B', '337', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nB-THH', (156.2, 117.6, 111.3)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (182.0, 142.1, 168.8)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (178.6, 140.6, 169.8)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nT-S-H', (170.2, 182.8, 143.0)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (182.9, 177.1, 205.0)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (168.7, 166.2, 198.6)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (166.3, 153.5, 215.9)), ('B', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (181.2, 141.7, 219.7)), ('B', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (156.1, 144.8, 222.6)), ('B', '34', 'ARG', 'check CA trace', ' \nTT--E', (205.3, 156.4, 145.0)), ('B', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (207.1, 148.8, 112.5)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (204.3, 149.8, 109.9)), ('B', '200', 'TYR', 'check CA trace', 'bend\nSSSEE', (194.3, 160.6, 124.4)), ('B', '215', 'ASP', 'check CA trace', 'bend\n--S--', (216.3, 151.1, 145.4)), ('B', '218', 'GLN', 'check CA trace', ' \n---S-', (210.8, 155.9, 150.8)), ('B', '220', 'PHE', 'check CA trace', ' \n-S--E', (206.3, 160.9, 149.4)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (195.6, 148.1, 150.2)), ('B', '415', 'THR', 'check CA trace', ' \nT--SH', (157.3, 139.9, 90.7)), ('B', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (142.2, 134.2, 69.3)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (170.9, 133.2, 142.4)), ('B', '602', 'THR', 'check CA trace', 'turn\n--TTT', (196.1, 154.7, 165.5)), ('B', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (174.1, 177.4, 150.7)), ('B', '1043', 'CYS', 'check CA trace', 'bend\nTSSSS', (172.4, 161.5, 191.6)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (150.9, 126.2, 140.6)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (133.3, 135.1, 133.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (129.7, 131.3, 120.5)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (129.4, 125.2, 111.8)), ('C', '230', 'PRO', ' beta sheet', ' \nEE---', (146.7, 127.9, 124.5)), ('C', '331', 'ASN', 'check CA trace,carbonyls, peptide', ' \n-----', (120.1, 176.6, 126.8)), ('C', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (147.1, 186.3, 110.7)), ('C', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (153.7, 182.0, 91.7)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (166.9, 206.8, 106.9)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (119.1, 166.9, 148.5)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (132.9, 152.2, 170.6)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (165.7, 133.3, 204.7)), ('C', '803', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (163.2, 129.2, 194.5)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (178.6, 150.4, 198.4)), ('C', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (162.7, 151.1, 198.6)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (156.4, 150.1, 192.3)), ('C', '34', 'ARG', 'check CA trace', ' \nTT---', (132.2, 124.7, 147.4)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (135.1, 121.7, 151.6)), ('C', '484', 'GLU', 'check CA trace', ' \nTS-BT', (165.6, 201.2, 100.7)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (129.8, 163.9, 142.9)), ('C', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (132.7, 138.9, 170.7))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23551/7lwn/Model_validation_1/validation_cootdata/molprobity_probe7lwn_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

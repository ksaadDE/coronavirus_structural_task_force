# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('N', ' 104 ', 'SER', 0.03232242697103142, (182.6219999999999, 245.416, 201.071)), ('N', ' 110 ', 'ASP', 0.07613325902737703, (172.5019999999999, 249.73, 206.895))]
data['omega'] = [('B', ' 124 ', 'THR', None, (185.26399999999978, 221.139, 195.31099999999998)), ('B', ' 249 ', 'LEU', None, (171.87899999999988, 245.766, 200.04600000000002)), ('N', '   9 ', 'GLY', None, (170.89099999999988, 245.49199999999996, 225.30799999999996))]
data['rota'] = []
data['cbeta'] = [('N', ' 104 ', 'SER', ' ', 0.29374753695758105, (184.10699999999989, 245.148, 201.39600000000002))]
data['probe'] = [(' N  54  PRO  HB3', ' N 104  SER  CB ', -1.598, (184.612, 245.704, 201.132)), (' N  54  PRO  CB ', ' N 104  SER  HB3', -1.413, (185.693, 245.722, 201.935)), (' N  32  GLU  O  ', ' N 102  PRO  HG3', -1.294, (178.272, 238.819, 203.729)), (' N  32  GLU  O  ', ' N 102  PRO  CG ', -1.162, (178.283, 239.371, 203.124)), (' N  54  PRO  HB3', ' N 104  SER  OG ', -1.147, (183.938, 244.649, 202.18)), (' N  54  PRO  CB ', ' N 104  SER  CB ', -1.093, (185.668, 245.383, 202.028)), (' B  42  VAL  CG2', ' B  44  ARG  NH1', -1.081, (179.909, 192.459, 176.218)), (' B 248  TYR  CE2', ' N 103  PHE  HE1', -1.008, (175.6, 239.455, 200.245)), (' B  42  VAL  CG2', ' B  44  ARG HH12', -0.974, (178.429, 192.584, 176.741)), (' N  32  GLU  O  ', ' N 102  PRO  CB ', -0.964, (178.968, 239.619, 203.477)), (' B  42  VAL HG23', ' B  44  ARG  NH1', -0.961, (179.972, 193.233, 176.252)), (' B 273  ARG  HB2', ' B 275  PHE  CE2', -0.91, (163.721, 200.346, 175.734)), (' N  54  PRO  CB ', ' N 104  SER  OG ', -0.889, (184.419, 245.508, 203.199)), (' B 248  TYR  CE2', ' N 103  PHE  CE1', -0.871, (176.41, 239.983, 199.817)), (' B 275  PHE  CE1', ' B 290  ASP  HB2', -0.854, (164.799, 202.099, 171.779)), (' N  54  PRO  HB3', ' N 104  SER  HB3', -0.844, (184.018, 246.371, 201.565)), (' B 248  TYR  CD2', ' N 103  PHE  HE1', -0.831, (175.385, 240.692, 199.575)), (' B  39  PRO  HG3', ' B 277  LEU HD12', -0.829, (173.465, 197.111, 174.749)), (' N  54  PRO  HB2', ' N 104  SER  HB3', -0.826, (185.602, 246.482, 201.968)), (' N  98  ALA  HB1', ' N 109  PHE  HB2', -0.818, (175.95, 250.87, 210.167)), (' B 273  ARG  NH1', ' B 290  ASP  OD2', -0.814, (159.946, 201.816, 172.169)), (' B  58  PHE  HE2', ' B 288  ALA  O  ', -0.81, (167.559, 204.735, 168.964)), (' B 275  PHE  HE1', ' B 290  ASP  HB2', -0.794, (164.017, 202.773, 172.313)), (' B 248  TYR  CD2', ' N 103  PHE  CE1', -0.793, (176.223, 240.92, 199.342)), (' N  32  GLU  O  ', ' N 102  PRO  HB3', -0.784, (179.187, 240.023, 204.659)), (' B 248  TYR  HE2', ' N 103  PHE  HE1', -0.782, (175.991, 239.607, 200.585)), (' B  39  PRO  HG3', ' B 277  LEU  CD1', -0.781, (172.97, 197.696, 174.981)), (' B 224  GLU  N  ', ' B 224  GLU  OE1', -0.764, (179.831, 206.859, 180.074)), (' N  39  ARG  HB2', ' N  47  GLU  HB3', -0.759, (181.139, 258.299, 218.53)), (' N  13  LYS  H  ', ' N 119  THR  HB ', -0.752, (176.931, 251.216, 233.491)), (' B 248  TYR  HE2', ' N 103  PHE  CE1', -0.751, (176.433, 239.527, 200.733)), (' B 276  LEU  O  ', ' B 276  LEU HD12', -0.717, (171.042, 199.621, 168.718)), (' B  55  PHE  CD2', ' B 275  PHE  CD2', -0.714, (166.91, 200.478, 175.642)), (' B 130  VAL  HB ', ' B 168  PHE  HB3', -0.713, (174.881, 205.21, 201.409)), (' B  38  TYR  CD1', ' B 285  ILE HD12', -0.704, (177.121, 201.867, 174.841)), (' B  38  TYR  HE1', ' B 285  ILE HG13', -0.704, (179.248, 202.438, 174.026)), (' N  68  ARG  NH2', ' N  86  SER  O  ', -0.701, (187.673, 254.664, 229.936)), (' N  39  ARG  N  ', ' N  47  GLU  O  ', -0.697, (180.241, 255.897, 217.4)), (' G  28  ASN  OD1', ' G  29  ILE  N  ', -0.696, (186.125, 264.018, 201.958)), (' B  73  THR HG23', ' B  74  ASN  H  ', -0.696, (158.279, 242.213, 185.895)), (' B  42  VAL HG22', ' B  44  ARG HH12', -0.695, (178.903, 193.319, 177.514)), (' B  38  TYR  CD1', ' B 285  ILE  CD1', -0.693, (177.727, 201.523, 174.532)), (' N 106  SER  OG ', ' N 108  TRP  CE2', -0.691, (177.213, 250.389, 201.244)), (' B 126  VAL  HB ', ' B 174  PRO  HA ', -0.684, (181.654, 215.819, 191.52)), (' B 180  GLU  HG3', ' B 181  GLY  H  ', -0.68, (183.352, 230.118, 180.43)), (' N  53  ASP  HB2', ' N  60  MET  HG2', -0.677, (188.81, 248.06, 208.494)), (' B 206  LYS  HB2', ' B 223  LEU  HG ', -0.677, (176.303, 210.429, 179.14)), (' N  21  VAL  HB ', ' N  82  MET  HB3', -0.674, (179.743, 245.967, 221.696)), (' N  33  VAL HG23', ' N 102  PRO  HD3', -0.673, (176.797, 242.462, 205.254)), (' B  81  ASN  O  ', ' B 239  GLN  NE2', -0.669, (160.917, 221.487, 193.752)), (' N  91  ASP  O  ', ' N  95  TYR  OH ', -0.668, (180.728, 256.179, 225.836)), (' N  13  LYS  HE3', ' N  17  ALA  HB1', -0.665, (181.354, 247.806, 234.852)), (' B  55  PHE  CD2', ' B 275  PHE  HD2', -0.662, (167.183, 200.224, 176.123)), (' B 223  LEU  N  ', ' B 223  LEU HD12', -0.66, (175.984, 208.404, 177.76)), (' B 116  SER  N  ', ' B 131  CYS  O  ', -0.653, (168.58, 208.391, 203.503)), (' B  38  TYR  CE1', ' B 285  ILE HG13', -0.651, (178.341, 202.602, 174.24)), (' B 201  PHE  HB3', ' B 231  ILE HG13', -0.647, (172.426, 203.1, 194.96)), (' G  19  THR HG22', ' G  76  ILE  H  ', -0.646, (166.991, 269.254, 198.662)), (' B  37  TYR  OH ', ' B 195  LYS  NZ ', -0.646, (170.106, 200.239, 182.589)), (' B 278  LYS  HE3', ' B 287  ASP  HB3', -0.646, (174.693, 202.74, 164.659)), (' G  86  ASP  HB2', ' G 106  LYS  HG2', -0.645, (168.756, 267.448, 214.512)), (' B  38  TYR  HD1', ' B 285  ILE  CD1', -0.644, (177.532, 200.979, 174.793)), (' B 125  ASN  HA ', ' B 174  PRO  HD3', -0.641, (185.185, 217.173, 192.354)), (' G  39  GLN  NE2', ' G  43  THR  O  ', -0.641, (168.353, 257.854, 217.303)), (' G  44  ALA  HB1', ' N 112  TRP  HE1', -0.637, (167.74, 253.24, 214.417)), (' G  62  ARG  O  ', ' G  77  THR  OG1', -0.632, (162.06, 265.743, 196.895)), (' B 273  ARG  HB2', ' B 275  PHE  HE2', -0.632, (164.331, 201.107, 176.018)), (' G  44  ALA  HB1', ' N 112  TRP  NE1', -0.63, (168.028, 252.727, 213.826)), (' B 122  ASN  ND2', ' B 122  ASN  O  ', -0.629, (181.885, 222.501, 197.668)), (' N  34  ALA  HB1', ' N  52  PHE  HB3', -0.628, (182.745, 244.359, 208.652)), (' B  39  PRO  CD ', ' B 277  LEU  CD1', -0.628, (174.428, 198.399, 175.774)), (' B 111  ASP  OD1', ' B 134  GLN  NE2', -0.628, (161.091, 215.294, 207.444)), (' B 146  HIS  ND1', ' B 148  ASN  O  ', -0.627, (185.533, 232.267, 206.023)), (' N  92  THR  HA ', ' N 118  VAL HG23', -0.625, (178.546, 255.558, 228.148)), (' B  58  PHE  CE2', ' B 288  ALA  O  ', -0.624, (167.735, 204.92, 168.972)), (' B 245  HIS  CD2', ' B 260  ALA  HB2', -0.624, (173.263, 234.274, 193.184)), (' B 100  ILE HG21', ' B 263  ALA  HB2', -0.621, (169.084, 227.361, 187.819)), (' B 140  PHE  HB2', ' B 242  LEU  HB2', -0.616, (168.176, 224.887, 195.74)), (' G  17  LYS  HG3', ' G  77  THR HG22', -0.612, (163.444, 270.2, 196.684)), (' N  68  ARG  NH1', ' N  91  ASP  OD2', -0.61, (187.012, 256.913, 226.949)), (' B  39  PRO  CG ', ' B 277  LEU  CD1', -0.609, (174.225, 197.752, 175.588)), (' B  42  VAL HG21', ' B  44  ARG  NH1', -0.608, (179.187, 191.848, 176.659)), (' B 273  ARG  CB ', ' B 275  PHE  CE2', -0.604, (163.369, 200.809, 175.245)), (' N 106  SER  OG ', ' N 108  TRP  CZ2', -0.598, (177.402, 249.827, 200.768)), (' G  37  TYR  HD1', ' G  47  LEU  HA ', -0.598, (171.358, 256.513, 206.645)), (' G  99  VAL  HB ', ' N  48  TRP  CG ', -0.598, (183.012, 254.461, 211.457)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.595, (166.98, 217.265, 179.886)), (' G  36  TRP  CH2', ' G  89  CYS  HB3', -0.592, (175.554, 265.494, 204.563)), (' N  54  PRO  CA ', ' N 104  SER  OG ', -0.591, (185.37, 245.007, 202.936)), (' B  39  PRO  HD3', ' B 277  LEU  CD1', -0.588, (174.024, 199.292, 175.354)), (' N  39  ARG  NH2', ' N  91  ASP  HA ', -0.581, (181.769, 258.357, 225.313)), (' G  38  GLN  O  ', ' G  46  LYS  N  ', -0.58, (168.24, 257.471, 211.389)), (' B 248  TYR  HD2', ' N 103  PHE  CE1', -0.58, (176.088, 241.497, 199.631)), (' N  92  THR  HB ', ' N 120  VAL HG13', -0.577, (179.4, 256.561, 230.525)), (' G  99  VAL  HB ', ' N  48  TRP  CD2', -0.577, (184.044, 254.361, 211.282)), (' B  57  PRO  HG2', ' B  60  SER  OG ', -0.577, (159.723, 206.756, 174.959)), (' B 105  ILE HG12', ' B 239  GLN  H  ', -0.575, (164.609, 215.119, 195.137)), (' B 244  LEU HD13', ' B 258  TRP  HB3', -0.571, (167.3, 231.893, 196.055)), (' B 115  GLN  HB2', ' B 233  ILE HD12', -0.571, (166.608, 204.282, 202.031)), (' N  89  SER  OG ', ' N  90  GLU  OE1', -0.57, (184.507, 262.934, 230.152)), (' N  87  LEU HD13', ' N 120  VAL  HA ', -0.57, (181.569, 253.658, 233.713)), (' B  39  PRO  HD3', ' B 277  LEU HD11', -0.569, (173.285, 199.114, 175.553)), (' B  84  LEU  N  ', ' B 238  PHE  O  ', -0.568, (159.826, 214.663, 193.632)), (' N  36  HIS  HA ', ' N  51  GLY  HA2', -0.566, (181.774, 248.247, 212.404)), (' N   7  GLN  NE2', ' N  97  CYS  H  ', -0.561, (173.3, 249.402, 217.81)), (' B 212  LEU HD23', ' B 214  ARG  H  ', -0.56, (167.385, 225.67, 171.669)), (' G  86  ASP  OD1', ' G 105  THR  N  ', -0.558, (171.889, 267.722, 211.844)), (' G   6  GLN HE21', ' G 104  GLY  H  ', -0.552, (176.378, 267.493, 211.277)), (' B  55  PHE  HB2', ' B 275  PHE  CE2', -0.547, (165.273, 202.274, 176.05)), (' N  36  HIS  N  ', ' N  98  ALA  O  ', -0.546, (178.239, 247.18, 212.099)), (' B 146  HIS  CE1', ' B 148  ASN  HB2', -0.546, (185.814, 232.757, 207.744)), (' N   2  VAL HG21', ' N  28  TYR  CD2', -0.545, (170.597, 239.871, 206.472)), (' G  62  ARG  NH1', ' G  77  THR  O  ', -0.545, (160.136, 266.066, 201.198)), (' B 200  TYR  HA ', ' B 229  LEU  O  ', -0.545, (174.027, 199.606, 193.848)), (' G  38  GLN  HB2', ' G  48  LEU HD21', -0.544, (166.779, 260.999, 207.09)), (' N   2  VAL HG13', ' N  26  SER  O  ', -0.543, (168.394, 239.945, 209.55)), (' B 106  PHE  HB3', ' B 235  ILE HD13', -0.542, (167.032, 208.084, 195.261)), (' B 106  PHE  HB3', ' B 235  ILE HG21', -0.54, (165.982, 208.775, 194.657)), (' G  99  VAL HG13', ' N 107  TYR  CE1', -0.538, (181.701, 256.774, 207.978)), (' B 108  THR  O  ', ' B 237  ARG  NH2', -0.537, (157.894, 210.244, 199.515)), (' N   7  GLN  NE2', ' N  96  TYR  HA ', -0.534, (173.736, 250.921, 218.27)), (' N  32  GLU  C  ', ' N 102  PRO  HB3', -0.532, (178.995, 239.122, 204.99)), (' N  99  THR  O  ', ' N 110  ASP  HB2', -0.529, (175.276, 248.142, 207.109)), (' B  34  ARG  NE ', ' B 216  LEU HD23', -0.529, (168.814, 214.9, 174.229)), (' B 220  PHE  CG ', ' B 286  THR  O  ', -0.528, (173.773, 206.872, 168.391)), (' B  53  ASP  OD1', ' B  54  LEU  N  ', -0.527, (166.486, 198.192, 181.472)), (' B 244  LEU HD22', ' B 259  THR  HA ', -0.527, (168.029, 231.484, 193.068)), (' B  19  THR  O  ', ' B  20  THR  OG1', -0.526, (156.936, 229.777, 194.389)), (' B 127  VAL HG23', ' B 171  VAL HG22', -0.526, (181.723, 212.838, 199.821)), (' N  20  ARG  HG2', ' N  83  GLU  HB2', -0.524, (183.746, 243.259, 225.918)), (' B 170  TYR  CE2', ' B 172  SER  HB2', -0.523, (182.923, 208.466, 194.16)), (' N  39  ARG  HA ', ' N  95  TYR  HD1', -0.522, (178.429, 255.465, 220.66)), (' B  38  TYR  HD1', ' B 285  ILE HD11', -0.522, (177.322, 200.621, 175.11)), (' B  43  PHE  CE1', ' B 283  GLY  HA3', -0.521, (185.357, 199.809, 172.072)), (' N 110  ASP  HB3', ' N 111  PRO  HD2', -0.521, (171.616, 247.447, 206.279)), (' B 131  CYS  HB2', ' B 133  PHE  CE2', -0.52, (171.843, 211.083, 204.754)), (' B 118  LEU HD22', ' B 129  LYS  HD2', -0.52, (174.273, 214.731, 201.869)), (' N  33  VAL  HA ', ' N 102  PRO  HD3', -0.517, (178.331, 241.497, 205.211)), (' B 275  PHE  CE1', ' B 290  ASP  CB ', -0.516, (164.189, 201.674, 171.496)), (' B 202  LYS  HG2', ' B 228  ASP  HA ', -0.516, (176.505, 201.607, 190.192)), (' B 210  ILE HD12', ' B 217  PRO  HD3', -0.515, (171.225, 220.192, 172.277)), (' N  11  GLU  HG3', ' N  19  VAL HG21', -0.513, (177.323, 247.672, 228.948)), (' B 186  PHE  CD1', ' B 209  PRO  HB3', -0.511, (180.323, 223.325, 172.612)), (' B 103  GLY  HA3', ' B 119  ILE  O  ', -0.508, (173.207, 216.572, 195.461)), (' G  56  PRO  HD2', ' G  59  ILE HG13', -0.501, (166.479, 255.675, 201.306)), (' N  54  PRO  HA ', ' N 104  SER  OG ', -0.501, (184.901, 244.254, 203.125)), (' N  52  PHE  HD1', ' N  59  THR HG22', -0.499, (186.562, 242.382, 211.345)), (' N   7  GLN HE22', ' N  96  TYR  HA ', -0.496, (173.076, 250.999, 218.323)), (' N  13  LYS  HD3', ' N  19  VAL  HB ', -0.494, (179.449, 247.471, 231.324)), (' B  65  PHE  HE1', ' B 267  VAL  HB ', -0.493, (161.028, 216.751, 184.322)), (' B 115  GLN HE21', ' B 167  THR HG21', -0.491, (170.272, 202.461, 205.231)), (' N  87  LEU HD22', ' N 120  VAL HG12', -0.491, (181.756, 254.482, 231.18)), (' B  57  PRO  O  ', ' B  60  SER  OG ', -0.49, (160.725, 207.523, 174.764)), (' G  46  LYS  HA ', ' N 112  TRP  CH2', -0.489, (167.979, 253.795, 210.097)), (' N  30  LEU  HB2', ' N  78  ASP  HA ', -0.488, (176.87, 235.621, 214.408)), (' G  37  TYR  HE1', ' G  47  LEU HD13', -0.487, (173.38, 255.356, 205.396)), (' N  93  ALA  H  ', ' N 118  VAL HG22', -0.487, (177.394, 255.359, 226.711)), (' B 182  LYS  HG3', ' B 186  PHE  CD2', -0.486, (183.111, 225.935, 175.35)), (' G  48  LEU HD11', ' G  87  TYR  CD1', -0.485, (167.792, 263.206, 207.202)), (' B  89  GLY  HA3', ' B 270  LEU HD12', -0.484, (165.115, 204.621, 185.012)), (' B 276  LEU  C  ', ' B 276  LEU HD12', -0.483, (171.231, 198.477, 168.796)), (' N  21  VAL  N  ', ' N  82  MET  O  ', -0.483, (180.662, 245.232, 224.079)), (' B 205  SER  HB3', ' B 226  LEU HD11', -0.483, (178.333, 210.833, 185.982)), (' B  17  ASN HD22', ' B 137  ASN HD21', -0.483, (157.597, 226.565, 204.25)), (' N  62  ALA  O  ', ' N  66  GLN  N  ', -0.482, (190.985, 253.655, 218.737)), (' N  29  THR  O  ', ' N  32  GLU  HG2', -0.482, (175.721, 236.378, 207.939)), (' B  42  VAL  CG2', ' B  44  ARG  CZ ', -0.479, (179.263, 192.141, 175.937)), (' B 194  PHE  HB3', ' B 201  PHE  CZ ', -0.478, (169.395, 207.674, 190.188)), (' G  60  PRO  HB2', ' G  62  ARG  HG2', -0.477, (160.698, 261.42, 199.729)), (' N  40  GLN  NE2', ' N  46  LEU HD12', -0.476, (174.641, 260.78, 215.851)), (' N  54  PRO  HB3', ' N 104  SER  HG ', -0.474, (183.757, 245.004, 202.933)), (' N 111  PRO  HA ', ' N 112  TRP  CE3', -0.474, (169.268, 250.209, 209.972)), (' N  39  ARG  HG2', ' N  95  TYR  CE1', -0.473, (180.479, 255.528, 221.736)), (' B 109  THR HG22', ' B 111  ASP  HB3', -0.472, (159.319, 211.576, 205.528)), (' G   2  SER  OG ', ' G   3  VAL  N  ', -0.471, (184.142, 265.375, 212.226)), (' B  14  GLN  HB3', ' B 158  ARG  HD3', -0.471, (168.153, 226.647, 206.574)), (' B  23  GLN  O  ', ' B  24  LEU  HB2', -0.468, (153.908, 226.375, 185.045)), (' N 106  SER  OG ', ' N 108  TRP  CD2', -0.467, (176.771, 250.923, 201.505)), (' N 100  THR HG22', ' N 108  TRP  O  ', -0.466, (177.788, 250.343, 205.6)), (' N  94  VAL  HA ', ' N 116  THR  O  ', -0.466, (174.229, 253.237, 223.748)), (' B 121  ASN  ND2', ' B 176  LEU  HB2', -0.466, (179.271, 219.524, 190.077)), (' N  88  ARG  NH1', ' N  90  GLU  OE2', -0.466, (187.059, 260.807, 227.547)), (' B  23  GLN  HG2', ' B  24  LEU  N  ', -0.465, (151.242, 225.09, 186.55)), (' B 180  GLU  O  ', ' B 182  LYS  HG2', -0.465, (184.677, 227.721, 177.238)), (' G  84  GLU  HG3', ' G 107  LEU  O  ', -0.465, (163.595, 270.212, 212.512)), (' B  42  VAL HG21', ' B  44  ARG  CZ ', -0.464, (179.362, 191.616, 176.456)), (' B 168  PHE  CZ ', ' B 170  TYR  HB2', -0.463, (180.006, 205.912, 198.852)), (' B 146  HIS  C  ', ' B 148  ASN  H  ', -0.461, (184.776, 234.722, 205.635)), (' G  99  VAL HG13', ' N 107  TYR  CZ ', -0.461, (181.634, 256.954, 208.059)), (' G   2  SER  OG ', ' G 101  PHE  O  ', -0.461, (182.956, 263.885, 211.908)), (' B 180  GLU  HG3', ' B 181  GLY  N  ', -0.46, (183.738, 230.057, 180.135)), (' B 106  PHE  HB2', ' B 117  LEU  HB3', -0.46, (168.353, 209.49, 196.166)), (' N  92  THR  OG1', ' N 118  VAL  O  ', -0.459, (176.17, 255.963, 230.014)), (' G  28  ASN  O  ', ' G  32  ASN  HB2', -0.459, (185.443, 260.047, 200.774)), (' N  39  ARG  HA ', ' N  95  TYR  CD1', -0.456, (178.977, 255.139, 221.16)), (' N   7  GLN  NE2', ' N 115  GLY  H  ', -0.456, (171.52, 250.17, 218.679)), (' B 104  TRP  HB2', ' B 106  PHE  CE2', -0.456, (168.962, 212.695, 192.481)), (' B 203  ILE HG22', ' B 226  LEU HD12', -0.455, (176.572, 209.276, 187.529)), (' B 188  ASN  O  ', ' B 190  ARG  HG3', -0.453, (176.693, 220.412, 180.987)), (' N   6  GLU  HG3', ' N   7  GLN  H  ', -0.452, (170.619, 246.19, 221.313)), (' G  24  GLY  HA3', ' G  29  ILE HD12', -0.451, (183.326, 267.076, 202.699)), (' G  21  SER  HA ', ' G  73  THR  HA ', -0.451, (174.673, 269.289, 200.712)), (' B  87  ASN  HB2', ' B 269  TYR  CD1', -0.451, (158.969, 207.957, 186.694)), (' B  37  TYR  CZ ', ' B 195  LYS  NZ ', -0.451, (170.174, 200.374, 182.611)), (' B  68  ILE HG23', ' B  77  LYS  HB3', -0.45, (163.684, 233.052, 190.353)), (' N  11  GLU  N  ', ' N  11  GLU  OE1', -0.45, (172.672, 248.262, 228.832)), (' B 145  TYR  O  ', ' N  32  GLU  HA ', -0.45, (179.688, 235.909, 204.6)), (' B  21  ARG  HG3', ' B  22  THR  N  ', -0.45, (152.745, 230.486, 191.169)), (' B 246  ARG HH11', ' N  28  TYR  HD1', -0.448, (171.018, 236.29, 204.793)), (' G  39  GLN  HG2', ' G  40  LEU  O  ', -0.448, (166.224, 260.246, 216.935)), (' N   5  LEU HD13', ' N  24  LYS  HB2', -0.447, (170.644, 238.215, 218.994)), (' G  84  GLU  HG3', ' G 108  THR  HA ', -0.447, (162.464, 271.114, 212.551)), (' B 106  PHE  HB2', ' B 117  LEU HD23', -0.447, (168.741, 209.314, 195.022)), (' B 148  ASN  C  ', ' B 150  LYS  H  ', -0.447, (187.457, 234.409, 204.381)), (' G  37  TYR  HE2', ' G 101  PHE  HE1', -0.445, (176.983, 257.652, 208.647)), (' N  11  GLU  HG2', ' N  11  GLU  O  ', -0.444, (175.224, 249.803, 229.893)), (' B 281  GLU  CD ', ' B 281  GLU  H  ', -0.444, (184.054, 201.934, 164.448)), (' B 123  ALA  HB1', ' B 174  PRO  HB3', -0.443, (183.16, 218.589, 192.209)), (' B  83  VAL  HA ', ' B 239  GLN  HB2', -0.443, (161.058, 217.019, 194.738)), (' B 156  GLU  N  ', ' B 156  GLU  OE1', -0.441, (175.57, 223.392, 204.255)), (' B 223  LEU  CD1', ' B 223  LEU  N  ', -0.44, (175.188, 208.366, 178.596)), (' N   4  LEU HD22', ' N  25  VAL HG12', -0.44, (172.43, 241.636, 212.679)), (' N  52  PHE  HA ', ' N  59  THR  HA ', -0.44, (186.987, 244.992, 211.085)), (' N 109  PHE  HE2', ' N 112  TRP  CG ', -0.438, (171.584, 252.195, 211.933)), (' B 143  VAL  O  ', ' B 245  HIS  HA ', -0.437, (174.158, 232.407, 199.214)), (' B  64  TRP  CD1', ' B 266  TYR  CE2', -0.437, (164.576, 221.304, 178.467)), (' G  11  SER  HB3', ' G 110  LEU HD21', -0.437, (161.965, 277.453, 211.242)), (' G  13  ALA  HA ', ' G 110  LEU  HB2', -0.436, (158.226, 276.938, 207.574)), (' B  34  ARG  HE ', ' B 216  LEU HD23', -0.436, (168.704, 214.353, 174.018)), (' B 142  GLY  O  ', ' B 155  SER  N  ', -0.436, (175.492, 227.029, 201.923)), (' N   7  GLN  HG3', ' N 113  GLY  O  ', -0.436, (170.694, 247.759, 218.856)), (' B  70  VAL HG23', ' B  75  GLY  O  ', -0.434, (161.883, 238.154, 186.107)), (' N  37  TRP  O  ', ' N  49  MET  N  ', -0.434, (182.076, 253.477, 215.533)), (' G  34  VAL  HB ', ' G  52  ASN  ND2', -0.434, (177.428, 262.122, 198.796)), (' N  49  MET  HE1', ' N  95  TYR  HB3', -0.432, (179.7, 252.26, 220.949)), (' N   6  GLU  HG3', ' N   7  GLN  N  ', -0.431, (170.45, 245.894, 221.787)), (' G  36  TRP  CE2', ' G  74  LEU  HB2', -0.43, (173.22, 264.909, 202.496)), (' G  53  ASN  OD1', ' G  54  LYS  HG2', -0.43, (173.771, 256.401, 194.123)), (' B 184  GLY  C  ', ' B 186  PHE  H  ', -0.429, (178.504, 227.922, 174.229)), (' B 246  ARG  NH1', ' N  28  TYR  HD1', -0.429, (170.964, 236.173, 205.013)), (' N  68  ARG HH12', ' N  88  ARG  HD3', -0.428, (187.969, 257.646, 228.371)), (' B  96  GLU  HB2', ' B 190  ARG  NH2', -0.427, (174.821, 223.422, 184.216)), (' N   3  GLN  O  ', ' N  26  SER  OG ', -0.427, (166.59, 239.918, 212.39)), (' B  30  ASN HD21', ' B  59  PHE  HD1', -0.424, (160.323, 212.737, 168.452)), (' B 186  PHE  C  ', ' B 188  ASN  H  ', -0.423, (177.63, 224.052, 176.611)), (' B  39  PRO  CD ', ' B 277  LEU HD13', -0.423, (174.401, 199.128, 175.269)), (' N  18  SER  HB3', ' N  83  GLU  OE2', -0.422, (185.252, 246.437, 229.695)), (' B  34  ARG  HD2', ' B 191  GLU  OE2', -0.422, (170.749, 213.741, 176.19)), (' B  38  TYR  CE1', ' B 285  ILE  CG1', -0.419, (178.105, 202.11, 174.025)), (' B 152  TRP  CH2', ' N 103  PHE  HE2', -0.417, (178.715, 237.347, 196.804)), (' G  39  GLN  OE1', ' G  45  PRO  HG3', -0.415, (170.308, 258.87, 215.922)), (' B 148  ASN  O  ', ' B 149  ASN  HB2', -0.415, (187.499, 231.809, 204.775)), (' B 160  TYR  HE2', ' B 163  ALA  HB2', -0.414, (172.316, 216.352, 207.83)), (' B  55  PHE  CD2', ' B 275  PHE  CE2', -0.413, (165.779, 200.83, 176.125)), (' B  84  LEU  O  ', ' B 238  PHE  N  ', -0.412, (160.779, 212.125, 193.66)), (' B  85  PRO  HA ', ' B 237  ARG  HA ', -0.412, (159.24, 210.319, 193.379)), (' G  47  LEU  HG ', ' G  56  PRO  HG2', -0.412, (169.349, 254.718, 203.009)), (' N  30  LEU  HB3', ' N  31  PRO  HD3', -0.411, (178.591, 234.724, 211.752)), (' B 115  GLN  NE2', ' B 167  THR HG21', -0.409, (170.441, 202.576, 205.065)), (' B  44  ARG  HB3', ' B  47  VAL  CG2', -0.409, (180.317, 194.283, 170.16)), (' G  38  GLN  O  ', ' G  45  PRO  HA ', -0.409, (168.261, 257.992, 212.318)), (' B 231  ILE HG22', ' B 233  ILE HG22', -0.407, (169.001, 202.855, 198.509)), (' B  82  PRO  HG2', ' B  84  LEU HD21', -0.407, (157.9, 217.672, 189.559)), (' N  55  GLU  C  ', ' N  57  GLY  H  ', -0.407, (190.172, 243.851, 204.324)), (' B  44  ARG  HB3', ' B  47  VAL HG23', -0.407, (180.069, 194.349, 170.163)), (' G  86  ASP  HA ', ' G 106  LYS  HA ', -0.407, (168.586, 267.53, 212.487)), (' B 190  ARG  HG2', ' B 207  HIS  ND1', -0.407, (178.124, 218.153, 181.851)), (' B  53  ASP  HB3', ' B  55  PHE  CE2', -0.406, (168.027, 198.638, 178.4)), (' B 248  TYR  CD2', ' N 103  PHE  CD1', -0.406, (176.748, 241.129, 199.995)), (' G  36  TRP  HA ', ' G  88  TYR  O  ', -0.406, (173.991, 261.682, 206.521)), (' B 100  ILE HG13', ' B 243  ALA  O  ', -0.404, (171.679, 228.26, 192.894)), (' G   6  GLN HE21', ' G 104  GLY  N  ', -0.403, (175.942, 267.078, 211.493)), (' G 100  VAL  O  ', ' N 107  TYR  OH ', -0.402, (181.256, 258.969, 208.085)), (' B 146  HIS  O  ', ' B 147  LYS  HG2', -0.401, (183.033, 235.969, 207.025)), (' B  65  PHE  CE1', ' B 267  VAL  HB ', -0.4, (161.185, 216.803, 184.829)), (' N  69  VAL  HA ', ' N  83  GLU  O  ', -0.4, (186.715, 247.867, 224.127)), (' B 125  ASN  HB3', ' B 172  SER  O  ', -0.4, (185.194, 214.755, 194.254))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['clusters'] = []
data['rama'] = []
data['jpred'] = []
data['rota'] = [('A', ' 190 ', 'ARG', 0.09130302501142008, (210.991, 162.18399999999997, 195.07800000000003)), ('A', ' 834 ', 'ILE', 0.25926165261832584, (220.729, 183.83999999999995, 220.73000000000002)), ('A', ' 841 ', 'LEU', 0.23509022752694225, (222.73999999999998, 191.233, 221.573)), ('B', ' 190 ', 'ARG', 0.09123981843005183, (167.92699999999994, 232.38599999999997, 195.084)), ('B', ' 740 ', 'MET', 0.11506729728042608, (193.54, 197.697, 209.11200000000002)), ('B', ' 841 ', 'LEU', 0.1792564366345313, (187.20699999999988, 207.42, 221.65600000000003)), ('C', ' 190 ', 'ARG', 0.09108828305274898, (250.241, 234.582, 195.08100000000002)), ('C', ' 466 ', 'ARG', 0.24143667946096492, (203.935, 182.908, 173.128)), ('C', ' 841 ', 'LEU', 0.148975979224065, (219.04799999999994, 230.37, 221.489)), ('H', '   5 ', 'VAL', 0.14639926873035175, (189.41499999999996, 125.57700000000001, 165.407)), ('G', '   5 ', 'VAL', 0.14672061205188758, (147.003, 269.4029999999999, 165.456)), ('I', '   5 ', 'VAL', 0.1464124335439417, (292.74799999999993, 234.21299999999994, 165.433))]
data['probe'] = [(' Z   1  NAG  H62', ' Z   2  NAG  H82', -1.097, (236.114, 224.048, 265.436)), (' Z   1  NAG  C6 ', ' Z   2  NAG  H82', -0.83, (236.931, 223.39, 265.674)), (' Z   1  NAG  H62', ' Z   2  NAG  C8 ', -0.772, (235.871, 224.641, 265.839)), (' C 231  ILE HD12', ' C 233  ILE HG12', -0.605, (241.161, 222.546, 178.559)), (' C 537  LYS  HE2', ' C 628  GLN HE21', -0.601, (245.482, 200.453, 201.19)), (' A 231  ILE HD12', ' A 233  ILE HG12', -0.6, (205.08, 175.967, 178.588)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.6, (219.985, 215.199, 249.325)), (' B 537  LYS  HE2', ' B 628  GLN HE21', -0.595, (199.791, 245.29, 201.18)), (' G   6  GLU  HA ', ' G  22  CYS  HA ', -0.589, (151.218, 268.577, 163.503)), (' I   6  GLU  HA ', ' I  22  CYS  HA ', -0.588, (290.019, 231.56, 163.117)), (' H  57  LYS  H  ', ' P   1  NAG  H81', -0.587, (194.734, 148.653, 166.75)), (' B 231  ILE HD12', ' B 233  ILE HG12', -0.584, (182.832, 229.971, 178.844)), (' F   1  NAG  H81', ' I  57  LYS  H  ', -0.583, (270.127, 227.319, 166.694)), (' C 877  LEU HD23', ' C 888  PHE  HE1', -0.581, (208.242, 227.805, 253.005)), (' H   6  GLU  HA ', ' H  22  CYS  HA ', -0.581, (188.279, 129.33, 163.032)), (' G 100B TYR  HE2', ' J  50  LYS  HE2', -0.573, (145.689, 246.698, 177.709)), (' C 442  ASP  O  ', ' C 448  ASN  ND2', -0.572, (210.013, 191.654, 153.906)), (' I 100B TYR  HE2', ' K  50  LYS  HE2', -0.571, (273.69, 246.752, 177.71)), (' B1141  LEU HD21', ' C1145  LEU HD22', -0.569, (211.462, 211.906, 299.743)), (' H 100B TYR  HE2', ' L  50  LYS  HE2', -0.569, (209.638, 135.77, 177.612)), (' B 442  ASP  O  ', ' B 448  ASN  ND2', -0.567, (224.76, 218.816, 153.645)), (' A 442  ASP  O  ', ' A 448  ASN  ND2', -0.566, (194.416, 218.162, 153.787)), (' A1145  LEU HD22', ' C1141  LEU HD21', -0.565, (210.995, 207.18, 299.166)), (' B 720  ILE HG13', ' B 923  ILE HG23', -0.562, (188.8, 217.105, 264.571)), (' C 977  LEU HD11', ' C 997  ILE HD11', -0.562, (208.813, 223.208, 202.519)), (' G  57  LYS  H  ', ' X   1  NAG  H81', -0.562, (164.261, 253.035, 166.729)), (' A 230  PRO  HB3', ' C 355  ARG HH11', -0.558, (212.507, 182.343, 178.071)), (' B  14  GLN  HB2', ' J  95A THR  HB ', -0.555, (164.731, 242.631, 165.528)), (' A  44  ARG  O  ', ' A 283  GLY  HA2', -0.555, (222.457, 179.697, 204.711)), (' K  24  SER  HB2', ' K  69  THR HG22', -0.554, (266.499, 258.409, 164.455)), (' G  95  ASP  OD1', ' G 100C SER  HB3', -0.554, (150.522, 251.943, 171.547)), (' J  24  SER  HB2', ' J  69  THR HG22', -0.553, (138.709, 234.627, 164.087)), (' G  34  MET  CE ', ' G  78  LEU HD22', -0.553, (152.522, 262.242, 167.531)), (' I  34  MET  CE ', ' I  78  LEU HD22', -0.552, (283.729, 233.0, 167.562)), (' A 720  ILE HG13', ' A 923  ILE HG23', -0.55, (214.202, 187.683, 264.837)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.55, (224.963, 224.82, 256.819)), (' A1141  LEU HD21', ' B1145  LEU HD22', -0.548, (206.924, 209.725, 299.228)), (' B  44  ARG  O  ', ' B 283  GLY  HA2', -0.547, (177.811, 213.714, 204.587)), (' H  95  ASP  OD1', ' H 100C SER  HB3', -0.547, (202.744, 137.454, 171.441)), (' A1086  LYS  HD2', ' A1122  VAL HG21', -0.546, (194.891, 213.363, 288.649)), (' A  14  GLN  HB2', ' L  95A THR  HB ', -0.546, (203.498, 153.962, 165.406)), (' L  24  SER  HB2', ' L  69  THR HG22', -0.544, (223.858, 136.186, 164.262)), (' B1086  LYS  HD2', ' B1122  VAL HG21', -0.543, (220.626, 220.493, 288.265)), (' H  34  MET  CE ', ' H  78  LEU HD22', -0.542, (192.962, 134.018, 167.468)), (' I  95  ASP  OD1', ' I 100C SER  HB3', -0.542, (275.318, 239.943, 171.453)), (' B 826  VAL  HB ', ' B1057  PRO  HG2', -0.542, (184.545, 211.329, 235.758)), (' C  44  ARG  O  ', ' C 283  GLY  HA2', -0.542, (229.403, 235.182, 204.558)), (' B 355  ARG HH11', ' C 230  PRO  HB3', -0.532, (232.149, 225.647, 178.19)), (' A 837  TYR  OH ', ' A 960  ASN  HA ', -0.53, (216.352, 190.669, 215.654)), (' B1107  ARG HH22', ' C 894  LEU  HB2', -0.529, (205.686, 228.64, 265.899)), (' A 877  LEU HD23', ' A 888  PHE  HE2', -0.527, (226.186, 201.891, 252.684)), (' B 905  ARG  NH1', ' B1049  LEU  O  ', -0.527, (196.766, 209.633, 259.872)), (' C 575  ALA  HA ', ' C 586  ASP  HA ', -0.526, (232.382, 187.912, 201.88)), (' C 458  LYS  HB3', ' O   2  NAG  H61', -0.526, (188.715, 183.815, 175.391)), (' A1049  LEU HD11', ' A1067  TYR  HB2', -0.523, (210.322, 192.959, 263.2)), (' A  69  HIS  CD2', ' A  71  SER  HB2', -0.522, (191.52, 149.896, 192.046)), (' B  69  HIS  CD2', ' B  71  SER  HB2', -0.522, (166.948, 255.397, 191.994)), (' C 179  LEU HD21', ' C 190  ARG HH12', -0.522, (253.42, 240.586, 192.416)), (' C 720  ILE HG13', ' C 923  ILE HG23', -0.521, (226.795, 224.224, 264.708)), (' B 179  LEU HD21', ' B 190  ARG HH12', -0.519, (161.123, 232.117, 192.384)), (' B 571  ASP  HB2', ' C1000  ARG HH21', -0.519, (215.143, 225.129, 203.602)), (' A 179  LEU HD21', ' A 190  ARG HH12', -0.519, (214.38, 156.309, 192.331)), (' B 100  ILE HD11', ' B 263  ALA  HB3', -0.519, (162.681, 243.23, 190.928)), (' C 826  VAL  HB ', ' C1057  PRO  HG2', -0.519, (223.352, 230.592, 236.149)), (' A 826  VAL  HB ', ' A1057  PRO  HG2', -0.518, (221.126, 187.057, 235.785)), (' C  14  GLN  HB2', ' K  95A THR  HB ', -0.518, (260.918, 232.223, 165.442)), (' A 905  ARG  NH1', ' A1049  LEU  O  ', -0.517, (216.292, 198.468, 259.863)), (' C 100  ILE HD11', ' C 263  ALA  HB3', -0.517, (262.246, 233.505, 191.425)), (' A 156  GLU  OE2', ' L  93  ASN  HB3', -0.516, (209.594, 148.938, 170.16)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.515, (200.265, 210.752, 169.172)), (' A 715  PRO  HA ', ' A1072  GLU  HA ', -0.515, (198.316, 189.45, 269.046)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.514, (209.393, 198.228, 248.811)), (' A 841  LEU HD13', ' A 956  ALA  HB2', -0.514, (218.379, 189.692, 223.183)), (' C  69  HIS  CD2', ' C  71  SER  HB2', -0.513, (271.268, 223.84, 192.033)), (' A 739  THR HG21', ' C 317  ASN  HB3', -0.513, (232.643, 206.383, 207.846)), (' A 458  LYS  HB3', ' W   2  NAG  H61', -0.512, (197.432, 240.938, 175.73)), (' C 156  GLU  OE2', ' K  93  ASN  HB3', -0.511, (262.641, 239.844, 170.33)), (' A 722  VAL HG22', ' A1065  VAL HG22', -0.511, (215.674, 188.691, 256.955)), (' J  47  VAL HG12', ' J  48  ILE HG12', -0.509, (133.924, 250.166, 171.478)), (' B 156  GLU  OE2', ' J  93  ASN  HB3', -0.509, (156.592, 240.148, 170.151)), (' A1139  ASP  N  ', ' A1139  ASP  OD2', -0.508, (200.732, 204.109, 294.106)), (' C 553  THR  OG1', ' C 586  ASP  OD1', -0.507, (236.31, 188.383, 206.08)), (' A 384  PRO  HB2', ' C 415  THR HG22', -0.507, (197.826, 201.15, 177.183)), (' A 100  ILE HD11', ' A 263  ALA  HB3', -0.505, (204.531, 152.016, 191.405)), (' B 722  VAL HG22', ' B1065  VAL HG22', -0.505, (189.23, 214.962, 256.987)), (' B 945  LEU HD23', ' B 948  LEU HD12', -0.503, (187.261, 213.653, 238.819)), (' L  47  VAL HG12', ' L  48  ILE HG12', -0.502, (212.464, 123.944, 171.498)), (' K  47  VAL HG12', ' K  48  ILE HG12', -0.502, (282.623, 255.02, 171.509)), (' C 945  LEU HD23', ' C 948  LEU HD12', -0.501, (224.325, 227.309, 238.805)), (' C 250  THR  OG1', ' I  95  ASP  HB3', -0.5, (277.561, 236.096, 174.043)), (' B 317  ASN  HB3', ' C 739  THR HG21', -0.497, (200.846, 231.539, 208.024)), (' B 338  PHE  HB3', ' B 368  LEU HD21', -0.496, (216.424, 231.535, 168.372)), (' C 715  PRO  HA ', ' C1072  GLU  HA ', -0.496, (233.153, 210.17, 269.013)), (' A1107  ARG HH12', ' B 894  LEU  HB2', -0.495, (195.539, 196.865, 265.861)), (' J   6  GLN  NE2', ' J  86  TYR  O  ', -0.495, (136.307, 247.683, 160.769)), (' A 843  ASP  O  ', ' A 843  ASP  OD1', -0.494, (226.268, 191.751, 229.43)), (' B 250  THR  HB ', ' G  97  GLY  O  ', -0.492, (152.448, 253.145, 176.732)), (' A 553  THR  OG1', ' A 586  ASP  OD1', -0.492, (177.924, 197.244, 205.994)), (' B 715  PRO  HA ', ' B1072  GLU  HA ', -0.491, (197.631, 230.162, 268.95)), (' A 563  GLN  O  ', ' A 577  ARG  NH2', -0.489, (175.123, 209.054, 194.458)), (' A 894  LEU  HB2', ' C1107  ARG HH22', -0.488, (228.08, 203.915, 265.94)), (' A 497  PHE  CG ', ' A 507  PRO  HG3', -0.488, (199.033, 217.997, 156.767)), (' A 317  ASN  HB3', ' B 739  THR HG21', -0.487, (195.449, 191.188, 208.14)), (' B 663  ASP  N  ', ' B 663  ASP  OD2', -0.485, (193.995, 231.51, 235.757)), (' A 611  LEU HD22', ' A 666  ILE HG23', -0.485, (192.013, 188.86, 226.989)), (' C 409  GLN  HA ', ' C 414  GLN  HG2', -0.483, (203.489, 200.179, 174.077)), (' H  34  MET  HE2', ' H  78  LEU HD22', -0.48, (192.071, 133.834, 167.666)), (' A 945  LEU HD23', ' A 948  LEU HD12', -0.48, (217.366, 188.641, 238.639)), (' B 458  LYS  HB3', ' E   2  NAG  H61', -0.48, (242.522, 204.415, 175.463)), (' B 856  ASN HD22', ' B 966  LEU HD13', -0.479, (193.92, 206.205, 209.189)), (' A1074  ASN  OD1', ' B 895  GLN  NE2', -0.479, (189.822, 190.867, 268.982)), (' A 550  GLY  HA2', ' A 590  CYS  HB2', -0.479, (187.651, 192.297, 202.797)), (' C 663  ASP  N  ', ' C 663  ASP  OD2', -0.478, (235.987, 212.314, 235.798)), (' C 418  ILE  HA ', ' C 422  ASN  HB2', -0.478, (201.461, 191.872, 169.616)), (' K   6  GLN  NE2', ' K  86  TYR  O  ', -0.478, (279.32, 254.502, 160.832)), (' A 663  ASP  N  ', ' A 663  ASP  OD2', -0.477, (198.729, 185.679, 235.809)), (' A 338  PHE  HB3', ' A 368  LEU HD21', -0.477, (187.072, 204.724, 168.481)), (' C 550  GLY  HA2', ' C 590  CYS  HB2', -0.475, (236.041, 199.742, 203.096)), (' G  34  MET  HE2', ' G  78  LEU HD22', -0.474, (152.803, 262.848, 167.764)), (' L   6  GLN  NE2', ' L  86  TYR  O  ', -0.474, (213.638, 127.138, 160.822)), (' B 497  PHE  CG ', ' B 507  PRO  HG3', -0.473, (222.725, 215.064, 156.49)), (' I  34  MET  HE2', ' I  78  LEU HD22', -0.473, (284.037, 232.122, 167.416)), (' A 409  GLN  HA ', ' A 414  GLN  HG2', -0.472, (204.608, 219.713, 174.544)), (' L  66  SER  HB2', ' L  71  VAL HG12', -0.472, (220.048, 132.847, 170.933)), (' A1082  CYS  HB2', ' A1126  CYS  HB2', -0.469, (187.644, 209.252, 285.068)), (' I   2  VAL  O  ', ' I   2  VAL HG23', -0.469, (289.992, 238.796, 173.019)), (' B 439  ASN  O  ', ' B 443  SER  OG ', -0.468, (218.537, 217.698, 153.302)), (' H   2  VAL  O  ', ' H   2  VAL HG23', -0.468, (195.031, 125.508, 172.963)), (' A 439  ASN  O  ', ' A 443  SER  OG ', -0.467, (198.169, 213.897, 153.316)), (' B1074  ASN  OD1', ' C 895  GLN  NE2', -0.465, (203.716, 236.424, 268.715)), (' G   2  VAL  O  ', ' G   2  VAL HG23', -0.465, (144.349, 264.581, 172.881)), (' B 128  ILE  HB ', ' B 170  TYR  HB3', -0.464, (173.256, 225.544, 178.231)), (' B 709  ASN  HB3', ' C 796  ASP  HB3', -0.464, (217.046, 237.522, 269.389)), (' A 355  ARG HH11', ' B 230  PRO  HB3', -0.464, (184.329, 220.764, 178.525)), (' K  66  SER  HB2', ' K  71  VAL HG12', -0.462, (271.175, 257.178, 170.921)), (' B 376  THR  HB ', ' B 435  ALA  HB3', -0.462, (215.773, 217.647, 169.029)), (' B 409  GLN  HA ', ' B 414  GLN  HG2', -0.462, (221.237, 208.835, 174.467)), (' A 627  ASP  O  ', ' A 634  ARG  NH2', -0.461, (185.915, 177.572, 205.401)), (' A 571  ASP  HB2', ' B1000  ARG HH21', -0.461, (193.745, 206.787, 203.81)), (' C 193  VAL HG13', ' C 270  LEU HD11', -0.461, (242.56, 223.414, 193.459)), (' B 598  ILE HG23', ' B 664  ILE HG21', -0.46, (193.981, 232.29, 228.1)), (' C 439  ASN  O  ', ' C 443  SER  OG ', -0.459, (211.864, 197.722, 153.228)), (' A 415  THR HG22', ' B 384  PRO  HB2', -0.459, (208.199, 224.416, 177.226)), (' A  80  ASP  C  ', ' A  82  PRO  HD3', -0.459, (195.71, 158.306, 186.985)), (' C 376  THR  HB ', ' C 435  ALA  HB3', -0.459, (213.602, 200.95, 169.247)), (' B 802  PHE  HD1', ' B 805  ILE HD11', -0.457, (184.919, 208.527, 256.632)), (' C 497  PHE  CG ', ' C 507  PRO  HG3', -0.457, (207.775, 195.942, 156.466)), (' C  80  ASP  C  ', ' C  82  PRO  HD3', -0.455, (261.26, 223.887, 186.879)), (' A 575  ALA  HA ', ' A 586  ASP  HA ', -0.454, (179.516, 201.189, 202.178)), (' C 324  GLU  HG3', ' C 539  VAL HG23', -0.454, (242.363, 199.999, 196.073)), (' C1086  LYS  HD2', ' C1122  VAL HG11', -0.454, (213.324, 195.17, 288.271)), (' J  66  SER  HB2', ' J  71  VAL HG12', -0.452, (137.658, 239.221, 171.334)), (' C 837  TYR  HB2', ' C 841  LEU HD23', -0.451, (222.254, 231.132, 219.692)), (' C  66  HIS  HD2', ' C  69  HIS  ND1', -0.451, (267.083, 225.119, 193.462)), (' B 553  THR  OG1', ' B 586  ASP  OD1', -0.451, (214.91, 243.425, 206.048)), (' B 977  LEU HD23', ' B 996  LEU HD23', -0.45, (196.985, 205.103, 199.872)), (' J  11  VAL HG21', ' J  21  ILE HD11', -0.45, (128.367, 246.368, 161.353)), (' A  66  HIS  HD2', ' A  69  HIS  ND1', -0.45, (194.427, 152.124, 193.467)), (' B  80  ASP  C  ', ' B  82  PRO  HD3', -0.45, (171.716, 247.387, 186.858)), (' K  11  VAL HG21', ' K  21  ILE HD11', -0.45, (282.087, 261.873, 161.328)), (' C 128  ILE  HB ', ' C 170  TYR  HB3', -0.449, (241.698, 233.541, 178.168)), (' A 128  ILE  HB ', ' A 170  TYR  HB3', -0.449, (214.555, 170.555, 178.062)), (' A 802  PHE  HD1', ' A 805  ILE HD11', -0.449, (223.108, 188.782, 256.661)), (' B 571  ASP  N  ', ' B 571  ASP  OD1', -0.449, (218.132, 226.955, 205.165)), (' H  34  MET  HE3', ' H  78  LEU HD22', -0.449, (193.118, 134.232, 167.477)), (' A 739  THR HG23', ' A 753  LEU HD11', -0.448, (230.611, 207.893, 207.252)), (' B  66  HIS  HD2', ' B  69  HIS  ND1', -0.448, (167.482, 251.801, 193.539)), (' C 905  ARG  NH1', ' C1049  LEU  O  ', -0.448, (216.087, 221.085, 259.971)), (' B 193  VAL HG13', ' B 270  LEU HD11', -0.447, (181.891, 231.385, 193.362)), (' L  11  VAL HG21', ' L  21  ILE HD11', -0.446, (218.721, 120.754, 160.908)), (' C 736  VAL HG11', ' C1004  LEU HD21', -0.446, (207.814, 221.99, 215.248)), (' B 611  LEU HD22', ' B 666  ILE HG23', -0.446, (200.539, 235.556, 226.445)), (' I  34  MET  HE3', ' I  78  LEU HD22', -0.445, (283.394, 233.166, 167.336)), (' A 193  VAL HG13', ' A 270  LEU HD11', -0.445, (204.812, 174.722, 193.394)), (' B 906  PHE  CD2', ' B 916  LEU  HB2', -0.445, (193.133, 214.172, 269.8)), (' H 100C SER  HB2', ' L  96  TRP  HE1', -0.444, (204.937, 138.917, 170.49)), (' B 120  VAL HG21', ' B 157  PHE  CE2', -0.444, (166.148, 234.501, 176.855)), (' C 598  ILE HG23', ' C 664  ILE HG21', -0.443, (236.664, 212.111, 228.256)), (' C 726  ILE HG12', ' C1061  VAL HG22', -0.443, (223.526, 224.99, 243.179)), (' A 598  ILE HG23', ' A 664  ILE HG21', -0.442, (198.076, 184.975, 228.006)), (' I 100C SER  HB2', ' K  96  TRP  HE1', -0.442, (273.308, 241.038, 170.072)), (' B 866  THR HG22', ' B 868  GLU  H  ', -0.442, (184.483, 197.685, 238.168)), (' C 120  VAL HG21', ' C 157  PHE  CE2', -0.442, (252.947, 234.915, 176.762)), (' B 353  TRP  O  ', ' B 466  ARG  NH2', -0.442, (233.359, 223.336, 170.339)), (' A 837  TYR  HB2', ' A 841  LEU HD23', -0.441, (221.508, 187.778, 220.064)), (' A 324  GLU  HG3', ' A 539  VAL HG23', -0.441, (184.687, 186.684, 196.1)), (' B 324  GLU  HG3', ' B 539  VAL HG23', -0.44, (201.895, 243.024, 196.084)), (' G  34  MET  HE3', ' G  78  LEU HD22', -0.44, (152.715, 261.754, 167.509)), (' A 545  GLY  O  ', ' B 982  SER  OG ', -0.439, (189.474, 201.013, 189.616)), (' B 740  MET  HE1', ' B 853  GLN  HA ', -0.438, (188.543, 200.472, 210.208)), (' C 906  PHE  CD2', ' C 916  LEU  HB2', -0.438, (221.902, 222.274, 269.946)), (' A 120  VAL HG21', ' A 157  PHE  CE2', -0.438, (210.126, 159.751, 176.853)), (' B1139  ASP  N  ', ' B1139  ASP  OD1', -0.438, (209.097, 220.214, 294.247)), (' I  12  VAL HG11', ' I  82C LEU HD12', -0.437, (284.183, 229.602, 148.218)), (' B 733  LYS  HE3', ' B 771  ALA  HB1', -0.437, (196.86, 199.178, 228.079)), (' B 303  LEU HD12', ' B 308  VAL HG12', -0.437, (190.46, 224.707, 219.4)), (' B  80  ASP  O  ', ' B  82  PRO  HD3', -0.435, (171.641, 246.976, 187.345)), (' G  12  VAL HG11', ' G  82C LEU HD12', -0.434, (155.582, 264.007, 148.378)), (' A  80  ASP  O  ', ' A  82  PRO  HD3', -0.434, (196.273, 158.482, 187.337)), (' I  34  MET  HB3', ' I  34  MET  HE3', -0.433, (282.312, 233.364, 167.993)), (' H  40  ALA  HB3', ' H  43  LYS  HB3', -0.433, (204.719, 131.164, 151.209)), (' A 726  ILE HG12', ' A1061  VAL HG22', -0.433, (216.034, 190.086, 243.235)), (' G 100C SER  HB2', ' J  96  TRP  HE1', -0.432, (150.701, 249.437, 170.524)), (' A 906  PHE  CD2', ' A 916  LEU  HB2', -0.432, (214.478, 193.115, 270.071)), (' H  12  VAL HG11', ' H  82C LEU HD12', -0.432, (189.764, 135.334, 148.142)), (' G  40  ALA  HB3', ' G  43  LYS  HB3', -0.431, (143.857, 253.065, 151.266)), (' C 802  PHE  HD1', ' C 805  ILE HD11', -0.43, (221.134, 231.694, 256.158)), (' B1009  THR  HA ', ' B1012  LEU  HG ', -0.43, (206.159, 209.317, 221.867)), (' A 895  GLN  NE2', ' C1074  ASN  OD1', -0.43, (235.72, 201.498, 268.876)), (' B 877  LEU HD23', ' B 888  PHE  HE1', -0.428, (194.737, 199.73, 252.543)), (' C 252  GLY  HA3', ' C 256  SER  OG ', -0.428, (275.803, 236.923, 183.518)), (' B 294  ASP  HB3', ' B 632  THR HG21', -0.428, (186.425, 238.392, 213.769)), (' A 866  THR HG22', ' A 868  GLU  H  ', -0.428, (232.715, 194.172, 237.722)), (' A 303  LEU HD12', ' A 308  VAL HG12', -0.427, (206.257, 185.545, 219.487)), (' B1029  MET  HE1', ' B1053  PRO  HB3', -0.427, (193.622, 205.83, 248.191)), (' B1049  LEU HD11', ' B1067  TYR  HB2', -0.426, (194.832, 217.457, 263.192)), (' B 837  TYR  HB2', ' B 841  LEU HD23', -0.425, (184.91, 209.861, 219.63)), (' B 252  GLY  HA3', ' B 256  SER  OG ', -0.425, (153.045, 252.933, 183.57)), (' C1049  LEU HD11', ' C1067  TYR  HB2', -0.425, (223.576, 219.023, 263.361)), (' B 770  ILE HD11', ' B1012  LEU HD23', -0.425, (204.511, 206.344, 224.081)), (' B 418  ILE  HA ', ' B 422  ASN  HB2', -0.425, (229.003, 211.205, 169.745)), (' I  40  ALA  HB3', ' I  43  LYS  HB3', -0.425, (280.251, 245.109, 151.338)), (' A 252  GLY  HA3', ' A 256  SER  OG ', -0.425, (200.221, 138.909, 183.524)), (' A 733  LYS  HE3', ' A 771  ALA  HB1', -0.424, (225.22, 203.745, 228.029)), (' C 708  SER  HB3', ' C 711  SER  HB2', -0.424, (233.878, 196.071, 270.455)), (' B 393  THR  HA ', ' B 522  ALA  HA ', -0.424, (223.233, 235.225, 185.598)), (' C  70  VAL HG11', ' C 260  ALA  HB1', -0.424, (272.07, 231.232, 193.067)), (' P   1  NAG  H2 ', ' P   1  NAG  H83', -0.423, (192.443, 150.756, 167.525)), (' C 627  ASP  O  ', ' C 634  ARG  NH2', -0.423, (249.62, 205.351, 205.784)), (' C  80  ASP  O  ', ' C  82  PRO  HD3', -0.423, (260.977, 223.642, 187.234)), (' A 708  SER  HB3', ' A 711  SER  HB2', -0.422, (185.815, 195.414, 270.378)), (' G   2  VAL  CG2', ' G   2  VAL  O  ', -0.422, (144.271, 264.531, 173.641)), (' A 418  ILE  HA ', ' A 422  ASN  HB2', -0.422, (198.769, 225.719, 169.768)), (' C 105  ILE HG23', ' C 241  LEU HD11', -0.422, (253.109, 227.612, 179.33)), (' B 829  ALA  H  ', ' B 952  VAL HG11', -0.422, (185.761, 211.768, 228.307)), (' A 206  LYS  CB ', ' A 223  LEU HD23', -0.421, (213.277, 168.224, 197.796)), (' I   2  VAL  CG2', ' I   2  VAL  O  ', -0.421, (289.964, 239.028, 173.677)), (' A  70  VAL HG11', ' A 260  ALA  HB1', -0.421, (196.758, 144.865, 192.983)), (' B1105  THR HG22', ' B1112  PRO  HA ', -0.42, (201.303, 225.103, 279.786)), (' G  34  MET  HB3', ' G  34  MET  HE3', -0.42, (153.003, 260.847, 167.995)), (' C 206  LYS  CB ', ' C 223  LEU HD23', -0.42, (243.849, 233.122, 197.74)), (' H  43  LYS  HG2', ' H  44  GLY  H  ', -0.418, (208.129, 130.822, 153.15)), (' H   2  VAL  CG2', ' H   2  VAL  O  ', -0.418, (194.902, 125.634, 173.664)), (' B 105  ILE HG23', ' B 241  LEU HD11', -0.418, (172.565, 238.402, 179.342)), (' B 206  LYS  CB ', ' B 223  LEU HD23', -0.417, (171.988, 227.458, 197.81)), (' A 703  ASN  HB3', ' B 789  TYR  HE1', -0.416, (191.38, 190.589, 256.76)), (' G  43  LYS  HG2', ' G  44  GLY  H  ', -0.414, (142.449, 250.483, 152.898)), (' A 105  ILE HG23', ' A 241  LEU HD11', -0.414, (203.438, 163.597, 179.17)), (' C  54  LEU HD12', ' C 197  ILE HD11', -0.413, (237.275, 218.719, 191.702)), (' H  22  CYS  HB3', ' H  78  LEU  HB3', -0.412, (189.811, 133.154, 165.085)), (' A 722  VAL  HA ', ' A1064  HIS  O  ', -0.412, (212.965, 189.439, 255.322)), (' H  35  HIS  CE1', ' H  50  VAL HG22', -0.412, (200.024, 140.447, 166.804)), (' C 303  LEU HD12', ' C 308  VAL HG12', -0.412, (232.413, 218.795, 219.637)), (' C 466  ARG  HG2', ' C 468  ILE HG23', -0.411, (204.263, 181.169, 170.113)), (' J  61  ARG  H  ', ' J  61  ARG  HG3', -0.41, (125.13, 254.12, 174.064)), (' I  43  LYS  HG2', ' I  44  GLY  H  ', -0.41, (278.765, 247.809, 153.226)), (' C 401  VAL HG22', ' C 509  ARG  HG2', -0.41, (212.991, 193.018, 162.058)), (' K  25  ALA  HB3', ' K  28  LEU  HG ', -0.409, (267.966, 253.062, 164.947)), (' G  35  HIS  CE1', ' G  50  VAL HG22', -0.409, (154.53, 252.848, 166.784)), (' B 708  SER  HB3', ' B 711  SER  HB2', -0.408, (209.626, 237.966, 270.433)), (' L  25  ALA  HB3', ' L  28  LEU  HG ', -0.408, (218.093, 137.601, 164.902)), (' A 961  THR  O  ', ' A 965  GLN  HG3', -0.407, (212.216, 196.109, 212.671)), (' B 415  THR HG22', ' C 384  PRO  HB2', -0.407, (223.176, 203.74, 177.223)), (' J  25  ALA  HB3', ' J  28  LEU  HG ', -0.406, (143.181, 238.523, 164.989)), (' K   7  PRO  HA ', ' K   8  PRO  HD2', -0.405, (275.111, 259.528, 155.123)), (' B  70  VAL HG11', ' B 260  ALA  HB1', -0.404, (160.015, 253.31, 192.832)), (' I  35  HIS  CE1', ' I  50  VAL HG22', -0.404, (274.604, 236.037, 166.718)), (' C 312  ILE HG13', ' C 598  ILE HG13', -0.404, (236.073, 209.582, 225.331)), (' C 100  ILE HD11', ' C 263  ALA  CB ', -0.403, (261.757, 233.937, 191.125)), (' C 961  THR  O  ', ' C 965  GLN  HG3', -0.403, (220.291, 219.027, 212.924)), (' B  54  LEU HD12', ' B 197  ILE HD11', -0.402, (188.199, 229.045, 191.748)), (' C 722  VAL  HA ', ' C1064  HIS  O  ', -0.402, (225.707, 222.628, 255.352)), (' B1028  LYS  NZ ', ' B1042  PHE  O  ', -0.402, (199.62, 216.109, 248.914)), (' B  78  ARG  NH2', ' B  79  PHE  O  ', -0.401, (169.163, 250.508, 183.766)), (' C 393  THR  HA ', ' C 522  ALA  HA ', -0.401, (225.437, 185.167, 185.714)), (' I   7  SER  OG ', ' I   8  GLY  N  ', -0.401, (293.052, 229.598, 157.937)), (' C 992  GLN  H  ', ' C 992  GLN  HG2', -0.4, (209.563, 217.308, 193.109))]
data['cbeta'] = [('A', '  14 ', 'GLN', ' ', 0.3011175732329855, (202.28699999999995, 154.727, 166.632)), ('A', '  63 ', 'THR', ' ', 0.33417073532075153, (194.372, 164.406, 195.149)), ('A', '  66 ', 'HIS', ' ', 0.288831899753134, (197.824, 153.154, 193.08100000000002)), ('A', '  82 ', 'PRO', ' ', 0.35499146278488997, (193.714, 161.34899999999996, 186.64700000000002)), ('A', '  91 ', 'TYR', ' ', 0.33333391194939754, (203.404, 169.61099999999996, 195.75)), ('A', ' 192 ', 'PHE', ' ', 0.31662068179614916, (208.795, 167.80299999999997, 191.39100000000002)), ('A', ' 259 ', 'THR', ' ', 0.3458267363650887, (204.049, 144.31299999999996, 193.595)), ('A', ' 837 ', 'TYR', ' ', 0.31163931696083086, (221.98699999999997, 187.852, 218.103)), ('B', '  14 ', 'GLN', ' ', 0.3021209736918569, (165.8, 243.67099999999994, 166.64600000000002)), ('B', '  63 ', 'THR', ' ', 0.33296061328154225, (178.16799999999995, 245.66299999999995, 195.153)), ('B', '  66 ', 'HIS', ' ', 0.28929441461738153, (166.69599999999994, 248.30699999999996, 193.09700000000004)), ('B', '  82 ', 'PRO', ' ', 0.3534681019290869, (175.84199999999996, 247.768, 186.65500000000003)), ('B', '  91 ', 'TYR', ' ', 0.3323500505523708, (178.15599999999995, 235.238, 195.747)), ('B', ' 192 ', 'PHE', ' ', 0.31562659509708535, (173.8879999999999, 231.47799999999995, 191.39)), ('B', ' 259 ', 'THR', ' ', 0.3463452641976921, (155.92799999999994, 247.34, 193.62100000000004)), ('C', '  14 ', 'GLN', ' ', 0.30239297507977964, (261.0659999999999, 230.78599999999994, 166.639)), ('C', '  63 ', 'THR', ' ', 0.333231767148568, (256.626, 219.079, 195.14800000000005)), ('C', '  66 ', 'HIS', ' ', 0.28955342689295516, (264.646, 227.69499999999996, 193.088)), ('C', '  82 ', 'PRO', ' ', 0.3523614413990413, (259.608, 220.041, 186.648)), ('C', '  91 ', 'TYR', ' ', 0.3326741251422903, (247.60199999999998, 224.297, 195.746)), ('C', ' 192 ', 'PHE', ' ', 0.3158437507047459, (246.475, 229.87299999999996, 191.389)), ('C', ' 259 ', 'THR', ' ', 0.34533981442765593, (269.189, 237.50599999999994, 193.609)), ('H', '  39 ', 'GLN', ' ', 0.2525566810331891, (202.14599999999996, 128.935, 156.03)), ('G', '  39 ', 'GLN', ' ', 0.25168264749433356, (143.53, 256.706, 156.074)), ('I', '  39 ', 'GLN', ' ', 0.2513558863133309, (283.479, 243.564, 156.055))]
data['cablam'] = [('A', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (186.5, 157.6, 187.2)), ('A', '33', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (205.0, 170.2, 206.3)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (195.8, 173.6, 178.2)), ('A', '150', 'LYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (219.0, 143.6, 182.6)), ('A', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (202.1, 157.7, 203.1)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (206.6, 163.5, 208.7)), ('A', '255', 'SER', ' alpha helix', 'bend\nSSSSS', (202.3, 139.7, 188.7)), ('A', '389', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nGTT-E', (188.6, 197.7, 184.4)), ('A', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSII', (203.1, 227.4, 170.0)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (203.5, 246.7, 159.1)), ('A', '496', 'GLY', ' beta sheet', ' \nE--B-', (199.8, 224.2, 154.2)), ('A', '570', 'ALA', ' alpha helix', 'bend\nSSSSS', (188.6, 210.4, 204.1)), ('A', '594', 'GLY', 'check CA trace,carbonyls, peptide', ' \n---EE', (191.4, 192.7, 216.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (193.8, 189.5, 229.5)), ('A', '743', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nHHTSS', (226.9, 203.5, 204.2)), ('A', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (232.2, 191.3, 228.4)), ('A', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nHTTTE', (224.4, 196.6, 210.7)), ('A', '892', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nTSS--', (232.9, 208.4, 261.2)), ('A', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (220.4, 202.8, 255.2)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (220.8, 194.4, 235.7)), ('A', '254', 'SER', 'check CA trace', 'bend\n-SSSS', (198.6, 138.8, 187.9)), ('A', '258', 'TRP', 'check CA trace', 'bend\nSSSTT', (204.7, 145.9, 189.3)), ('A', '259', 'THR', 'check CA trace', 'turn\nSSTTT', (203.0, 144.3, 192.5)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (189.2, 193.4, 199.1)), ('A', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (183.9, 177.9, 218.6)), ('A', '1043', 'CYS', 'check CA trace', 'bend\nSSSSS', (209.9, 197.1, 252.4)), ('B', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (176.2, 255.9, 187.2)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (177.9, 233.5, 206.3)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (185.4, 239.8, 178.2)), ('B', '150', 'LYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (147.9, 234.8, 182.6)), ('B', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (168.5, 242.3, 203.1)), ('B', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (171.3, 235.5, 208.7)), ('B', '255', 'SER', ' alpha helix', 'bend\nSSSSS', (152.8, 251.2, 188.8)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (244.8, 196.6, 159.1)), ('B', '496', 'GLY', ' beta sheet', ' \nE--B-', (227.3, 211.2, 154.2)), ('B', '570', 'ALA', ' alpha helix', 'bend\nSSSSS', (220.9, 227.7, 204.0)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (200.1, 233.7, 229.4)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (190.4, 197.2, 202.1)), ('B', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (182.6, 199.4, 228.3)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nHTTTE', (191.1, 203.5, 210.7)), ('B', '892', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nTSS--', (196.8, 190.3, 260.4)), ('B', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (198.4, 203.9, 255.2)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (198.7, 215.9, 252.4)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (190.9, 207.8, 235.7)), ('B', '254', 'SER', 'check CA trace', 'bend\n-SSSS', (153.8, 254.8, 187.9)), ('B', '258', 'TRP', 'check CA trace', 'bend\nSSSTT', (157.0, 246.0, 189.4)), ('B', '259', 'THR', 'check CA trace', 'turn\nSSTTT', (156.4, 248.2, 192.5)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (205.8, 235.6, 199.1)), ('B', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (195.0, 248.0, 218.6)), ('C', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (266.5, 215.6, 187.2)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (246.3, 225.3, 206.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (248.0, 215.8, 178.2)), ('C', '150', 'LYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (262.3, 250.8, 182.6)), ('C', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (258.6, 229.1, 203.1)), ('C', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (251.3, 230.1, 208.7)), ('C', '255', 'SER', ' alpha helix', 'bend\nSSSSS', (274.1, 238.3, 188.7)), ('C', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSII', (197.8, 195.2, 170.0)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (180.8, 185.9, 159.1)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (202.2, 193.7, 154.2)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (208.6, 232.7, 202.1)), ('C', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (214.3, 238.4, 228.2)), ('C', '892', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nTSS--', (199.3, 230.6, 260.5)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (210.4, 222.5, 255.1)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (220.6, 216.1, 252.4)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (217.5, 227.0, 235.7)), ('C', '254', 'SER', 'check CA trace', 'bend\n-SSSS', (276.7, 235.6, 187.9)), ('C', '258', 'TRP', 'check CA trace', 'bend\nSSSTT', (267.5, 237.3, 189.3)), ('C', '259', 'THR', 'check CA trace', 'turn\nSSTTT', (269.7, 236.6, 192.5)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (234.1, 200.0, 199.1)), ('C', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (250.3, 203.3, 218.6)), ('H', '102', 'PRO', 'check CA trace', 'strand\nSEEE-', (198.8, 127.4, 170.7)), ('L', '83', 'GLU', 'check CA trace,carbonyls, peptide', ' \nGG-SE', (211.5, 115.1, 160.7)), ('G', '102', 'PRO', 'check CA trace', 'strand\nSEEE-', (143.8, 260.3, 170.7)), ('J', '83', 'GLU', 'check CA trace,carbonyls, peptide', ' \nGG-SE', (126.9, 255.6, 160.8)), ('I', '102', 'PRO', 'check CA trace', 'strand\nSEEE-', (286.5, 241.5, 170.7)), ('K', '83', 'GLU', 'check CA trace,carbonyls, peptide', ' \nGG-SE', (290.8, 258.6, 160.8))]
data['smoc'] = [('A', 29, u'THR', 0.7291578454758242, (196.18, 162.025, 202.512)), ('A', 31, u'SER', 0.7538333132470211, (201.19, 166.30800000000002, 203.781)), ('A', 34, u'ARG', 0.6768422347862462, (206.212, 169.132, 202.82200000000003)), ('A', 47, u'VAL', 0.6908868761405096, (218.656, 184.026, 209.665)), ('A', 74, u'ASN', 0.8079378510437611, (188.29399999999998, 139.791, 188.21099999999998)), ('A', 90, u'VAL', 0.5787188616336401, (201.57899999999998, 171.76899999999998, 191.83700000000002)), ('A', 92, u'PHE', 0.6353511234436185, (204.2, 166.137, 192.771)), ('A', 117, u'LEU', 0.5669314703030319, (205.37800000000001, 170.795, 177.446)), ('A', 130, u'VAL', 0.5587305284869066, (207.806, 172.296, 173.88600000000002)), ('A', 132, u'GLU', 0.5971100338554288, (202.353, 171.12800000000001, 169.46200000000002)), ('A', 133, u'PHE', 0.6140645458804831, (201.94899999999998, 167.476, 170.45600000000002)), ('A', 146, u'HIS', 0.8092659658594233, (217.071, 143.20499999999998, 177.3)), ('A', 196, u'ASN', 0.6045622778217484, (204.71399999999997, 178.695, 185.631)), ('A', 223, u'LEU', 0.627706701887168, (213.47899999999998, 171.524, 197.771)), ('A', 253, u'ASP', 0.7827996119571491, (196.318, 137.101, 185.306)), ('A', 260, u'ALA', 0.7055934709734408, (199.442, 145.653, 192.159)), ('A', 267, u'VAL', 0.6232248713640445, (199.523, 165.738, 193.95800000000003)), ('A', 275, u'PHE', 0.6899593093038924, (206.176, 181.483, 205.11399999999998)), ('A', 290, u'ASP', 0.6865730826288711, (202.842, 178.76299999999998, 207.839)), ('A', 297, u'SER', 0.621040388402616, (202.127, 180.556, 213.91)), ('A', 298, u'GLU', 0.6990884091010646, (200.42100000000002, 183.936, 213.464)), ('A', 301, u'CYS', 0.7142521911692834, (205.067, 185.545, 212.062)), ('A', 302, u'THR', 0.7388136144257961, (204.094, 188.766, 213.86)), ('A', 317, u'ASN', 0.7320891299599345, (196.041, 189.323, 209.88400000000001)), ('A', 369, u'TYR', 0.6810093430511853, (193.347, 199.05200000000002, 166.622)), ('A', 389, u'ASP', 0.667116636066724, (188.585, 197.71299999999997, 184.43200000000002)), ('A', 398, u'ASP', 0.5242337818874425, (189.059, 217.121, 172.19)), ('A', 422, u'ASN', 0.6069664659666804, (196.11399999999998, 227.08700000000002, 170.60299999999998)), ('A', 429, u'PHE', 0.6224151102873459, (195.312, 216.377, 183.812)), ('A', 432, u'CYS', 0.6086037352323219, (194.798, 209.995, 177.47)), ('A', 473, u'TYR', 0.6917926802911133, (197.393, 241.32800000000003, 166.661)), ('A', 511, u'VAL', 0.5557975966700953, (192.137, 213.191, 170.138)), ('A', 524, u'VAL', 0.6241638386281836, (180.696, 205.20899999999997, 180.607)), ('A', 553, u'THR', 0.7311908935362442, (176.95100000000002, 194.933, 204.55700000000002)), ('A', 559, u'PHE', 0.806476522366013, (173.07399999999998, 209.335, 199.14899999999997)), ('A', 585, u'LEU', 0.7368285785042776, (176.292, 198.983, 200.475)), ('A', 586, u'ASP', 0.6813319018482706, (178.88400000000001, 199.859, 203.08700000000002)), ('A', 631, u'PRO', 0.7755211454694093, (190.11299999999997, 173.947, 209.815)), ('A', 649, u'CYS', 0.702115860129611, (185.407, 186.738, 223.62)), ('A', 672, u'ALA', 0.6810989249958704, (194.97299999999998, 183.70899999999997, 232.19)), ('A', 699, u'LEU', 0.8225892052576349, (191.532, 191.19299999999998, 244.854)), ('A', 702, u'GLU', 0.8525651010375755, (189.536, 187.38600000000002, 252.40200000000002)), ('A', 712, u'ILE', 0.6707776456651877, (191.42800000000003, 195.91, 270.98299999999995)), ('A', 713, u'ALA', 0.634599123466704, (193.598, 193.16899999999998, 269.48299999999995)), ('A', 745, u'ASP', 0.7073695384772704, (229.718, 199.062, 201.583)), ('A', 763, u'LEU', 0.5528816203958609, (219.495, 209.58800000000002, 217.039)), ('A', 770, u'ILE', 0.5674530180778675, (219.668, 206.82700000000003, 227.365)), ('A', 774, u'GLN', 0.5709289930808988, (221.30200000000002, 203.909, 232.757)), ('A', 797, u'PHE', 0.6609883471087433, (226.789, 188.736, 265.119)), ('A', 810, u'SER', 0.8607966111394136, (238.59, 182.94, 249.853)), ('A', 830, u'ASP', 0.7775938522258167, (219.463, 182.61599999999999, 227.09)), ('A', 841, u'LEU', 0.7350959796037599, (222.73999999999998, 191.23299999999998, 221.57299999999998)), ('A', 847, u'ARG', 0.8321498264038873, (231.61599999999999, 190.815, 222.55800000000002)), ('A', 850, u'ILE', 0.8147070221305275, (232.15800000000002, 190.963, 214.38000000000002)), ('A', 870, u'ILE', 0.6241045516215237, (228.765, 196.76, 242.099)), ('A', 878, u'LEU', 0.5890678488375424, (226.33800000000002, 195.19899999999998, 254.007)), ('A', 885, u'GLY', 0.6482131436015437, (223.44, 200.805, 261.49899999999997)), ('A', 896, u'ILE', 0.662063983173338, (228.041, 198.873, 267.774)), ('A', 950, u'ASP', 0.7473229380609763, (212.359, 190.33200000000002, 231.099)), ('A', 960, u'ASN', 0.697912816304334, (215.414, 191.696, 216.511)), ('A', 963, u'VAL', 0.7422982303485097, (217.21399999999997, 194.154, 212.30100000000002)), ('A', 996, u'LEU', 0.6394016426481985, (216.253, 203.184, 201.48000000000002)), ('A', 1003, u'SER', 0.626886433183973, (213.227, 202.236, 211.683)), ('A', 1033, u'VAL', 0.6362037196662704, (218.937, 199.569, 253.772)), ('A', 1051, u'SER', 0.6536143067054517, (217.083, 195.439, 254.441)), ('A', 1054, u'GLN', 0.6192436433503851, (222.342, 192.05700000000002, 246.814)), ('A', 1066, u'THR', 0.6261106492082309, (210.478, 192.363, 258.97599999999994)), ('A', 1081, u'ILE', 0.7112476227681003, (191.197, 205.726, 283.97799999999995)), ('A', 1087, u'ALA', 0.6112690367953904, (191.71499999999997, 211.137, 284.702)), ('A', 1094, u'VAL', 0.6675133800781214, (197.129, 201.44899999999998, 275.96299999999997)), ('A', 1146, u'ASP', 0.8168521260539641, (205.625, 204.336, 304.02799999999996)), ('A', 1305, u'NAG', 0.8231863526395952, (168.476, 197.984, 187.26)), ('A', 1310, u'NAG', 0.8186729355456284, (211.312, 172.24699999999999, 224.446)), ('B', 14, u'GLN', 0.5987137509338957, (166.48800000000003, 243.053, 167.846)), ('B', 29, u'THR', 0.7037843138782794, (175.20899999999997, 245.285, 202.518)), ('B', 35, u'GLY', 0.6235993749766411, (177.842, 231.634, 199.583)), ('B', 43, u'PHE', 0.7116772948225917, (179.21699999999998, 211.811, 200.474)), ('B', 74, u'ASN', 0.794222362626469, (159.89100000000002, 263.248, 188.24299999999997)), ('B', 89, u'GLY', 0.6073225110529078, (184.156, 233.978, 190.707)), ('B', 135, u'PHE', 0.6131845341898092, (175.22299999999998, 242.36, 172.782)), ('B', 186, u'PHE', 0.7356448671368855, (156.46800000000002, 235.83100000000002, 199.489)), ('B', 196, u'ASN', 0.546649178090545, (185.35500000000002, 229.565, 185.618)), ('B', 214, u'ARG', 0.7523536956212373, (164.731, 242.948, 203.228)), ('B', 217, u'PRO', 0.7777583513684726, (169.207, 236.736, 205.85600000000002)), ('B', 246, u'ARG', 0.7697396821066205, (156.363, 247.92100000000002, 181.346)), ('B', 249, u'LEU', 0.7452722259461622, (157.226, 253.47, 173.994)), ('B', 256, u'SER', 0.75049003373426, (153.296, 250.04899999999998, 185.11499999999998)), ('B', 260, u'ALA', 0.7663725273031798, (159.39200000000002, 250.66, 192.184)), ('B', 270, u'LEU', 0.5594626484046444, (184.95100000000002, 235.01899999999998, 195.678)), ('B', 277, u'LEU', 0.6203371587235867, (183.08800000000002, 222.63, 206.553)), ('B', 290, u'ASP', 0.6743070676813521, (186.372, 231.138, 207.82600000000002)), ('B', 297, u'SER', 0.6748831556278609, (188.26399999999998, 230.859, 213.911)), ('B', 299, u'THR', 0.7283558563432222, (192.16299999999998, 228.571, 216.672)), ('B', 304, u'LYS', 0.7515925540297351, (190.29399999999998, 221.25, 213.4)), ('B', 327, u'VAL', 0.7136012069321748, (208.61599999999999, 241.555, 189.17)), ('B', 350, u'VAL', 0.513897849586494, (229.63, 216.657, 166.507)), ('B', 353, u'TRP', 0.5344403380510874, (230.918, 221.112, 168.666)), ('B', 398, u'ASP', 0.4443289690410084, (226.453, 223.894, 172.212)), ('B', 405, u'ASP', 0.6415239375909311, (218.69899999999998, 207.963, 165.41899999999998)), ('B', 409, u'GLN', 0.6304328599268376, (221.647, 210.17499999999998, 172.786)), ('B', 422, u'ASN', 0.5894085223113577, (231.57299999999998, 212.788, 170.58800000000002)), ('B', 442, u'ASP', 0.6639710342147166, (222.494, 220.17299999999997, 155.515)), ('B', 465, u'GLU', 0.6148415500384936, (234.761, 217.518, 176.848)), ('B', 480, u'CYS', 0.8212781001916628, (249.86800000000002, 201.85600000000002, 164.105)), ('B', 510, u'VAL', 0.5807582147093042, (221.056, 220.19, 167.82200000000003)), ('B', 524, u'VAL', 0.6200868297365824, (220.334, 237.086, 180.594)), ('B', 553, u'THR', 0.743244657703939, (213.343, 245.466, 204.55100000000002)), ('B', 571, u'ASP', 0.729778266041678, (217.191, 226.69, 203.54899999999998)), ('B', 585, u'LEU', 0.718440101252628, (217.11899999999997, 244.016, 200.431)), ('B', 586, u'ASP', 0.7001830417866208, (216.61899999999997, 241.336, 203.05100000000002)), ('B', 597, u'VAL', 0.6265865478283937, (195.08100000000002, 232.971, 221.35700000000003)), ('B', 610, u'VAL', 0.6901771808322895, (195.69299999999998, 237.70299999999997, 221.37)), ('B', 630, u'THR', 0.7534386161373452, (190.017, 241.83800000000002, 207.602)), ('B', 646, u'ARG', 0.7643462915267144, (207.784, 240.58, 228.823)), ('B', 671, u'CYS', 0.681388281929302, (198.03, 235.159, 233.67)), ('B', 672, u'ALA', 0.6571928522982214, (194.545, 235.459, 232.194)), ('B', 707, u'TYR', 0.7085211979315053, (210.21099999999998, 237.771, 265.52)), ('B', 713, u'ALA', 0.682374541334662, (203.477, 231.946, 269.477)), ('B', 739, u'THR', 0.7150760929306926, (196.471, 195.228, 209.13899999999998)), ('B', 764, u'ASN', 0.6757107210639347, (201.976, 198.916, 218.379)), ('B', 774, u'GLN', 0.6073029638577578, (198.92600000000002, 202.61399999999998, 232.754)), ('B', 787, u'GLN', 0.7960813994635597, (193.86, 192.30800000000002, 251.708)), ('B', 802, u'PHE', 0.7407656276885255, (181.70999999999998, 207.97, 257.612)), ('B', 830, u'ASP', 0.8033611435388904, (181.417, 214.70899999999997, 227.05)), ('B', 837, u'TYR', 0.806020651825496, (183.591, 209.936, 216.772)), ('B', 850, u'ILE', 0.7632358353209874, (182.238, 199.187, 214.124)), ('B', 878, u'LEU', 0.6894949581082294, (188.85700000000003, 202.542, 253.975)), ('B', 897, u'PRO', 0.6113172891133826, (188.52800000000002, 201.82100000000003, 268.73199999999997)), ('B', 902, u'MET', 0.5640119915847439, (192.569, 209.51399999999998, 267.0)), ('B', 904, u'TYR', 0.6310185466018455, (197.556, 208.012, 268.612)), ('B', 938, u'LEU', 0.8101883648533422, (180.634, 218.30800000000002, 244.84)), ('B', 948, u'LEU', 0.6512945415388175, (190.464, 214.14399999999998, 235.285)), ('B', 960, u'ASN', 0.7374496627484599, (191.298, 213.811, 216.496)), ('B', 980, u'ILE', 0.7099333150852077, (195.762, 204.24299999999997, 193.583)), ('B', 982, u'SER', 0.6912321923022517, (192.505, 200.925, 190.72899999999998)), ('B', 996, u'LEU', 0.6383551580245851, (200.833, 207.30700000000002, 201.51399999999998)), ('B', 1001, u'LEU', 0.6812900695947564, (203.20499999999998, 205.681, 209.661)), ('B', 1008, u'VAL', 0.6596229462391886, (203.093, 207.676, 219.736)), ('B', 1018, u'ILE', 0.5377355561442991, (200.295, 210.571, 234.017)), ('B', 1022, u'ALA', 0.6042811214881219, (200.442, 208.30100000000002, 239.55800000000002)), ('B', 1057, u'PRO', 0.6703603338302047, (187.284, 208.631, 236.66)), ('B', 1061, u'VAL', 0.7073833207394141, (190.61599999999999, 211.687, 245.257)), ('B', 1077, u'THR', 0.6274608019098041, (209.7, 232.075, 276.382)), ('B', 1080, u'ALA', 0.6871732508003286, (216.099, 226.85500000000002, 280.308)), ('B', 1087, u'ALA', 0.6727825276157304, (219.97299999999998, 224.60999999999999, 284.729)), ('B', 1094, u'VAL', 0.641310994941468, (208.80200000000002, 224.77299999999997, 275.868)), ('B', 1096, u'VAL', 0.6712598296604679, (206.66, 230.016, 278.49099999999993)), ('B', 1133, u'VAL', 0.7227817897084166, (215.78, 232.92700000000002, 283.529)), ('B', 1147, u'SER', 0.8050007863332637, (205.05700000000002, 216.605, 307.27099999999996)), ('C', 21, u'ARG', 0.8234301825291981, (267.29699999999997, 219.621, 183.454)), ('C', 47, u'VAL', 0.7202450934283285, (227.485, 230.292, 209.653)), ('C', 90, u'VAL', 0.6115327582822554, (246.648, 221.64, 191.83100000000002)), ('C', 131, u'CYS', 0.5477721854552825, (244.71499999999997, 225.547, 170.67499999999998)), ('C', 132, u'GLU', 0.5831561619458594, (246.829, 222.641, 169.45700000000002)), ('C', 141, u'LEU', 0.614133965707424, (259.32, 234.373, 177.963)), ('C', 180, u'GLU', 0.8136219037675492, (258.622, 246.20999999999998, 190.289)), ('C', 193, u'VAL', 0.6389023861177009, (243.905, 226.52, 192.815)), ('C', 223, u'LEU', 0.6242997181877181, (240.907, 232.065, 197.767)), ('C', 276, u'LEU', 0.7103061614426445, (233.98700000000002, 222.70899999999997, 207.71699999999998)), ('C', 279, u'TYR', 0.7000655508664188, (231.789, 232.177, 207.346)), ('C', 298, u'GLU', 0.6845818493788592, (236.708, 214.58100000000002, 213.48000000000002)), ('C', 299, u'THR', 0.7044834669581196, (234.84, 215.503, 216.671)), ('C', 304, u'LYS', 0.7523267096891535, (229.45700000000002, 220.788, 213.485)), ('C', 308, u'VAL', 0.6955848977962836, (233.812, 221.012, 221.8)), ('C', 309, u'GLU', 0.6823253212224838, (233.134, 220.56, 225.508)), ('C', 317, u'ASN', 0.6801646808397586, (234.238, 208.11399999999998, 209.89600000000002)), ('C', 329, u'PHE', 0.7469145151505433, (235.516, 189.29399999999998, 186.41)), ('C', 351, u'TYR', 0.5830010070938493, (203.21699999999998, 186.282, 167.31)), ('C', 368, u'LEU', 0.7306905031220466, (227.47, 197.724, 167.255)), ('C', 398, u'ASP', 0.49682469155922077, (213.629, 188.16, 172.19899999999998)), ('C', 409, u'GLN', 0.6265656852135474, (204.11499999999998, 199.07, 172.874)), ('C', 418, u'ILE', 0.6065833678082284, (201.303, 193.819, 170.52800000000002)), ('C', 524, u'VAL', 0.6040458461405736, (228.129, 186.82700000000003, 180.602)), ('C', 539, u'VAL', 0.6427591945840992, (239.915, 199.08200000000002, 198.323)), ('C', 553, u'THR', 0.6561130391417216, (238.877, 188.736, 204.536)), ('C', 562, u'PHE', 0.7620221099306299, (223.772, 177.969, 192.61399999999998)), ('C', 586, u'ASP', 0.662683774840716, (233.63299999999998, 187.997, 203.067)), ('C', 595, u'VAL', 0.7014367299321465, (235.86200000000002, 205.059, 217.977)), ('C', 596, u'SER', 0.7259599329746422, (235.14399999999998, 207.63899999999998, 220.67899999999997)), ('C', 633, u'TRP', 0.6990240234520614, (246.24399999999997, 209.73399999999998, 212.942)), ('C', 651, u'ILE', 0.6959343384768086, (245.425, 205.501, 223.121)), ('C', 671, u'CYS', 0.6761288700237807, (237.61399999999998, 207.127, 233.66899999999998)), ('C', 672, u'ALA', 0.6930529482186764, (239.61599999999999, 210.024, 232.236)), ('C', 699, u'LEU', 0.7422682581646745, (234.657, 203.563, 244.974)), ('C', 718, u'PHE', 0.7175408612910217, (231.012, 217.55800000000002, 266.44)), ('C', 729, u'VAL', 0.6407632438944733, (214.721, 222.32200000000003, 237.942)), ('C', 742, u'ILE', 0.682673363453622, (206.88500000000002, 224.80200000000002, 206.497)), ('C', 773, u'GLU', 0.5886401089651134, (206.045, 220.33, 232.12800000000001)), ('C', 797, u'PHE', 0.6008622292190281, (219.349, 234.99200000000002, 265.113)), ('C', 830, u'ASP', 0.7645233412735606, (228.37800000000001, 231.767, 227.096)), ('C', 849, u'LEU', 0.7916605143799549, (211.065, 238.874, 216.365)), ('C', 850, u'ILE', 0.8531647147485574, (214.111, 238.946, 213.935)), ('C', 861, u'LEU', 0.7367655095695701, (209.068, 230.778, 225.206)), ('C', 866, u'THR', 0.6738354602232726, (210.025, 235.311, 236.465)), ('C', 870, u'ILE', 0.6039695171919326, (211.383, 232.748, 242.063)), ('C', 904, u'TYR', 0.6248939970406844, (214.312, 221.08200000000002, 268.619)), ('C', 923, u'ILE', 0.656925154529666, (227.977, 226.254, 266.67900000000003)), ('C', 927, u'PHE', 0.6388481217180452, (228.067, 227.91299999999998, 260.772)), ('C', 962, u'LEU', 0.6867768554962622, (218.33800000000002, 221.002, 214.39000000000001)), ('C', 977, u'LEU', 0.6928743054966526, (211.66, 225.834, 198.495)), ('C', 990, u'GLU', 0.7570037649959641, (205.42100000000002, 218.575, 194.32800000000003)), ('C', 1013, u'ILE', 0.6879919466402338, (214.877, 212.664, 226.778)), ('C', 1028, u'LYS', 0.6707509053805126, (214.412, 217.353, 248.98000000000002)), ('C', 1064, u'HIS', 0.6071651853371107, (222.442, 221.788, 253.849)), ('C', 1072, u'GLU', 0.6983111377843697, (234.99800000000002, 209.228, 268.66900000000004)), ('C', 1080, u'ALA', 0.6730467451890271, (221.38400000000001, 195.66, 280.32)), ('C', 1094, u'VAL', 0.6550403669608511, (223.2, 202.985, 275.882)), ('C', 1109, u'PHE', 0.6726147854558144, (227.147, 212.44299999999998, 271.868)), ('C', 1145, u'LEU', 0.7761094745349658, (214.88800000000003, 211.726, 301.97099999999995)), ('C', 1146, u'ASP', 0.7824401992415109, (216.418, 208.948, 304.08799999999997)), ('H', 1, u'GLN', 0.7240451953027796, (193.51, 121.46100000000001, 175.48800000000003)), ('H', 8, u'GLY', 0.8292899579861754, (185.38800000000003, 129.66, 156.553)), ('H', 12, u'VAL', 0.8104628653629318, (187.83800000000002, 132.83700000000002, 145.497)), ('H', 16, u'ARG', 0.7938422367880523, (186.224, 139.602, 146.43200000000002)), ('H', 25, u'SER', 0.8513997594974494, (187.62800000000001, 126.718, 173.599)), ('H', 43, u'LYS', 0.8279535334272604, (207.08, 129.166, 151.71399999999997)), ('H', 71, u'ARG', 0.7750462947625053, (186.996, 139.526, 168.017)), ('H', 80, u'LEU', 0.7862077711230577, (189.676, 138.062, 160.015)), ('H', 85, u'GLU', 0.8589002340947972, (199.907, 136.64, 146.662)), ('H', 100, u'PHE', 0.7406390644708668, (202.601, 131.84, 169.806)), ('H', 107, u'THR', 0.8230278500130361, (192.134, 127.429, 156.70499999999998)), ('L', 12, u'SER', 0.8077161656756696, (220.597, 116.20400000000001, 156.86200000000002)), ('L', 21, u'ILE', 0.7782684686623194, (219.74299999999997, 124.4, 164.02)), ('L', 28, u'LEU', 0.8371782306378488, (218.961, 138.35100000000003, 167.976)), ('L', 34, u'TYR', 0.7384637502257099, (211.545, 131.16899999999998, 169.736)), ('L', 36, u'TYR', 0.7886891280903916, (208.40800000000002, 126.114, 166.406)), ('L', 48, u'ILE', 0.8043616158543926, (211.71099999999998, 126.24700000000001, 172.59)), ('L', 60, u'GLU', 0.7735114827062552, (213.46200000000002, 116.226, 176.74899999999997)), ('L', 61, u'ARG', 0.8250408833163266, (215.57399999999998, 115.76400000000001, 173.52100000000002)), ('L', 85, u'ASP', 0.8121483514376289, (210.02800000000002, 122.16999999999999, 159.591)), ('L', 98, u'PHE', 0.8087928204629756, (209.955, 134.655, 161.14)), ('G', 1, u'GLN', 0.733081289056753, (141.399, 267.91099999999994, 175.54)), ('G', 43, u'LYS', 0.8255863760164612, (141.256, 252.32100000000003, 151.757)), ('G', 78, u'LEU', 0.7632664075702198, (156.09, 265.65900000000005, 166.3)), ('G', 80, u'LEU', 0.7558098869299263, (157.676, 262.93299999999994, 160.04899999999998)), ('G', 85, u'GLU', 0.8451756947536307, (151.312, 254.795, 146.697)), ('G', 111, u'VAL', 0.8295667818672197, (151.569, 262.889, 144.97899999999998)), ('J', 12, u'SER', 0.8296161070328147, (123.27499999999999, 247.102, 156.91899999999998)), ('J', 20, u'ARG', 0.7986888895952887, (127.49700000000001, 243.15, 165.877)), ('J', 22, u'THR', 0.8157463568944077, (133.11499999999998, 240.71399999999997, 164.159)), ('J', 28, u'LEU', 0.8573423981704539, (143.27899999999997, 237.429, 168.008)), ('J', 31, u'GLN', 0.8455447443608816, (146.207, 238.991, 171.77599999999998)), ('J', 34, u'TYR', 0.7718610437956831, (140.77399999999997, 247.442, 169.777)), ('J', 60, u'GLU', 0.765597078752961, (126.883, 253.256, 176.80700000000002)), ('J', 61, u'ARG', 0.8131963074178324, (125.424, 251.661, 173.57899999999998)), ('J', 74, u'THR', 0.8459992366815582, (127.959, 245.191, 169.178)), ('J', 89, u'GLN', 0.8108750003018941, (143.661, 246.60399999999998, 165.662)), ('J', 97, u'VAL', 0.8065486397905989, (147.923, 245.54299999999998, 162.147)), ('J', 98, u'PHE', 0.8589061049569935, (144.57899999999998, 247.08, 161.177)), ('J', 105, u'THR', 0.8335440829895956, (124.425, 252.009, 157.268)), ('J', 106, u'VAL', 0.8283291514038797, (121.489, 253.035, 159.455)), ('I', 20, u'LEU', 0.8042260552190011, (286.555, 228.545, 158.42100000000002)), ('I', 50, u'VAL', 0.6465196448181687, (275.09299999999996, 232.92800000000003, 165.74899999999997)), ('I', 59, u'TYR', 0.7471781561459219, (271.41499999999996, 232.60299999999998, 160.53)), ('I', 85, u'GLU', 0.8354148668463038, (277.93199999999996, 237.777, 146.681)), ('I', 95, u'ASP', 0.6764935011227966, (278.93899999999996, 238.16, 172.05700000000002)), ('K', 12, u'SER', 0.820349115600685, (285.28, 265.909, 156.899)), ('K', 20, u'ARG', 0.8016943634305135, (279.751, 264.227, 165.859)), ('K', 21, u'ILE', 0.8085295640222393, (278.605, 261.068, 164.05100000000002)), ('K', 31, u'GLN', 0.7685752855884719, (266.80400000000003, 250.097, 171.76399999999998)), ('K', 34, u'TYR', 0.7466926607364827, (276.83799999999997, 250.58100000000002, 169.761)), ('K', 36, u'TYR', 0.7782213889399843, (282.78599999999994, 250.393, 166.434)), ('K', 60, u'GLU', 0.7655429585719475, (288.817, 259.709, 176.785)), ('K', 61, u'ARG', 0.8252580040527421, (288.163, 261.77, 173.55700000000002)), ('K', 71, u'VAL', 0.8585292442246494, (272.139, 258.4959999999999, 168.66)), ('K', 85, u'ASP', 0.8112367480060052, (285.395, 253.772, 159.622)), ('K', 89, u'GLN', 0.7476351545866704, (274.66700000000003, 248.49800000000002, 165.647)), ('K', 96, u'TRP', 0.7784733454530065, (271.89799999999997, 242.375, 164.565))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23126/7l2e/Model_validation_1/validation_cootdata/molprobity_probe7l2e_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

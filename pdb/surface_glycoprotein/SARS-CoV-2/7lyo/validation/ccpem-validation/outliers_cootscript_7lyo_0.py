
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' B 612  TYR  HB2', ' B 649  CYS  HB3', -1.073, (183.422, 136.692, 159.753)), (' B 620  VAL HG21', ' B 649  CYS  SG ', -0.846, (184.421, 135.027, 159.289)), (' A 617  CYS  HA ', ' A 620  VAL HG23', -0.778, (174.813, 196.554, 160.134)), (' A 165  ASN  HB3', ' A 167  THR HG23', -0.71, (143.938, 195.443, 111.708)), (' A 131  CYS  HB3', ' A 166  CYS  H  ', -0.647, (141.544, 199.985, 111.691)), (' C1103  PHE  HZ ', ' C1312  NAG  H61', -0.58, (142.083, 149.894, 228.613)), (' A 617  CYS  SG ', ' A 644  GLN  OE1', -0.578, (176.169, 195.857, 164.351)), (' B 612  TYR  HB2', ' B 649  CYS  CB ', -0.563, (183.595, 136.113, 160.219)), (' A 129  LYS  HD3', ' A 131  CYS  SG ', -0.554, (138.885, 201.237, 114.123)), (' B1032  CYS  HG ', ' B1043  CYS  HG ', -0.53, (169.795, 164.368, 194.346)), (' C 612  TYR  HB2', ' C 649  CYS  HB3', -0.509, (126.662, 153.645, 162.586)), (' C 308  VAL HG22', ' C 602  THR HG23', -0.501, (137.431, 136.172, 165.386)), (' C1081  ILE HD12', ' C1135  ASN  HB3', -0.478, (143.429, 162.232, 229.178)), (' C  57  PRO  HB2', ' C  60  SER  HB3', -0.476, (128.97, 135.235, 146.112)), (' A 129  LYS  HD3', ' A 166  CYS  SG ', -0.455, (138.514, 201.153, 113.92)), (' B 612  TYR  CB ', ' B 649  CYS  HB3', -0.442, (182.58, 136.934, 160.062)), (' B 615  VAL  O  ', ' B 649  CYS  HB2', -0.441, (182.121, 134.539, 161.087)), (' A1103  PHE  HZ ', ' A1314  NAG  H61', -0.439, (164.029, 183.302, 228.256)), (' B 105  ILE HG12', ' B 110  LEU HD22', -0.438, (206.406, 151.481, 120.044)), (' A 617  CYS  HA ', ' A 620  VAL  CG2', -0.434, (174.198, 196.266, 160.859)), (' B1082  CYS  CB ', ' B1126  CYS  HG ', -0.43, (164.013, 138.518, 228.586)), (' B  57  PRO  HG3', ' B 273  ARG  HD2', -0.424, (193.787, 148.335, 142.81)), (' A 327  VAL  H  ', ' A 531  THR HG22', -0.418, (180.743, 190.457, 131.051)), (' C 599  THR HG22', ' C 601  GLY  H  ', -0.409, (135.6, 138.679, 169.285)), (' C 394  ASN  H  ', ' C 516  GLU  HG3', -0.409, (136.245, 180.922, 127.409)), (' A 877  LEU HD13', ' A1029  MET  SD ', -0.404, (143.791, 162.038, 191.096)), (' B 877  LEU HD13', ' B1029  MET  SD ', -0.402, (171.384, 175.568, 190.282))]
data['cbeta'] = [('A', ' 617 ', 'CYS', ' ', 0.3903069412996126, (175.667, 197.827, 162.815)), ('B', ' 487 ', 'ASN', ' ', 0.26029922448034537, (147.784, 139.414, 71.772)), ('B', ' 617 ', 'CYS', ' ', 0.78701779062697, (185.671, 131.912, 160.979)), ('C', ' 198 ', 'ASP', ' ', 0.3731647584046986, (147.189, 139.101, 129.656)), ('C', ' 617 ', 'CYS', ' ', 0.6871663921274184, (121.296, 154.874, 163.617)), ('C', ' 762 ', 'GLN', ' ', 0.27944393215385366, (172.37099999999998, 159.586, 157.836))]
data['smoc'] = [('A', 31, u'SER', 0.8119737883526638, (147.783, 205.829, 147.261)), ('A', 86, u'PHE', 0.742322468199123, (152.252, 201.977, 130.964)), ('A', 106, u'PHE', 0.7580819172878248, (147.132, 202.694, 124.603)), ('A', 115, u'GLN', 0.8270271089966508, (148.905, 199.076, 116.32)), ('A', 131, u'CYS', 0.7345076807095252, (142.985, 199.872, 113.955)), ('A', 136, u'CYS', 0.8358568465196872, (145.70399999999998, 213.843, 116.694)), ('A', 143, u'VAL', 0.7325371435116721, (131.417, 219.39200000000002, 124.36999999999999)), ('A', 186, u'PHE', 0.7842643761337265, (133.536, 216.03, 143.997)), ('A', 198, u'ASP', 0.756868494920093, (149.503, 186.823, 127.084)), ('A', 201, u'PHE', 0.7546982994551711, (143.966, 193.066, 128.11899999999997)), ('A', 220, u'PHE', 0.7600027966675158, (139.634, 200.003, 151.51399999999998)), ('A', 240, u'THR', 0.6963833256979186, (143.477, 209.88700000000003, 128.841)), ('A', 270, u'LEU', 0.6969211562858217, (151.251, 197.92600000000002, 139.208)), ('A', 277, u'LEU', 0.7037067532378632, (143.79399999999998, 189.268, 151.287)), ('A', 297, u'SER', 0.7311205288577016, (153.601, 193.565, 157.04299999999998)), ('A', 329, u'PHE', 0.787919820350267, (184.834, 184.025, 127.724)), ('A', 354, u'ASN', 0.7742820218294757, (184.90800000000002, 160.27399999999997, 110.45400000000001)), ('A', 372, u'ALA', 0.8363009909087553, (164.818, 174.34, 108.043)), ('A', 382, u'VAL', 0.7842184771516105, (171.92800000000003, 170.343, 126.823)), ('A', 390, u'LEU', 0.7584887120682134, (178.148, 177.778, 126.71100000000001)), ('A', 394, u'ASN', 0.7941599177935454, (186.91299999999998, 170.59, 122.607)), ('A', 401, u'VAL', 0.8117126657467671, (175.751, 157.85100000000003, 106.21700000000001)), ('A', 406, u'GLU', 0.8086162053337941, (168.82500000000002, 153.336, 111.88)), ('A', 410, u'ILE', 0.7674760359001512, (172.127, 157.023, 117.154)), ('A', 429, u'PHE', 0.7666970748385105, (176.537, 161.369, 126.24000000000001)), ('A', 432, u'CYS', 0.757988325660777, (173.787, 166.79299999999998, 119.586)), ('A', 447, u'GLY', 0.8350738910373037, (172.35000000000002, 150.787, 94.257)), ('A', 454, u'ARG', 0.8687558415609858, (179.125, 145.977, 109.68299999999999)), ('A', 465, u'GLU', 0.8137216544673224, (185.053, 152.364, 119.65799999999999)), ('A', 476, u'GLY', 0.8310420318542316, (179.553, 128.218, 112.768)), ('A', 480, u'CYS', 0.7893722259680345, (187.271, 130.48100000000002, 108.053)), ('A', 517, u'LEU', 0.7814352805589401, (181.697, 170.035, 128.634)), ('A', 545, u'GLY', 0.7165355657310496, (179.15, 179.345, 130.532)), ('A', 557, u'LYS', 0.829171703618515, (194.04899999999998, 179.91, 145.465)), ('A', 571, u'ASP', 0.7132483048552054, (180.045, 171.165, 144.937)), ('A', 577, u'ARG', 0.7873700047926696, (190.572, 181.484, 136.728)), ('A', 587, u'ILE', 0.8244267928096851, (183.879, 183.74699999999999, 144.899)), ('A', 619, u'GLU', 0.7345421147133093, (177.72299999999998, 194.88800000000003, 156.909)), ('A', 641, u'ASN', 0.7339481693511429, (168.416, 203.286, 167.305)), ('A', 650, u'LEU', 0.7288810850234576, (169.35500000000002, 195.70899999999997, 166.493)), ('A', 774, u'GLN', 0.6592550303611825, (145.287, 158.963, 175.02100000000002)), ('A', 796, u'ASP', 0.7486006322124368, (133.033, 169.57399999999998, 209.994)), ('A', 819, u'GLU', 0.6150227159804613, (136.894, 173.032, 187.721)), ('A', 876, u'ALA', 0.5229128255202646, (136.73399999999998, 160.55, 194.60999999999999)), ('A', 901, u'GLN', 0.5732889883922043, (145.224, 164.936, 209.602)), ('A', 913, u'GLN', 0.6268069330214948, (152.006, 169.311, 215.871)), ('A', 948, u'LEU', 0.7066372447867306, (146.68, 173.147, 177.997)), ('A', 962, u'LEU', 0.6653657757937015, (147.68800000000002, 168.866, 156.671)), ('A', 967, u'SER', 0.7058191427390738, (145.597, 172.66299999999998, 147.71499999999997)), ('A', 974, u'SER', 0.7355714003374524, (145.918, 170.946, 139.22899999999998)), ('A', 983, u'ARG', 0.7610040574949885, (140.377, 166.51399999999998, 131.493)), ('A', 1018, u'ILE', 0.6086626322110695, (152.277, 164.277, 176.099)), ('A', 1019, u'ARG', 0.6639332576806155, (152.978, 160.736, 177.459)), ('A', 1022, u'ALA', 0.652509890499587, (150.869, 162.089, 181.61299999999997)), ('A', 1029, u'MET', 0.5546931217742812, (148.89600000000002, 162.19899999999998, 191.834)), ('A', 1033, u'VAL', 0.583457588284188, (147.68200000000002, 163.798, 196.347)), ('A', 1039, u'ARG', 0.6438659378277986, (160.88600000000002, 165.795, 197.287)), ('A', 1065, u'VAL', 0.636329995987009, (149.19899999999998, 173.35700000000003, 199.665)), ('A', 1077, u'THR', 0.5685720144746532, (173.61499999999998, 179.85800000000003, 218.18200000000002)), ('A', 1080, u'ALA', 0.6543951372463284, (176.586, 172.063, 221.865)), ('A', 1094, u'VAL', 0.6682480488897172, (168.781, 173.72899999999998, 217.753)), ('A', 1133, u'VAL', 0.6717263548892884, (179.35800000000003, 177.464, 224.865)), ('A', 1137, u'VAL', 0.7823471533699822, (171.221, 172.463, 231.947)), ('A', 1141, u'LEU', 0.8484534696512533, (164.424, 165.005, 238.948)), ('A', 1147, u'SER', 0.828239160900235, (160.42200000000003, 168.771, 247.403)), ('A', 1301, u'NAG', 0.8517132767847974, (125.227, 209.003, 122.488)), ('A', 1302, u'NAG', 0.714850079693633, (145.516, 202.446, 108.28)), ('A', 1304, u'NAG', 0.838412998348055, (129.503, 191.889, 158.40800000000002)), ('A', 1305, u'NAG', 0.7209884757259029, (194.034, 187.29399999999998, 122.68499999999999)), ('A', 1306, u'NAG', 0.834324670054307, (177.503, 175.374, 108.59)), ('A', 1307, u'NAG', 0.7372505375812974, (146.90200000000002, 199.033, 174.731)), ('B', 27, u'ALA', 0.8354278032563952, (211.63299999999998, 140.19899999999998, 138.49800000000002)), ('B', 36, u'VAL', 0.7526260180373141, (197.76999999999998, 158.102, 142.35800000000003)), ('B', 37, u'TYR', 0.7640487103374196, (196.79299999999998, 160.89800000000002, 139.914)), ('B', 42, u'VAL', 0.7905185341957001, (188.935, 170.836, 139.685)), ('B', 84, u'LEU', 0.6708334545531562, (206.509, 145.181, 128.085)), ('B', 100, u'ILE', 0.8083831881901795, (220.171, 158.42600000000002, 129.804)), ('B', 108, u'THR', 0.5270409931926141, (199.785, 147.13899999999998, 119.256)), ('B', 122, u'ASN', 0.647378663816034, (215.677, 165.771, 124.753)), ('B', 132, u'GLU', 0.7120655247993053, (202.311, 154.40200000000002, 111.82499999999999)), ('B', 137, u'ASN', 0.7691311626808577, (211.58700000000002, 146.534, 117.92)), ('B', 142, u'GLY', 0.7026926676261546, (218.406, 152.784, 114.41300000000001)), ('B', 186, u'PHE', 0.7644692202988486, (218.97899999999998, 156.80200000000002, 138.737)), ('B', 207, u'HIS', 0.8445722587656925, (208.83100000000002, 163.512, 137.895)), ('B', 210, u'ILE', 0.8465106501086712, (215.197, 160.21299999999997, 144.36800000000002)), ('B', 214, u'ARG', 0.7905171724868086, (216.134, 151.966, 142.69299999999998)), ('B', 216, u'LEU', 0.7809014051569766, (210.431, 153.403, 143.839)), ('B', 223, u'LEU', 0.7583549967028307, (200.52800000000002, 162.303, 138.635)), ('B', 231, u'ILE', 0.6167776221607626, (194.05, 158.67299999999997, 118.476)), ('B', 265, u'TYR', 0.7403565961174048, (211.839, 150.389, 134.047)), ('B', 275, u'PHE', 0.7304581070051839, (190.853, 156.29899999999998, 147.198)), ('B', 285, u'ILE', 0.774362772995123, (197.26899999999998, 165.73499999999999, 146.92200000000003)), ('B', 295, u'PRO', 0.7296781963612896, (190.65200000000002, 146.835, 157.137)), ('B', 308, u'VAL', 0.8193056348076231, (190.813, 156.77499999999998, 164.04899999999998)), ('B', 340, u'GLU', 0.8191079941073466, (157.48600000000002, 118.46900000000001, 106.37299999999999)), ('B', 341, u'VAL', 0.8495815502696381, (159.126, 121.801, 105.288)), ('B', 346, u'ARG', 0.7674532708371977, (156.151, 116.537, 97.651)), ('B', 354, u'ASN', 0.8583466273669865, (152.51899999999998, 126.202, 100.045)), ('B', 357, u'ARG', 0.8408853876214841, (152.054, 127.471, 109.71600000000001)), ('B', 363, u'ALA', 0.8916323499917316, (162.132, 126.421, 116.706)), ('B', 375, u'SER', 0.8524466114159701, (172.845, 125.73700000000001, 98.631)), ('B', 377, u'PHE', 0.8507977472868291, (170.87, 130.42700000000002, 103.62799999999999)), ('B', 382, u'VAL', 0.8668614114658838, (167.783, 139.284, 112.474)), ('B', 401, u'VAL', 0.8560110585082638, (160.32600000000002, 124.91700000000002, 93.452)), ('B', 417, u'ASN', 0.8235992648258431, (158.642, 137.01299999999998, 87.283)), ('B', 429, u'PHE', 0.8557376609273343, (160.517, 141.44299999999998, 105.65899999999999)), ('B', 444, u'LYS', 0.806920211992513, (163.497, 114.04700000000001, 85.01400000000001)), ('B', 445, u'VAL', 0.7737679959786565, (164.45100000000002, 112.56, 81.592)), ('B', 449, u'TYR', 0.8578131063645662, (156.95000000000002, 119.799, 83.03)), ('B', 458, u'LYS', 0.7962634936445381, (147.725, 142.583, 84.96900000000001)), ('B', 466, u'ARG', 0.7842568985464593, (148.506, 134.51299999999998, 96.649)), ('B', 470, u'THR', 0.7576171973127248, (144.646, 130.16, 85.07499999999999)), ('B', 471, u'GLU', 0.7811943278939097, (142.51, 132.74399999999997, 83.139)), ('B', 476, u'GLY', 0.8094436766180441, (146.98000000000002, 143.19, 73.44700000000002)), ('B', 477, u'SER', 0.7890565235916127, (143.806, 144.15, 71.482)), ('B', 499, u'PRO', 0.8448531393510961, (168.76999999999998, 116.33, 84.32199999999999)), ('B', 513, u'LEU', 0.8831926777820239, (160.354, 131.74099999999999, 107.056)), ('B', 516, u'GLU', 0.8440496091267223, (155.259, 137.912, 113.853)), ('B', 519, u'HIS', 0.8107554556853652, (148.305, 140.556, 121.104)), ('B', 520, u'ALA', 0.8663025764267139, (148.017, 136.736, 121.164)), ('B', 530, u'SER', 0.8819474450176511, (170.318, 124.46900000000001, 130.442)), ('B', 544, u'ASN', 0.8790639867810045, (162.42800000000003, 128.9, 134.059)), ('B', 571, u'ASP', 0.7940099503950244, (156.97, 136.60299999999998, 150.305)), ('B', 583, u'GLU', 0.8782361203122298, (163.281, 117.307, 143.406)), ('B', 586, u'ASP', 0.8393524372716847, (165.702, 124.664, 149.447)), ('B', 597, u'VAL', 0.759962453520832, (186.97299999999998, 146.592, 162.517)), ('B', 598, u'ILE', 0.73855662394795, (188.118, 146.58, 166.162)), ('B', 649, u'CYS', 0.6726048378135456, (183.625, 135.531, 162.731)), ('B', 668, u'ALA', 0.7528364633137652, (177.24299999999997, 137.77299999999997, 173.503)), ('B', 694, u'ALA', 0.7413174336313767, (189.434, 138.915, 173.034)), ('B', 699, u'LEU', 0.7422582182025537, (180.74899999999997, 141.24099999999999, 185.667)), ('B', 714, u'ILE', 0.6634206613670918, (178.672, 148.012, 211.925)), ('B', 715, u'PRO', 0.7031516372908178, (180.978, 150.666, 210.32600000000002)), ('B', 738, u'CYS', 0.6853823302240055, (164.529, 176.11299999999997, 153.442)), ('B', 749, u'CYS', 0.6681291431041434, (163.91, 176.797, 141.692)), ('B', 781, u'VAL', 0.6168438165319907, (167.672, 173.893, 185.33100000000002)), ('B', 796, u'ASP', 0.7600745181382978, (184.277, 180.923, 208.21399999999997)), ('B', 800, u'PHE', 0.6723291754269712, (185.278, 173.38700000000003, 204.668)), ('B', 802, u'PHE', 0.705784779292932, (184.97299999999998, 176.0, 198.6)), ('B', 813, u'SER', 0.6014853390162037, (183.67, 185.168, 182.701)), ('B', 816, u'SER', 0.7024827966938985, (184.912, 179.055, 189.548)), ('B', 822, u'LEU', 0.6326079828466143, (184.74299999999997, 172.023, 182.694)), ('B', 827, u'THR', 0.6909987981436393, (184.64899999999997, 172.32600000000002, 172.15200000000002)), ('B', 856, u'ASN', 0.731840135674253, (173.842, 177.36, 152.493)), ('B', 858, u'LEU', 0.7048245932837063, (172.009, 176.76299999999998, 157.684)), ('B', 861, u'LEU', 0.7153175996880979, (171.661, 181.004, 166.985)), ('B', 870, u'ILE', 0.5339643887610257, (174.706, 180.811, 183.781)), ('B', 874, u'THR', 0.5334923733986904, (175.416, 178.575, 189.69299999999998)), ('B', 877, u'LEU', 0.5445926745199499, (172.595, 178.48600000000002, 194.01299999999998)), ('B', 881, u'THR', 0.6236991702713379, (173.423, 176.425, 199.68800000000002)), ('B', 890, u'ALA', 0.6744032977932247, (161.47, 176.701, 201.07899999999998)), ('B', 915, u'VAL', 0.5709064528587473, (179.44299999999998, 162.281, 215.186)), ('B', 923, u'ILE', 0.6352348397606131, (185.37, 165.648, 207.899)), ('B', 950, u'ASP', 0.7256020037029705, (178.672, 163.848, 172.318)), ('B', 962, u'LEU', 0.6508770768922963, (172.88100000000003, 168.17, 155.646)), ('B', 979, u'ASP', 0.7150514010725915, (174.625, 173.706, 135.61899999999997)), ('B', 980, u'ILE', 0.7156797339700974, (170.955, 172.79299999999998, 135.04899999999998)), ('B', 996, u'LEU', 0.712576281172098, (166.86700000000002, 168.32800000000003, 143.14299999999997)), ('B', 1002, u'GLN', 0.6998366693974315, (163.687, 164.82800000000003, 151.68800000000002)), ('B', 1009, u'THR', 0.6765266991648411, (162.843, 164.656, 162.07399999999998)), ('B', 1013, u'ILE', 0.6156517788285248, (163.73499999999999, 163.232, 168.289)), ('B', 1034, u'LEU', 0.6320296860761961, (167.997, 172.836, 197.191)), ('B', 1040, u'VAL', 0.6077771663628425, (168.91, 155.817, 197.042)), ('B', 1051, u'SER', 0.6040368696329635, (175.511, 168.74299999999997, 196.20999999999998)), ('B', 1082, u'CYS', 0.6357224714212738, (165.11599999999999, 139.95200000000003, 228.568)), ('B', 1106, u'GLN', 0.664468424598823, (173.21699999999998, 153.95100000000002, 216.236)), ('B', 1115, u'ILE', 0.7149020435276423, (171.785, 149.578, 227.61899999999997)), ('B', 1137, u'VAL', 0.7464289117111771, (169.22, 146.85800000000003, 231.687)), ('B', 1303, u'NAG', 0.8099353651466449, (160.939, 114.35499999999999, 133.937)), ('B', 1306, u'NAG', 0.7891856546997423, (194.529, 130.471, 174.905)), ('B', 1309, u'NAG', 0.7232458407521595, (186.967, 143.265, 210.289)), ('C', 27, u'ALA', 0.8223244925241479, (116.26400000000001, 127.894, 139.374)), ('C', 37, u'TYR', 0.793316077770077, (141.228, 127.279, 143.842)), ('C', 44, u'ARG', 0.8129130985643076, (153.04, 127.99600000000001, 151.121)), ('C', 56, u'LEU', 0.7759842852209285, (133.26299999999998, 132.74299999999997, 143.578)), ('C', 66, u'HIS', 0.8028098537512384, (119.624, 119.45700000000001, 134.797)), ('C', 81, u'ASN', 0.7580406771828456, (121.426, 123.393, 127.271)), ('C', 90, u'VAL', 0.7295926017950333, (132.89800000000002, 130.753, 135.62)), ('C', 96, u'GLU', 0.8117982808627877, (128.70499999999998, 113.70700000000001, 137.281)), ('C', 104, u'TRP', 0.8332241802830808, (131.738, 122.96700000000001, 126.88199999999999)), ('C', 126, u'VAL', 0.8483858856259294, (139.841, 115.637, 127.395)), ('C', 133, u'PHE', 0.8039946308237036, (133.255, 125.867, 113.97)), ('C', 134, u'GLN', 0.7645816915606742, (130.227, 125.68299999999999, 111.615)), ('C', 142, u'GLY', 0.7198631075192774, (123.765, 110.62899999999999, 123.43700000000001)), ('C', 143, u'VAL', 0.6844852757827292, (122.706, 109.59100000000001, 127.0)), ('C', 166, u'CYS', 0.7947368240599034, (141.95200000000003, 126.613, 113.17399999999999)), ('C', 186, u'PHE', 0.7250228608087853, (124.086, 111.17899999999999, 142.836)), ('C', 194, u'PHE', 0.7533225188276096, (137.29299999999998, 128.597, 133.812)), ('C', 198, u'ASP', 0.8322726366126652, (146.02100000000002, 138.316, 129.02200000000002)), ('C', 214, u'ARG', 0.812206952171095, (119.616, 118.861, 144.71899999999997)), ('C', 277, u'LEU', 0.8267953508049165, (143.61299999999997, 131.33800000000002, 152.572)), ('C', 285, u'ILE', 0.7935127593996434, (144.566, 125.107, 151.18800000000002)), ('C', 297, u'SER', 0.7364856281146105, (135.32800000000003, 138.165, 158.0)), ('C', 308, u'VAL', 0.8145095493283564, (140.46800000000002, 136.935, 166.82800000000003)), ('C', 309, u'GLU', 0.8253601576091665, (140.83200000000002, 138.07399999999998, 170.485)), ('C', 326, u'ILE', 0.8282049740556375, (123.09, 164.71699999999998, 137.994)), ('C', 340, u'GLU', 0.8287667257699529, (133.39800000000002, 179.141, 109.586)), ('C', 362, u'VAL', 0.8211265422451814, (127.324, 173.659, 121.94100000000002)), ('C', 383, u'SER', 0.7986051282445846, (142.736, 164.947, 126.02199999999999)), ('C', 400, u'PHE', 0.831167633696555, (146.71899999999997, 180.668, 109.46300000000001)), ('C', 403, u'ARG', 0.8679797747152415, (154.76899999999998, 175.48100000000002, 105.208)), ('C', 404, u'GLY', 0.8422849544968877, (154.568, 171.789, 106.29100000000001)), ('C', 418, u'ILE', 0.8256637049266904, (157.463, 181.131, 113.26100000000001)), ('C', 422, u'ASN', 0.8575356805155409, (154.863, 185.14899999999997, 113.842)), ('C', 423, u'TYR', 0.7962752703113952, (152.778, 183.14499999999998, 116.38799999999999)), ('C', 439, u'ASN', 0.8465614763341761, (148.315, 172.10899999999998, 98.756)), ('C', 444, u'LYS', 0.8255276190996976, (149.52800000000002, 177.64399999999998, 92.515)), ('C', 445, u'VAL', 0.8216150414548752, (151.893, 176.99, 89.538)), ('C', 453, u'TYR', 0.8808880701180686, (155.46, 185.39000000000001, 107.208)), ('C', 485, u'GLY', 0.8459460241274275, (168.933, 199.078, 101.057)), ('C', 500, u'THR', 0.8444673346827609, (155.097, 170.39100000000002, 92.74400000000001)), ('C', 542, u'ASN', 0.7612854495818139, (128.627, 167.459, 137.065)), ('C', 544, u'ASN', 0.7471414382314532, (129.90200000000002, 172.559, 133.568)), ('C', 559, u'PHE', 0.7593036054183282, (128.323, 185.21899999999997, 145.112)), ('C', 568, u'ASP', 0.7460883639642291, (137.248, 175.52700000000002, 150.61399999999998)), ('C', 571, u'ASP', 0.6867452985162772, (140.73, 173.854, 146.961)), ('C', 590, u'CYS', 0.785234552219035, (128.72, 162.374, 151.653)), ('C', 641, u'ASN', 0.7995305361937067, (119.242, 146.012, 166.841)), ('C', 664, u'ILE', 0.7478594207725426, (135.30700000000002, 146.354, 175.624)), ('C', 666, u'ILE', 0.697619141624906, (133.571, 152.154, 172.708)), ('C', 713, u'ALA', 0.6413003542133601, (139.869, 154.23399999999998, 212.23499999999999)), ('C', 763, u'LEU', 0.627749010964773, (170.32100000000003, 155.108, 158.03)), ('C', 767, u'LEU', 0.6564543647826107, (170.21899999999997, 152.156, 163.65200000000002)), ('C', 774, u'GLN', 0.5904583988119653, (169.945, 148.839, 173.997)), ('C', 800, u'PHE', 0.7204508924665731, (161.259, 133.899, 205.101)), ('C', 808, u'ASP', 0.8097744381528511, (168.45000000000002, 127.063, 190.82600000000002)), ('C', 888, u'PHE', 0.664554858294351, (175.309, 147.278, 199.814)), ('C', 898, u'PHE', 0.5983532294172109, (166.99800000000002, 139.009, 208.015)), ('C', 911, u'VAL', 0.6171091994336804, (155.348, 150.671, 212.477)), ('C', 936, u'ASP', 0.8367950973412237, (150.372, 130.55200000000002, 190.017)), ('C', 950, u'ASP', 0.764488026214999, (154.191, 143.584, 172.967)), ('C', 954, u'GLN', 0.7701593287936034, (156.077, 145.46200000000002, 167.634)), ('C', 979, u'ASP', 0.7036626273377261, (162.23499999999999, 141.501, 135.501)), ('C', 996, u'LEU', 0.6691535463280534, (161.82800000000003, 151.005, 143.18)), ('C', 1049, u'LEU', 0.6243867873402189, (159.10999999999999, 147.127, 202.58200000000002)), ('C', 1054, u'GLN', 0.6080294431290301, (163.88100000000003, 138.941, 188.448)), ('C', 1077, u'THR', 0.6771476297622525, (139.829, 160.463, 219.353)), ('C', 1094, u'VAL', 0.580757162104173, (147.505, 159.35500000000002, 218.38200000000003)), ('C', 1147, u'SER', 0.8650956458553802, (157.496, 154.52700000000002, 248.254))]
data['rota'] = [('A', ' 131 ', 'CYS', 0.012105804489692673, (142.985, 199.872, 113.95500000000001)), ('A', ' 331 ', 'ASN', 0.010534041764847768, (188.913, 186.297, 123.456)), ('A', ' 650 ', 'LEU', 0.10570480986251668, (169.355, 195.709, 166.49300000000002)), ('B', ' 106 ', 'PHE', 0.2614361671699187, (203.87799999999993, 152.13, 122.86200000000001)), ('B', ' 166 ', 'CYS', 0.012105804489692673, (201.34, 160.709, 112.332)), ('B', ' 235 ', 'ILE', 0.14085630885157624, (197.828, 149.36200000000005, 123.427)), ('B', ' 619 ', 'GLU', 0.2549481723685981, (182.583, 130.737, 155.071)), ('B', ' 801 ', 'ASN', 0.06278885643329855, (187.07, 175.186, 201.79)), ('C', '  96 ', 'GLU', 0.002070514054219322, (128.70499999999998, 113.707, 137.281)), ('C', ' 328 ', 'ARG', 0.24966760313797062, (124.00900000000004, 170.626, 135.005)), ('C', ' 901 ', 'GLN', 0.009117991853543254, (166.613, 144.04, 208.507)), ('C', '1118 ', 'ASP', 0.09249807294809867, (156.94599999999994, 159.441, 228.467))]
data['clusters'] = [('A', '108', 1, 'cablam Outlier', (153.7, 201.6, 121.5)), ('A', '109', 1, 'Bond angle:C', (154.433, 204.434, 118.93400000000001)), ('A', '110', 1, 'Bond angle:N:CA', (150.601, 205.14299999999997, 118.91100000000002)), ('A', '111', 1, 'Dihedral angle:CA:C', (150.83700000000002, 206.313, 115.226)), ('A', '112', 1, 'Dihedral angle:N:CA\ncablam Outlier', (150.29, 204.341, 111.985)), ('A', '115', 1, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (148.905, 199.076, 116.32)), ('A', '129', 1, 'side-chain clash', (138.514, 201.153, 113.92)), ('A', '130', 1, 'Dihedral angle:CA:C', (142.196, 198.515, 117.44800000000001)), ('A', '1302', 1, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (145.516, 202.446, 108.28)), ('A', '131', 1, 'Rotamer\nside-chain clash\nDihedral angle:N:CA\nsmoc Outlier', (142.985, 199.872, 113.955)), ('A', '132', 1, 'Dihedral angle:CB:CG:CD:OE1', (146.54899999999998, 200.98100000000002, 113.002)), ('A', '133', 1, 'Dihedral angle:CA:C\nBond angle:CA:CB:CG', (145.547, 204.505, 114.088)), ('A', '134', 1, 'Dihedral angle:N:CA', (146.94299999999998, 207.976, 113.44600000000001)), ('A', '136', 1, 'smoc Outlier', (145.70399999999998, 213.843, 116.694)), ('A', '165', 1, 'side-chain clash\nDihedral angle:CA:C', (142.39000000000001, 197.503, 110.05499999999999)), ('A', '166', 1, 'side-chain clash\nRamachandran\nDihedral angle:N:CA\nBond angle:C:CA:CB', (140.121, 198.029, 113.10499999999999)), ('A', '167', 1, 'side-chain clash', (143.938, 195.443, 111.708)), ('A', '220', 2, 'cablam CA Geom Outlier\nsmoc Outlier', (139.6, 200.0, 151.5)), ('A', '293', 2, 'cablam CA Geom Outlier', (155.5, 197.3, 152.6)), ('A', '294', 2, 'Bond angle:CA:CB:CG', (157.33800000000002, 197.159, 155.995)), ('A', '297', 2, 'smoc Outlier', (153.601, 193.565, 157.04299999999998)), ('A', '31', 2, 'smoc Outlier', (147.783, 205.829, 147.261)), ('A', '34', 2, 'Planar group:CD:NE:CZ:NH1:NH2', (143.80100000000002, 201.83700000000002, 147.20999999999998)), ('A', '58', 2, 'Bond angle:CA:CB:CG', (150.565, 200.196, 149.485)), ('A', '186', 3, 'smoc Outlier', (133.536, 216.03, 143.997)), ('A', '188', 3, 'Dihedral angle:CA:C', (132.19, 210.01299999999998, 143.18)), ('A', '189', 3, 'Dihedral angle:N:CA', (135.49, 208.142, 143.003)), ('A', '95', 3, 'Dihedral angle:CA:C', (137.62, 212.131, 141.931)), ('A', '96', 3, 'Dihedral angle:N:CA', (134.534, 213.2, 140.11299999999997)), ('A', '99', 3, 'cablam Outlier', (132.5, 212.0, 134.2)), ('A', '122', 4, 'cablam Outlier', (129.8, 207.9, 124.8)), ('A', '123', 4, 'Ramachandran\ncablam Outlier', (127.57600000000005, 207.316, 127.92900000000002)), ('A', '125', 4, 'Dihedral angle:CA:C', (128.025, 202.771, 125.387)), ('A', '126', 4, 'Dihedral angle:N:CA', (131.71299999999997, 201.99800000000002, 125.776)), ('A', '1301', 4, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (125.227, 209.003, 122.488)), ('A', '270', 5, 'smoc Outlier', (151.251, 197.92600000000002, 139.208)), ('A', '86', 5, 'smoc Outlier', (152.252, 201.977, 130.964)), ('A', '88', 5, 'cablam Outlier', (153.5, 196.2, 133.4)), ('A', '90', 5, 'Dihedral angle:CA:C', (148.259, 200.83700000000002, 135.48700000000002)), ('A', '91', 5, 'Dihedral angle:N:CA', (145.917, 201.732, 138.303)), ('A', '1039', 6, 'smoc Outlier', (160.88600000000002, 165.795, 197.287)), ('A', '1041', 6, 'Bond angle:CA:CB:CG', (160.101, 171.724, 194.79399999999998)), ('A', '1043', 6, 'cablam Outlier', (155.0, 170.1, 194.8)), ('A', '1064', 6, 'Bond angle:CB:CG:CD2', (149.518, 172.29899999999998, 195.995)), ('A', '1065', 6, 'smoc Outlier', (149.19899999999998, 173.35700000000003, 199.665)), ('A', '1029', 7, 'smoc Outlier', (148.89600000000002, 162.19899999999998, 191.834)), ('A', '1032', 7, 'Dihedral angle:CA:C', (151.491, 164.2, 196.497)), ('A', '1033', 7, 'Dihedral angle:N:CA\nsmoc Outlier', (147.68200000000002, 163.798, 196.347)), ('A', '327', 7, 'side-chain clash', (143.791, 162.038, 191.096)), ('A', '531', 7, 'side-chain clash', (143.791, 162.038, 191.096)), ('A', '1058', 8, 'Bond angle:CB:CG:CD2', (143.011, 167.671, 178.07399999999998)), ('A', '731', 8, 'Dihedral angle:CA:C', (145.697, 164.87, 173.041)), ('A', '732', 8, 'Dihedral angle:N:CA', (142.58, 165.107, 170.866)), ('A', '774', 8, 'smoc Outlier', (145.287, 158.963, 175.02100000000002)), ('A', '948', 8, 'smoc Outlier', (146.68, 173.147, 177.997)), ('A', '403', 9, 'Dihedral angle:CD:NE:CZ:NH1', (169.45800000000003, 154.283, 106.331)), ('A', '406', 9, 'smoc Outlier', (168.82500000000002, 153.336, 111.88)), ('A', '408', 9, 'Dihedral angle:CD:NE:CZ:NH1', (166.839, 156.041, 115.98)), ('A', '410', 9, 'smoc Outlier', (172.127, 157.023, 117.154)), ('A', '565', 10, 'Bond angle:CA:CB:CG', (188.106, 176.364, 138.82000000000002)), ('A', '577', 10, 'smoc Outlier', (190.572, 181.484, 136.728)), ('A', '581', 10, 'Dihedral angle:CA:C', (193.899, 187.222, 132.11299999999997)), ('A', '582', 10, 'Dihedral angle:N:CA', (194.863, 184.14499999999998, 134.162)), ('A', '617', 11, 'C-beta\nside-chain clash\nBond angle:CA:CB:SG\nBond angle:C:CA:CB\nBond length:N:CA', (176.07899999999998, 197.05, 161.65)), ('A', '619', 11, 'smoc Outlier', (177.72299999999998, 194.88800000000003, 156.909)), ('A', '620', 11, 'side-chain clash', (174.198, 196.266, 160.859)), ('A', '644', 11, 'side-chain clash', (176.169, 195.857, 164.351)), ('A', '1305', 12, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (194.034, 187.29399999999998, 122.68499999999999)), ('A', '329', 12, 'Bond angle:CA:CB:CG\nsmoc Outlier', (184.834, 184.025, 127.724)), ('A', '331', 12, 'Rotamer', (188.913, 186.297, 123.456)), ('A', '1094', 13, 'smoc Outlier', (168.781, 173.72899999999998, 217.753)), ('A', '1107', 13, 'Dihedral angle:CD:NE:CZ:NH1', (164.347, 174.21099999999998, 213.518)), ('A', '1109', 13, 'cablam Outlier', (159.3, 177.6, 214.0)), ('A', '1080', 14, 'smoc Outlier', (176.586, 172.063, 221.865)), ('A', '1133', 14, 'smoc Outlier', (179.35800000000003, 177.464, 224.865)), ('A', '1315', 14, 'Planar group:C2:C7:C8:N2:O7', (182.35600000000002, 180.136, 227.212)), ('A', '718', 15, 'Dihedral angle:CA:C', (154.27499999999998, 180.93800000000002, 208.596)), ('A', '719', 15, 'Dihedral angle:N:CA', (152.026, 181.314, 205.564)), ('A', '926', 15, 'Bond angle:OE1:CD:NE2', (145.23399999999998, 181.32700000000003, 205.51899999999998)), ('A', '962', 16, 'smoc Outlier', (147.68800000000002, 168.866, 156.671)), ('A', '965', 16, 'Bond angle:OE1:CD:NE2', (148.55700000000002, 170.666, 151.618)), ('A', '967', 16, 'smoc Outlier', (145.597, 172.66299999999998, 147.71499999999997)), ('A', '1083', 17, 'Bond angle:CB:CG:CD2\ncablam Outlier', (177.51899999999998, 171.599, 231.839)), ('A', '1084', 17, 'cablam Outlier', (179.5, 169.5, 234.4)), ('A', '1137', 17, 'smoc Outlier', (171.221, 172.463, 231.947)), ('A', '1018', 18, 'smoc Outlier', (152.277, 164.277, 176.099)), ('A', '1019', 18, 'smoc Outlier', (152.978, 160.736, 177.459)), ('A', '1022', 18, 'smoc Outlier', (150.869, 162.089, 181.61299999999997)), ('A', '394', 19, 'smoc Outlier', (186.91299999999998, 170.59, 122.607)), ('A', '516', 19, 'Dihedral angle:CB:CG:CD:OE1\nBond angle:C:CA:CB', (183.43200000000002, 167.60399999999998, 126.23400000000001)), ('A', '517', 19, 'smoc Outlier', (181.697, 170.035, 128.634)), ('A', '666', 20, 'cablam Outlier', (166.6, 188.5, 171.6)), ('A', '667', 20, 'cablam Outlier', (169.6, 186.4, 172.6)), ('A', '1072', 21, 'Dihedral angle:CB:CG:CD:OE1', (162.51, 185.257, 210.82500000000002)), ('A', '1313', 21, 'Planar group:C2:C7:C8:N2:O7', (164.98600000000002, 190.095, 210.129)), ('A', '347', 22, 'Bond angle:CA:CB:CG', (180.994, 161.134, 104.524)), ('A', '401', 22, 'smoc Outlier', (175.751, 157.85100000000003, 106.21700000000001)), ('A', '390', 23, 'smoc Outlier', (178.148, 177.778, 126.71100000000001)), ('A', '545', 23, 'smoc Outlier', (179.15, 179.345, 130.532)), ('A', '1098', 24, 'cablam Outlier', (168.4, 186.0, 222.8)), ('A', '1101', 24, 'Bond angle:CB:CG:CD2', (169.57399999999998, 183.41899999999998, 227.82200000000003)), ('A', '913', 25, 'smoc Outlier', (152.006, 169.311, 215.871)), ('A', '917', 25, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (146.442, 173.059, 217.23399999999998)), ('A', '416', 26, 'Dihedral angle:CA:C', (170.607, 147.105, 117.112)), ('A', '417', 26, 'Dihedral angle:N:CA', (173.24699999999999, 146.60899999999998, 114.368)), ('A', '372', 27, 'smoc Outlier', (164.818, 174.34, 108.043)), ('A', '373', 27, 'cablam Outlier', (166.8, 171.5, 106.4)), ('A', '1122', 28, 'Dihedral angle:CA:C', (175.33800000000002, 163.972, 226.253)), ('A', '1123', 28, 'Dihedral angle:N:CA\ncablam Outlier', (178.38700000000003, 162.94299999999998, 224.24499999999998)), ('A', '1126', 29, 'Dihedral angle:CA:C', (183.782, 169.58700000000002, 225.99200000000002)), ('A', '1127', 29, 'Dihedral angle:N:CA', (187.319, 169.786, 224.49800000000002)), ('A', '796', 30, 'Bond angle:CA:CB:CG\nsmoc Outlier', (133.033, 169.57399999999998, 209.994)), ('A', '797', 30, 'cablam Outlier', (136.6, 169.9, 208.6)), ('A', '363', 31, 'Dihedral angle:CA:C', (180.74699999999999, 178.625, 117.2)), ('A', '364', 31, 'Dihedral angle:N:CA', (177.23399999999998, 179.76899999999998, 116.35)), ('A', '901', 32, 'smoc Outlier', (145.224, 164.936, 209.602)), ('A', '905', 32, 'Planar group:CD:NE:CZ:NH1:NH2', (151.099, 166.731, 207.748)), ('A', '465', 33, 'smoc Outlier', (185.053, 152.364, 119.65799999999999)), ('A', '466', 33, 'Dihedral angle:CD:NE:CZ:NH1', (185.87, 152.295, 115.895)), ('A', '557', 34, 'smoc Outlier', (194.04899999999998, 179.91, 145.465)), ('A', '559', 34, 'Bond angle:CA:CB:CG', (195.71299999999997, 176.336, 140.954)), ('A', '277', 35, 'smoc Outlier', (143.79399999999998, 189.268, 151.287)), ('A', '49', 35, 'Bond angle:CB:CG:CD2', (144.467, 184.207, 151.162)), ('A', '479', 36, 'Dihedral angle:CA:C', (187.477, 128.394, 111.238)), ('A', '480', 36, 'Dihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (187.271, 130.48100000000002, 108.053)), ('A', '940', 37, 'Dihedral angle:CA:C', (140.526, 187.032, 185.91299999999998)), ('A', '941', 37, 'Dihedral angle:N:CA', (143.51399999999998, 185.756, 183.91)), ('A', '353', 38, 'cablam Outlier', (182.9, 157.0, 110.7)), ('A', '354', 38, 'smoc Outlier', (184.90800000000002, 160.27399999999997, 110.45400000000001)), ('B', '105', 1, 'side-chain clash', (206.406, 151.481, 120.044)), ('B', '106', 1, 'Rotamer\nBond angle:CA:CB:CG', (203.87800000000001, 152.13, 122.862)), ('B', '108', 1, 'cablam Outlier\nsmoc Outlier', (199.8, 147.1, 119.3)), ('B', '110', 1, 'side-chain clash\ncablam Outlier', (206.406, 151.481, 120.044)), ('B', '186', 1, 'smoc Outlier', (218.97899999999998, 156.80200000000002, 138.737)), ('B', '213', 1, 'Dihedral angle:CA:C', (218.287, 152.903, 145.706)), ('B', '214', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (216.134, 151.966, 142.69299999999998)), ('B', '216', 1, 'cablam Outlier\nsmoc Outlier', (210.4, 153.4, 143.8)), ('B', '217', 1, 'Dihedral angle:CA:C', (211.048, 155.102, 147.252)), ('B', '218', 1, 'Dihedral angle:N:CA', (208.083, 155.503, 149.60999999999999)), ('B', '223', 1, 'smoc Outlier', (200.52800000000002, 162.303, 138.635)), ('B', '235', 1, 'Rotamer\nRamachandran', (197.828, 149.36200000000005, 123.427)), ('B', '238', 1, 'Bond angle:CA:CB:CG', (205.572, 148.972, 124.829)), ('B', '269', 1, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (198.349, 147.315, 136.102)), ('B', '293', 1, 'cablam CA Geom Outlier', (194.2, 147.8, 150.9)), ('B', '33', 1, 'cablam Outlier', (202.4, 154.6, 147.9)), ('B', '34', 1, 'cablam CA Geom Outlier', (202.7, 155.8, 144.3)), ('B', '35', 1, 'Dihedral angle:CA:C', (200.51, 155.726, 141.131)), ('B', '36', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (197.76999999999998, 158.102, 142.35800000000003)), ('B', '37', 1, 'smoc Outlier', (196.79299999999998, 160.89800000000002, 139.914)), ('B', '58', 1, 'Bond angle:CA:CB:CG', (199.046, 150.505, 147.108)), ('B', '83', 1, 'Dihedral angle:CA:C', (209.651, 144.538, 125.979)), ('B', '84', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (206.509, 145.181, 128.085)), ('B', '86', 1, 'cablam Outlier', (200.1, 146.4, 128.7)), ('B', '87', 1, 'Ramachandran\nDihedral angle:CA:C\ncablam Outlier', (196.996, 144.185, 129.10899999999998)), ('B', '88', 1, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (194.48000000000002, 146.15200000000002, 131.291)), ('B', '89', 1, 'Dihedral angle:CA:C', (195.563, 149.848, 131.67399999999998)), ('B', '90', 1, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (198.967, 150.78, 133.042)), ('B', '91', 1, 'Dihedral angle:N:CA', (201.137, 152.594, 135.512)), ('B', '1069', 2, 'Dihedral angle:CA:C', (180.537, 153.966, 205.77899999999997)), ('B', '1070', 2, 'Dihedral angle:N:CA', (184.069, 152.621, 205.52800000000002)), ('B', '1082', 2, 'smoc Outlier', (165.11599999999999, 139.95200000000003, 228.568)), ('B', '1083', 2, 'Bond angle:CB:CG:CD2', (165.24499999999998, 141.89000000000001, 231.85500000000002)), ('B', '1091', 2, 'Dihedral angle:CA:C', (164.572, 152.815, 220.901)), ('B', '1092', 2, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\ncablam Outlier', (166.47299999999998, 153.678, 217.737)), ('B', '1105', 2, 'Dihedral angle:CA:C', (174.554, 151.68, 218.941)), ('B', '1106', 2, 'Dihedral angle:N:CA\nsmoc Outlier', (173.21699999999998, 153.95100000000002, 216.236)), ('B', '1109', 2, 'cablam Outlier', (178.3, 154.4, 213.0)), ('B', '1113', 2, 'Bond angle:OE1:CD:NE2', (176.187, 153.05700000000002, 224.809)), ('B', '1115', 2, 'smoc Outlier', (171.785, 149.578, 227.61899999999997)), ('B', '1137', 2, 'smoc Outlier', (169.22, 146.85800000000003, 231.687)), ('B', '714', 2, 'smoc Outlier', (178.672, 148.012, 211.925)), ('B', '715', 2, 'smoc Outlier', (180.978, 150.666, 210.32600000000002)), ('B', '718', 2, 'Dihedral angle:CA:C', (183.393, 156.94, 207.35200000000003)), ('B', '719', 2, 'Dihedral angle:N:CA', (184.681, 158.70399999999998, 204.24099999999999)), ('B', '923', 2, 'smoc Outlier', (185.37, 165.648, 207.899)), ('B', '926', 2, 'Bond angle:OE1:CD:NE2', (188.16899999999998, 164.596, 203.795)), ('B', '1034', 3, 'smoc Outlier', (167.997, 172.836, 197.191)), ('B', '1054', 3, 'Bond angle:OE1:CD:NE2', (178.903, 173.80700000000002, 188.39800000000002)), ('B', '273', 3, 'side-chain clash', (171.384, 175.568, 190.282)), ('B', '57', 3, 'side-chain clash', (171.384, 175.568, 190.282)), ('B', '780', 3, 'Dihedral angle:CB:CG:CD:OE1', (164.226, 175.11299999999997, 184.14399999999998)), ('B', '781', 3, 'smoc Outlier', (167.672, 173.893, 185.33100000000002)), ('B', '870', 3, 'smoc Outlier', (174.706, 180.811, 183.781)), ('B', '874', 3, 'smoc Outlier', (175.416, 178.575, 189.69299999999998)), ('B', '877', 3, 'smoc Outlier', (172.595, 178.48600000000002, 194.01299999999998)), ('B', '881', 3, 'smoc Outlier', (173.423, 176.425, 199.68800000000002)), ('B', '111', 4, 'cablam Outlier', (205.2, 148.0, 113.1)), ('B', '112', 4, 'Bond angle:C\ncablam CA Geom Outlier', (202.752, 149.22, 110.262)), ('B', '113', 4, 'Bond angle:N:CA', (198.88000000000002, 148.772, 109.94200000000001)), ('B', '130', 4, 'cablam Outlier', (201.8, 158.9, 116.8)), ('B', '1301', 4, 'Planar group:C2:C7:C8:N2:O7', (202.24599999999998, 152.672, 106.88499999999999)), ('B', '132', 4, 'smoc Outlier', (202.311, 154.40200000000002, 111.82499999999999)), ('B', '166', 4, 'Rotamer', (201.34, 160.709, 112.332)), ('B', '198', 5, 'cablam Outlier', (185.1, 155.6, 126.3)), ('B', '199', 5, 'Dihedral angle:CA:C', (186.265, 158.506, 123.989)), ('B', '200', 5, 'Dihedral angle:N:CA\nDihedral angle:CA:C\ncablam Outlier', (190.078, 158.42800000000003, 123.542)), ('B', '201', 5, 'Dihedral angle:N:CA', (193.242, 157.71599999999998, 125.55199999999999)), ('B', '228', 5, 'Dihedral angle:CA:C', (193.651, 162.85500000000002, 126.18299999999999)), ('B', '229', 5, 'Dihedral angle:N:CA', (195.047, 161.97899999999998, 122.76)), ('B', '231', 5, 'cablam Outlier\nsmoc Outlier', (194.1, 158.7, 118.5)), ('B', '539', 6, 'Dihedral angle:CA:C', (175.444, 130.001, 142.901)), ('B', '540', 6, 'Dihedral angle:N:CA', (173.537, 132.406, 140.71299999999997)), ('B', '541', 6, 'Dihedral angle:CA:C', (170.503, 130.474, 139.365)), ('B', '542', 6, 'Dihedral angle:N:CA', (167.533, 130.626, 137.012)), ('B', '544', 6, 'Ramachandran\ncablam Outlier\nsmoc Outlier', (162.428, 128.90000000000006, 134.059)), ('B', '545', 6, 'cablam Outlier', (162.1, 132.7, 134.7)), ('B', '549', 6, 'cablam CA Geom Outlier', (171.4, 134.1, 143.9)), ('B', '612', 7, 'side-chain clash', (182.58, 136.934, 160.062)), ('B', '613', 7, 'Bond angle:OE1:CD:NE2', (179.01399999999998, 139.617, 162.165)), ('B', '615', 7, 'side-chain clash', (182.121, 134.539, 161.087)), ('B', '617', 7, 'C-beta\nBond angle:C:CA:CB\nBond angle:CA:CB:SG\nBond angle:N:CA:CB', (184.54, 131.26999999999998, 160.14499999999998)), ('B', '619', 7, 'Rotamer', (182.583, 130.737, 155.071)), ('B', '620', 7, 'side-chain clash', (184.421, 135.027, 159.289)), ('B', '649', 7, 'side-chain clash\nsmoc Outlier', (182.121, 134.539, 161.087)), ('B', '1312', 8, 'Planar group:C2:C7:C8:N2:O7', (190.23899999999998, 176.664, 204.809)), ('B', '796', 8, 'smoc Outlier', (184.277, 180.923, 208.21399999999997)), ('B', '797', 8, 'cablam Outlier', (182.6, 177.7, 206.9)), ('B', '800', 8, 'Dihedral angle:CA:C\nsmoc Outlier', (185.278, 173.38700000000003, 204.668)), ('B', '801', 8, 'Rotamer\nDihedral angle:N:CA\ncablam Outlier', (187.07, 175.186, 201.79)), ('B', '802', 8, 'cablam Outlier\nsmoc Outlier', (185.0, 176.0, 198.6)), ('B', '265', 9, 'Dihedral angle:CA:C\nsmoc Outlier', (211.839, 150.389, 134.047)), ('B', '266', 9, 'Dihedral angle:N:CA', (208.66299999999998, 149.33700000000002, 135.88700000000003)), ('B', '61', 9, 'Dihedral angle:CA:C', (204.20299999999997, 144.24499999999998, 143.166)), ('B', '62', 9, 'Dihedral angle:N:CA', (205.46200000000002, 146.256, 140.195)), ('B', '66', 9, 'Bond angle:CB:CG:CD2', (216.405, 145.83100000000002, 133.112)), ('B', '1036', 10, 'cablam Outlier', (168.7, 166.6, 200.9)), ('B', '1043', 10, 'cablam Outlier', (172.9, 161.6, 194.1)), ('B', '1048', 10, 'Bond angle:CB:CG:CD2', (173.496, 161.94, 200.30200000000002)), ('B', '1051', 10, 'smoc Outlier', (175.511, 168.74299999999997, 196.20999999999998)), ('B', '1064', 10, 'Bond angle:CB:CG:CD2', (177.45600000000002, 165.177, 194.98200000000003)), ('B', '295', 11, 'smoc Outlier', (190.65200000000002, 146.835, 157.137)), ('B', '315', 11, 'Dihedral angle:CA:C', (183.075, 149.515, 157.70899999999997)), ('B', '316', 11, 'Dihedral angle:N:CA', (181.71299999999997, 147.157, 155.126)), ('B', '597', 11, 'smoc Outlier', (186.97299999999998, 146.592, 162.517)), ('B', '598', 11, 'smoc Outlier', (188.118, 146.58, 166.162)), ('B', '475', 12, 'cablam Outlier', (148.4, 140.7, 76.0)), ('B', '476', 12, 'smoc Outlier', (146.98000000000002, 143.19, 73.44700000000002)), ('B', '477', 12, 'smoc Outlier', (143.806, 144.15, 71.482)), ('B', '486', 12, 'cablam Outlier', (147.1, 135.7, 69.2)), ('B', '487', 12, 'C-beta', (147.784, 139.414, 71.772)), ('B', '1303', 13, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (160.939, 114.35499999999999, 133.937)), ('B', '581', 13, 'Dihedral angle:CA:C', (164.065, 115.93, 137.70999999999998)), ('B', '582', 13, 'Dihedral angle:N:CA', (161.349, 117.116, 140.054)), ('B', '583', 13, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (163.281, 117.307, 143.406)), ('B', '348', 14, 'Dihedral angle:CA:C', (154.753, 123.21900000000001, 95.54100000000001)), ('B', '349', 14, 'Dihedral angle:N:CA', (154.70899999999997, 124.845, 92.084)), ('B', '354', 14, 'Bond angle:CA:CB:CG\nsmoc Outlier', (152.51899999999998, 126.202, 100.045)), ('B', '401', 14, 'smoc Outlier', (160.32600000000002, 124.91700000000002, 93.452)), ('B', '122', 15, 'cablam CA Geom Outlier\nsmoc Outlier', (215.7, 165.8, 124.8)), ('B', '123', 15, 'Ramachandran\ncablam CA Geom Outlier', (217.56, 169.15, 124.59900000000002)), ('B', '125', 15, 'Dihedral angle:CA:C', (211.502, 169.599, 125.616)), ('B', '126', 15, 'Dihedral angle:N:CA', (209.17399999999998, 166.585, 125.663)), ('B', '1306', 16, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (194.529, 130.471, 174.905)), ('B', '655', 16, 'Bond angle:CB:CG:CD2', (191.539, 134.389, 172.525)), ('B', '694', 16, 'smoc Outlier', (189.434, 138.915, 173.034)), ('B', '444', 17, 'smoc Outlier', (163.497, 114.04700000000001, 85.01400000000001)), ('B', '445', 17, 'smoc Outlier', (164.45100000000002, 112.56, 81.592)), ('B', '499', 17, 'smoc Outlier', (168.76999999999998, 116.33, 84.32199999999999)), ('B', '513', 18, 'smoc Outlier', (160.354, 131.74099999999999, 107.056)), ('B', '515', 18, 'Bond angle:CA:CB:CG', (157.83200000000002, 135.929, 111.782)), ('B', '516', 18, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (155.259, 137.912, 113.853)), ('B', '449', 19, 'smoc Outlier', (156.95000000000002, 119.799, 83.03)), ('B', '496', 19, 'cablam Outlier', (160.5, 121.5, 82.2)), ('B', '340', 20, 'smoc Outlier', (157.48600000000002, 118.46900000000001, 106.37299999999999)), ('B', '341', 20, 'smoc Outlier', (159.126, 121.801, 105.288)), ('B', '1122', 21, 'Dihedral angle:CA:C', (159.393, 147.484, 226.453)), ('B', '1123', 21, 'Dihedral angle:N:CA\ncablam Outlier', (156.873, 145.252, 224.753)), ('B', '191', 22, 'Dihedral angle:CB:CG:CD:OE1', (206.177, 158.20499999999998, 136.314)), ('B', '207', 22, 'smoc Outlier', (208.83100000000002, 163.512, 137.895)), ('B', '519', 23, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (148.305, 140.556, 121.104)), ('B', '520', 23, 'smoc Outlier', (148.017, 136.736, 121.164)), ('B', '915', 24, 'smoc Outlier', (179.44299999999998, 162.281, 215.186)), ('B', '917', 24, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (181.101, 167.879, 215.836)), ('B', '363', 25, 'smoc Outlier', (162.132, 126.421, 116.706)), ('B', '365', 25, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (166.859, 127.468, 113.67899999999999)), ('B', '1009', 26, 'smoc Outlier', (162.843, 164.656, 162.07399999999998)), ('B', '1013', 26, 'smoc Outlier', (163.73499999999999, 163.232, 168.289)), ('B', '308', 27, 'smoc Outlier', (190.813, 156.77499999999998, 164.04899999999998)), ('B', '310', 27, 'cablam CA Geom Outlier', (189.4, 153.5, 169.8)), ('B', '100', 28, 'smoc Outlier', (220.171, 158.42600000000002, 129.804)), ('B', '98', 28, 'cablam CA Geom Outlier', (220.4, 162.7, 133.8)), ('B', '570', 29, 'cablam Outlier', (157.3, 137.6, 154.0)), ('B', '571', 29, 'Ramachandran\nsmoc Outlier', (156.96999999999994, 136.60300000000007, 150.305)), ('B', '707', 30, 'Dihedral angle:CA:C', (175.64499999999998, 136.24899999999997, 206.829)), ('B', '708', 30, 'Dihedral angle:N:CA', (174.41899999999998, 134.45800000000003, 209.95100000000002)), ('B', '856', 31, 'cablam Outlier\nsmoc Outlier', (173.8, 177.4, 152.5)), ('B', '858', 31, 'smoc Outlier', (172.009, 176.76299999999998, 157.684)), ('B', '979', 32, 'smoc Outlier', (174.625, 173.706, 135.61899999999997)), ('B', '980', 32, 'smoc Outlier', (170.955, 172.79299999999998, 135.04899999999998)), ('B', '962', 33, 'smoc Outlier', (172.88100000000003, 168.17, 155.646)), ('B', '965', 33, 'Bond angle:OE1:CD:NE2', (173.724, 166.142, 150.584)), ('B', '949', 34, 'Bond angle:OE1:CD:NE2', (181.031, 166.502, 173.829)), ('B', '950', 34, 'smoc Outlier', (178.672, 163.848, 172.318)), ('B', '470', 35, 'smoc Outlier', (144.646, 130.16, 85.07499999999999)), ('B', '471', 35, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (142.51, 132.74399999999997, 83.139)), ('C', '1058', 1, 'Bond angle:CB:CG:CD2\ncablam Outlier', (163.834, 142.19299999999998, 176.989)), ('C', '731', 1, 'Dihedral angle:CA:C', (164.63299999999998, 146.25, 171.92000000000002)), ('C', '732', 1, 'Dihedral angle:N:CA', (165.94299999999998, 143.602, 169.529)), ('C', '734', 1, 'Dihedral angle:CA:C', (168.415, 145.47, 164.304)), ('C', '735', 1, 'Dihedral angle:N:CA', (170.977, 146.62, 161.73)), ('C', '762', 1, 'C-beta\nBond angle:OE1:CD:NE2', (172.759, 158.10899999999998, 157.989)), ('C', '763', 1, 'smoc Outlier', (170.32100000000003, 155.108, 158.03)), ('C', '767', 1, 'smoc Outlier', (170.21899999999997, 152.156, 163.65200000000002)), ('C', '774', 1, 'smoc Outlier', (169.945, 148.839, 173.997)), ('C', '394', 2, 'side-chain clash', (136.245, 180.922, 127.409)), ('C', '516', 2, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (139.64399999999998, 179.698, 128.60899999999998)), ('C', '518', 2, 'Dihedral angle:CA:C', (138.77899999999997, 179.784, 133.765)), ('C', '519', 2, 'Dihedral angle:CA:C\nDihedral angle:N:CA\ncablam Outlier', (136.034, 179.94899999999998, 136.374)), ('C', '520', 2, 'Dihedral angle:N:CA', (133.692, 182.55200000000002, 134.912)), ('C', '559', 2, 'Bond angle:CA:CB:CG\nsmoc Outlier', (128.323, 185.21899999999997, 145.112)), ('C', '563', 2, 'Bond angle:OE1:CD:NE2', (131.786, 184.004, 140.11599999999999)), ('C', '565', 2, 'Bond angle:CA:CB:CG', (131.817, 178.508, 142.292)), ('C', '194', 3, 'smoc Outlier', (137.29299999999998, 128.597, 133.812)), ('C', '56', 3, 'smoc Outlier', (133.26299999999998, 132.74299999999997, 143.578)), ('C', '57', 3, 'side-chain clash', (128.97, 135.235, 146.112)), ('C', '60', 3, 'side-chain clash\nRamachandran\ncablam Outlier', (126.57000000000005, 133.958, 146.925)), ('C', '61', 3, 'Ramachandran\ncablam Outlier', (124.18300000000005, 132.321, 144.37)), ('C', '90', 3, 'Dihedral angle:CA:C\nsmoc Outlier', (132.89800000000002, 130.753, 135.62)), ('C', '91', 3, 'Dihedral angle:N:CA', (132.64899999999997, 128.17899999999997, 138.35800000000003)), ('C', '1032', 4, 'Dihedral angle:CA:C', (163.55700000000002, 150.167, 195.819)), ('C', '1033', 4, 'Dihedral angle:N:CA', (165.86, 147.153, 195.38600000000002)), ('C', '1034', 4, 'cablam Outlier', (169.0, 148.9, 196.8)), ('C', '1036', 4, 'cablam Outlier', (163.3, 151.5, 200.7)), ('C', '1043', 4, 'cablam Outlier', (156.8, 150.5, 194.5)), ('C', '1049', 4, 'smoc Outlier', (159.10999999999999, 147.127, 202.58200000000002)), ('C', '1064', 4, 'Bond angle:CB:CG:CD2', (157.448, 144.511, 195.51299999999998)), ('C', '308', 5, 'side-chain clash\nsmoc Outlier', (137.431, 136.172, 165.386)), ('C', '309', 5, 'smoc Outlier', (140.83200000000002, 138.07399999999998, 170.485)), ('C', '598', 5, 'Dihedral angle:CA:C', (133.132, 144.791, 168.595)), ('C', '599', 5, 'side-chain clash\nBond angle:CA:C\nDihedral angle:N:CA', (134.121, 141.17899999999997, 169.09)), ('C', '600', 5, 'Bond angle:N', (133.648, 138.777, 172.12800000000001)), ('C', '601', 5, 'side-chain clash', (135.6, 138.679, 169.285)), ('C', '602', 5, 'side-chain clash', (137.431, 136.172, 165.386)), ('C', '326', 6, 'smoc Outlier', (123.09, 164.71699999999998, 137.994)), ('C', '328', 6, 'Rotamer', (124.00900000000004, 170.626, 135.005)), ('C', '531', 6, 'Dihedral angle:CA:C', (119.22, 166.225, 134.077)), ('C', '532', 6, 'Dihedral angle:N:CA', (116.691, 167.51, 136.584)), ('C', '542', 6, 'smoc Outlier', (128.627, 167.459, 137.065)), ('C', '544', 6, 'smoc Outlier', (129.90200000000002, 172.559, 133.568)), ('C', '1069', 7, 'Dihedral angle:CA:C', (146.863, 147.48800000000003, 206.83100000000002)), ('C', '1070', 7, 'Dihedral angle:N:CA', (143.93, 145.059, 206.97)), ('C', '718', 7, 'Dihedral angle:CA:C', (148.162, 143.623, 208.379)), ('C', '719', 7, 'Dihedral angle:N:CA', (148.70999999999998, 141.65800000000002, 205.16299999999998)), ('C', '926', 7, 'Bond angle:OE1:CD:NE2', (152.27899999999997, 135.666, 204.69)), ('C', '1310', 8, 'Planar group:C2:C7:C8:N2:O7', (164.23299999999998, 127.777, 203.815)), ('C', '797', 8, 'cablam CA Geom Outlier', (166.4, 133.9, 206.9)), ('C', '800', 8, 'smoc Outlier', (161.259, 133.899, 205.101)), ('C', '898', 8, 'smoc Outlier', (166.99800000000002, 139.009, 208.015)), ('C', '901', 8, 'Rotamer', (166.613, 144.04, 208.507)), ('C', '1303', 9, 'Planar group:C2:C7:C8:N2:O7', (115.65899999999999, 175.206, 133.88000000000002)), ('C', '581', 9, 'Dihedral angle:CA:C', (118.67199999999998, 178.73899999999998, 137.38100000000003)), ('C', '582', 9, 'Dihedral angle:N:CA', (121.293, 181.01, 138.933)), ('C', '583', 9, 'Dihedral angle:CB:CG:CD:OE1', (120.834, 180.102, 142.66899999999998)), ('C', '111', 10, 'Bond angle:C\ncablam Outlier', (129.383, 129.96800000000002, 115.35499999999999)), ('C', '112', 10, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (131.963, 130.185, 112.44500000000001)), ('C', '133', 10, 'smoc Outlier', (133.255, 125.867, 113.97)), ('C', '134', 10, 'smoc Outlier', (130.227, 125.68299999999999, 111.615)), ('C', '418', 11, 'smoc Outlier', (157.463, 181.131, 113.26100000000001)), ('C', '422', 11, 'smoc Outlier', (154.863, 185.14899999999997, 113.842)), ('C', '423', 11, 'smoc Outlier', (152.778, 183.14499999999998, 116.38799999999999)), ('C', '453', 11, 'smoc Outlier', (155.46, 185.39000000000001, 107.208)), ('C', '612', 12, 'side-chain clash', (126.662, 153.645, 162.586)), ('C', '613', 12, 'Bond angle:OE1:CD:NE2', (131.999, 156.13299999999998, 164.166)), ('C', '617', 12, 'C-beta\nBond angle:C:CA:CB\nBond angle:N:CA:CB\nBond angle:CA:CB:SG', (121.526, 155.89100000000002, 162.466)), ('C', '649', 12, 'side-chain clash', (126.662, 153.645, 162.586)), ('C', '664', 13, 'smoc Outlier', (135.30700000000002, 146.354, 175.624)), ('C', '666', 13, 'cablam Outlier\nsmoc Outlier', (133.6, 152.2, 172.7)), ('C', '667', 13, 'cablam Outlier', (133.9, 155.9, 173.6)), ('C', '124', 14, 'cablam Outlier', (139.5, 108.4, 126.5)), ('C', '125', 14, 'cablam CA Geom Outlier', (140.6, 111.9, 127.7)), ('C', '126', 14, 'smoc Outlier', (139.841, 115.637, 127.395)), ('C', '293', 15, 'cablam CA Geom Outlier', (131.3, 138.5, 153.4)), ('C', '297', 15, 'smoc Outlier', (135.32800000000003, 138.165, 158.0)), ('C', '298', 15, 'Dihedral angle:CB:CG:CD:OE1', (136.656, 141.721, 157.501)), ('C', '403', 16, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (154.76899999999998, 175.48100000000002, 105.208)), ('C', '404', 16, 'smoc Outlier', (154.568, 171.789, 106.29100000000001)), ('C', '277', 17, 'smoc Outlier', (143.61299999999997, 131.33800000000002, 152.572)), ('C', '285', 17, 'smoc Outlier', (144.566, 125.107, 151.18800000000002)), ('C', '935', 18, 'Bond angle:OE1:CD:NE2', (154.132, 131.166, 190.61499999999998)), ('C', '936', 18, 'smoc Outlier', (150.372, 130.55200000000002, 190.017)), ('C', '1109', 19, 'cablam Outlier', (148.8, 149.4, 213.9)), ('C', '911', 19, 'smoc Outlier', (155.348, 150.671, 212.477)), ('C', '1082', 20, 'Dihedral angle:CA:C', (144.176, 168.005, 229.548)), ('C', '1083', 20, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA', (145.79399999999998, 167.08, 232.846)), ('C', '197', 21, 'Bond angle:C', (143.85700000000003, 136.39600000000002, 131.607)), ('C', '198', 21, 'C-beta\nRamachandran\nBond angle:CA:CB:CG\nBond angle:N:CA\ncablam Outlier\nsmoc Outlier', (146.02100000000002, 138.316, 129.02200000000002)), ('C', '707', 22, 'Dihedral angle:CA:C', (134.031, 160.814, 208.818)), ('C', '708', 22, 'Dihedral angle:N:CA', (133.23899999999998, 162.85500000000002, 211.942)), ('C', '985', 23, 'Dihedral angle:CA:C', (166.536, 148.575, 127.477)), ('C', '986', 23, 'Dihedral angle:N:CA', (168.963, 150.677, 129.59)), ('C', '444', 24, 'smoc Outlier', (149.52800000000002, 177.64399999999998, 92.515)), ('C', '445', 24, 'smoc Outlier', (151.893, 176.99, 89.538)), ('C', '220', 25, 'cablam CA Geom Outlier', (135.4, 123.1, 151.8)), ('C', '34', 25, 'cablam CA Geom Outlier', (132.8, 126.3, 147.6)), ('C', '641', 26, 'smoc Outlier', (119.242, 146.012, 166.841)), ('C', '643', 26, 'Bond angle:CA:CB:CG', (121.43400000000001, 152.202, 169.097)), ('C', '568', 27, 'smoc Outlier', (137.248, 175.52700000000002, 150.61399999999998)), ('C', '571', 27, 'smoc Outlier', (140.73, 173.854, 146.961)), ('C', '461', 28, 'Dihedral angle:CA:C', (156.88000000000002, 188.092, 120.363)), ('C', '462', 28, 'Dihedral angle:N:CA', (155.01, 187.76299999999998, 123.67799999999998)), ('C', '228', 29, 'Dihedral angle:CA:C', (147.093, 127.076, 131.05700000000002)), ('C', '229', 29, 'Dihedral angle:N:CA', (146.38100000000003, 127.32, 127.315)), ('C', '553', 30, 'Dihedral angle:CA:C', (121.468, 172.10999999999999, 149.26999999999998)), ('C', '554', 30, 'Dihedral angle:N:CA', (120.394, 175.748, 148.941)), ('C', '950', 31, 'smoc Outlier', (154.191, 143.584, 172.967)), ('C', '954', 31, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (156.077, 145.46200000000002, 167.634)), ('C', '40', 32, 'Bond angle:CA:CB:CG', (149.226, 130.651, 141.797)), ('C', '41', 32, 'cablam Outlier', (151.8, 127.8, 141.3)), ('C', '888', 33, 'smoc Outlier', (175.309, 147.278, 199.814)), ('C', '891', 33, 'cablam Outlier', (179.1, 151.1, 200.4)), ('C', '142', 34, 'smoc Outlier', (123.765, 110.62899999999999, 123.43700000000001)), ('C', '143', 34, 'smoc Outlier', (122.706, 109.59100000000001, 127.0))]
data['rama'] = [('A', ' 123 ', 'ALA', 0.02422829009256195, (127.57600000000005, 207.316, 127.92900000000002)), ('A', ' 166 ', 'CYS', 0.0079374315980634, (140.121, 198.029, 113.105)), ('A', ' 600 ', 'PRO', 0.04237958502986489, (154.927, 194.25800000000007, 171.106)), ('B', '  87 ', 'ASN', 0.016498878887998242, (196.996, 144.185, 129.109)), ('B', ' 123 ', 'ALA', 0.0153090335504722, (217.56, 169.15, 124.59900000000002)), ('B', ' 235 ', 'ILE', 0.022101734259437417, (197.828, 149.36200000000005, 123.427)), ('B', ' 544 ', 'ASN', 0.0319218049710825, (162.428, 128.90000000000006, 134.059)), ('B', ' 571 ', 'ASP', 0.028573140959551456, (156.96999999999994, 136.60300000000007, 150.305)), ('B', ' 745 ', 'ASP', 0.046021384216946536, (169.73199999999994, 182.368, 144.616)), ('C', '  60 ', 'SER', 0.005837222171000955, (126.57000000000005, 133.958, 146.925)), ('C', '  61 ', 'ASN', 0.02060303288609384, (124.18300000000005, 132.321, 144.37)), ('C', ' 112 ', 'SER', 0.0, (131.963, 130.185, 112.445)), ('C', ' 198 ', 'ASP', 0.01974881865569028, (146.021, 138.316, 129.022))]
data['cablam'] = [('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (136.8, 184.4, 139.7)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (153.5, 196.2, 133.4)), ('A', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS---', (132.5, 212.0, 134.2)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (153.7, 201.6, 121.5)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'turn\n-STTS', (150.3, 204.3, 112.0)), ('A', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (129.8, 207.9, 124.8)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (127.6, 207.3, 127.9)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\nS-SS-', (142.1, 206.8, 152.9)), ('A', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (182.9, 157.0, 110.7)), ('A', '373', 'SER', 'check CA trace,carbonyls, peptide', 'turn\n-TT-S', (166.8, 171.5, 106.4)), ('A', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--TT', (187.3, 130.5, 108.1)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (185.1, 193.6, 145.2)), ('A', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (154.9, 194.3, 171.1)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.6, 188.5, 171.6)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (169.6, 186.4, 172.6)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (136.6, 169.9, 208.6)), ('A', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (144.6, 150.4, 201.4)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (155.0, 170.1, 194.8)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (177.5, 171.6, 231.8)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (179.5, 169.5, 234.4)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (165.3, 167.3, 217.8)), ('A', '1098', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (168.4, 186.0, 222.8)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (159.3, 177.6, 214.0)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (178.4, 162.9, 224.2)), ('A', '214', 'ARG', 'check CA trace', 'bend\n-SSSS', (141.8, 216.9, 148.0)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (139.6, 200.0, 151.5)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (155.5, 197.3, 152.6)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (176.2, 185.6, 141.6)), ('A', '592', 'PHE', 'check CA trace', 'strand\n-SEEE', (173.2, 188.1, 153.7)), ('A', '856', 'ASN', 'check CA trace', 'turn\n-TTTE', (138.7, 165.4, 153.4)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (202.4, 154.6, 147.9)), ('B', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (200.1, 146.4, 128.7)), ('B', '87', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (197.0, 144.2, 129.1)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (199.8, 147.1, 119.3)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (204.7, 148.9, 116.8)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (205.2, 148.0, 113.1)), ('B', '130', 'VAL', ' beta sheet', ' \nEE---', (201.8, 158.9, 116.8)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (185.1, 155.6, 126.3)), ('B', '200', 'TYR', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (190.1, 158.4, 123.5)), ('B', '216', 'LEU', ' beta sheet', ' \n-S--S', (210.4, 153.4, 143.8)), ('B', '231', 'ILE', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (194.1, 158.7, 118.5)), ('B', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (148.4, 140.7, 76.0)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (147.1, 135.7, 69.2)), ('B', '496', 'GLY', ' beta sheet', ' \n---B-', (160.5, 121.5, 82.2)), ('B', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (175.7, 123.2, 148.7)), ('B', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (162.4, 128.9, 134.1)), ('B', '545', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (162.1, 132.7, 134.7)), ('B', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (157.3, 137.6, 154.0)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (181.7, 142.6, 170.7)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nHSS-H', (169.7, 182.4, 144.6)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (182.6, 177.7, 206.9)), ('B', '801', 'ASN', ' beta sheet', ' \nT---T', (187.1, 175.2, 201.8)), ('B', '802', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---TT', (185.0, 176.0, 198.6)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (173.8, 177.4, 152.5)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (168.7, 166.6, 200.9)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (172.9, 161.6, 194.1)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (175.6, 172.7, 176.9)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (166.5, 153.7, 217.7)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (178.3, 154.4, 213.0)), ('B', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (156.9, 145.3, 224.8)), ('B', '34', 'ARG', 'check CA trace', ' \n-S--E', (202.7, 155.8, 144.3)), ('B', '88', 'ASP', 'check CA trace', 'turn\n-TT-E', (194.5, 146.2, 131.3)), ('B', '98', 'SER', 'check CA trace', 'bend\nESSS-', (220.4, 162.7, 133.8)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (202.8, 149.2, 110.3)), ('B', '122', 'ASN', 'check CA trace', 'strand\nEEETT', (215.7, 165.8, 124.8)), ('B', '123', 'ALA', 'check CA trace', 'turn\nEETTE', (217.6, 169.2, 124.6)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (194.2, 147.8, 150.9)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (189.4, 153.5, 169.8)), ('B', '484', 'LYS', 'check CA trace', ' \nTS-BT', (144.3, 130.5, 73.7)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (171.4, 134.1, 143.9)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (151.8, 127.8, 141.3)), ('C', '60', 'SER', 'check CA trace,carbonyls, peptide', ' \nTT--E', (126.6, 134.0, 146.9)), ('C', '61', 'ASN', ' beta sheet', ' \nT--EE', (124.2, 132.3, 144.4)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (134.9, 137.6, 134.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (131.4, 135.3, 121.5)), ('C', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (129.4, 130.0, 115.4)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (132.0, 130.2, 112.4)), ('C', '124', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SSSE', (139.5, 108.4, 126.5)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (146.0, 138.3, 129.0)), ('C', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (128.2, 122.0, 152.2)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (164.3, 206.2, 106.3)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (136.0, 179.9, 136.4)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (133.6, 152.2, 172.7)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (133.9, 155.9, 173.6)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (179.1, 151.1, 200.4)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (169.0, 148.9, 196.8)), ('C', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (163.3, 151.5, 200.7)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (156.8, 150.5, 194.5)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (163.8, 142.2, 177.0)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (148.8, 149.4, 213.9)), ('C', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (152.3, 172.7, 225.2)), ('C', '34', 'ARG', 'check CA trace', ' \nTT---', (132.8, 126.3, 147.6)), ('C', '125', 'ASN', 'check CA trace', 'bend\nSSSEE', (140.6, 111.9, 127.7)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (135.4, 123.1, 151.8)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (131.3, 138.5, 153.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (130.0, 163.6, 144.7)), ('C', '797', 'PHE', 'check CA trace', 'bend\n--STT', (166.4, 133.9, 206.9))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23597/7lyo/Model_validation_1/validation_cootdata/molprobity_probe7lyo_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('E', ' 152 ', 'PRO', None, (115.109, 170.924, 231.82300000000004)), ('E', ' 154 ', 'PRO', None, (120.84199999999997, 170.63699999999997, 234.565)), ('F', '   8 ', 'PRO', None, (138.87699999999995, 141.37799999999996, 230.11100000000002)), ('F', ' 144 ', 'PRO', None, (132.136, 144.272, 244.228)), ('H', ' 152 ', 'PRO', None, (200.631, 230.294, 226.85500000000002)), ('H', ' 154 ', 'PRO', None, (197.61, 225.55699999999996, 229.89100000000002)), ('J', ' 152 ', 'PRO', None, (207.474, 122.332, 229.968)), ('J', ' 154 ', 'PRO', None, (204.82800000000006, 127.378, 232.777)), ('K', '   8 ', 'PRO', None, (219.453, 158.342, 227.797)), ('K', ' 144 ', 'PRO', None, (221.53400000000005, 151.03799999999998, 241.639)), ('L', '   8 ', 'PRO', None, (163.833, 222.77099999999993, 226.441)), ('L', ' 144 ', 'PRO', None, (169.28400000000005, 228.33599999999996, 239.59300000000005))]
data['rota'] = [('A', ' 913 ', 'LEU', 0.27622929902045495, (189.934, 168.35500000000005, 100.51900000000003)), ('A', '1101 ', 'VAL', 0.1860051441934869, (180.73, 183.021, 91.523)), ('B', ' 480 ', 'VAL', 0.23691298568034855, (182.0, 130.77999999999997, 212.49900000000005)), ('B', ' 875 ', 'LEU', 0.1253029866205612, (177.00599999999997, 193.468, 117.896)), ('B', '1078 ', 'ILE', 0.13305913300406152, (154.23199999999994, 163.51400000000004, 88.76)), ('B', '1115 ', 'ASP', 0.24511760441767277, (165.605, 170.79, 86.17)), ('B', '1119 ', 'VAL', 0.14635469181755728, (163.245, 160.98199999999994, 87.828)), ('B', '1124 ', 'ASP', 0.26891203667015334, (153.18999999999994, 152.026, 89.38300000000001)), ('C', ' 480 ', 'VAL', 0.24869108695535247, (204.65499999999997, 200.83899999999994, 211.369)), ('C', ' 756 ', 'PHE', 0.043547676561523745, (163.58799999999997, 179.56, 161.48300000000003)), ('C', '1101 ', 'VAL', 0.24301721804284443, (177.21299999999997, 157.267, 91.815)), ('L', '  91 ', 'GLN', 0.22437595668354746, (169.71799999999996, 217.96999999999994, 210.881)), ('F', '  91 ', 'GLN', 0.0, (139.1399999999999, 149.04699999999997, 214.36400000000003)), ('E', '  95 ', 'TYR', 0.28098915037475064, (130.49999999999994, 162.33399999999997, 216.958)), ('E', '  98 ', 'ARG', 0.1239226235353885, (137.58499999999992, 161.575, 210.02700000000002)), ('K', '  91 ', 'GLN', 0.06583435376923825, (212.826, 154.858, 212.203)), ('J', '  98 ', 'ARG', 0.0, (202.059, 146.94199999999998, 208.532))]
data['cbeta'] = []
data['probe'] = [(' A 390  THR  OG1', ' A 513  GLU  O  ', -0.85, (164.652, 202.232, 183.856)), (' B 361  ASP  OD1', ' B 362  TYR  N  ', -0.823, (146.534, 164.082, 196.087)), (' C 361  ASP  OD1', ' C 362  TYR  N  ', -0.82, (193.512, 154.11, 195.109)), (' B 390  THR  OG1', ' B 513  GLU  O  ', -0.781, (152.579, 150.648, 185.625)), (' A 700  ASN  ND2', ' B 784  GLN  OE1', -0.776, (190.148, 191.815, 114.244)), (' A 325  ARG  NH1', ' A 575  ASP  OD2', -0.764, (177.905, 214.515, 174.623)), (' A 361  ASP  OD1', ' A 362  TYR  N  ', -0.758, (178.61, 201.76, 193.845)), (' A 985  GLU  N  ', ' A 985  GLU  OE1', -0.758, (179.703, 161.253, 185.711)), (' B 356  SER  OG ', ' B 391  ASN  OD1', -0.746, (148.886, 148.558, 190.827)), (' A 616  GLU  N  ', ' A 616  GLU  OE1', -0.723, (191.437, 205.303, 155.481)), (' F 189  TYR  O  ', ' F 195  TYR  OH ', -0.719, (100.943, 149.075, 246.244)), (' B 325  ARG  NH1', ' B 575  ASP  OD2', -0.716, (134.247, 155.889, 177.197)), (' A 799  PHE  HD1', ' A 802  ILE HD11', -0.702, (193.787, 159.772, 115.671)), (' C 899  MET  HE1', ' C1046  LEU HD13', -0.702, (160.554, 158.615, 108.627)), (' E 205  HIS  O  ', ' E 209  ASN  N  ', -0.698, (115.994, 175.979, 238.042)), (' C 722  GLU  OE1', ' C1061  HIS  NE2', -0.696, (164.553, 160.753, 123.158)), (' B 361  ASP  OD1', ' B 363  SER  N  ', -0.696, (147.852, 164.967, 196.363)), (' B 717  ILE HD12', ' B 920  ILE HG23', -0.693, (162.963, 190.582, 107.39)), (' J 205  HIS  O  ', ' J 209  ASN  N  ', -0.689, (203.019, 119.915, 235.86)), (' B 106  PHE  HB3', ' B 235  ILE HD13', -0.664, (142.732, 204.24, 186.876)), (' C 329  ILE HD11', ' C 358  CYS  N  ', -0.661, (206.871, 156.392, 191.307)), (' H 126  VAL  O  ', ' H 214  LYS  NZ ', -0.653, (200.642, 238.887, 242.519)), (' L 189  TYR  O  ', ' L 195  TYR  OH ', -0.65, (188.154, 254.9, 239.257)), (' C 717  ILE HD12', ' C 920  ILE HG23', -0.649, (159.425, 154.58, 107.95)), (' K  91  GLN  OE1', ' K 100  THR  N  ', -0.649, (214.994, 151.058, 210.122)), (' B 278  GLU  N  ', ' B 278  GLU  OE1', -0.649, (160.562, 209.077, 155.86)), (' B 193  VAL HG23', ' B 223  LEU HD22', -0.648, (145.546, 207.216, 171.589)), (' C1025  LYS  NZ ', ' C1039  PHE  O  ', -0.647, (167.585, 163.726, 123.675)), (' F 111  ARG  NH1', ' F 112  THR  OG1', -0.643, (136.367, 145.653, 250.376)), (' B 382  THR  OG1', ' C 982  ASP  OD1', -0.642, (154.37, 170.54, 188.048)), (' C 575  ASP  OD2', ' C 578  THR  N  ', -0.631, (209.742, 148.963, 177.024)), (' C 284  ASP  OD1', ' C 285  ALA  N  ', -0.63, (158.184, 136.932, 159.75)), (' B  81  ASN  O  ', ' B 239  GLN  NE2', -0.629, (129.831, 208.989, 185.688)), (' B 490  GLN  OE1', ' B 491  SER  N  ', -0.627, (175.94, 147.532, 213.025)), (' A 224  GLU  N  ', ' A 224  GLU  OE1', -0.625, (216.747, 171.209, 169.85)), (' J 126  VAL  O  ', ' J 214  LYS  NZ ', -0.624, (214.836, 118.939, 245.888)), (' C 325  ARG  NH2', ' C 577  GLN  OE1', -0.623, (207.505, 146.433, 180.332)), (' E 126  VAL  O  ', ' E 214  LYS  NZ ', -0.607, (109.29, 166.991, 248.077)), (' F 173  ASP  OD2', ' F 175  THR  OG1', -0.606, (132.453, 152.609, 249.221)), (' A 400  ARG  NH1', ' A 402  ASP  OD2', -0.596, (160.887, 179.273, 208.964)), (' H  33  VAL HG22', ' H  52  ILE HG12', -0.594, (177.953, 214.067, 199.879)), (' A 455  LYS  NZ ', ' A 471  GLN  O  ', -0.594, (137.422, 181.686, 201.386)), (' E 176  GLN  OE1', ' E 182  SER  OG ', -0.584, (111.814, 160.154, 236.659)), (' C 108  THR  OG1', ' C 234  ASN  O  ', -0.583, (168.135, 132.322, 192.131)), (' C 306  GLU  N  ', ' C 306  GLU  OE1', -0.582, (164.523, 143.94, 145.869)), (' C 342  THR HG21', ' K  53  SER  OG ', -0.582, (204.179, 164.876, 214.533)), (' A 325  ARG  NH2', ' A 577  GLN  OE1', -0.576, (178.308, 216.209, 178.488)), (' H  23  LYS  NZ ', ' H  76  THR  O  ', -0.576, (194.941, 210.176, 202.005)), (' A1025  LYS  NZ ', ' A1039  PHE  O  ', -0.572, (181.829, 171.618, 122.698)), (' F 146  GLU  N  ', ' F 146  GLU  OE1', -0.571, (129.616, 144.7, 239.372)), (' A 306  GLU  N  ', ' A 306  GLU  OE1', -0.571, (201.052, 178.895, 144.395)), (' C 361  ASP  OD1', ' C 363  SER  N  ', -0.57, (192.4, 153.698, 195.806)), (' C 342  THR HG22', ' K  54  SER  HB2', -0.567, (201.561, 163.396, 214.799)), (' B 781  GLN  OE1', ' B1027  SER  OG ', -0.559, (180.137, 181.002, 122.718)), (' B 540  PHE  CE2', ' B 573  VAL HG21', -0.557, (141.201, 157.781, 173.681)), (' C 723  ILE HD13', ' C 942  LEU HD13', -0.556, (158.463, 155.111, 132.05)), (' K 173  ASP  OD2', ' K 175  THR  OG1', -0.556, (214.625, 146.641, 247.06)), (' L 173  ASP  OD2', ' L 175  THR  OG1', -0.553, (176.403, 225.003, 245.028)), (' J 110  GLN  N  ', ' J 110  GLN  OE1', -0.552, (199.492, 139.609, 217.027)), (' B 119  ILE HG23', ' B 128  ILE HG12', -0.551, (147.345, 213.96, 185.724)), (' J  35  THR  OG1', ' J  97  SER  OG ', -0.549, (206.71, 146.698, 210.436)), (' B 616  GLU  N  ', ' B 616  GLU  OE1', -0.546, (134.133, 171.265, 157.518)), (' E  67  ARG  NH1', ' E  85  SER  O  ', -0.545, (113.882, 156.972, 214.63)), (' B 332  LEU HD13', ' E  52  ILE HD13', -0.542, (137.684, 156.386, 200.084)), (' B 819  LEU HD22', ' B 942  LEU HD11', -0.542, (165.715, 193.9, 130.857)), (' A 419  ASN  OD1', ' A 451  ARG  N  ', -0.541, (151.794, 187.219, 205.111)), (' C 723  ILE HG12', ' C1058  VAL HG22', -0.539, (158.619, 157.292, 129.473)), (' L 111  ARG  NH1', ' L 112  THR  OG1', -0.538, (168.342, 225.041, 246.678)), (' J 176  GLN  OE1', ' J 182  SER  OG ', -0.537, (218.77, 125.129, 234.43)), (' J 214  LYS  NZ ', ' K 126  GLU  OE1', -0.537, (215.49, 118.121, 246.618)), (' J 205  HIS  CG ', ' J 208  SER  HG ', -0.535, (205.773, 120.892, 235.473)), (' K 111  ARG  NH1', ' K 112  THR  OG1', -0.535, (218.57, 153.74, 248.218)), (' E 103  ASP  N  ', ' E 103  ASP  OD1', -0.535, (147.329, 160.384, 207.345)), (' B 306  GLU  N  ', ' B 306  GLU  OE1', -0.534, (151.955, 192.788, 144.979)), (' E 110  GLN  N  ', ' E 110  GLN  OE1', -0.533, (133.142, 167.96, 218.008)), (' F  62  ARG  NH2', ' F  83  ASP  OD1', -0.532, (147.157, 157.386, 234.025)), (' E  39  GLN  NE2', ' E  43  GLN  O  ', -0.531, (129.157, 154.867, 225.594)), (' B 767  ILE HD11', ' B1009  LEU HD23', -0.53, (177.958, 178.515, 147.251)), (' B 608  LEU HD22', ' B 663  ILE HG23', -0.53, (143.294, 178.181, 145.638)), (' B 822  LYS  NZ ', ' B 938  THR  O  ', -0.529, (158.813, 197.447, 131.293)), (' A1123  CYS  SG ', ' A1129  ILE HD13', -0.528, (169.449, 192.673, 87.814)), (' B 400  ARG  NH1', ' B 403  GLU  OE2', -0.527, (175.023, 154.688, 207.405)), (' F  38  GLN  HB2', ' F  48  LEU HD11', -0.527, (142.758, 155.146, 227.469)), (' B 722  GLU  OE1', ' B1061  HIS  NE2', -0.526, (166.692, 183.331, 122.979)), (' A 712  PRO  HD3', ' B 891  LEU HD13', -0.523, (186.559, 184.518, 104.214)), (' B 724  LEU HD11', ' B1025  LYS  HD2', -0.522, (169.416, 182.532, 126.868)), (' F 123  PRO  HD3', ' F 135  VAL HG22', -0.522, (107.067, 152.192, 247.377)), (' B 711  ILE HD12', ' B1093  VAL HG11', -0.521, (152.717, 174.82, 97.029)), (' B 342  THR HG22', ' F  54  SER  HB2', -0.52, (152.181, 153.456, 216.031)), (' J 204  ASN  OD1', ' J 211  LYS  NZ ', -0.518, (199.929, 122.226, 241.429)), (' H 205  HIS  O  ', ' H 209  ASN  N  ', -0.516, (205.288, 227.719, 233.442)), (' K  91  GLN  NE2', ' K  98  MET  O  ', -0.515, (213.633, 153.492, 208.414)), (' B 595  ILE HG23', ' B 661  ILE HG21', -0.515, (144.482, 184.795, 143.48)), (' K 146  GLU  N  ', ' K 146  GLU  OE1', -0.514, (222.215, 148.799, 236.688)), (' B1025  LYS  NZ ', ' B1039  PHE  O  ', -0.514, (167.113, 179.751, 122.942)), (' C 332  LEU HD11', ' J  52  ILE HD13', -0.513, (206.726, 149.32, 198.34)), (' B 932  GLN  O  ', ' B 936  SER  N  ', -0.512, (159.76, 200.675, 126.788)), (' C1079  CYS  SG ', ' C1129  ILE HD13', -0.511, (191.074, 162.199, 88.222)), (' C 400  ARG  NH1', ' C 402  ASP  OD2', -0.511, (183.742, 181.774, 208.43)), (' E 214  LYS  NZ ', ' F 126  GLU  OE1', -0.508, (107.819, 166.861, 249.442)), (' A 801  GLN  NE2', ' A 932  GLN  OE1', -0.507, (202.825, 162.369, 120.28)), (' K  91  GLN  CD ', ' K 100  THR  HG1', -0.506, (216.006, 153.018, 210.288)), (' C 109  THR  OG1', ' C 111  ASP  OD1', -0.506, (167.963, 127.143, 197.523)), (' B 119  ILE HG12', ' B 128  ILE HG23', -0.506, (147.252, 211.87, 187.262)), (' B  27  ALA  HB3', ' B  64  TRP  HB3', -0.503, (127.024, 207.567, 170.775)), (' A1074  THR  OG1', ' A1075  ALA  N  ', -0.502, (178.67, 191.098, 95.536)), (' B1090  GLY  O  ', ' B1104  ARG  NH1', -0.502, (160.112, 169.625, 98.696)), (' K 111  ARG  NH1', ' K 112  THR  O  ', -0.501, (219.061, 152.772, 247.387)), (' A1138  LEU  HG ', ' A1142  LEU HD13', -0.501, (172.385, 174.356, 73.256)), (' C 819  LEU HD22', ' C 942  LEU HD11', -0.499, (156.233, 154.836, 131.704)), (' B 723  ILE HG12', ' B1058  VAL HG22', -0.496, (166.248, 190.224, 128.748)), (' B 801  GLN  OE1', ' B 932  GLN  NE2', -0.496, (165.171, 202.731, 119.901)), (' C 711  ILE HD12', ' C1093  VAL HG11', -0.494, (178.128, 153.018, 97.031)), (' C 877  GLY  O  ', ' C 881  SER  OG ', -0.491, (151.036, 169.874, 112.856)), (' E 186  VAL HG21', ' F 138  LEU HD22', -0.491, (120.49, 155.377, 249.477)), (' L  87  TYR  N  ', ' L 105  THR  O  ', -0.491, (172.79, 219.988, 225.938)), (' F 103  GLN  N  ', ' F 103  GLN  OE1', -0.49, (133.247, 145.084, 223.074)), (' B 356  SER  HA ', ' B 521  VAL HG23', -0.489, (146.963, 151.128, 191.96)), (' C 714  ASN  OD1', ' C 715  PHE  N  ', -0.489, (166.275, 148.754, 104.627)), (' A1091  VAL HG23', ' B 897  MET  HE1', -0.489, (177.731, 187.61, 96.976)), (' A 608  LEU HD22', ' A 663  ILE HG23', -0.488, (192.117, 194.008, 144.624)), (' B 170  TYR  HE2', ' B 172  SER  HG ', -0.486, (152.837, 216.593, 184.072)), (' E  33  VAL HG13', ' E  52  ILE HG12', -0.485, (135.508, 157.134, 203.279)), (' B 895  PHE  HZ ', ' B1047  MET  HE1', -0.483, (170.049, 191.483, 110.351)), (' F  16  GLY  N  ', ' F  79  LEU  O  ', -0.481, (149.031, 152.046, 240.195)), (' C  81  ASN  ND2', ' C 239  GLN  OE1', -0.481, (161.515, 116.505, 187.502)), (' C1074  THR  OG1', ' C1075  ALA  N  ', -0.481, (185.073, 155.254, 95.603)), (' E   4  LEU HD13', ' E  22  CYS  SG ', -0.481, (133.475, 165.399, 210.996)), (' L  62  ARG  NE ', ' L  83  ASP  OD2', -0.478, (171.522, 208.614, 231.131)), (' J 152  PRO  O  ', ' J 205  HIS  NE2', -0.477, (207.109, 123.289, 232.858)), (' C 653  VAL HG12', ' C 655  ASN  H  ', -0.476, (184.021, 132.489, 133.06)), (' A 284  ASP  OD1', ' A 285  ALA  N  ', -0.476, (210.464, 177.068, 158.261)), (' B 342  THR HG21', ' F  53  SER  HB3', -0.474, (151.671, 150.213, 216.132)), (' L 111  ARG  NH1', ' L 112  THR  O  ', -0.474, (168.966, 225.708, 245.798)), (' C 470  TYR  N  ', ' C 486  TYR  O  ', -0.473, (199.314, 196.219, 206.237)), (' A 506  ARG HH12', ' D   1  NAG  H81', -0.473, (167.718, 199.164, 210.895)), (' K  34  LEU HD12', ' K  90  GLN  O  ', -0.472, (211.634, 156.121, 214.791)), (' L 146  GLU  N  ', ' L 146  GLU  OE1', -0.472, (170.615, 229.878, 234.682)), (' A 795  GLY  O  ', ' A 917  GLN  NE2', -0.471, (195.198, 160.929, 101.856)), (' A 641  GLN  NE2', ' A 642  THR  O  ', -0.471, (189.266, 202.522, 146.34)), (' C  33  THR  OG1', ' C 219  GLY  O  ', -0.47, (157.124, 128.552, 162.248)), (' H  87  ARG  N  ', ' H  90  ASP  OD2', -0.47, (189.541, 235.397, 211.944)), (' F  34  LEU  HB3', ' F  52  ALA  HB2', -0.47, (145.529, 148.066, 216.354)), (' A1028  GLU  OE2', ' C1036  ARG  NH2', -0.469, (172.62, 168.019, 122.367)), (' E  18  VAL HG12', ' E  86  LEU HD21', -0.469, (117.492, 162.779, 214.514)), (' A 898  GLN  O  ', ' A 902  ARG  HG2', -0.469, (184.837, 163.581, 106.595)), (' J   4  LEU HD13', ' J  22  CYS  SG ', -0.469, (200.86, 141.471, 209.542)), (' A 875  LEU HD21', ' A1049  PHE  HB3', -0.468, (190.776, 160.707, 118.594)), (' A 962  GLN  OE1', ' B 755  SER  OG ', -0.468, (186.242, 172.882, 160.301)), (' L  62  ARG  NH2', ' L  83  ASP  OD1', -0.465, (173.739, 208.605, 231.215)), (' C 906  ILE HD13', ' C1046  LEU HD21', -0.464, (165.202, 159.713, 108.324)), (' A 117  LEU HD22', ' A 231  ILE HD13', -0.463, (213.819, 178.314, 187.794)), (' C 713  THR HG22', ' C1107  TYR  HB3', -0.463, (172.658, 149.146, 98.582)), (' B1088  ARG  NH1', ' B1115  ASP  O  ', -0.461, (166.748, 169.358, 88.343)), (' B 560  GLN  O  ', ' B 561  GLN  NE2', -0.461, (143.824, 147.351, 176.794)), (' A 382  THR  O  ', ' A 385  ASN  ND2', -0.459, (180.749, 197.052, 190.372)), (' A  29  THR HG22', ' A  30  ASN  N  ', -0.459, (222.183, 190.83, 164.087)), (' F  55  ARG  NE ', ' F  63  PHE  O  ', -0.458, (152.858, 153.029, 225.31)), (' B1115  ASP  N  ', ' B1115  ASP  OD1', -0.458, (165.372, 170.873, 84.071)), (' A1132  ASN  OD1', ' A1133  THR  N  ', -0.456, (178.893, 189.498, 82.689)), (' C 595  ILE HG23', ' C 661  ILE HG21', -0.454, (175.054, 141.473, 143.778)), (' C 663  ILE HD11', ' C 669  ALA  HB2', -0.454, (179.654, 140.097, 142.502)), (' A 724  LEU HD11', ' A1025  LYS  HD2', -0.454, (182.388, 168.59, 126.761)), (' C1069  GLU  N  ', ' C1069  GLU  OE1', -0.453, (174.64, 146.642, 106.25)), (' C 292  PRO  HB2', ' C 605  VAL HG21', -0.453, (173.622, 137.046, 152.477)), (' A 706  ASN  N  ', ' A 706  ASN  OD1', -0.452, (178.874, 199.29, 100.835)), (' C 909  THR  OG1', ' C1103  GLN  NE2', -0.452, (167.983, 158.649, 97.207)), (' A 712  PRO  HA ', ' A1069  GLU  HA ', -0.451, (190.413, 185.094, 102.779)), (' A 801  GLN  OE1', ' M   1  NAG  O6 ', -0.451, (204.259, 160.662, 117.428)), (' L 154  ASP  OD2', ' L 192  HIS  ND1', -0.45, (183.043, 257.644, 238.027)), (' B 718  SER  OG ', ' B1063  THR  OG1', -0.45, (159.994, 186.482, 115.309)), (' E 205  HIS  CG ', ' E 208  SER  HG ', -0.449, (114.882, 173.219, 237.353)), (' A1088  ARG  NE ', ' A1115  ASP  O  ', -0.448, (172.469, 176.502, 89.529)), (' C 583  ASP  OD1', ' C 584  ILE  N  ', -0.448, (200.711, 152.309, 165.112)), (' K  16  GLY  N  ', ' K  79  LEU  O  ', -0.447, (205.614, 161.075, 238.813)), (' B 201  PHE  HE2', ' B 203  ILE HD11', -0.446, (147.301, 208.913, 183.351)), (' B 942  LEU HD12', ' B 945  LEU HD12', -0.446, (166.348, 192.687, 133.055)), (' C 475  THR HG23', ' H  23  LYS  HE2', -0.445, (197.606, 209.095, 204.616)), (' C 291  ASP  N  ', ' C 291  ASP  OD1', -0.445, (170.537, 135.118, 158.722)), (' B 210  ILE HG21', ' B 217  PRO  HG2', -0.445, (138.91, 215.231, 162.95)), (' A 565  ASP  OD1', ' A 566  ILE  N  ', -0.444, (168.824, 198.188, 161.474)), (' A 273  LEU HD22', ' A 298  CYS  HA ', -0.444, (201.121, 179.099, 157.422)), (' B1079  CYS  SG ', ' B1129  ILE HD13', -0.443, (153.488, 158.669, 88.455)), (' E 129  LEU HD13', ' F 136  VAL HG21', -0.443, (113.756, 156.55, 247.306)), (' L 139  LEU  N  ', ' L 139  LEU HD12', -0.442, (179.074, 236.467, 241.761)), (' F  34  LEU  O  ', ' F  52  ALA  N  ', -0.442, (145.904, 150.505, 216.425)), (' C 608  LEU HD22', ' C 663  ILE HG23', -0.442, (181.609, 143.741, 145.528)), (' K 139  LEU  N  ', ' K 139  LEU HD12', -0.441, (223.481, 138.692, 244.327)), (' E   6  GLN  OE1', ' E 111  GLY  N  ', -0.441, (131.566, 165.817, 218.913)), (' B 385  ASN  O  ', ' B 523  GLY  HA3', -0.44, (145.346, 162.012, 190.386)), (' B1138  LEU  HG ', ' B1142  LEU HD13', -0.44, (167.671, 169.998, 72.568)), (' C 455  LYS  NZ ', ' C 471  GLN  O  ', -0.44, (198.29, 199.443, 200.619)), (' C 726  VAL HG13', ' C 778  VAL HG21', -0.44, (158.981, 169.077, 132.563)), (' L 161  ASN HD22', ' L 184  LEU HD21', -0.439, (185.329, 249.772, 231.704)), (' K  55  ARG  NE ', ' K  63  PHE  O  ', -0.438, (202.06, 164.011, 224.426)), (' A 913  LEU  C  ', ' A 913  LEU HD13', -0.438, (190.506, 165.975, 100.138)), (' C 329  ILE HD11', ' C 357  ASN  C  ', -0.438, (207.708, 156.345, 191.538)), (' A 445  ASN  N  ', ' A 493  GLY  O  ', -0.438, (158.539, 188.701, 219.047)), (' B 464  ASP  OD1', ' B 465  ILE  N  ', -0.437, (169.393, 138.662, 201.891)), (' B 609  TYR  HE2', ' B 648  ILE HD12', -0.436, (136.543, 180.102, 154.314)), (' E   4  LEU HD21', ' E  98  ARG  HG2', -0.436, (137.8, 165.497, 210.115)), (' E 143  LEU  HB2', ' E 216  VAL HG11', -0.435, (115.142, 160.567, 254.972)), (' H  91  THR HG23', ' H 115  THR  HA ', -0.435, (191.649, 229.99, 218.696)), (' E  91  THR HG23', ' E 115  THR  HA ', -0.435, (118.38, 163.186, 223.67)), (' B 390  THR  O  ', ' B 520  THR  OG1', -0.434, (147.589, 149.435, 188.668)), (' B1124  ASP  N  ', ' B1124  ASP  OD1', -0.433, (153.677, 152.47, 87.407)), (' A 365  LEU HD11', ' H 102  TRP  CZ3', -0.431, (172.713, 199.56, 199.23)), (' K 156  ALA  O  ', ' K 158  GLN  NE2', -0.431, (237.505, 130.278, 237.737)), (' E  18  VAL  HB ', ' E  86  LEU HD11', -0.431, (116.521, 164.956, 215.187)), (' B 333  CYS  SG ', ' B 360  ALA  HB2', -0.429, (145.968, 155.464, 195.818)), (' B 898  GLN  O  ', ' B 902  ARG  HG2', -0.429, (172.156, 186.241, 106.886)), (' J 129  LEU HD13', ' K 136  VAL HG21', -0.428, (221.063, 128.696, 244.347)), (' B 723  ILE HD13', ' B 942  LEU HD13', -0.427, (164.643, 191.986, 131.47)), (' H 169  HIS  CE1', ' L 177  SER  HG ', -0.426, (181.479, 227.767, 243.295)), (' C 119  ILE HG23', ' C 128  ILE HG12', -0.426, (151.128, 129.311, 187.704)), (' A1036  ARG  NH2', ' B1028  GLU  OE2', -0.426, (174.655, 174.021, 121.738)), (' A 452  LEU  N  ', ' A 488  PRO  O  ', -0.425, (147.906, 185.235, 206.403)), (' A 746  CYS  SG ', ' A 974  LEU HD21', -0.425, (182.186, 158.468, 171.327)), (' E 204  ASN  OD1', ' E 211  LYS  NZ ', -0.425, (119.408, 177.745, 243.442)), (' J 143  LEU  HB2', ' J 216  VAL HG11', -0.425, (217.546, 128.174, 252.573)), (' A 713  THR  N  ', ' A1068  GLN  O  ', -0.424, (191.722, 183.354, 101.728)), (' A 767  ILE HD11', ' A1009  LEU HD23', -0.424, (175.345, 163.825, 147.581)), (' C 270  ARG  NH1', ' C 287  ASP  OD2', -0.424, (168.103, 134.893, 165.665)), (' F 111  ARG  NH1', ' F 112  THR  O  ', -0.424, (135.236, 145.635, 249.802)), (' C 543  LEU HD21', ' C 570  THR HG21', -0.423, (198.705, 157.534, 172.677)), (' C 228  ASP  N  ', ' C 228  ASP  OD1', -0.422, (151.977, 140.048, 184.015)), (' J  67  ARG  NH1', ' J  85  SER  O  ', -0.422, (219.448, 128.889, 212.037)), (' L  34  LEU HD12', ' L  90  GLN  O  ', -0.422, (169.138, 216.536, 213.743)), (' C  90  VAL HG11', ' C 238  PHE  CZ ', -0.421, (163.709, 126.466, 180.12)), (' B 323  ILE  O  ', ' B 539  ASN  N  ', -0.421, (140.182, 163.643, 178.291)), (' K 123  PRO  HD3', ' K 135  VAL HG22', -0.421, (228.234, 125.197, 244.577)), (' C 983  PRO  N  ', ' C 984  PRO  CD ', -0.42, (157.864, 174.317, 185.148)), (' A 799  PHE  CD1', ' A 802  ILE HD11', -0.419, (193.669, 159.811, 115.183)), (' C 196  ASN HD21', ' C 235  ILE HD12', -0.419, (162.294, 134.576, 187.826)), (' A 983  PRO  N  ', ' A 984  PRO  CD ', -0.419, (179.072, 157.846, 184.841)), (' A 421  LYS  NZ ', ' A 422  LEU  O  ', -0.417, (157.672, 185.582, 191.21)), (' C 117  LEU HD11', ' C 128  ILE HG23', -0.417, (154.133, 131.3, 189.743)), (' F 196  ALA  HB2', ' F 211  SER  CB ', -0.417, (109.789, 142.837, 251.342)), (' C 439  ASP  OD2', ' C 506  ARG  NE ', -0.416, (195.431, 169.762, 211.841)), (' J  18  VAL HG12', ' J  86  LEU HD21', -0.416, (212.626, 129.255, 212.39)), (' H 143  LEU  HB2', ' H 216  VAL HG11', -0.416, (191.35, 236.892, 249.708)), (' C 277  ASN  ND2', ' C1302  NAG  H81', -0.416, (146.373, 138.852, 160.232)), (' E 142  ALA  HB2', ' E 188  THR HG22', -0.415, (121.717, 154.531, 253.924)), (' K 196  ALA  HB2', ' K 211  SER  CB ', -0.414, (234.928, 132.807, 247.509)), (' B 730  LYS  HE3', ' B 768  ALA  HB1', -0.414, (183.176, 187.131, 143.93)), (' A 899  MET  HE1', ' A1046  LEU HD13', -0.414, (188.845, 168.337, 108.196)), (' J  33  VAL HG22', ' J  52  ILE HG12', -0.413, (206.316, 148.126, 200.821)), (' C 514  LEU  O  ', ' C 514  LEU HD23', -0.413, (199.006, 165.61, 179.92)), (' C 578  THR  O  ', ' C 580  GLU  N  ', -0.413, (210.991, 151.011, 174.046)), (' E 152  PRO  O  ', ' E 205  HIS  NE2', -0.412, (116.401, 170.681, 234.925)), (' B 540  PHE  CD2', ' B 573  VAL HG21', -0.412, (141.387, 157.816, 174.452)), (' A 666  GLY  N  ', ' B 861  LEU  O  ', -0.411, (186.813, 195.174, 136.872)), (' A 813  SER  N  ', ' A 816  GLU  OE1', -0.411, (195.93, 155.62, 125.681)), (' L  16  GLY  N  ', ' L  79  LEU  O  ', -0.411, (168.418, 209.906, 237.503)), (' A 454  ARG  NH1', ' A 456  SER  O  ', -0.411, (146.694, 186.066, 195.999)), (' A 105  ILE HG13', ' A 241  LEU HD11', -0.41, (224.398, 183.722, 188.269)), (' A 899  MET  HE1', ' A 903  PHE  CE1', -0.41, (189.071, 168.469, 106.766)), (' L 154  ASP  CG ', ' L 192  HIS  HD1', -0.41, (182.178, 257.252, 238.528)), (' A1122  ASN  ND2', ' A1124  ASP  OD2', -0.41, (161.571, 195.447, 86.117)), (' B 357  ASN  H  ', ' B 520  THR  HB ', -0.41, (144.629, 149.624, 190.948)), (' A1036  ARG  NE ', ' B1028  GLU  OE2', -0.41, (174.594, 173.793, 120.754)), (' B 767  ILE HD11', ' B1009  LEU  HA ', -0.409, (176.937, 178.938, 147.009)), (' A  31  SER  HB3', ' A  62  VAL HG13', -0.409, (217.424, 188.866, 167.345)), (' J 169  HIS  CE1', ' K 177  SER  HG ', -0.409, (214.814, 140.882, 245.741)), (' C1113  THR  HA ', ' C1135  TYR  O  ', -0.408, (177.076, 161.413, 82.441)), (' E 164  LEU HD21', ' E 187  VAL HG21', -0.408, (123.469, 162.736, 255.732)), (' B 721  THR HG23', ' B1058  VAL HG13', -0.407, (165.833, 190.731, 126.052)), (' A 342  THR  O  ', ' A 506  ARG  NH2', -0.407, (165.082, 198.459, 212.906)), (' C 324  VAL HG21', ' C 525  LYS  HE2', -0.407, (195.407, 146.913, 183.343)), (' C  36  VAL HG21', ' C 220  PHE  CZ ', -0.407, (157.8, 134.79, 163.846)), (' L  18  ARG  HA ', ' L  76  ILE  O  ', -0.406, (163.515, 210.592, 231.931)), (' C 721  THR HG23', ' C1058  VAL HG13', -0.406, (159.063, 156.218, 126.789)), (' L  47  LEU HD21', ' L  50  TYR  HB3', -0.406, (173.99, 208.567, 214.956)), (' K 189  TYR  O  ', ' K 195  TYR  OH ', -0.406, (234.696, 121.994, 242.681)), (' C 330  THR  HA ', ' J  55  PHE  CE1', -0.405, (207.292, 149.385, 192.602)), (' A 583  ASP  OD1', ' A 584  ILE  N  ', -0.405, (174.82, 206.67, 163.73)), (' L  34  LEU  HB3', ' L  52  ALA  HB2', -0.405, (165.926, 213.083, 213.578)), (' J  91  THR  HA ', ' J 114  VAL  O  ', -0.405, (212.009, 130.942, 219.872)), (' K  38  GLN  HB2', ' K  48  LEU HD11', -0.405, (205.714, 154.287, 226.175)), (' B 700  ASN  OD1', ' B 701  SER  N  ', -0.404, (141.982, 174.133, 114.072)), (' A 200  TYR  OH ', ' C 513  GLU  OE1', -0.404, (203.28, 170.664, 186.767)), (' B 899  MET  HE1', ' B1046  LEU HD13', -0.404, (166.446, 187.866, 108.479)), (' C 106  PHE  HB3', ' C 235  ILE HD13', -0.404, (161.849, 131.115, 188.43)), (' F  47  LEU HD11', ' F  49  ILE  O  ', -0.403, (144.25, 154.996, 219.456)), (' L 196  ALA  HB2', ' L 211  SER  CB ', -0.403, (178.293, 249.47, 244.254)), (' B 333  CYS  N  ', ' E 101  GLN  OE1', -0.403, (143.763, 155.481, 198.953)), (' F 156  ALA  O  ', ' F 158  GLN  NE2', -0.402, (105.796, 141.89, 241.209)), (' E 144  GLY  HA3', ' E 186  VAL HG12', -0.402, (117.691, 158.92, 249.615)), (' K  34  LEU  HB3', ' K  52  ALA  HB2', -0.402, (210.123, 160.619, 215.004)), (' B 596  THR  O  ', ' B 596  THR HG23', -0.402, (146.423, 189.713, 145.511)), (' A 332  LEU HD13', ' H  52  ILE HD13', -0.402, (176.535, 213.655, 197.263)), (' K 170  ASP  OD1', ' K 171  SER  N  ', -0.402, (209.038, 146.183, 245.165)), (' F 173  ASP  N  ', ' F 173  ASP  OD1', -0.402, (135.301, 154.809, 250.393)), (' F 139  LEU  N  ', ' F 139  LEU HD12', -0.402, (120.528, 148.983, 246.97)), (' B 593  SER  OG ', ' B 610  GLN  NE2', -0.401, (147.274, 178.189, 150.454)), (' B 983  PRO  N  ', ' B 984  PRO  CD ', -0.401, (181.927, 185.659, 184.155)), (' A 537  ASN  OD1', ' A 546  THR  OG1', -0.401, (184.379, 199.917, 172.126)), (' A 899  MET  HE1', ' A 903  PHE  HE1', -0.401, (189.054, 168.544, 106.904)), (' B 115  GLN  N  ', ' B 115  GLN  OE1', -0.4, (145.36, 204.221, 197.64)), (' A 724  LEU HD12', ' A1059  PHE  HE2', -0.4, (183.872, 166.402, 127.133)), (' A 376  CYS  HA ', ' A 429  CYS  HA ', -0.4, (170.115, 190.594, 192.411))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

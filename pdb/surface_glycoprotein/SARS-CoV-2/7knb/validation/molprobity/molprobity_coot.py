# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = []
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' D 557  MET  HE1', ' D 569  ALA  HB1', -0.929, (240.236, 261.578, 140.919)), (' A 866  THR HG22', ' A 869  MET  HE1', -0.781, (199.042, 223.723, 251.677)), (' C 187  LYS  N  ', ' C 210  ILE  O  ', -0.723, (170.975, 226.145, 198.865)), (' D  67  ASP  OD1', ' D  68  LYS  N  ', -0.722, (207.071, 263.722, 130.975)), (' D 169  ARG  NH2', ' D 270  MET  SD ', -0.717, (232.872, 259.228, 105.29)), (' D 214  GLY  O  ', ' D 577  LYS  NZ ', -0.717, (246.257, 276.071, 142.167)), (' A 493  GLN  NE2', ' A 494  SER  O  ', -0.71, (242.46, 248.596, 174.785)), (' B 929  SER  OG ', ' B 933  LYS  NZ ', -0.71, (239.389, 174.457, 245.39)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.705, (208.713, 197.45, 245.016)), (' D 440  LEU HD12', ' D 591  LEU HD11', -0.694, (256.498, 250.118, 117.006)), (' D  56  GLU  N  ', ' D  56  GLU  OE1', -0.691, (202.895, 248.173, 119.162)), (' A 357  ARG  NH2', ' A 358  ILE  O  ', -0.69, (261.453, 235.119, 198.883)), (' D 503  LEU HD23', ' D 505  HIS  H  ', -0.689, (229.524, 261.021, 116.67)), (' C 902  MET  HE1', ' C1050  MET  HE1', -0.686, (202.434, 182.559, 246.633)), (' A 913  GLN  NE2', ' C1090  PRO  O  ', -0.685, (206.585, 185.855, 273.854)), (' A 908  GLY  O  ', ' A1038  LYS  NZ ', -0.684, (215.021, 190.685, 263.466)), (' C 493  GLN  NE2', ' C 494  SER  O  ', -0.68, (252.06, 271.509, 201.321)), (' C 644  GLN  NE2', ' C 648  GLY  O  ', -0.669, (195.55, 234.892, 243.187)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.669, (219.01, 204.181, 255.503)), (' A 474  GLN  OE1', ' A 480  CYS  N  ', -0.664, (234.785, 229.14, 165.86)), (' A 905  ARG  NH1', ' A1049  LEU  O  ', -0.655, (210.367, 199.301, 264.063)), (' C 902  MET  HA ', ' C 902  MET  HE3', -0.653, (202.37, 180.616, 248.995)), (' A1090  PRO  O  ', ' B 913  GLN  NE2', -0.652, (221.89, 176.096, 268.477)), (' D 107  VAL HG23', ' D 108  LEU HD12', -0.652, (218.139, 279.21, 126.781)), (' B 206  LYS  NZ ', ' B 208  THR  OG1', -0.649, (266.164, 201.985, 201.904)), (' A 740  MET  HE2', ' C 319  ARG  HD3', -0.645, (205.464, 239.881, 230.035)), (' C 671  CYS  SG ', ' C 697  MET  HE1', -0.645, (194.174, 220.406, 244.822)), (' B 822  LEU HD11', ' B 945  LEU HD11', -0.645, (240.885, 195.036, 239.673)), (' A1053  PRO  O  ', ' A1054  GLN  NE2', -0.644, (208.554, 213.497, 262.254)), (' C 619  GLU  N  ', ' C 619  GLU  OE2', -0.642, (194.51, 244.262, 237.662)), (' C1135  ASN  OD1', ' C1136  THR  N  ', -0.633, (195.128, 180.704, 283.977)), (' A 299  THR HG22', ' A 597  VAL HG21', -0.628, (241.467, 232.441, 249.965)), (' B 726  ILE HG12', ' B1061  VAL HG22', -0.626, (237.129, 194.396, 242.461)), (' A 422  ASN  OD1', ' A 454  ARG  N  ', -0.623, (242.504, 239.428, 180.462)), (' D  57  GLU  OE2', ' D  60  GLN  NE2', -0.618, (200.629, 251.986, 126.482)), (' B 478  THR  OG1', ' B 487  ASN  ND2', -0.617, (209.655, 279.984, 154.586)), (' C 420  ASP  OD2', ' C 460  ASN  ND2', -0.614, (249.989, 254.336, 214.165)), (' B 395  VAL  O  ', ' B 395  VAL HG12', -0.612, (208.308, 240.239, 173.344)), (' A1118  ASP  OD2', ' A1119  ASN  N  ', -0.611, (214.84, 173.378, 276.438)), (' B 340  GLU  N  ', ' B 340  GLU  OE2', -0.61, (201.651, 235.835, 164.807)), (' C1118  ASP  OD2', ' C1119  ASN  N  ', -0.609, (203.534, 176.127, 274.487)), (' D 549  GLU  O  ', ' D 552  GLN  NE2', -0.608, (245.67, 249.592, 148.256)), (' A 581  THR  O  ', ' A 581  THR HG22', -0.607, (274.658, 225.173, 217.562)), (' C1302  NAG  H3 ', ' C1302  NAG  H83', -0.602, (197.732, 189.742, 292.944)), (' A1096  VAL  O  ', ' A1103  PHE  N  ', -0.6, (226.578, 178.942, 280.967)), (' A 729  VAL HG22', ' A1059  GLY  HA2', -0.597, (212.546, 216.495, 251.281)), (' B 210  ILE HG21', ' B 217  PRO  HG2', -0.596, (264.244, 194.453, 199.642)), (' C 290  ASP  OD1', ' C 291  CYS  N  ', -0.595, (193.195, 230.447, 217.118)), (' A 866  THR HG23', ' A 868  GLU  H  ', -0.59, (201.234, 223.713, 254.238)), (' B 369  TYR  OH ', ' B 384  PRO  O  ', -0.589, (218.972, 231.227, 171.44)), (' A1302  NAG  H3 ', ' A1302  NAG  H83', -0.587, (236.863, 162.89, 276.95)), (' B  83  VAL HG12', ' B 239  GLN  HB2', -0.584, (260.389, 209.362, 178.515)), (' D 574  VAL HG23', ' D 576  ALA  H  ', -0.584, (249.845, 265.045, 140.154)), (' A 474  GLN  NE2', ' A 478  THR  O  ', -0.584, (232.366, 229.747, 166.735)), (' A 134  GLN  N  ', ' A 161  SER  OG ', -0.577, (252.107, 282.869, 235.815)), (' A 659  SER  OG ', ' A 696  THR  O  ', -0.575, (247.052, 212.8, 261.521)), (' B 763  LEU HD22', ' B1008  VAL HG21', -0.572, (232.879, 223.141, 232.713)), (' A1135  ASN  OD1', ' A1136  THR  N  ', -0.569, (227.328, 169.291, 282.22)), (' D 240  LEU HD11', ' D 444  LEU  CD2', -0.569, (250.392, 253.072, 113.996)), (' A 644  GLN  NE2', ' A 648  GLY  O  ', -0.569, (254.506, 219.774, 248.082)), (' A 780  GLU  O  ', ' A 784  GLN  NE2', -0.565, (205.94, 207.134, 248.863)), (' D 261  CYS  HB2', ' D 488  VAL HG23', -0.563, (247.514, 263.556, 100.237)), (' C 409  GLN  OE1', ' C 418  ILE  N  ', -0.563, (245.436, 259.277, 207.784)), (' D 115  ARG  NH1', ' D 182  GLU  OE2', -0.56, (214.749, 273.917, 111.773)), (' B1118  ASP  OD1', ' B1119  ASN  N  ', -0.555, (210.083, 167.36, 268.542)), (' C 866  THR HG23', ' C 868  GLU  H  ', -0.555, (211.988, 189.025, 220.001)), (' B 478  THR  O  ', ' B 487  ASN  ND2', -0.554, (208.949, 279.007, 155.562)), (' D  62  MET  HE3', ' D  62  MET  O  ', -0.553, (210.102, 257.372, 128.247)), (' B 946  GLY  N  ', ' B 949  GLN  OE1', -0.551, (236.343, 194.609, 233.747)), (' C 299  THR HG22', ' C 597  VAL HG21', -0.551, (194.706, 224.934, 228.258)), (' B  31  SER  O  ', ' B  59  PHE  N  ', -0.55, (250.602, 197.135, 198.024)), (' B 334  ASN  O  ', ' B 361  CYS  HB2', -0.55, (202.486, 229.868, 175.511)), (' B 317  ASN  O  ', ' B 625  HIS  ND1', -0.549, (230.173, 206.534, 204.035)), (' A1002  GLN  N  ', ' A1002  GLN  OE1', -0.549, (223.191, 230.592, 224.417)), (' A 214  ARG  NE ', ' A 214  ARG  O  ', -0.548, (251.011, 262.892, 262.748)), (' D 183  TYR  OH ', ' D 187  LYS  NZ ', -0.546, (222.91, 270.88, 121.14)), (' D 398  GLU  OE1', ' D 511  SER  OG ', -0.545, (231.944, 265.089, 127.071)), (' C 905  ARG  NH1', ' C1049  LEU  O  ', -0.545, (206.942, 185.031, 247.513)), (' D 144  LEU  HA ', ' D 148  LEU HD23', -0.542, (223.053, 250.086, 105.478)), (' A 712  ILE  O  ', ' A1075  PHE  N  ', -0.539, (233.451, 186.741, 277.409)), (' A 295  PRO  O  ', ' A 299  THR HG23', -0.539, (242.484, 235.533, 250.595)), (' A 725  GLU  OE1', ' A1064  HIS  NE2', -0.536, (217.962, 207.426, 258.461)), (' B 344  ALA  O  ', ' B 509  ARG  NH1', -0.534, (204.556, 239.225, 156.632)), (' D 252  TYR  HB3', ' D 255  TYR  HB2', -0.531, (248.843, 249.785, 93.452)), (' D 299  ASP  OD1', ' D 300  GLN  N  ', -0.53, (238.167, 223.087, 122.98)), (' B1129  VAL  HB ', ' B1132  ILE HD11', -0.53, (195.385, 167.961, 256.127)), (' A 884  SER  OG ', ' A 887  THR  OG1', -0.526, (198.066, 199.035, 263.008)), (' B1091  ARG  NE ', ' B1118  ASP  O  ', -0.526, (207.771, 171.39, 268.735)), (' D 208  GLU  OE2', ' D 210  ASN  ND2', -0.524, (234.608, 279.773, 137.168)), (' A 736  VAL HG22', ' A 858  LEU  CD2', -0.523, (213.959, 232.381, 235.302)), (' A  94  SER  O  ', ' A 190  ARG  N  ', -0.523, (241.422, 267.032, 256.443)), (' A 383  SER  N  ', ' B 983  ARG  O  ', -0.522, (249.152, 241.748, 210.465)), (' C 395  VAL  O  ', ' C 395  VAL HG12', -0.521, (229.251, 268.012, 220.676)), (' D 240  LEU HD11', ' D 444  LEU HD23', -0.521, (250.024, 253.8, 114.468)), (' D 117  ASN  O  ', ' D 121  ASN  ND2', -0.52, (212.004, 265.7, 117.555)), (' B 990  GLU  N  ', ' B 990  GLU  OE1', -0.52, (239.446, 241.97, 216.519)), (' C 362  VAL HG23', ' C 527  PRO  HD3', -0.519, (215.544, 270.794, 220.418)), (' B 581  THR  O  ', ' B 581  THR HG22', -0.516, (199.736, 211.265, 181.697)), (' B 501  ASN  O  ', ' B 506  GLN  NE2', -0.515, (216.319, 242.919, 144.678)), (' D 209  VAL HG12', ' D 217  TYR  HB2', -0.514, (239.77, 274.16, 138.141)), (' A1031  GLU  OE2', ' C1039  ARG  NH2', -0.513, (213.792, 198.702, 250.075)), (' D 494  ASP  OD2', ' D 496  THR HG22', -0.513, (228.558, 272.467, 97.229)), (' C 130  VAL  O  ', ' C 130  VAL HG22', -0.513, (194.896, 246.881, 183.517)), (' C 763  LEU HD23', ' C1008  VAL HG21', -0.513, (224.853, 214.666, 220.16)), (' B 725  GLU  OE1', ' B1064  HIS  NE2', -0.512, (228.615, 191.31, 245.279)), (' D 139  GLN  O  ', ' D 140  GLU  HG2', -0.512, (215.804, 244.421, 94.13)), (' D  85  LEU HD13', ' D  88  ILE HD12', -0.512, (226.258, 277.399, 146.658)), (' B 779  GLN  O  ', ' B 783  ALA  N  ', -0.511, (234.299, 205.495, 255.038)), (' A 310  LYS  NZ ', ' A 663  ASP  OD2', -0.507, (236.617, 221.884, 260.764)), (' D 544  ILE  O  ', ' D 547  SER  OG ', -0.505, (247.863, 244.269, 141.771)), (' A 566  GLY  N  ', ' A 575  ALA  O  ', -0.505, (260.483, 220.583, 218.269)), (' C 316  SER  OG ', ' C 317  ASN  N  ', -0.504, (201.262, 233.679, 226.672)), (' D 142  LEU  H  ', ' D 142  LEU HD23', -0.503, (221.147, 246.491, 101.142)), (' C 979  ASP  OD2', ' C 980  ILE  N  ', -0.503, (220.189, 227.786, 199.059)), (' D 303  ASP  N  ', ' D 303  ASP  OD1', -0.502, (230.853, 228.156, 127.025)), (' A 108  THR  OG1', ' A 234  ASN  O  ', -0.498, (248.382, 268.153, 232.18)), (' B 332  ILE  O  ', ' B 332  ILE HG23', -0.492, (202.479, 221.115, 175.28)), (' A 902  MET  HA ', ' A 902  MET  HE3', -0.491, (209.484, 198.013, 270.545)), (' C 866  THR HG22', ' C 869  MET  HE1', -0.49, (215.286, 188.231, 219.602)), (' C 115  GLN  HB2', ' C 233  ILE  CD1', -0.49, (196.998, 248.039, 187.347)), (' B 760  CYS  HA ', ' B 763  LEU HD12', -0.489, (233.64, 228.618, 232.729)), (' C 518  LEU HD23', ' C 520  ALA  H  ', -0.489, (229.756, 261.385, 232.337)), (' B 332  ILE HG22', ' B1301  NAG  H83', -0.487, (204.328, 218.613, 175.091)), (' C 108  THR  OG1', ' C 234  ASN  O  ', -0.487, (195.007, 249.529, 194.248)), (' C 827  THR  O  ', ' C 827  THR HG22', -0.484, (202.553, 205.02, 218.428)), (' D 379  ILE HG22', ' D 383  MET  HE1', -0.484, (227.95, 246.595, 138.207)), (' B  29  THR  O  ', ' B  62  VAL  N  ', -0.484, (252.315, 196.909, 191.125)), (' B1082  CYS  SG ', ' B1132  ILE HG21', -0.484, (196.126, 163.572, 257.716)), (' C 485  GLY  N  ', ' C 488  CYS  SG ', -0.483, (267.815, 268.284, 207.798)), (' B 405  ASP  N  ', ' B 504  GLY  O  ', -0.482, (220.169, 247.754, 151.706)), (' C 388  ASN  OD1', ' C 389  ASP  N  ', -0.481, (214.686, 262.0, 218.661)), (' C 578  ASP  OD2', ' C 581  THR  OG1', -0.481, (210.288, 265.813, 240.256)), (' C  85  PRO  HG2', ' C  87  ASN HD21', -0.481, (188.016, 247.684, 205.059)), (' C 280  ASN  OD1', ' C 281  GLU  N  ', -0.476, (191.453, 211.402, 206.665)), (' D 152  MET  HE1', ' D 270  MET  HA ', -0.475, (234.379, 254.933, 105.991)), (' A1054  GLN  N  ', ' A1061  VAL  O  ', -0.474, (211.016, 213.523, 260.497)), (' C 532  ASN  OD1', ' C 533  LEU  N  ', -0.473, (204.359, 263.856, 235.649)), (' A 985  ASP  N  ', ' A 985  ASP  OD1', -0.473, (220.122, 251.967, 213.23)), (' C 882  ILE HG23', ' C 883  THR HG23', -0.472, (206.069, 176.205, 237.946)), (' D  47  SER  O  ', ' D  51  ASN  ND2', -0.472, (215.172, 251.376, 125.82)), (' A 316  SER  OG ', ' A 317  ASN  N  ', -0.471, (245.082, 233.185, 240.832)), (' A 827  THR  O  ', ' A 827  THR HG22', -0.471, (218.072, 232.703, 253.538)), (' C  34  ARG  NE ', ' C 219  GLY  O  ', -0.471, (179.982, 226.287, 206.963)), (' D 242  ALA  HA ', ' D 245  ARG  HE ', -0.47, (255.648, 256.842, 106.852)), (' B 328  ARG  NH1', ' B 531  THR  O  ', -0.47, (211.734, 212.414, 180.071)), (' D 152  MET  HE1', ' D 270  MET  HB2', -0.47, (233.346, 254.359, 106.174)), (' D 152  MET  HE1', ' D 270  MET  CB ', -0.469, (233.739, 254.664, 106.075)), (' C 462  LYS  N  ', ' C 465  GLU  OE1', -0.469, (248.16, 259.925, 220.588)), (' D 132  VAL  O  ', ' D 132  VAL HG22', -0.469, (223.502, 249.877, 97.228)), (' B 137  ASN  OD1', ' B 138  ASP  N  ', -0.468, (267.188, 210.518, 170.067)), (' C 436  TRP  O  ', ' C 509  ARG  N  ', -0.466, (234.829, 269.985, 203.567)), (' B 327  VAL  N  ', ' B 531  THR  OG1', -0.465, (214.725, 214.67, 184.504)), (' A 703  ASN  ND2', ' B 787  GLN  OE1', -0.463, (238.27, 199.459, 269.793)), (' D 501  ALA  O  ', ' D 507  SER  OG ', -0.463, (225.77, 264.885, 112.474)), (' B 280  ASN  OD1', ' B 284  THR  N  ', -0.463, (260.734, 205.747, 216.127)), (' B 266  TYR  CD2', ' B 266  TYR  N  ', -0.463, (260.819, 199.09, 189.641)), (' C 661  GLU  OE1', ' C 662  CYS  N  ', -0.462, (191.889, 214.544, 245.968)), (' B 327  VAL HG13', ' B 542  ASN  O  ', -0.46, (213.364, 218.984, 187.162)), (' C 738  CYS  HB2', ' C 760  CYS  HB2', -0.46, (227.754, 215.104, 214.02)), (' A1010  GLN  OE1', ' A1014  ARG  NH1', -0.46, (222.255, 223.927, 239.999)), (' C 914  ASN  OD1', ' C 915  VAL  N  ', -0.457, (197.222, 177.197, 259.956)), (' B 773  GLU  OE1', ' B 777  ASN  ND2', -0.457, (231.002, 211.369, 244.972)), (' A 859  THR  OG1', ' C 614  ASP  OD2', -0.455, (205.55, 233.102, 239.362)), (' A 964  LYS  O  ', ' A 967  SER  OG ', -0.455, (225.613, 241.053, 234.518)), (' A1075  PHE  HB3', ' A1096  VAL HG13', -0.455, (230.473, 183.371, 278.982)), (' A 979  ASP  OD2', ' A 983  ARG  NE ', -0.453, (222.934, 252.943, 223.112)), (' A 442  ASP  OD2', ' A 509  ARG  NH2', -0.449, (256.012, 251.978, 185.109)), (' B 339  GLY  O  ', ' B 344  ALA  N  ', -0.449, (203.062, 236.161, 161.072)), (' A  57  PRO  HB2', ' A  60  SER  HB2', -0.447, (248.623, 250.903, 248.935)), (' A 740  MET  HE1', ' C 592  PHE  CD2', -0.447, (205.902, 238.161, 232.802)), (' A  38  TYR  OH ', ' A 283  GLY  O  ', -0.447, (226.601, 255.245, 250.54)), (' A 661  GLU  OE1', ' A 662  CYS  N  ', -0.447, (240.414, 214.303, 261.418)), (' D 527  GLU  OE1', ' D 586  ASN  ND2', -0.446, (256.141, 256.304, 133.83)), (' A 474  GLN  NE2', ' A 476  GLY  O  ', -0.445, (231.199, 229.514, 167.984)), (' A 864  LEU HD11', ' C 665  PRO  HB3', -0.445, (198.085, 218.388, 241.96)), (' A 581  THR  CG2', ' A 581  THR  O  ', -0.443, (274.673, 225.366, 217.38)), (' A 540  ASN  OD1', ' A 541  PHE  N  ', -0.442, (259.188, 234.312, 224.16)), (' B 822  LEU  CD1', ' B 945  LEU HD11', -0.441, (241.147, 194.675, 240.067)), (' A 963  VAL HG12', ' C 570  ALA  HB2', -0.441, (221.323, 241.027, 236.651)), (' C 767  LEU HD21', ' C1008  VAL HG22', -0.439, (223.197, 212.068, 220.988)), (' D 499  ASP  N  ', ' D 500  PRO  HD2', -0.439, (230.755, 267.732, 106.268)), (' A 317  ASN  ND2', ' B 737  ASP  OD2', -0.438, (244.165, 229.149, 236.565)), (' D  74  LYS  HA ', ' D  74  LYS  HE2', -0.438, (214.58, 271.716, 133.909)), (' D 187  LYS  O  ', ' D 190  MET  HG3', -0.436, (223.867, 277.695, 123.402)), (' D 259  ILE  O  ', ' D 259  ILE HG22', -0.436, (255.109, 263.169, 96.825)), (' C 128  ILE HD13', ' C 170  TYR  HD2', -0.436, (191.194, 235.097, 183.674)), (' C 514  SER  OG ', ' C 516  GLU  OE1', -0.435, (231.174, 260.687, 222.561)), (' B 900  MET  N  ', ' B 900  MET  SD ', -0.434, (231.546, 179.778, 267.147)), (' C 650  LEU HD13', ' C 653  ALA  HB3', -0.432, (187.931, 228.84, 239.56)), (' C1054  GLN  N  ', ' C1061  VAL  O  ', -0.432, (205.778, 191.137, 234.486)), (' B 805  ILE HG22', ' B 818  ILE HD12', -0.432, (241.703, 188.899, 249.009)), (' C 518  LEU HD23', ' C 519  HIS  N  ', -0.431, (229.665, 259.882, 232.413)), (' C 739  THR HG23', ' C 740  MET  N  ', -0.431, (227.397, 213.855, 207.085)), (' D 459  TRP  HA ', ' D 462  MET  SD ', -0.431, (237.643, 273.912, 114.625)), (' A 290  ASP  OD1', ' A 291  CYS  N  ', -0.431, (242.422, 244.242, 246.942)), (' A 210  ILE HG21', ' A 217  PRO  CG ', -0.431, (241.01, 260.664, 264.159)), (' B 294  ASP  O  ', ' B 298  GLU  N  ', -0.429, (240.262, 199.238, 207.939)), (' D 152  MET  HE1', ' D 270  MET  CA ', -0.429, (234.031, 254.83, 106.427)), (' C 736  VAL  O  ', ' C 764  ASN  ND2', -0.429, (226.479, 210.097, 214.281)), (' D 238  GLU  HA ', ' D 238  GLU  OE1', -0.428, (254.493, 262.586, 111.109)), (' B1039  ARG  NH2', ' C1031  GLU  OE2', -0.426, (218.174, 195.045, 247.578)), (' C 902  MET  HB2', ' C 916  LEU HD21', -0.425, (200.545, 176.99, 250.545)), (' D 364  VAL  O  ', ' D 364  VAL HG23', -0.425, (232.76, 233.048, 117.45)), (' C 125  ASN  N  ', ' C 125  ASN  OD1', -0.425, (181.778, 232.487, 179.642)), (' B 210  ILE HG21', ' B 217  PRO  CG ', -0.424, (264.08, 194.067, 199.796)), (' B 763  LEU HD21', ' B1005  GLN  OE1', -0.424, (230.659, 225.079, 231.972)), (' C 138  ASP  N  ', ' C 138  ASP  OD1', -0.423, (176.161, 255.487, 186.96)), (' B 210  ILE HG22', ' B 211  ASN  N  ', -0.423, (267.095, 192.736, 199.916)), (' C  29  THR  N  ', ' C  62  VAL  O  ', -0.422, (176.85, 240.187, 209.73)), (' A 914  ASN  OD1', ' A 915  VAL  N  ', -0.422, (213.148, 189.942, 278.483)), (' C 868  GLU  OE2', ' C 872  GLN  NE2', -0.422, (211.995, 181.992, 221.865)), (' A 138  ASP  N  ', ' A 138  ASP  OD1', -0.422, (258.868, 282.582, 244.744)), (' C 365  TYR  HD2', ' C 387  LEU HD13', -0.42, (220.686, 265.248, 216.255)), (' A  83  VAL HG22', ' A 239  GLN  HB2', -0.419, (255.429, 271.314, 241.906)), (' C 777  ASN  O  ', ' C 781  VAL HG12', -0.419, (217.281, 194.196, 232.328)), (' C  87  ASN  ND2', ' C 269  TYR  CE1', -0.419, (187.705, 245.76, 205.539)), (' A 314  GLN  NE2', ' A 316  SER  O  ', -0.419, (244.134, 229.986, 242.964)), (' A 303  LEU HD22', ' A 308  VAL HG12', -0.419, (234.626, 233.746, 253.39)), (' A  46  SER  N  ', ' A 279  TYR  O  ', -0.418, (223.188, 247.551, 251.325)), (' D 117  ASN  OD1', ' D 118  THR  N  ', -0.416, (211.516, 269.17, 118.853)), (' D  56  GLU  O  ', ' D  59  VAL HG12', -0.416, (204.063, 252.759, 120.329)), (' B 985  ASP  O  ', ' B 989  ALA  N  ', -0.416, (242.383, 243.08, 214.936)), (' D 455  MET  SD ', ' D 456  LEU  N  ', -0.415, (239.432, 266.481, 114.77)), (' A 869  MET  N  ', ' A 869  MET  SD ', -0.415, (199.701, 220.645, 254.25)), (' B 130  VAL  O  ', ' B 130  VAL HG12', -0.415, (264.114, 225.659, 184.719)), (' B 214  ARG  O  ', ' B 266  TYR  OH ', -0.413, (262.12, 193.44, 190.932)), (' A 357  ARG  NH1', ' A 393  THR  OG1', -0.412, (260.582, 231.578, 201.643)), (' C 210  ILE HG22', ' C 212  LEU  H  ', -0.41, (170.733, 225.913, 202.518)), (' B1127  ASP  OD1', ' B1128  VAL  N  ', -0.409, (189.199, 168.165, 257.395)), (' A 467  ASP  N  ', ' A 467  ASP  OD1', -0.408, (246.504, 233.392, 182.808)), (' A 339  GLY  HA2', ' H   1  NAG  H82', -0.407, (263.284, 249.219, 195.278)), (' A 611  LEU HD22', ' A 666  ILE HG23', -0.407, (245.769, 222.07, 251.058)), (' D  41  TYR  CD2', ' D  41  TYR  O  ', -0.406, (212.472, 252.178, 137.558)), (' C  98  SER  OG ', ' C  99  ASN  N  ', -0.406, (170.92, 234.776, 189.515)), (' D 445  THR HG23', ' D 446  ILE HG13', -0.406, (244.351, 251.528, 121.55)), (' A 742  ILE HD12', ' A 753  LEU HD21', -0.405, (216.018, 235.535, 222.415)), (' B 105  ILE  N  ', ' B 239  GLN  O  ', -0.404, (264.382, 211.016, 182.882)), (' C 758  SER  O  ', ' C 758  SER  OG ', -0.404, (235.379, 214.848, 216.71)), (' C 712  ILE  O  ', ' C1075  PHE  N  ', -0.404, (190.994, 193.473, 270.51)), (' D 467  GLU  O  ', ' D 468  ILE HD13', -0.403, (237.145, 281.484, 112.269)), (' D  60  GLN  O  ', ' D  63  ASN  OD1', -0.403, (204.616, 257.51, 125.298)), (' C 309  GLU  O  ', ' C 313  TYR  OH ', -0.403, (194.412, 217.467, 229.324)), (' B1006  THR  O  ', ' B1009  THR  OG1', -0.403, (229.26, 217.673, 228.656)), (' D 258  PRO  O  ', ' D 259  ILE HD13', -0.401, (257.237, 258.969, 97.34)), (' A 897  PRO  HG2', ' A 900  MET  HE2', -0.401, (199.693, 196.177, 274.238)), (' B 332  ILE HG22', ' B1301  NAG  C8 ', -0.401, (204.575, 218.226, 175.73)), (' D  60  GLN  HA ', ' D  63  ASN  OD1', -0.401, (204.566, 257.428, 124.272)), (' B 395  VAL  CG1', ' B 395  VAL  O  ', -0.4, (209.077, 240.176, 174.019))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

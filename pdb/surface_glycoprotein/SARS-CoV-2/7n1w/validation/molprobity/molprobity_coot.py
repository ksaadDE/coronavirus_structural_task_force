# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  88 ', 'ASP', 0.048230771017000976, (196.14000000000013, 235.611, 176.319)), ('A', ' 149 ', 'ASN', 0.02482767282764759, (168.168, 272.00499999999994, 170.561)), ('A', ' 316 ', 'SER', 0.008879765887833123, (203.76300000000003, 223.01899999999995, 196.45299999999997)), ('A', ' 449 ', 'TYR', 0.015198495564704272, (236.8910000000001, 210.63, 126.118)), ('A', ' 487 ', 'ASN', 0.026630152506002383, (222.58900000000008, 195.17599999999993, 114.26600000000002)), ('A', ' 582 ', 'LEU', 0.010116457904470397, (239.766, 213.493, 182.485)), ('B', ' 518 ', 'LEU', 0.039227513266901076, (191.60500000000002, 171.71999999999994, 176.462)), ('B', ' 744 ', 'GLY', 0.04454684562122478, (212.46000000000004, 213.256, 187.937)), ('C', '  88 ', 'ASP', 0.0387711287580318, (166.724, 178.33799999999994, 175.64499999999998)), ('C', ' 112 ', 'SER', 0.03589831609855515, (160.551, 170.542, 154.756)), ('C', ' 123 ', 'ALA', 0.03226365851488052, (162.298, 148.563, 169.146)), ('C', ' 132 ', 'GLU', 0.04336176243011351, (164.685, 168.565, 155.073)), ('C', ' 149 ', 'ASN', 0.03697994321434219, (148.249, 137.313, 168.313)), ('C', ' 150 ', 'LYS', 0.0073712527050646594, (150.411, 138.734, 171.136)), ('C', ' 158 ', 'ARG', 0.02149707715164192, (153.866, 158.17899999999995, 160.203)), ('C', ' 164 ', 'ASN', 0.02309691274158737, (165.13200000000006, 165.96, 150.037)), ('C', ' 637 ', 'SER', 0.01424669127828695, (157.111, 191.387, 198.434))]
data['omega'] = []
data['rota'] = [('A', '  96 ', 'GLU', 0.24974065048715802, (181.22800000000018, 255.518, 182.739)), ('A', ' 109 ', 'THR', 0.26717488625870983, (197.29700000000014, 243.906, 160.779)), ('A', ' 357 ', 'ARG', 0.015498856541760501, (232.643, 201.57199999999997, 152.521)), ('A', ' 422 ', 'ASN', 0.05285042898037391, (223.629, 201.537, 135.621)), ('A', ' 577 ', 'ARG', 0.0002445644262233784, (234.593, 211.46, 185.019)), ('A', ' 884 ', 'SER', 0.24954284410781774, (177.99100000000016, 202.05999999999992, 245.24599999999998)), ('B', '  29 ', 'THR', 0.18651808656550373, (242.44400000000007, 171.755, 187.00499999999997)), ('B', ' 326 ', 'ILE', 0.08743908479134795, (206.41600000000005, 162.373, 178.627)), ('B', ' 564 ', 'GLN', 0.2161851350665342, (188.868, 162.85599999999994, 181.312)), ('B', ' 572 ', 'THR', 0.23193558180851143, (193.531, 173.105, 189.352)), ('B', ' 586 ', 'ASP', 0.1443086185649905, (196.54700000000008, 161.085, 190.244)), ('B', ' 773 ', 'GLU', 0.21415499676381422, (203.321, 211.367, 215.039)), ('C', '  14 ', 'GLN', 0.04116729695705909, (151.71500000000006, 157.30299999999997, 154.92699999999996)), ('C', ' 169 ', 'GLU', 0.27008339199528825, (172.92600000000002, 160.166, 160.273)), ('C', ' 357 ', 'ARG', 0.034139359399945154, (182.735, 224.874, 160.46299999999997)), ('C', ' 422 ', 'ASN', 0.265348100147635, (202.09000000000003, 220.86399999999992, 157.048)), ('C', ' 466 ', 'ARG', 0.021536649334289924, (198.12100000000007, 226.62099999999995, 159.057)), ('C', ' 570 ', 'ASP', 0.21908656585272043, (181.153, 214.4, 192.896)), ('C', ' 620 ', 'VAL', 0.054393712304542124, (159.888, 197.707, 197.434)), ('C', ' 760 ', 'CYS', 0.06658192723989487, (209.426, 189.25099999999998, 195.567)), ('C', ' 763 ', 'LEU', 0.182416065844814, (206.948, 189.55699999999996, 199.951)), ('C', ' 993 ', 'ILE', 0.21429243957162744, (201.931, 186.242, 180.749)), ('C', '1145 ', 'LEU', 0.12506063062273864, (193.016, 197.5510000000001, 285.783))]
data['cbeta'] = [('A', ' 198 ', 'ASP', ' ', 0.30445657895783107, (190.47, 226.212, 170.728)), ('A', ' 340 ', 'GLU', ' ', 0.26438679837554935, (240.839, 210.4979999999999, 150.217)), ('A', ' 590 ', 'CYS', ' ', 0.25390628754298067, (220.349, 221.088, 192.198)), ('A', ' 617 ', 'CYS', ' ', 0.29305530018561887, (217.114, 230.4979999999999, 202.916)), ('A', ' 745 ', 'ASP', ' ', 0.30191193799641275, (174.293, 201.882, 186.244)), ('B', '  99 ', 'ASN', ' ', 0.2532853379975238, (255.86, 186.402, 174.50699999999998)), ('B', ' 487 ', 'ASN', ' ', 0.27152274768667456, (162.577, 202.04999999999998, 148.48)), ('B', ' 536 ', 'ASN', ' ', 0.35205287172910077, (205.649, 155.939, 191.265)), ('B', ' 745 ', 'ASP', ' ', 0.33779475218787225, (213.926, 217.03799999999993, 185.731)), ('B', '1145 ', 'LEU', ' ', 0.2549048041318673, (199.604, 195.46000000000004, 285.467)), ('C', ' 273 ', 'ARG', ' ', 0.2998640940068584, (169.698, 179.74, 186.992)), ('C', ' 405 ', 'ASP', ' ', 0.26470012956598626, (202.489, 206.333, 149.159)), ('C', ' 422 ', 'ASN', ' ', 0.25043915423480534, (202.17100000000002, 220.70799999999997, 155.522)), ('C', ' 487 ', 'ASN', ' ', 0.2779183684541351, (221.77100000000004, 225.414, 151.40399999999997)), ('C', ' 501 ', 'TYR', ' ', 0.27799939244411825, (201.703, 208.09799999999998, 138.83099999999996)), ('C', ' 620 ', 'VAL', ' ', 0.3126428045240041, (160.299, 196.83, 198.635)), ('C', ' 745 ', 'ASP', ' ', 0.3442429435713043, (206.835, 174.443, 187.235))]
data['probe'] = [(' C 295  PRO  HG2', ' C 636  TYR  CE2', -1.636, (163.289, 186.133, 200.472)), (' A 421  TYR  CE1', ' A 457  ARG  HB2', -1.574, (219.654, 198.594, 128.642)), (' B 616  ASN HD21', ' P   1  NAG  C1 ', -1.572, (209.255, 159.83, 203.823)), (' A 421  TYR  CD1', ' A 457  ARG  HB2', -1.556, (220.957, 199.222, 128.67)), (' C 165  ASN  ND2', ' X   1  NAG  C1 ', -1.524, (168.628, 169.376, 147.528)), (' A1158  ASN HD21', ' A1411  NAG  C1 ', -1.521, (189.784, 207.203, 303.611)), (' A  17  ASN HD21', ' D   1  NAG  C1 ', -1.516, (196.654, 261.26, 158.685)), (' B 343  ASN HD21', ' B1405  NAG  C1 ', -1.51, (196.177, 170.279, 145.737)), (' B 165  ASN  ND2', ' N   1  NAG  C1 ', -1.508, (233.4, 190.158, 148.109)), (' A 423  TYR  CE2', ' A 425  LEU HD11', -1.505, (220.583, 206.57, 141.205)), (' C 295  PRO  CG ', ' C 636  TYR  HE2', -1.467, (164.094, 185.663, 199.862)), (' A 234  ASN HD21', ' A1405  NAG  C1 ', -1.443, (199.185, 235.783, 163.632)), (' C 122  ASN HD21', ' W   1  NAG  C1 ', -1.441, (163.14, 151.052, 162.702)), (' B1107  ARG  HD3', ' C 904  TYR  CE1', -1.432, (201.946, 186.848, 253.585)), (' C 905  ARG  NH1', ' C1050  MET  HB3', -1.343, (196.03, 184.608, 243.196)), (' A  17  ASN  ND2', ' D   1  NAG  C1 ', -1.341, (195.779, 262.008, 159.362)), (' A 421  TYR  CD1', ' A 457  ARG  CB ', -1.339, (221.426, 198.359, 128.449)), (' A  57  PRO  HB3', ' A 273  ARG  NH1', -1.323, (198.349, 236.961, 188.264)), (' A1107  ARG  NH2', ' B 904  TYR  CE1', -1.312, (207.095, 206.145, 254.385)), (' A1107  ARG  CZ ', ' B 904  TYR  CE1', -1.304, (206.259, 207.277, 253.183)), (' A1158  ASN  ND2', ' A1411  NAG  C1 ', -1.3, (190.791, 207.634, 303.209)), (' B 343  ASN  ND2', ' B1405  NAG  C1 ', -1.293, (195.384, 169.863, 145.787)), (' A 437  ASN  HB3', ' A 508  TYR  CE1', -1.292, (227.802, 221.625, 135.56)), (' B 616  ASN  ND2', ' P   1  NAG  C1 ', -1.289, (208.488, 160.578, 203.434)), (' A  16  VAL HG21', ' A 158  ARG  NH1', -1.225, (186.314, 264.214, 160.382)), (' B 102  ARG  NH2', ' B 122  ASN  HA ', -1.222, (254.898, 188.389, 166.177)), (' A 423  TYR  CE2', ' A 425  LEU  CD1', -1.201, (219.744, 205.807, 141.471)), (' C 905  ARG HH12', ' C1050  MET  CB ', -1.2, (196.656, 183.406, 242.284)), (' C 295  PRO  CG ', ' C 636  TYR  CE2', -1.2, (164.179, 186.602, 199.733)), (' A 815  ARG  HD2', ' A 820  ASP  OD1', -1.188, (171.882, 216.704, 224.213)), (' A 423  TYR  CZ ', ' A 425  LEU HD11', -1.174, (221.495, 206.108, 141.923)), (' A1107  ARG  NH2', ' B 904  TYR  HE1', -1.157, (206.277, 206.012, 255.278)), (' C 122  ASN  ND2', ' W   1  NAG  C1 ', -1.15, (162.15, 150.883, 163.239)), (' C1138  TYR  OH ', ' C1143  PRO  HG3', -1.148, (187.31, 195.484, 279.024)), (' A 234  ASN  ND2', ' A1405  NAG  C1 ', -1.145, (198.453, 235.651, 163.217)), (' A 421  TYR  HD1', ' A 457  ARG  CG ', -1.131, (221.987, 198.026, 129.729)), (' C 355  ARG  HD3', ' C 396  TYR  HE2', -1.119, (187.838, 225.522, 161.942)), (' B 674  TYR  CE1', ' B 690  GLN  HB3', -1.094, (232.402, 173.815, 215.978)), (' A 421  TYR  CD1', ' A 457  ARG  CG ', -1.092, (221.628, 199.08, 128.995)), (' C 295  PRO  HG2', ' C 636  TYR  CZ ', -1.091, (163.578, 185.715, 201.882)), (' B1107  ARG  CD ', ' C 904  TYR  CE1', -1.074, (202.09, 187.806, 253.138)), (' A 421  TYR  CE1', ' A 457  ARG  CB ', -1.071, (221.055, 198.04, 128.078)), (' A 815  ARG  CD ', ' A 820  ASP  OD1', -1.061, (172.972, 215.832, 224.276)), (' C 421  TYR  CD1', ' C 457  ARG  HB3', -1.053, (209.141, 222.613, 157.997)), (' C  21  ARG  HB2', ' C  78  ARG  NH2', -1.05, (142.193, 164.22, 173.282)), (' A 421  TYR  HD1', ' A 457  ARG  CB ', -1.044, (221.631, 197.664, 129.713)), (' C 343  ASN  ND2', ' C1404  NAG  C1 ', -1.03, (178.619, 213.871, 145.826)), (' C 355  ARG  HD3', ' C 396  TYR  CE2', -1.012, (187.968, 224.26, 162.174)), (' B 905  ARG  NH1', ' B1050  MET  HB3', -1.007, (211.206, 203.944, 242.73)), (' A1107  ARG  NE ', ' B 904  TYR  CE1', -1.001, (206.227, 207.775, 253.396)), (' A1107  ARG  CZ ', ' B 904  TYR  CD1', -0.999, (206.699, 206.705, 252.814)), (' A  57  PRO  CB ', ' A 273  ARG  NH1', -0.986, (197.703, 237.029, 187.936)), (' A 410  ILE HG23', ' A 423  TYR  CE2', -0.986, (221.543, 207.833, 140.553)), (' C 421  TYR  HD1', ' C 457  ARG  HB3', -0.985, (208.447, 223.575, 158.348)), (' B  57  PRO  HB3', ' B 273  ARG  NH1', -0.961, (230.088, 178.274, 188.528)), (' A 421  TYR  HD1', ' A 457  ARG  HG3', -0.955, (222.115, 198.477, 130.494)), (' C 608  VAL HG23', ' C 636  TYR  OH ', -0.953, (165.187, 185.358, 203.999)), (' B 957  GLN HE22', ' C 765  ARG  NH1', -0.932, (216.402, 192.31, 204.332)), (' C  24  LEU HD23', ' C  78  ARG  NH1', -0.93, (140.898, 165.922, 175.975)), (' A 437  ASN  CB ', ' A 508  TYR  CE1', -0.929, (228.408, 221.705, 135.893)), (' A1107  ARG HH21', ' B 904  TYR  HE1', -0.923, (205.953, 206.809, 255.559)), (' A 421  TYR  HE1', ' A 457  ARG  HB2', -0.918, (219.829, 197.855, 128.17)), (' B 501  TYR  CE1', ' B 505  TYR  CD1', -0.916, (187.941, 194.062, 138.976)), (' A  57  PRO  HB3', ' A 273  ARG HH11', -0.91, (197.002, 236.702, 188.702)), (' C 357  ARG  HG2', ' C 357  ARG HH11', -0.909, (182.102, 227.564, 162.53)), (' A 437  ASN  HB3', ' A 508  TYR  HE1', -0.904, (227.556, 222.595, 136.645)), (' C 124  THR HG23', ' C 175  PHE  O  ', -0.898, (167.587, 144.518, 167.861)), (' A 896  ILE HD12', ' C1107  ARG HH12', -0.891, (181.256, 201.759, 250.978)), (' A 422  ASN  HB3', ' A 454  ARG  NH1', -0.883, (226.396, 201.152, 134.057)), (' B 102  ARG HH21', ' B 122  ASN  HA ', -0.881, (254.122, 187.936, 166.391)), (' C 905  ARG HH12', ' C1050  MET  HB3', -0.879, (196.397, 183.034, 243.181)), (' C 343  ASN HD21', ' C1404  NAG  C1 ', -0.872, (178.675, 213.049, 146.575)), (' A  16  VAL  CG2', ' A 158  ARG  NH1', -0.864, (187.063, 263.408, 160.14)), (' B 674  TYR  CZ ', ' B 690  GLN  HB3', -0.863, (233.058, 173.905, 215.605)), (' C 102  ARG  HA ', ' C 102  ARG  HE ', -0.853, (159.932, 155.45, 172.459)), (' A 437  ASN  HA ', ' A 508  TYR  CD1', -0.849, (228.872, 220.226, 136.709)), (' A 437  ASN  CA ', ' A 508  TYR  CD1', -0.846, (228.646, 220.694, 136.729)), (' B 501  TYR  CE1', ' B 505  TYR  CE1', -0.846, (186.394, 194.161, 138.681)), (' B 559  PHE  HB2', ' B 577  ARG HH21', -0.843, (187.482, 158.016, 184.5)), (' B1107  ARG  HD3', ' C 904  TYR  HE1', -0.841, (201.744, 187.701, 254.987)), (' A 421  TYR  CD1', ' A 457  ARG  HG3', -0.834, (221.404, 199.09, 130.276)), (' C  21  ARG  NH1', ' C  79  PHE  O  ', -0.834, (147.247, 164.125, 170.172)), (' C 466  ARG  HB3', ' C 466  ARG HH11', -0.822, (195.375, 228.179, 158.438)), (' A 896  ILE HD12', ' C1107  ARG  NH1', -0.813, (181.986, 201.338, 250.949)), (' A1107  ARG  NE ', ' B 904  TYR  CZ ', -0.811, (207.116, 208.482, 253.567)), (' D   1  NAG  H62', ' D   2  NAG  C7 ', -0.809, (201.032, 258.964, 159.401)), (' B 905  ARG HH12', ' B1050  MET  CB ', -0.808, (211.783, 204.478, 241.881)), (' A 353  TRP  CZ3', ' A 466  ARG  NH2', -0.805, (228.697, 199.776, 142.249)), (' B1094  VAL  HB ', ' C 904  TYR  OH ', -0.805, (204.065, 184.883, 256.431)), (' C 610  VAL HG23', ' C 636  TYR  CZ ', -0.802, (164.19, 187.212, 203.018)), (' B 905  ARG HH12', ' B1050  MET  HB3', -0.798, (211.259, 204.463, 242.752)), (' A 422  ASN  HB3', ' A 454  ARG HH11', -0.789, (225.714, 201.245, 133.556)), (' C 466  ARG  CB ', ' C 466  ARG HH11', -0.783, (196.07, 227.712, 157.937)), (' B 559  PHE  CB ', ' B 577  ARG HH21', -0.782, (186.77, 158.689, 184.794)), (' A 437  ASN  N  ', ' A 508  TYR  HD1', -0.782, (228.228, 220.357, 138.088)), (' A 457  ARG HH12', ' A 461  LEU HD23', -0.781, (222.497, 196.47, 134.13)), (' C 905  ARG  NH1', ' C1049  LEU  O  ', -0.773, (196.378, 185.39, 243.479)), (' C 421  TYR  HD1', ' C 457  ARG  CB ', -0.772, (207.939, 223.613, 158.35)), (' A 346  ARG  HD3', ' A 346  ARG  O  ', -0.769, (238.75, 208.984, 139.574)), (' C  78  ARG  HA ', ' C  78  ARG  HE ', -0.766, (143.109, 162.024, 174.693)), (' C  21  ARG  HB2', ' C  78  ARG HH21', -0.764, (141.844, 163.838, 173.265)), (' B 674  TYR  OH ', ' B 690  GLN  HB2', -0.762, (234.248, 173.264, 214.596)), (' A1138  TYR  OH ', ' A1143  PRO  HG3', -0.759, (200.0, 210.161, 278.843)), (' B1107  ARG  HD3', ' C 904  TYR  CD1', -0.744, (201.686, 187.422, 253.17)), (' B 561  PRO  HA ', ' B 577  ARG HH12', -0.744, (185.206, 157.416, 181.205)), (' A 404  GLY  HA3', ' A 508  TYR  CD2', -0.743, (225.0, 218.115, 134.157)), (' C 905  ARG  NH1', ' C1050  MET  CB ', -0.741, (195.383, 183.885, 243.245)), (' B 577  ARG  HE ', ' B 584  ILE HD11', -0.74, (189.442, 157.707, 183.332)), (' B 501  TYR  CD1', ' B 505  TYR  CD1', -0.737, (187.941, 193.546, 138.953)), (' A  83  VAL  CG1', ' A 237  ARG  HE ', -0.735, (197.025, 248.807, 167.438)), (' B 957  GLN  NE2', ' C 765  ARG  NH1', -0.729, (216.259, 193.092, 204.315)), (' C 395  VAL HG21', ' C 524  VAL HG21', -0.728, (178.456, 218.837, 163.742)), (' C  21  ARG  HB2', ' C  78  ARG HH22', -0.728, (141.328, 165.168, 173.323)), (' C 319  ARG  HG2', ' C 592  PHE  CB ', -0.726, (170.096, 200.512, 193.167)), (' A 618  THR HG21', ' F   1  NAG  O6 ', -0.725, (224.439, 229.967, 200.488)), (' F   1  NAG  O4 ', ' F   2  NAG  O7 ', -0.723, (227.559, 230.46, 203.168)), (' A 996  LEU  O  ', ' A1000  ARG  HG3', -0.718, (188.84, 202.519, 187.008)), (' A 357  ARG  CZ ', ' A 357  ARG  HB3', -0.714, (234.044, 199.388, 153.31)), (' F   1  NAG  H62', ' F   2  NAG  C7 ', -0.714, (227.82, 230.18, 201.118)), (' A 869  MET  HE1', ' C 669  GLY  HA2', -0.713, (170.319, 200.64, 219.455)), (' A 213  VAL HG23', ' A 214  ARG  HD2', -0.711, (187.443, 260.213, 192.593)), (' A1107  ARG  NH2', ' B 904  TYR  CD1', -0.709, (206.577, 205.69, 253.938)), (' A 603  ASN  HB3', ' A1408  NAG  O5 ', -0.707, (187.198, 235.436, 212.888)), (' B 674  TYR  CE1', ' B 690  GLN  CB ', -0.707, (233.887, 173.741, 216.198)), (' C  21  ARG  CB ', ' C  78  ARG HH21', -0.707, (141.72, 163.737, 172.457)), (' B 102  ARG  HE ', ' B 141  LEU HD22', -0.702, (253.453, 185.554, 166.628)), (' B 342  PHE  CE2', ' B 368  LEU HD21', -0.702, (194.942, 173.344, 153.978)), (' B 102  ARG HH22', ' B 122  ASN  HA ', -0.7, (255.171, 188.567, 167.173)), (' C  24  LEU HD23', ' C  78  ARG HH12', -0.699, (141.243, 166.308, 175.992)), (' C 319  ARG  HG2', ' C 592  PHE  HB2', -0.696, (171.233, 199.923, 193.189)), (' C 295  PRO  CD ', ' C 636  TYR  HE2', -0.696, (163.848, 185.59, 199.859)), (' A 983  ARG  HD2', ' C 517  LEU HD22', -0.695, (182.494, 211.711, 172.394)), (' C1138  TYR  OH ', ' C1143  PRO  CG ', -0.694, (187.655, 195.626, 279.752)), (' A1094  VAL  HB ', ' B 904  TYR  OH ', -0.693, (207.574, 210.125, 255.684)), (' C 466  ARG  HB3', ' C 466  ARG  NH1', -0.693, (195.657, 228.085, 157.745)), (' C 165  ASN HD22', ' X   1  NAG  C1 ', -0.692, (167.643, 169.776, 149.138)), (' A  16  VAL HG21', ' A 158  ARG HH12', -0.69, (186.866, 264.473, 161.338)), (' A 357  ARG  HG2', ' A 357  ARG HH11', -0.688, (232.893, 200.808, 154.802)), (' A 140  PHE  CZ ', ' A 158  ARG  HD2', -0.687, (185.303, 262.071, 163.294)), (' A 410  ILE HG23', ' A 423  TYR  CZ ', -0.685, (222.244, 207.788, 141.539)), (' C 610  VAL HG23', ' C 636  TYR  CE1', -0.684, (163.5, 188.095, 202.807)), (' B 674  TYR  CZ ', ' B 690  GLN  CB ', -0.684, (233.69, 173.189, 215.644)), (' C 355  ARG  CD ', ' C 396  TYR  CE2', -0.68, (188.068, 224.514, 161.631)), (' A 421  TYR  O  ', ' A 461  LEU HD21', -0.677, (222.427, 198.58, 134.367)), (' C  21  ARG  CB ', ' C  78  ARG  NH2', -0.676, (141.344, 164.005, 172.528)), (' A  17  ASN HD21', ' D   1  NAG  C2 ', -0.675, (195.819, 260.832, 158.667)), (' B 374  PHE  CG ', ' B 434  ILE HD11', -0.674, (197.106, 179.804, 153.282)), (' B  44  ARG  NH2', ' B  49  HIS  CE1', -0.67, (227.561, 196.587, 189.448)), (' C 625  HIS  HB2', ' C 634  ARG  HG2', -0.667, (159.047, 188.568, 191.226)), (' A 437  ASN  N  ', ' A 508  TYR  CD1', -0.667, (227.871, 220.148, 137.547)), (' A 357  ARG  CG ', ' A 357  ARG HH11', -0.664, (233.016, 200.609, 154.573)), (' C 608  VAL HG23', ' C 636  TYR  HH ', -0.661, (164.779, 185.971, 203.749)), (' C1138  TYR  CZ ', ' C1143  PRO  HG3', -0.659, (186.981, 196.197, 278.848)), (' A  66  HIS  ND1', ' A  78  ARG  NH1', -0.658, (193.813, 261.258, 182.301)), (' A 577  ARG  HB2', ' A 584  ILE HD13', -0.655, (236.765, 211.044, 185.766)), (' A 983  ARG  HD2', ' C 517  LEU  CD2', -0.651, (181.934, 211.501, 172.257)), (' B 339  GLY  HA2', ' B1405  NAG  H82', -0.651, (195.249, 169.251, 150.576)), (' C 357  ARG  HG2', ' C 357  ARG  NH1', -0.651, (182.309, 228.05, 162.866)), (' C 355  ARG  CD ', ' C 396  TYR  HE2', -0.65, (188.734, 224.85, 162.056)), (' B 165  ASN  CG ', ' N   1  NAG  C1 ', -0.646, (233.553, 191.236, 149.097)), (' C 102  ARG  HA ', ' C 102  ARG  NE ', -0.646, (160.624, 154.778, 172.579)), (' A 423  TYR  HE2', ' A 425  LEU  CD1', -0.644, (219.758, 207.073, 141.445)), (' C 608  VAL  CG2', ' C 636  TYR  OH ', -0.643, (165.058, 184.967, 203.762)), (' A  66  HIS  HB2', ' A  78  ARG  HD2', -0.641, (191.838, 261.442, 180.029)), (' A  17  ASN  CG ', ' D   1  NAG  C1 ', -0.633, (195.457, 260.956, 160.294)), (' B 108  THR  O  ', ' B 237  ARG  NH2', -0.632, (231.993, 176.811, 161.83)), (' C 319  ARG  CG ', ' C 592  PHE  HB2', -0.632, (171.097, 199.698, 193.179)), (' A 410  ILE  CG2', ' A 423  TYR  CE2', -0.631, (220.814, 208.714, 141.077)), (' A  83  VAL  CB ', ' A 237  ARG  HE ', -0.625, (197.215, 249.46, 167.937)), (' C 901  GLN  O  ', ' C 905  ARG  HG2', -0.622, (197.563, 183.862, 248.853)), (' A 349  SER  HG ', ' A 451  TYR  HD1', -0.621, (233.604, 209.456, 133.498)), (' B 342  PHE  CE2', ' B 368  LEU  CD2', -0.617, (195.083, 174.014, 154.19)), (' A 813  SER  OG ', ' A 815  ARG  NH1', -0.616, (169.912, 213.927, 222.692)), (' A 404  GLY  CA ', ' A 508  TYR  CD2', -0.616, (225.461, 217.575, 133.898)), (' B 905  ARG  NH1', ' B1050  MET  CB ', -0.614, (211.72, 203.863, 242.394)), (' A  83  VAL  HB ', ' A 237  ARG  HE ', -0.608, (197.675, 249.668, 168.199)), (' C 498  GLN  H  ', ' C 501  TYR  HD2', -0.606, (201.058, 211.15, 138.082)), (' W   1  NAG  H61', ' W   2  NAG  C7 ', -0.604, (165.705, 152.573, 158.438)), (' B1107  ARG  CD ', ' C 904  TYR  CZ ', -0.602, (202.75, 186.492, 253.829)), (' B1010  GLN  O  ', ' B1014  ARG  HG3', -0.602, (206.102, 199.168, 207.707)), (' C  78  ARG  HA ', ' C  78  ARG  NE ', -0.6, (143.117, 162.791, 175.318)), (' C 396  TYR  O  ', ' C 513  LEU  HA ', -0.595, (185.811, 217.206, 160.467)), (' A 343  ASN  ND2', ' A1407  NAG  C7 ', -0.594, (238.068, 218.476, 149.531)), (' C 421  TYR  CD1', ' C 457  ARG  CB ', -0.593, (208.723, 223.685, 158.92)), (' B 559  PHE  HB3', ' B 577  ARG  NH2', -0.593, (186.684, 158.628, 184.087)), (' A  16  VAL HG21', ' A 158  ARG  CZ ', -0.592, (186.335, 263.588, 160.105)), (' B 674  TYR  OH ', ' B 690  GLN  CB ', -0.592, (233.899, 173.171, 215.561)), (' B 501  TYR  CD1', ' B 505  TYR  CG ', -0.59, (188.587, 194.21, 139.781)), (' C 421  TYR  HD1', ' C 457  ARG  CG ', -0.589, (207.68, 223.678, 159.076)), (' B 559  PHE  CB ', ' B 577  ARG  NH2', -0.588, (186.959, 158.31, 184.35)), (' A 357  ARG  HB3', ' A 357  ARG  NH1', -0.585, (233.894, 200.453, 154.096)), (' B 403  ARG  NH2', ' B 505  TYR  CD2', -0.584, (188.472, 196.36, 142.065)), (' B 957  GLN  NE2', ' C 765  ARG  CZ ', -0.579, (216.133, 192.738, 203.641)), (' A 577  ARG  HB2', ' A 584  ILE  CD1', -0.578, (237.108, 210.504, 186.398)), (' A 417  LYS  HE3', ' A 454  ARG  O  ', -0.577, (223.047, 203.824, 126.955)), (' C 395  VAL  CG2', ' C 524  VAL HG21', -0.577, (178.856, 219.5, 163.771)), (' a   1  NAG  H62', ' a   2  NAG  C7 ', -0.577, (155.413, 210.85, 201.219)), (' B 905  ARG  NH1', ' B1049  LEU  O  ', -0.574, (210.566, 203.511, 243.062)), (' B 957  GLN HE22', ' C 765  ARG HH12', -0.573, (216.659, 192.092, 204.793)), (' C 295  PRO  HG3', ' C 636  TYR  CE2', -0.568, (164.57, 187.1, 200.11)), (' A 815  ARG  HD3', ' A 820  ASP  OD1', -0.567, (173.178, 215.938, 225.53)), (' A 457  ARG  NH1', ' A 461  LEU HD23', -0.566, (222.646, 196.958, 133.598)), (' C 102  ARG  NH1', ' C 177  MET  HE3', -0.565, (161.148, 150.426, 173.643)), (' C 610  VAL  CG2', ' C 636  TYR  CZ ', -0.563, (164.329, 188.128, 202.235)), (' A 357  ARG  HG3', ' A 396  TYR  CE1', -0.559, (230.41, 199.47, 152.469)), (' B 634  ARG  HD2', ' B 634  ARG  O  ', -0.555, (225.15, 166.57, 195.3)), (' B 403  ARG  HE ', ' B 505  TYR  HA ', -0.554, (189.087, 193.806, 143.478)), (' C 905  ARG HH12', ' C1050  MET  CA ', -0.553, (195.898, 184.218, 242.319)), (' A 137  ASN  O  ', ' A 139  PRO  HD3', -0.553, (192.555, 255.268, 164.387)), (' A 308  VAL  N  ', ' A 602  THR  OG1', -0.548, (191.566, 230.095, 207.323)), (' D   1  NAG  H62', ' D   2  NAG  C8 ', -0.547, (202.214, 259.208, 160.407)), (' A 802  PHE  HZ ', ' A 898  PHE  CZ ', -0.547, (180.809, 211.765, 244.54)), (' C 634  ARG  NE ', ' C 634  ARG  O  ', -0.546, (157.63, 188.197, 194.43)), (' A 423  TYR  OH ', ' A 425  LEU HD21', -0.541, (220.552, 207.55, 143.827)), (' C 815  ARG  HG2', ' C 871  ALA  CB ', -0.536, (200.633, 170.226, 227.174)), (' B 342  PHE  CZ ', ' B 368  LEU HD22', -0.535, (195.086, 174.753, 154.456)), (' A 421  TYR  HB3', ' A 457  ARG  HG3', -0.535, (222.377, 199.556, 130.801)), (' A 437  ASN  CA ', ' A 508  TYR  CE1', -0.533, (228.589, 220.907, 136.638)), (' A 343  ASN  OD1', ' A1407  NAG  H82', -0.53, (236.388, 217.867, 148.619)), (' C 634  ARG  C  ', ' C 634  ARG  HD3', -0.53, (158.405, 187.232, 194.502)), (' B 374  PHE  CD1', ' B 434  ILE HD11', -0.53, (196.738, 179.582, 153.289)), (' B  44  ARG  CZ ', ' B  49  HIS  CE1', -0.53, (227.835, 196.66, 190.022)), (' A 357  ARG  CB ', ' A 357  ARG  NH1', -0.529, (233.711, 200.55, 154.103)), (' B  44  ARG  NH1', ' B 279  TYR  OH ', -0.528, (230.688, 197.26, 189.664)), (' C 156  GLU  HB3', ' C 158  ARG  HG3', -0.525, (151.857, 154.903, 160.042)), (' A 319  ARG  HG2', ' A 592  PHE  HB2', -0.52, (212.909, 219.771, 194.977)), (' C 646  ARG  HB2', ' C 668  ALA  CB ', -0.52, (168.536, 202.904, 212.695)), (' C  34  ARG  NH1', ' C 221  SER  OG ', -0.52, (166.126, 161.701, 190.726)), (' A 343  ASN  OD1', ' A1407  NAG  C7 ', -0.519, (236.896, 218.58, 149.541)), (' B 353  TRP  CH2', ' B 466  ARG  NH2', -0.518, (178.33, 178.085, 158.689)), (' A 346  ARG  C  ', ' A 346  ARG  HD3', -0.518, (239.004, 209.247, 139.103)), (' C 454  ARG  HD3', ' C 457  ARG  HB2', -0.518, (207.471, 224.957, 157.048)), (' A 423  TYR  CE1', ' A 512  VAL HG21', -0.517, (223.44, 207.817, 143.28)), (' A 230  PRO  HB2', ' C 357  ARG  NH1', -0.515, (182.057, 229.238, 163.986)), (' A  83  VAL HG12', ' A 237  ARG  HE ', -0.514, (196.931, 248.382, 168.389)), (' B 102  ARG  NH2', ' B 122  ASN  CA ', -0.513, (254.562, 189.063, 166.231)), (' A  83  VAL HG12', ' A 237  ARG  HG2', -0.513, (196.383, 247.416, 168.455)), (' B 453  TYR  CD2', ' B 495  TYR  CE2', -0.513, (180.513, 189.7, 146.43)), (' A  83  VAL HG12', ' A 237  ARG  NE ', -0.512, (196.905, 248.129, 168.15)), (' A 401  VAL HG21', ' A 451  TYR  CE1', -0.512, (234.137, 211.984, 135.287)), (' B 505  TYR  HD1', ' B 505  TYR  O  ', -0.51, (188.273, 192.096, 140.944)), (' B 351  TYR  HB2', ' B 454  ARG  HG3', -0.51, (174.256, 185.988, 151.403)), (' C  24  LEU  CD2', ' C  78  ARG  NH1', -0.508, (140.906, 165.892, 177.336)), (' A  83  VAL  CG1', ' A 237  ARG  NE ', -0.506, (197.417, 248.172, 168.097)), (' A 404  GLY  HA3', ' A 508  TYR  CE2', -0.506, (225.367, 218.92, 133.868)), (' A 577  ARG  HG2', ' A 577  ARG  O  ', -0.504, (234.997, 210.722, 182.685)), (' C 102  ARG  CA ', ' C 102  ARG  HE ', -0.503, (159.704, 155.333, 172.454)), (' C 343  ASN HD21', ' C1404  NAG  C2 ', -0.499, (177.76, 213.1, 147.237)), (' C 421  TYR  CD1', ' C 457  ARG  CG ', -0.499, (208.511, 223.147, 159.355)), (' C  24  LEU HD23', ' C  78  ARG HH11', -0.496, (141.537, 165.777, 177.084)), (' A 410  ILE  O  ', ' A 423  TYR  HE2', -0.496, (219.338, 208.019, 141.379)), (' A 404  GLY  CA ', ' A 508  TYR  HD2', -0.494, (225.951, 217.535, 134.3)), (' A1148  PHE  CZ ', ' C1145  LEU HD13', -0.481, (192.603, 201.9, 287.541)), (' A1158  ASN  ND2', ' A1411  NAG  O5 ', -0.48, (190.0, 206.846, 303.437)), (' C 625  HIS  CB ', ' C 634  ARG  HG2', -0.479, (158.834, 188.84, 190.77)), (' C 396  TYR  HB2', ' C 514  SER  HB2', -0.476, (187.506, 219.444, 163.777)), (' B 577  ARG  HE ', ' B 584  ILE  CD1', -0.475, (189.801, 157.846, 183.756)), (' B 520  ALA  HB1', ' B 521  PRO  HD2', -0.473, (185.337, 167.153, 175.925)), (' F   1  NAG  H62', ' F   2  NAG  C8 ', -0.473, (227.793, 230.771, 201.303)), (' A 343  ASN  CG ', ' A1407  NAG  C7 ', -0.473, (237.444, 218.36, 149.693)), (' B 501  TYR  CE1', ' B 505  TYR  CG ', -0.47, (188.217, 194.377, 139.691)), (' A 342  PHE  CE1', ' A 511  VAL HG11', -0.467, (230.861, 213.096, 147.922)), (' C 616  ASN  ND2', ' a   1  NAG  C7 ', -0.465, (160.988, 206.674, 204.448)), (' B1107  ARG  HG2', ' C 904  TYR  OH ', -0.464, (203.807, 186.655, 255.089)), (' C 319  ARG  HG2', ' C 592  PHE  HB3', -0.463, (170.221, 200.803, 192.946)), (' C 498  GLN  O  ', ' C 501  TYR  HB2', -0.462, (200.153, 209.17, 137.887)), (' B  34  ARG  NH2', ' B 191  GLU  OE2', -0.459, (244.934, 185.106, 188.041)), (' C1145  LEU  C  ', ' C1145  LEU HD12', -0.459, (191.719, 198.73, 286.448)), (' A  83  VAL HG12', ' A 237  ARG  CD ', -0.459, (196.792, 247.718, 168.208)), (' B 269  TYR  CD1', ' B 269  TYR  N  ', -0.458, (235.22, 177.324, 179.425)), (' C 357  ARG  CG ', ' C 357  ARG  NH1', -0.458, (182.467, 227.261, 162.788)), (' A 391  CYS  HA ', ' A 525  CYS  HB3', -0.458, (224.657, 207.738, 163.089)), (' C 396  TYR  N  ', ' C 514  SER  O  ', -0.455, (184.771, 219.52, 163.748)), (' A 423  TYR  CD2', ' A 425  LEU  CD1', -0.454, (220.432, 205.905, 140.839)), (' A 357  ARG  NH1', ' A 357  ARG  O  ', -0.454, (234.303, 201.634, 154.34)), (' A  57  PRO  HB3', ' A 273  ARG HH12', -0.45, (198.366, 237.683, 189.284)), (' C 815  ARG  HG2', ' C 871  ALA  HB2', -0.449, (200.451, 170.415, 227.182)), (' C 295  PRO  HG2', ' C 636  TYR  OH ', -0.449, (164.463, 185.975, 202.271)), (' A 319  ARG  HD2', ' B 740  MET  SD ', -0.449, (212.4, 218.262, 192.431)), (' C 343  ASN  ND2', ' C1404  NAG  C2 ', -0.448, (177.464, 213.674, 147.054)), (' A 230  PRO  HB2', ' C 357  ARG HH12', -0.448, (181.968, 229.679, 164.286)), (' C 421  TYR  HD1', ' C 457  ARG  HG2', -0.445, (207.692, 223.462, 159.537)), (' C  46  SER  OG ', ' C 281  GLU  HA ', -0.444, (184.759, 163.519, 198.499)), (' C 296  LEU HD21', ' C 300  LYS  HE3', -0.443, (169.24, 177.319, 203.396)), (' A1126  CYS  HB2', ' A1132  ILE HD13', -0.441, (219.238, 205.367, 267.074)), (' B 164  ASN  OD1', ' B 165  ASN  ND2', -0.441, (234.442, 189.396, 149.261)), (' a   1  NAG  O4 ', ' a   2  NAG  O7 ', -0.437, (155.292, 210.185, 203.053)), (' B 353  TRP  CZ3', ' B 466  ARG  NH2', -0.437, (178.581, 177.877, 158.505)), (' B 669  GLY  HA2', ' C 869  MET  HE1', -0.435, (210.645, 172.621, 220.849)), (' A 319  ARG  CD ', ' B 740  MET  SD ', -0.435, (211.874, 218.124, 192.651)), (' B 339  GLY  HA2', ' B1405  NAG  C8 ', -0.434, (195.645, 168.748, 151.008)), (' A 214  ARG  HD3', ' A 214  ARG  N  ', -0.433, (187.437, 258.256, 192.376)), (' F   1  NAG  O4 ', ' F   2  NAG  C7 ', -0.432, (228.079, 230.324, 202.971)), (' B 505  TYR  CD1', ' B 505  TYR  O  ', -0.431, (188.241, 192.257, 141.211)), (' A 520  ALA  HB1', ' A 521  PRO  HD2', -0.431, (226.716, 195.117, 163.891)), (' A  66  HIS  CG ', ' A  78  ARG HH11', -0.431, (192.783, 260.819, 182.466)), (' B 342  PHE  CE2', ' B 368  LEU HD22', -0.431, (195.539, 174.497, 154.549)), (' B 453  TYR  CD1', ' B 453  TYR  O  ', -0.43, (176.398, 190.204, 148.296)), (' C 284  THR  O  ', ' C 284  THR HG23', -0.428, (177.618, 162.429, 193.885)), (' B1107  ARG  CD ', ' C 904  TYR  CD1', -0.428, (201.789, 187.34, 253.109)), (' A 357  ARG  C  ', ' A 357  ARG  NH1', -0.428, (233.761, 201.187, 154.515)), (' A 421  TYR  HE1', ' A 457  ARG  CB ', -0.424, (220.369, 197.4, 128.277)), (' C 129  LYS  HE3', ' C 131  CYS  SG ', -0.423, (167.778, 162.085, 156.537)), (' B1107  ARG  NH1', ' C 904  TYR  CD1', -0.422, (200.851, 188.472, 252.805)), (' A1107  ARG  NH1', ' B 904  TYR  CD1', -0.421, (205.994, 206.107, 253.022)), (' C 358  ILE  HB ', ' C 395  VAL  HB ', -0.418, (180.417, 220.618, 162.196)), (' B 384  PRO  HA ', ' B 387  LEU HD23', -0.418, (199.795, 178.281, 164.206)), (' A 214  ARG  CD ', ' A 214  ARG  N  ', -0.416, (187.271, 258.524, 191.971)), (' C  78  ARG  CA ', ' C  78  ARG  HE ', -0.412, (142.961, 161.604, 175.398)), (' B 453  TYR  C  ', ' B 453  TYR  CD1', -0.411, (176.703, 189.634, 148.792)), (' A 423  TYR  CE2', ' A 425  LEU HD13', -0.411, (219.294, 206.731, 141.511)), (' C 634  ARG  C  ', ' C 634  ARG  CD ', -0.41, (158.447, 187.59, 194.386)), (' C  64  TRP  CD1', ' C 266  TYR  CE1', -0.409, (153.19, 165.154, 184.86)), (' N   1  NAG  O4 ', ' N   2  NAG  O7 ', -0.408, (231.852, 185.331, 146.696)), (' B  57  PRO  HB3', ' B 273  ARG HH11', -0.408, (230.123, 178.99, 189.48)), (' A 360  ASN  H  ', ' A 523  THR HG22', -0.408, (231.773, 201.955, 161.36)), (' C 466  ARG  CB ', ' C 466  ARG  NH1', -0.407, (195.592, 227.821, 157.728)), (' A 357  ARG  CB ', ' A 357  ARG HH11', -0.405, (232.86, 200.338, 154.096)), (' C 457  ARG  NE ', ' C 459  SER  O  ', -0.404, (207.136, 225.09, 161.729)), (' B 501  TYR  HE1', ' B 505  TYR  CE1', -0.404, (186.953, 195.066, 139.005)), (' B 991  VAL  O  ', ' B 995  ARG  HG2', -0.403, (204.054, 201.193, 179.435))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

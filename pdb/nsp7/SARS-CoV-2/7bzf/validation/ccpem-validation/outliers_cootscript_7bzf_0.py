
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['rota'] = []
data['cbeta'] = []
data['jpred'] = []
data['clusters'] = [('A', '10', 1, 'Dihedral angle:CD:NE:CZ:NH1', (106.38799999999999, 124.41100000000002, 76.91300000000001)), ('A', '100', 1, 'side-chain clash', (113.098, 117.956, 81.996)), ('A', '102', 1, 'side-chain clash', (112.283, 123.963, 80.959)), ('A', '11', 1, 'side-chain clash', (110.238, 124.356, 82.249)), ('A', '113', 1, 'side-chain clash', (114.474, 131.009, 81.311)), ('A', '115', 1, 'side-chain clash', (112.283, 123.963, 80.959)), ('A', '116', 1, 'cablam Outlier\nside-chain clash', (114.1, 122.4, 86.0)), ('A', '117', 1, 'cablam Outlier\nside-chain clash', (112.5, 119.1, 87.0)), ('A', '119', 1, 'cablam Outlier\nside-chain clash', (113.6, 119.5, 92.6)), ('A', '12', 1, 'cablam Outlier', (106.0, 120.7, 80.7)), ('A', '120', 1, 'side-chain clash', (112.924, 118.76, 96.012)), ('A', '121', 1, 'cablam Outlier\nside-chain clash', (110.0, 123.8, 97.1)), ('A', '15', 1, 'cablam Outlier', (106.6, 115.7, 82.7)), ('A', '17', 1, 'smoc Outlier', (101.03500366210938, 118.87799835205078, 82.16400146484375)), ('A', '18', 1, 'Dihedral angle:CD:NE:CZ:NH1', (99.30799999999999, 120.07799999999999, 85.343)), ('A', '185', 1, 'side-chain clash\nsmoc Outlier', (121.47, 115.291, 99.452)), ('A', '188', 1, 'side-chain clash', (118.639, 112.682, 96.238)), ('A', '189', 1, 'side-chain clash', (124.871, 115.672, 96.507)), ('A', '19', 1, 'side-chain clash', (102.195, 121.689, 88.377)), ('A', '192', 1, 'side-chain clash', (127.09, 115.088, 87.972)), ('A', '20', 1, 'backbone clash', (101.637, 123.856, 88.63)), ('A', '206', 1, 'side-chain clash', (126.473, 125.193, 93.926)), ('A', '209', 1, 'side-chain clash', (126.473, 125.193, 93.926)), ('A', '210', 1, 'side-chain clash', (121.47, 115.291, 99.452)), ('A', '211', 1, 'side-chain clash\nsmoc Outlier', (115.512, 121.322, 93.524)), ('A', '212', 1, 'side-chain clash', (113.74, 118.838, 99.333)), ('A', '214', 1, 'side-chain clash', (118.639, 112.682, 96.238)), ('A', '215', 1, 'side-chain clash', (117.41, 116.927, 90.995)), ('A', '216', 1, 'side-chain clash', (124.871, 115.672, 96.507)), ('A', '218', 1, 'cablam Outlier', (123.0, 124.2, 88.5)), ('A', '219', 1, 'side-chain clash', (122.384, 116.791, 86.816)), ('A', '220', 1, 'cablam Outlier', (127.6, 125.5, 85.6)), ('A', '237', 1, 'side-chain clash', (125.287, 116.865, 99.037)), ('A', '27', 1, 'side-chain clash', (110.216, 133.89, 86.487)), ('A', '28', 1, 'side-chain clash', (109.612, 132.753, 89.496)), ('A', '29', 1, 'cablam Outlier\nside-chain clash', (112.0, 136.2, 91.7)), ('A', '30', 1, 'side-chain clash', (111.064, 130.757, 94.72)), ('A', '33', 1, 'side-chain clash', (110.883, 129.325, 98.338)), ('A', '51', 1, 'side-chain clash', (114.416, 137.814, 91.259)), ('A', '53', 1, 'smoc Outlier', (113.927001953125, 132.14700317382812, 89.58399963378906)), ('A', '54', 1, 'side-chain clash', (110.482, 130.67, 85.574)), ('A', '55', 1, 'side-chain clash', (110.883, 129.325, 98.338)), ('A', '57', 1, 'backbone clash\nside-chain clash', (101.447, 122.665, 95.412)), ('A', '58', 1, 'side-chain clash', (102.195, 121.689, 88.377)), ('A', '60', 1, 'backbone clash', (98.913, 118.285, 93.385)), ('A', '62', 1, 'smoc Outlier', (92.78900146484375, 115.60399627685547, 93.27999877929688)), ('A', '64', 1, 'backbone clash', (98.913, 118.285, 93.385)), ('A', '65', 1, 'side-chain clash', (101.447, 122.665, 95.412)), ('A', '69', 1, 'side-chain clash\nsmoc Outlier', (109.491, 126.83, 93.92)), ('A', '72', 1, 'side-chain clash', (110.482, 130.67, 85.574)), ('A', '73', 1, 'side-chain clash', (118.8, 129.071, 86.848)), ('A', '74', 1, 'cablam Outlier', (116.3, 133.1, 82.3)), ('A', '75', 1, 'side-chain clash', (118.8, 129.071, 86.848)), ('A', '8', 1, 'side-chain clash', (102.275, 124.226, 84.562)), ('A', '82', 1, 'side-chain clash', (128.995, 122.04, 81.244)), ('A', '86', 1, 'side-chain clash', (128.995, 122.04, 81.244)), ('A', '90', 1, 'side-chain clash', (127.09, 115.088, 87.972)), ('A', '95', 1, 'side-chain clash', (122.492, 115.984, 91.419)), ('A', '96', 1, 'side-chain clash', (122.384, 116.791, 86.816)), ('A', '97', 1, 'side-chain clash', (117.41, 116.927, 90.995)), ('A', '331', 2, 'side-chain clash', (146.414, 93.974, 126.672)), ('A', '344', 2, 'side-chain clash', (146.414, 93.974, 126.672)), ('A', '356', 2, 'side-chain clash', (149.174, 101.008, 128.625)), ('A', '357', 2, 'side-chain clash', (150.285, 103.794, 122.306)), ('A', '358', 2, 'side-chain clash', (150.661, 100.829, 128.354)), ('A', '359', 2, 'side-chain clash', (147.244, 96.339, 127.821)), ('A', '484', 2, 'backbone clash\nsmoc Outlier', (154.677, 128.681, 128.621)), ('A', '485', 2, 'cablam Outlier\nbackbone clash', (152.8, 126.9, 129.2)), ('A', '528', 2, 'side-chain clash', (151.678, 110.156, 132.271)), ('A', '531', 2, 'side-chain clash', (151.678, 110.156, 132.271)), ('A', '532', 2, 'side-chain clash', (150.727, 112.761, 127.997)), ('A', '534', 2, 'side-chain clash', (149.174, 101.008, 128.625)), ('A', '535', 2, 'side-chain clash\nsmoc Outlier', (146.199, 103.046, 127.832)), ('A', '567', 2, 'smoc Outlier', (148.3780059814453, 114.3270034790039, 136.3730010986328)), ('A', '568', 2, 'side-chain clash', (145.481, 115.593, 131.978)), ('A', '571', 2, 'smoc Outlier', (149.94500732421875, 118.98699951171875, 132.63499450683594)), ('A', '575', 2, 'smoc Outlier', (149.23300170898438, 127.64900207519531, 131.58700561523438)), ('A', '576', 2, 'side-chain clash\nsmoc Outlier', (143.47, 124.002, 133.957)), ('A', '579', 2, 'smoc Outlier', (146.1479949951172, 132.8679962158203, 132.59800720214844)), ('A', '583', 2, 'backbone clash', (144.185, 139.045, 139.234)), ('A', '586', 2, 'cablam Outlier', (140.4, 139.0, 127.0)), ('A', '589', 2, 'smoc Outlier', (140.4219970703125, 135.1179962158203, 135.36900329589844)), ('A', '590', 2, 'backbone clash', (144.185, 139.045, 139.234)), ('A', '619', 2, 'side-chain clash', (125.943, 129.2, 124.186)), ('A', '622', 2, 'side-chain clash', (126.495, 127.634, 129.324)), ('A', '631', 2, 'side-chain clash', (137.912, 118.922, 131.599)), ('A', '653', 2, 'side-chain clash', (150.285, 103.794, 122.306)), ('A', '654', 2, 'side-chain clash', (150.727, 112.761, 127.997)), ('A', '657', 2, 'side-chain clash', (147.008, 109.643, 127.824)), ('A', '658', 2, 'side-chain clash', (138.919, 114.307, 130.491)), ('A', '662', 2, 'side-chain clash', (138.919, 114.307, 130.491)), ('A', '663', 2, 'smoc Outlier', (134.49099731445312, 113.86199951171875, 129.35499572753906)), ('A', '664', 2, 'cablam Outlier', (132.8, 110.5, 129.0)), ('A', '677', 2, 'cablam Outlier', (127.5, 111.2, 127.8)), ('A', '678', 2, 'cablam CA Geom Outlier', (129.6, 114.3, 128.0)), ('A', '684', 2, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (137.73, 119.104, 136.63299999999998)), ('A', '686', 2, 'side-chain clash', (143.47, 124.002, 133.957)), ('A', '687', 2, 'side-chain clash', (136.456, 121.246, 134.579)), ('A', '689', 2, 'side-chain clash', (139.363, 127.683, 128.457)), ('A', '690', 2, 'smoc Outlier', (137.95599365234375, 125.15299987792969, 129.28399658203125)), ('A', '692', 2, 'side-chain clash', (136.794, 131.996, 125.622)), ('A', '693', 2, 'side-chain clash', (139.363, 127.683, 128.457)), ('A', '695', 2, 'side-chain clash', (134.794, 133.175, 127.267)), ('A', '696', 2, 'side-chain clash', (136.794, 131.996, 125.622)), ('A', '757', 2, 'side-chain clash\nDihedral angle:CA:C', (135.34, 136.536, 129.55100000000002)), ('A', '758', 2, 'side-chain clash\nDihedral angle:N:CA', (135.455, 135.08800000000002, 133.011)), ('A', '759', 2, 'cablam Outlier\nside-chain clash', (134.3, 131.5, 132.8)), ('A', '760', 2, 'cablam Outlier', (130.8, 131.1, 131.3)), ('A', '786', 2, 'side-chain clash', (125.943, 129.2, 124.186)), ('A', '813', 2, 'side-chain clash', (133.529, 136.816, 136.667)), ('A', '87', 2, 'side-chain clash\nbackbone clash', (138.952, 122.361, 138.15)), ('A', '91', 2, 'side-chain clash\nbackbone clash', (138.952, 122.361, 138.15)), ('A', '128', 3, 'side-chain clash', (123.894, 125.098, 107.653)), ('A', '132', 3, 'side-chain clash', (126.774, 123.815, 110.083)), ('A', '133', 3, 'side-chain clash', (121.138, 131.022, 113.854)), ('A', '134', 3, 'side-chain clash', (120.374, 130.835, 114.353)), ('A', '203', 3, 'side-chain clash', (133.1, 121.431, 88.719)), ('A', '205', 3, 'smoc Outlier', (129.79299926757812, 121.2490005493164, 94.86100006103516)), ('A', '206', 3, 'side-chain clash', (126.473, 125.193, 93.926)), ('A', '209', 3, 'side-chain clash', (126.473, 125.193, 93.926)), ('A', '218', 3, 'cablam Outlier', (123.0, 124.2, 88.5)), ('A', '222', 3, 'side-chain clash', (133.1, 121.431, 88.719)), ('A', '234', 3, 'smoc Outlier', (133.3520050048828, 118.9990005493164, 97.73300170898438)), ('A', '235', 3, 'backbone clash', (134.316, 123.218, 100.292)), ('A', '236', 3, 'backbone clash', (134.316, 123.218, 100.292)), ('A', '239', 3, 'side-chain clash', (134.172, 123.504, 106.597)), ('A', '243', 3, 'side-chain clash', (126.774, 123.815, 110.083)), ('A', '244', 3, 'smoc Outlier', (122.86199951171875, 118.8030014038086, 110.94100189208984)), ('A', '245', 3, 'smoc Outlier', (124.03399658203125, 115.2229995727539, 110.37699890136719)), ('A', '246', 3, 'smoc Outlier', (123.7699966430664, 114.78500366210938, 114.16000366210938)), ('A', '465', 3, 'side-chain clash', (132.706, 123.084, 107.437)), ('A', '467', 3, 'side-chain clash', (134.172, 123.504, 106.597)), ('A', '468', 3, 'side-chain clash', (135.602, 127.408, 109.165)), ('A', '469', 3, 'side-chain clash', (139.073, 125.067, 114.903)), ('A', '472', 3, 'smoc Outlier', (138.11399841308594, 129.16900634765625, 115.0719985961914)), ('A', '473', 3, 'side-chain clash', (139.073, 125.067, 114.903)), ('A', '474', 3, 'side-chain clash', (145.579, 125.116, 115.0)), ('A', '640', 3, 'side-chain clash', (145.579, 125.116, 115.0)), ('A', '705', 3, 'side-chain clash', (127.46, 129.107, 112.259)), ('A', '731', 3, 'side-chain clash', (135.602, 127.408, 109.165)), ('A', '733', 3, 'cablam CA Geom Outlier', (139.7, 126.8, 101.1)), ('A', '784', 3, 'side-chain clash\nsmoc Outlier', (120.374, 130.835, 114.353)), ('A', '785', 3, 'side-chain clash', (125.063, 129.122, 115.606)), ('A', '788', 3, 'side-chain clash', (125.063, 129.122, 115.606)), ('A', '328', 4, 'side-chain clash', (136.067, 101.341, 132.808)), ('A', '329', 4, 'side-chain clash', (140.683, 97.469, 130.033)), ('A', '341', 4, 'smoc Outlier', (140.3979949951172, 91.89700317382812, 134.68899536132812)), ('A', '343', 4, 'side-chain clash', (140.683, 97.469, 130.033)), ('A', '346', 4, 'side-chain clash', (138.266, 104.882, 130.125)), ('A', '378', 4, 'side-chain clash', (136.067, 101.341, 132.808)), ('A', '379', 4, 'smoc Outlier', (136.91000366210938, 97.36100006103516, 135.24099731445312)), ('A', '481', 4, 'side-chain clash', (143.361, 101.509, 143.745)), ('A', '503', 4, 'backbone clash\nside-chain clash', (138.378, 110.494, 142.561)), ('A', '504', 4, 'cablam CA Geom Outlier', (135.8, 107.2, 144.3)), ('A', '506', 4, 'side-chain clash', (142.496, 108.526, 146.867)), ('A', '507', 4, 'backbone clash', (138.076, 108.238, 146.954)), ('A', '509', 4, 'cablam Outlier', (140.6, 105.7, 152.7)), ('A', '512', 4, 'smoc Outlier', (143.83200073242188, 113.88099670410156, 148.45799255371094)), ('A', '515', 4, 'side-chain clash', (142.496, 108.526, 146.867)), ('A', '537', 4, 'side-chain clash', (138.266, 104.882, 130.125)), ('A', '538', 4, 'smoc Outlier', (138.5279998779297, 106.73300170898438, 136.2729949951172)), ('A', '539', 4, 'smoc Outlier', (135.343994140625, 107.2750015258789, 138.2969970703125)), ('A', '561', 4, 'side-chain clash', (138.378, 110.494, 142.561)), ('A', '746', 4, 'side-chain clash', (145.287, 104.14, 143.939)), ('A', '750', 4, 'side-chain clash', (145.287, 104.14, 143.939)), ('A', '217', 5, 'side-chain clash', (111.036, 133.792, 150.589)), ('A', '414', 5, 'backbone clash', (117.882, 129.059, 160.249)), ('A', '415', 5, 'backbone clash', (117.882, 129.059, 160.249)), ('A', '419', 5, 'cablam Outlier', (119.7, 139.5, 162.3)), ('A', '421', 5, 'side-chain clash', (113.826, 144.186, 165.045)), ('A', '423', 5, 'smoc Outlier', (116.08699798583984, 143.79100036621094, 160.25599670410156)), ('A', '424', 5, 'smoc Outlier', (112.38099670410156, 144.03599548339844, 161.1020050048828)), ('A', '425', 5, 'side-chain clash', (113.826, 144.186, 165.045)), ('A', '439', 5, 'side-chain clash', (119.511, 133.638, 149.339)), ('A', '440', 5, 'side-chain clash\nsmoc Outlier', (116.678, 132.04, 151.776)), ('A', '548', 5, 'side-chain clash', (119.511, 133.638, 149.339)), ('A', '836', 5, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (120.689, 138.43, 147.843)), ('A', '837', 5, 'side-chain clash', (122.617, 140.184, 153.457)), ('A', '840', 5, 'side-chain clash', (124.126, 135.75, 149.904)), ('A', '842', 5, 'smoc Outlier', (119.74600219726562, 136.40699768066406, 157.6179962158203)), ('A', '843', 5, 'cablam Outlier\nside-chain clash', (120.2, 132.7, 156.8)), ('A', '847', 5, 'cablam Outlier\nDihedral angle:CA:C', (123.4, 125.6, 162.5)), ('A', '848', 5, 'cablam Outlier\nDihedral angle:N:CA', (126.9, 125.6, 163.9)), ('A', '855', 5, 'side-chain clash', (113.653, 133.518, 160.03)), ('A', '884', 5, 'side-chain clash', (122.617, 140.184, 153.457)), ('A', '99', 5, 'side-chain clash', (111.036, 133.792, 150.589)), ('A', '598', 6, 'side-chain clash', (130.521, 146.706, 137.503)), ('A', '817', 6, 'side-chain clash', (130.521, 146.706, 137.503)), ('A', '829', 6, 'side-chain clash', (133.111, 150.346, 142.113)), ('A', '831', 6, 'side-chain clash', (127.52, 149.047, 144.138)), ('A', '868', 6, 'side-chain clash\nsmoc Outlier', (127.52, 149.047, 144.138)), ('A', '869', 6, 'smoc Outlier', (124.59600067138672, 150.25, 147.9040069580078)), ('A', '870', 6, 'side-chain clash', (123.31, 152.653, 150.639)), ('A', '874', 6, 'smoc Outlier', (117.31199645996094, 154.8730010986328, 146.18099975585938)), ('A', '876', 6, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (116.587, 151.984, 150.86200000000002)), ('A', '878', 6, 'side-chain clash', (123.31, 152.653, 150.639)), ('A', '880', 6, 'side-chain clash', (118.372, 149.39, 151.316)), ('A', '864', 7, 'side-chain clash', (133.231, 146.227, 153.037)), ('A', '867', 7, 'side-chain clash', (132.107, 148.746, 151.706)), ('A', '913', 7, 'smoc Outlier', (140.3679962158203, 147.3699951171875, 161.08299255371094)), ('A', '914', 7, 'Dihedral angle:CD:NE:CZ:NH1', (137.489, 148.21299999999997, 163.435)), ('A', '915', 7, 'smoc Outlier', (134.16700744628906, 147.36599731445312, 161.7949981689453)), ('A', '916', 7, 'Bond angle:C', (132.01899999999998, 150.032, 163.445)), ('A', '917', 7, 'side-chain clash\nBond angle:N:CA', (132.975, 153.038, 161.19)), ('A', '919', 7, 'cablam Outlier\nDihedral angle:CB:CG:CD:OE1', (136.2, 154.0, 156.7)), ('A', '921', 7, 'side-chain clash', (133.231, 146.227, 153.037)), ('A', '922', 7, 'Dihedral angle:CB:CG:CD:OE1', (135.375, 153.008, 151.36100000000002)), ('A', '34', 8, 'side-chain clash\nsmoc Outlier', (120.151, 133.329, 101.321)), ('A', '44', 8, 'side-chain clash', (130.929, 133.752, 103.551)), ('A', '45', 8, 'cablam Outlier', (126.8, 131.8, 103.4)), ('A', '47', 8, 'cablam Outlier\nside-chain clash', (120.5, 135.2, 102.4)), ('A', '707', 8, 'side-chain clash', (130.378, 138.595, 105.618)), ('A', '708', 8, 'side-chain clash', (130.929, 133.752, 103.551)), ('A', '711', 8, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (124.895, 140.445, 102.38)), ('A', '724', 8, 'side-chain clash\nsmoc Outlier', (130.152, 136.887, 104.773)), ('A', '254', 9, 'side-chain clash', (122.771, 100.952, 107.386)), ('A', '256', 9, 'backbone clash', (116.638, 99.403, 109.533)), ('A', '257', 9, 'side-chain clash', (117.417, 93.674, 107.199)), ('A', '258', 9, 'cablam Outlier\nDihedral angle:CA:CB:CG:OD1', (119.9, 95.8, 105.1)), ('A', '259', 9, 'side-chain clash\nsmoc Outlier', (122.771, 100.952, 107.386)), ('A', '260', 9, 'backbone clash', (116.638, 99.403, 109.533)), ('A', '261', 9, 'cablam Outlier', (114.1, 101.5, 108.7)), ('A', '263', 9, 'side-chain clash', (117.417, 93.674, 107.199)), ('A', '279', 10, 'side-chain clash', (132.507, 105.742, 116.547)), ('A', '311', 10, 'smoc Outlier', (137.3509979248047, 112.7979965209961, 115.99099731445312)), ('A', '312', 10, 'side-chain clash', (133.204, 117.481, 115.761)), ('A', '314', 10, 'side-chain clash', (133.181, 108.298, 113.541)), ('A', '317', 10, 'side-chain clash', (133.181, 108.298, 113.541)), ('A', '318', 10, 'side-chain clash', (132.507, 105.742, 116.547)), ('A', '629', 10, 'side-chain clash\nsmoc Outlier', (133.204, 117.481, 115.761)), ('A', '153', 11, 'backbone clash\nside-chain clash', (134.457, 95.823, 122.682)), ('A', '154', 11, 'backbone clash\nside-chain clash', (134.457, 95.823, 122.682)), ('A', '274', 11, 'cablam Outlier', (137.2, 97.1, 116.9)), ('A', '275', 11, 'cablam Outlier', (134.6, 98.4, 114.3)), ('A', '325', 11, 'smoc Outlier', (130.98199462890625, 98.33200073242188, 123.23100280761719)), ('A', '326', 11, 'cablam CA Geom Outlier', (132.3, 101.8, 124.1)), ('A', '105', 12, 'cablam Outlier\nside-chain clash', (111.3, 133.5, 73.0)), ('A', '106', 12, 'Dihedral angle:CA:C', (110.35799999999999, 135.21899999999997, 76.218)), ('A', '107', 12, 'cablam Outlier\nDihedral angle:N:CA\nDihedral angle:CA:C\nDihedral angle:CA:CB:CG:OD1', (110.6, 138.8, 75.2)), ('A', '108', 12, 'Dihedral angle:N:CA', (108.49900000000001, 138.74299999999997, 72.106)), ('A', '109', 12, 'cablam CA Geom Outlier', (111.6, 137.4, 70.4)), ('A', '110', 12, 'side-chain clash\nsmoc Outlier', (112.024, 134.999, 70.994)), ('A', '388', 13, 'side-chain clash', (123.685, 101.051, 138.914)), ('A', '390', 13, 'side-chain clash', (120.386, 104.879, 138.893)), ('A', '542', 13, 'side-chain clash', (128.857, 113.262, 138.917)), ('A', '669', 13, 'smoc Outlier', (125.6050033569336, 108.74199676513672, 141.14199829101562)), ('A', '672', 13, 'side-chain clash', (123.685, 101.051, 138.914)), ('A', '674', 13, 'side-chain clash', (120.386, 104.879, 138.893)), ('A', '101', 14, 'side-chain clash\nbackbone clash', (154.782, 106.9, 148.669)), ('A', '520', 14, 'side-chain clash', (155.387, 111.286, 143.598)), ('A', '523', 14, 'Dihedral angle:CA:CB:CG:OD1', (156.495, 107.887, 141.553)), ('A', '524', 14, 'side-chain clash', (155.387, 111.286, 143.598)), ('A', '80', 14, 'side-chain clash\nbackbone clash', (154.782, 106.9, 148.669)), ('A', '408', 15, 'side-chain clash', (120.379, 110.311, 147.59)), ('A', '410', 15, 'side-chain clash', (116.504, 119.12, 149.165)), ('A', '444', 15, 'side-chain clash', (116.504, 119.12, 149.165)), ('A', '445', 15, 'smoc Outlier', (113.78099822998047, 115.19200134277344, 148.6820068359375)), ('A', '448', 15, 'cablam Outlier', (116.8, 114.7, 143.7)), ('A', '850', 16, 'backbone clash', (127.423, 132.561, 166.001)), ('A', '851', 16, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (127.248, 134.44, 164.64299999999997)), ('A', '852', 16, 'cablam Outlier\nbackbone clash', (127.7, 133.9, 168.3)), ('A', '853', 16, 'side-chain clash', (133.491, 132.136, 169.18)), ('A', '854', 16, 'side-chain clash', (133.491, 132.136, 169.18)), ('A', '199', 17, 'side-chain clash', (131.658, 111.578, 82.205)), ('A', '201', 17, 'side-chain clash\nsmoc Outlier', (131.869, 115.433, 81.571)), ('A', '224', 17, 'backbone clash', (136.385, 115.692, 78.984)), ('A', '225', 17, 'backbone clash', (136.385, 115.692, 78.984)), ('A', '89', 17, 'side-chain clash', (131.658, 111.578, 82.205)), ('A', '365', 18, 'side-chain clash', (156.152, 98.121, 142.089)), ('A', '366', 18, 'side-chain clash', (149.708, 95.206, 139.026)), ('A', '367', 18, 'side-chain clash', (156.152, 98.121, 142.089)), ('A', '370', 18, 'smoc Outlier', (150.22500610351562, 99.96499633789062, 139.44000244140625)), ('A', '374', 18, 'side-chain clash', (149.708, 95.206, 139.026)), ('A', '478', 19, 'side-chain clash', (145.511, 136.198, 117.84)), ('A', '739', 19, 'side-chain clash', (148.757, 135.972, 110.776)), ('A', '742', 19, 'side-chain clash\nsmoc Outlier', (145.424, 134.265, 114.415)), ('A', '743', 19, 'side-chain clash', (148.757, 135.972, 110.776)), ('A', '615', 20, 'side-chain clash', (126.701, 143.877, 122.593)), ('A', '753', 20, 'side-chain clash\nsmoc Outlier', (130.606, 141.246, 121.081)), ('A', '764', 20, 'side-chain clash\nsmoc Outlier', (130.606, 141.246, 121.081)), ('A', '766', 20, 'side-chain clash', (126.701, 143.877, 122.593)), ('A', '490', 21, 'side-chain clash', (154.387, 119.287, 141.791)), ('A', '493', 21, 'side-chain clash', (154.387, 119.287, 141.791)), ('A', '495', 21, 'smoc Outlier', (148.2429962158203, 122.47899627685547, 145.23300170898438)), ('A', '573', 21, 'side-chain clash', (150.719, 121.826, 139.08)), ('A', '603', 22, 'side-chain clash', (136.891, 151.912, 130.661)), ('A', '606', 22, 'Dihedral angle:CA:C', (135.876, 150.161, 126.76)), ('A', '607', 22, 'cablam CA Geom Outlier\nDihedral angle:N:CA', (139.4, 150.2, 125.4)), ('A', '608', 22, 'cablam Outlier', (139.0, 152.0, 122.1)), ('A', '592', 23, 'side-chain clash', (139.638, 144.664, 140.492)), ('A', '595', 23, 'cablam Outlier', (141.2, 148.2, 144.6)), ('A', '597', 23, 'side-chain clash', (139.638, 144.664, 140.492)), ('A', '194', 24, 'side-chain clash', (104.355, 144.79, 153.901)), ('A', '198', 24, 'side-chain clash', (104.355, 144.79, 153.901)), ('A', '431', 24, 'cablam Outlier\nDihedral angle:CB:CG:CD:OE1', (104.4, 146.4, 153.6)), ('A', '197', 25, 'backbone clash\nsmoc Outlier', (136.212, 113.158, 88.574)), ('A', '229', 25, 'cablam Outlier', (140.2, 112.3, 85.8)), ('A', '230', 25, 'side-chain clash\nbackbone clash\nsmoc Outlier', (136.212, 113.158, 88.574)), ('A', '642', 26, 'side-chain clash', (152.806, 120.299, 121.181)), ('A', '643', 26, 'smoc Outlier', (155.66299438476562, 121.84600067138672, 121.69599914550781)), ('A', '651', 26, 'side-chain clash', (152.806, 120.299, 121.181)), ('A', '139', 27, 'smoc Outlier', (111.44499969482422, 130.8679962158203, 111.46800231933594)), ('A', '141', 27, 'cablam Outlier', (110.9, 128.3, 106.4)), ('A', '143', 27, 'smoc Outlier', (107.64399719238281, 125.58100128173828, 110.19200134277344)), ('A', '304', 28, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (145.90200000000002, 118.298, 116.563)), ('A', '306', 28, 'smoc Outlier', (144.0500030517578, 115.84400177001953, 112.0770034790039)), ('A', '636', 28, 'side-chain clash', (145.046, 118.785, 119.05)), ('A', '717', 29, 'backbone clash', (135.554, 149.367, 103.268)), ('A', '718', 29, 'backbone clash', (135.554, 149.367, 103.268)), ('A', '38', 30, 'side-chain clash', (138.791, 132.682, 96.49)), ('A', '729', 30, 'side-chain clash', (138.791, 132.682, 96.49)), ('A', '480', 31, 'side-chain clash', (148.627, 130.664, 123.703)), ('A', '641', 31, 'side-chain clash', (148.627, 130.664, 123.703)), ('A', '433', 32, 'backbone clash', (110.786, 145.199, 150.857)), ('A', '435', 32, 'backbone clash', (110.786, 145.199, 150.857)), ('A', '857', 33, 'side-chain clash', (133.881, 139.46, 158.846)), ('A', '860', 33, 'side-chain clash', (133.881, 139.46, 158.846)), ('A', '723', 34, 'side-chain clash', (138.035, 139.195, 109.629)), ('A', '745', 34, 'side-chain clash', (138.035, 139.195, 109.629)), ('A', '127', 35, 'side-chain clash', (114.678, 121.056, 106.56)), ('A', '145', 35, 'side-chain clash', (114.678, 121.056, 106.56)), ('A', '136', 36, 'side-chain clash', (113.74, 131.461, 120.339)), ('A', '793', 36, 'side-chain clash', (113.74, 131.461, 120.339)), ('A', '24', 37, 'backbone clash', (103.686, 135.996, 84.9)), ('A', '25', 37, 'backbone clash', (103.686, 135.996, 84.9)), ('A', '821', 38, 'side-chain clash', (133.75, 166.252, 142.842)), ('A', '824', 38, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (136.02800000000002, 164.339, 141.24099999999999)), ('A', '393', 39, 'side-chain clash', (142.259, 144.937, 151.031)), ('A', '454', 39, 'side-chain clash', (142.259, 144.937, 151.031)), ('A', '170', 40, 'side-chain clash', (107.109, 114.304, 118.708)), ('A', '173', 40, 'side-chain clash', (107.109, 114.304, 118.708)), ('A', '426', 41, 'side-chain clash', (119.053, 151.436, 162.281)), ('A', '886', 41, 'side-chain clash', (119.053, 151.436, 162.281)), ('A', '200', 42, 'side-chain clash', (118.55, 117.365, 155.681)), ('A', '227', 42, 'side-chain clash\nsmoc Outlier', (118.55, 117.365, 155.681)), ('A', '778', 43, 'side-chain clash', (125.171, 138.708, 116.463)), ('A', '781', 43, 'side-chain clash', (125.171, 138.708, 116.463)), ('A', '802', 44, 'backbone clash', (122.757, 151.81, 127.871)), ('A', '804', 44, 'backbone clash', (122.757, 151.81, 127.871)), ('A', '386', 45, 'smoc Outlier', (125.24700164794922, 93.46900177001953, 140.14100646972656)), ('A', '387', 45, 'smoc Outlier', (123.81900024414062, 94.26100158691406, 136.72500610351562)), ('A', '160', 46, 'side-chain clash', (106.464, 128.852, 122.478)), ('A', '161', 46, 'side-chain clash', (106.464, 128.852, 122.478)), ('B', '161', 1, 'side-chain clash', (110.828, 100.096, 145.807)), ('B', '162', 1, 'side-chain clash', (111.081, 105.062, 146.325)), ('B', '182', 1, 'smoc Outlier', (107.44599914550781, 105.43299865722656, 144.33099365234375)), ('B', '183', 1, 'cablam CA Geom Outlier\nside-chain clash', (111.0, 104.0, 143.7)), ('B', '184', 1, 'side-chain clash', (110.828, 100.096, 145.807)), ('B', '149', 2, 'side-chain clash', (117.953, 89.568, 132.403)), ('B', '151', 2, 'cablam Outlier\nsmoc Outlier', (118.7, 87.8, 127.2)), ('B', '154', 2, 'side-chain clash', (117.953, 89.568, 132.403)), ('B', '188', 2, 'side-chain clash', (115.757, 88.309, 137.94)), ('B', '132', 3, 'side-chain clash', (108.947, 101.174, 136.837)), ('B', '137', 3, 'side-chain clash', (108.947, 101.174, 136.837)), ('B', '138', 3, 'side-chain clash\nsmoc Outlier', (107.614, 99.111, 138.541)), ('B', '142', 3, 'smoc Outlier', (109.04900360107422, 93.30500030517578, 136.16200256347656)), ('B', '83', 4, 'side-chain clash', (145.815, 100.734, 149.259)), ('B', '85', 4, 'side-chain clash', (144.62, 94.836, 151.557)), ('B', '87', 4, 'side-chain clash\nsmoc Outlier', (143.361, 101.509, 143.745)), ('B', '89', 4, 'side-chain clash', (144.62, 94.836, 151.557)), ('B', '177', 5, 'side-chain clash', (98.65, 103.018, 142.394)), ('B', '178', 5, 'side-chain clash', (98.65, 103.018, 142.394)), ('B', '90', 6, 'side-chain clash', (138.634, 93.724, 145.413)), ('B', '94', 6, 'side-chain clash\nsmoc Outlier', (138.634, 93.724, 145.413)), ('C', '11', 1, 'side-chain clash', (108.489, 123.722, 163.33)), ('C', '12', 1, 'side-chain clash', (109.679, 129.286, 160.276)), ('C', '17', 1, 'smoc Outlier', (110.00900268554688, 118.7249984741211, 160.5449981689453)), ('C', '3', 1, 'side-chain clash', (103.401, 132.959, 150.536)), ('C', '32', 1, 'side-chain clash', (105.377, 117.054, 156.439)), ('C', '47', 1, 'Dihedral angle:CB:CG:CD:OE1', (98.30199999999999, 130.547, 149.48200000000003)), ('C', '48', 1, 'side-chain clash', (103.401, 132.959, 150.536)), ('C', '52', 1, 'side-chain clash', (105.227, 131.373, 158.408)), ('C', '58', 1, 'side-chain clash', (105.377, 117.054, 156.439)), ('C', '6', 1, 'side-chain clash\nsmoc Outlier', (103.431, 131.466, 156.172)), ('C', '8', 1, 'side-chain clash', (113.653, 133.518, 160.03)), ('C', '9', 1, 'side-chain clash', (105.227, 131.373, 158.408)), ('C', '14', 2, 'side-chain clash', (110.906, 123.397, 152.793)), ('C', '33', 2, 'smoc Outlier', (109.447998046875, 119.73100280761719, 150.71299743652344)), ('C', '36', 2, 'side-chain clash', (110.906, 123.397, 152.793)), ('C', '37', 2, 'smoc Outlier', (109.2229995727539, 125.1510009765625, 148.09300231933594)), ('C', '18', 3, 'side-chain clash', (117.168, 115.469, 156.269)), ('C', '23', 3, 'side-chain clash', (117.168, 115.469, 156.269)), ('C', '1', 4, 'side-chain clash', (104.355, 144.79, 153.901)), ('C', '2', 4, 'side-chain clash', (103.653, 138.972, 157.543)), ('D', '106', 1, 'smoc Outlier', (94.68199920654297, 124.44999694824219, 164.07200622558594)), ('D', '109', 1, 'side-chain clash', (91.335, 120.345, 166.716)), ('D', '114', 1, 'side-chain clash\nbackbone clash', (90.892, 115.486, 167.613)), ('D', '117', 1, 'side-chain clash', (92.09, 111.243, 165.189)), ('D', '131', 1, 'side-chain clash\nbackbone clash', (90.892, 115.486, 167.613)), ('D', '132', 1, 'side-chain clash', (84.66, 116.344, 169.67)), ('D', '133', 1, 'cablam Outlier', (89.8, 112.5, 172.4)), ('D', '134', 1, 'side-chain clash', (88.041, 114.456, 173.093)), ('D', '135', 1, 'smoc Outlier', (83.13099670410156, 115.01200103759766, 173.7220001220703)), ('D', '138', 1, 'side-chain clash', (84.66, 116.344, 169.67)), ('D', '180', 1, 'side-chain clash', (83.868, 106.622, 170.734)), ('D', '182', 1, 'side-chain clash\nsmoc Outlier', (85.99, 109.662, 170.3)), ('D', '183', 1, 'cablam CA Geom Outlier\nside-chain clash', (89.0, 108.7, 169.9)), ('D', '184', 1, 'side-chain clash', (85.99, 109.662, 170.3)), ('D', '147', 2, 'side-chain clash\nsmoc Outlier', (83.917, 120.169, 157.804)), ('D', '149', 2, 'side-chain clash', (87.835, 121.842, 159.063)), ('D', '154', 2, 'side-chain clash', (84.798, 117.853, 156.586)), ('D', '188', 2, 'side-chain clash', (84.798, 117.853, 156.586)), ('D', '190', 2, 'smoc Outlier', (85.38800048828125, 120.06800079345703, 151.14300537109375)), ('D', '103', 3, 'side-chain clash', (101.753, 129.824, 162.81)), ('D', '89', 3, 'side-chain clash', (109.068, 130.395, 169.889)), ('D', '93', 3, 'side-chain clash', (109.068, 130.395, 169.889)), ('D', '94', 3, 'smoc Outlier', (106.86100006103516, 133.322998046875, 165.43099975585938)), ('D', '95', 3, 'side-chain clash', (101.753, 129.824, 162.81)), ('D', '173', 4, 'side-chain clash\nsmoc Outlier', (77.003, 111.297, 175.798)), ('D', '177', 4, 'side-chain clash', (77.003, 111.297, 175.798)), ('D', '178', 4, 'cablam Outlier', (80.9, 106.4, 178.1)), ('D', '179', 4, 'cablam Outlier', (80.0, 103.3, 176.1)), ('D', '160', 5, 'side-chain clash', (86.88, 107.248, 162.101)), ('D', '185', 5, 'side-chain clash\nsmoc Outlier', (86.88, 107.248, 162.101)), ('D', '167', 6, 'smoc Outlier', (78.26100158691406, 106.06099700927734, 164.70700073242188)), ('D', '169', 6, 'cablam Outlier', (75.7, 111.7, 164.2))]
data['probe'] = [(' A 358  ASP  H  ', ' A 534  ASN HD21', -0.758, (150.661, 100.829, 128.354)), (' A 200  GLY  HA2', ' A 230  GLY  H  ', -0.741, (137.487, 113.432, 84.671)), (' A 341  VAL HG21', ' B 103  LEU HD21', -0.723, (137.367, 89.395, 134.185)), (' A  95  ALA  HB2', ' A 188  LYS  HB3', -0.712, (121.725, 111.783, 94.634)), (' A 576  LEU HD11', ' A 686  THR HG22', -0.707, (143.47, 124.002, 133.957)), (' A 200  GLY  HA3', ' A 227  PRO  HA ', -0.694, (136.554, 113.091, 82.084)), (' D 147  PHE  HB3', ' D 154  TRP  HB2', -0.678, (83.917, 120.169, 157.804)), (' A 411  LYS  HG2', ' C  18  GLN HE22', -0.67, (118.55, 117.365, 155.681)), (' A 615  MET  HB2', ' A 766  PHE  HE2', -0.664, (126.628, 143.459, 122.94)), (' A 206  THR  OG1', ' A 209  ASN  ND2', -0.661, (126.473, 125.193, 93.926)), (' A 170  ASP  OD2', ' A 173  ARG  NH2', -0.66, (107.109, 114.304, 118.708)), (' D 177  SER  HB3', ' D 182  TRP  HH2', -0.655, (80.579, 110.22, 175.719)), (' A  28  THR HG22', ' A  54  CYS  HA ', -0.651, (109.612, 132.753, 89.496)), (' A 831  TYR  HB3', ' A 868  PRO  HB2', -0.646, (127.52, 149.047, 144.138)), (' A 705  ASN  ND2', ' A 788  TYR  OH ', -0.644, (127.46, 129.107, 112.259)), (' A 531  THR  O  ', ' A 657  ASN  ND2', -0.639, (148.356, 109.283, 128.811)), (' A 256  HIS  ND1', ' A 260  ASP  O  ', -0.635, (116.638, 99.403, 109.533)), (' A 631  ARG  NH2', ' A 684  ASP  OD1', -0.635, (137.912, 118.922, 131.599)), (' A  11  VAL HG23', ' A 115  SER  HB3', -0.633, (110.238, 124.356, 82.249)), (' A 366  LEU HD22', ' A 374  TYR  HE2', -0.626, (149.708, 95.206, 139.026)), (' A 653  TYR  O  ', ' A 657  ASN  ND2', -0.611, (147.008, 109.643, 127.824)), (' A 344  THR HG23', ' A 359  VAL HG11', -0.609, (147.244, 96.339, 127.821)), (' D 160  VAL  HB ', ' D 185  ILE  HB ', -0.601, (86.88, 107.248, 162.101)), (' A 684  ASP  HB3', ' A 687  THR  HB ', -0.6, (136.456, 121.246, 134.579)), (' A 469  LEU  O  ', ' A 473  VAL HG23', -0.592, (139.073, 125.067, 114.903)), (' A 758  LEU HD12', ' A 759  SER  H  ', -0.592, (135.854, 133.425, 134.423)), (' A 583  ARG  NH2', ' A 590  GLY  O  ', -0.59, (144.185, 139.045, 139.234)), (' A 257  VAL  HB ', ' A 263  LYS  HD3', -0.59, (117.417, 93.674, 107.199)), (' A 414  ASN  OD1', ' A 415  PHE  N  ', -0.589, (117.882, 129.059, 160.249)), (' A 746  TYR  OH ', ' A 750  ARG  NH1', -0.589, (144.088, 139.921, 121.822)), (' C  58  VAL HG22', ' D 119  ILE HG12', -0.583, (101.214, 116.685, 156.18)), (' A 372  LEU HD23', ' B  87  MET  HE1', -0.582, (145.287, 104.14, 143.939)), (' A 568  ASN  OD1', ' A 654  ARG  NH2', -0.581, (145.481, 115.593, 131.978)), (' A  90  LEU HD13', ' A 192  PHE  CE1', -0.579, (126.919, 115.282, 87.981)), (' A 851  ASP  HA ', ' A 855  MET  HB3', -0.579, (128.612, 134.033, 163.886)), (' A 416  ASN  HB2', ' C   8  CYS  SG ', -0.578, (113.653, 133.518, 160.03)), (' A 203  GLY  HA3', ' A 222  PHE  HD1', -0.573, (132.641, 122.055, 88.798)), (' A  80  TYR  HE1', ' A 101  PHE  HB3', -0.573, (119.393, 123.607, 76.877)), (' A 410  VAL  HB ', ' A 444  GLN  H  ', -0.567, (116.504, 119.12, 149.165)), (' B 162  ALA  HB2', ' B 183  PRO  HD2', -0.567, (111.081, 105.062, 146.325)), (' A 426  LYS  HE2', ' A 886  GLN HE22', -0.563, (119.053, 151.436, 162.281)), (' A  34  ALA  HA ', ' A  47  LYS  HA ', -0.561, (120.151, 133.329, 101.321)), (' A 203  GLY  HA3', ' A 222  PHE  CD1', -0.56, (133.1, 121.431, 88.719)), (' A 870  THR  HA ', ' A 878  ALA  HA ', -0.56, (123.31, 152.653, 150.639)), (' A 132  ARG HH12', ' A 243  PRO  HG2', -0.558, (127.164, 123.825, 109.913)), (' A 468  GLN  HA ', ' A 731  LEU HD22', -0.558, (135.602, 127.408, 109.165)), (' A  96  VAL HG13', ' A 219  PHE  HE2', -0.558, (122.384, 116.791, 86.816)), (' A 836  ARG HH22', ' A 840  ALA  HB2', -0.556, (124.266, 135.775, 150.355)), (' B  83  VAL  O  ', ' B  87  MET  HG3', -0.554, (145.815, 100.734, 149.259)), (' A 120  THR HG21', ' A 212  LEU  HB2', -0.554, (113.74, 118.838, 99.333)), (' A  86  ILE HG23', ' A 201  ILE HD12', -0.553, (130.954, 118.181, 83.279)), (' A  27  SER  HA ', ' A  54  CYS  HB2', -0.553, (110.216, 133.89, 86.487)), (' A 346  TYR  HE2', ' A 537  PRO  HB3', -0.552, (138.266, 104.882, 130.125)), (' A 189  THR HG21', ' A 237  TYR  CZ ', -0.55, (125.287, 116.865, 99.037)), (' A 102  PHE  HE1', ' A 115  SER  HB2', -0.548, (112.283, 123.963, 80.959)), (' D 134  ASP  N  ', ' D 134  ASP  OD1', -0.547, (88.041, 114.456, 173.093)), (' B  90  MET  O  ', ' B  94  MET  HG2', -0.545, (138.634, 93.724, 145.413)), (' A 239  SER  OG ', ' A 465  ASP  OD1', -0.544, (132.706, 123.084, 107.437)), (' A 739  THR  O  ', ' A 743  ASN  ND2', -0.544, (148.757, 135.972, 110.776)), (' A 210  GLN  HG2', ' A 211  ASP  H  ', -0.543, (119.45, 118.304, 96.433)), (' A  54  CYS  HB3', ' A  72  VAL HG13', -0.543, (110.482, 130.67, 85.574)), (' C   9  THR  HA ', ' C  12  VAL HG22', -0.54, (109.679, 129.286, 160.276)), (' A 119  LEU  O  ', ' A 120  THR HG23', -0.539, (112.924, 118.76, 96.012)), (' A  97  ALA  HB2', ' A 215  ASN  HB3', -0.538, (117.41, 116.927, 90.995)), (' A 331  ARG HH11', ' A 344  THR HG21', -0.535, (146.414, 93.974, 126.672)), (' A 478  LYS  HG3', ' A 742  VAL HG12', -0.535, (145.424, 134.265, 114.415)), (' C   6  VAL HG13', ' C  52  MET  HE2', -0.533, (103.431, 131.466, 156.172)), (' A 116  ARG  HE ', ' A 217  TYR  HD2', -0.532, (118.87, 124.107, 88.563)), (' A  55  ARG  HB3', ' A  69  TYR  CD2', -0.532, (108.679, 127.357, 92.898)), (' D 109  ASN  HB3', ' D 114  CYS  HB2', -0.531, (91.335, 120.345, 166.716)), (' D 180  LEU HD13', ' D 184  LEU HD21', -0.528, (83.868, 106.622, 170.734)), (' B 154  TRP  HB3', ' B 188  ALA  HB1', -0.528, (115.757, 88.309, 137.94)), (' A 390  ASP  OD2', ' A 674  TYR  OH ', -0.527, (120.386, 104.879, 138.893)), (' C  11  VAL HG22', ' C  36  HIS  HE1', -0.526, (112.81, 127.604, 153.705)), (" G   1    C  H2'", ' G   2    A  C8 ', -0.525, (132.329, 134.944, 149.927)), (' A 876  GLU  N  ', ' A 876  GLU  OE2', -0.525, (115.096, 153.419, 150.093)), (' A 254  GLU  HA ', ' A 259  THR HG22', -0.523, (122.771, 100.952, 107.386)), (' D  89  THR  O  ', ' D  93  THR HG23', -0.523, (109.068, 130.395, 169.889)), (' A  30  VAL HG11', ' A  55  ARG  HD3', -0.521, (111.064, 130.757, 94.72)), (' A  89  LEU  HG ', ' A 201  ILE HD11', -0.519, (131.869, 115.433, 81.571)), (' D 149  TYR  HB3', ' D 154  TRP  CD1', -0.519, (87.835, 121.842, 159.063)), (' A  73  LYS  O  ', ' A 113  HIS  HB2', -0.519, (114.474, 131.009, 81.311)), (' C  16  VAL HG11', ' D  91  LEU HD22', -0.519, (108.489, 123.722, 163.33)), (' A  55  ARG  HB3', ' A  69  TYR  HD2', -0.518, (109.155, 126.971, 93.449)), (' A  60  ASP  N  ', ' A  64  ASN  O  ', -0.516, (98.913, 118.285, 93.385)), (' A 136  GLU  HB3', ' A 793  PHE  HZ ', -0.516, (113.907, 131.658, 120.347)), (' A 279  ARG HH21', ' A 318  SER  HB3', -0.516, (132.507, 105.742, 116.547)), (' A 836  ARG  NH2', ' A 840  ALA  HB2', -0.515, (124.126, 135.75, 149.904)), (' A 493  VAL HG23', ' A 573  GLN  HG3', -0.513, (150.719, 121.826, 139.08)), (' A 408  GLN  N  ', ' A 408  GLN  OE1', -0.513, (120.379, 110.311, 147.59)), (' A 723  LEU HD21', ' A 745  PHE  HD1', -0.508, (138.035, 139.195, 109.629)), (' A  69  TYR  CE1', ' A 121  LYS  HG2', -0.508, (107.183, 123.542, 95.807)), (' C  18  GLN  NE2', ' C  23  GLU  OE1', -0.507, (117.168, 115.469, 156.269)), (' A 133  HIS  HA ', ' A 784  SER  HB2', -0.502, (121.138, 131.022, 113.854)), (' B 132  ILE HG21', ' B 138  TYR  HB2', -0.498, (107.614, 99.111, 138.541)), (' D 143  ASP  N  ', ' D 143  ASP  OD1', -0.497, (78.169, 121.694, 163.002)), (' A 304  ASP  HB2', ' A 636  LEU HD22', -0.496, (145.046, 118.785, 119.05)), (' A 506  PHE  HB3', ' A 515  TYR  CE2', -0.495, (142.496, 108.526, 146.867)), (' A 127  LEU HD13', ' A 145  ILE HG21', -0.495, (114.678, 121.056, 106.56)), (' A 188  LYS  HD2', ' A 214  GLY  HA3', -0.495, (118.639, 112.682, 96.238)), (' A 867  TYR  HB2', ' A 921  TYR  HB3', -0.495, (132.107, 148.746, 151.706)), (' A 235  ASP  OD1', ' A 236  SER  N  ', -0.494, (134.316, 123.218, 100.292)), (' A 642  HIS  O  ', ' A 651  ARG  NH1', -0.494, (152.806, 120.299, 121.181)), (' D 117  LEU HD21', ' D 131  VAL  HB ', -0.494, (92.09, 111.243, 165.189)), (' A 758  LEU HD23', ' A 813  CYS  SG ', -0.492, (133.529, 136.816, 136.667)), (' A 153  ASP  OD1', ' A 154  ASP  N  ', -0.492, (100.403, 120.148, 111.742)), (' A 273  TYR  HB3', ' B 116  PRO  HG3', -0.491, (134.457, 95.823, 122.682)), (' A  95  ALA  HB1', ' A 216  TRP  HD1', -0.49, (122.766, 114.462, 93.382)), (' A 592  SER  O  ', ' A 597  GLY  HA3', -0.49, (139.638, 144.664, 140.492)), (' A 503  GLY  O  ', ' A 507  ASN  N  ', -0.488, (138.076, 108.238, 146.954)), (" F   3    U  O2'", " F   4    C  O5'", -0.488, (149.323, 133.416, 165.928)), (' A  89  LEU HD12', ' A 199  ALA  HB1', -0.486, (131.658, 111.578, 82.205)), (' A 619  TYR  HB2', ' A 622  CYS  HB2', -0.486, (126.495, 127.634, 129.324)), (' A 224  GLN  NE2', ' A 225  THR  O  ', -0.486, (136.385, 115.692, 78.984)), (' A 876  GLU  O  ', ' A 880  VAL HG23', -0.484, (118.372, 149.39, 151.316)), (' A 707  LEU  O  ', ' A 724  GLN  NE2', -0.484, (130.378, 138.595, 105.618)), (" G   1    C  H2'", ' G   2    A  H8 ', -0.481, (131.974, 134.474, 150.034)), (' A 503  GLY  HA3', ' A 561  SER  HA ', -0.481, (138.378, 110.494, 142.561)), (' A 528  PHE  O  ', ' A 531  THR HG22', -0.48, (151.678, 110.156, 132.271)), (' A 388  LEU HD22', ' A 672  SER  HB2', -0.48, (123.685, 101.051, 138.914)), (' A 239  SER  OG ', ' A 467  ARG  HB2', -0.479, (134.172, 123.504, 106.597)), (' A 433  SER  OG ', ' A 435  VAL  O  ', -0.478, (110.786, 145.199, 150.857)), (' A 785  VAL  HA ', ' A 788  TYR  CE1', -0.476, (125.063, 129.122, 115.606)), (' A 615  MET  HB2', ' A 766  PHE  CE2', -0.475, (126.701, 143.877, 122.593)), (' D  95  LEU HD22', ' D 103  LEU HD11', -0.475, (101.579, 129.079, 162.469)), (' F  -2    U  OP1', " F  -3    G  O2'", -0.475, (142.085, 128.503, 139.387)), (' A 128  VAL HG12', ' A 132  ARG  HD2', -0.474, (123.894, 125.098, 107.653)), (' A  90  LEU HD13', ' A 192  PHE  HE1', -0.474, (127.09, 115.088, 87.972)), (' A  29  ASP  HB2', ' A  51  THR  HA ', -0.47, (114.416, 137.814, 91.259)), (' A 857  GLU  HA ', ' A 860  VAL HG12', -0.468, (133.881, 139.46, 158.846)), (' A 717  ASP  OD1', ' A 718  LYS  N  ', -0.467, (135.554, 149.367, 103.268)), (' A 160  LYS  HD3', ' A 161  ASP  H  ', -0.467, (106.464, 128.852, 122.478)), (' A 490  ALA  O  ', ' A 493  VAL HG12', -0.466, (154.387, 119.287, 141.791)), (' A  20  THR  N  ', ' A  57  GLN  O  ', -0.465, (101.637, 123.856, 88.63)), (' A 917  GLU  N  ', ' A 917  GLU  OE1', -0.464, (134.118, 152.088, 162.887)), (' A 185  ALA  HB1', ' A 210  GLN HE22', -0.463, (121.47, 115.291, 99.452)), (' A  99  HIS  NE2', ' A 217  TYR  HA ', -0.461, (120.967, 120.417, 88.177)), (' D 173  SER  O  ', ' D 177  SER  OG ', -0.46, (77.003, 111.297, 175.798)), (' A 440  PHE  CZ ', ' C   7  LYS  HD3', -0.459, (111.036, 133.792, 150.589)), (' D 132  ILE HG21', ' D 138  TYR  HB2', -0.457, (84.66, 116.344, 169.67)), (' A 689  TYR  O  ', ' A 693  VAL HG23', -0.455, (139.363, 127.683, 128.457)), (' A 439  HIS  HB3', ' A 548  ILE HD11', -0.453, (119.511, 133.638, 149.339)), (' C  14  LEU HD22', ' C  36  HIS  CG ', -0.45, (110.906, 123.397, 152.793)), (' B 149  TYR  O  ', ' B 154  TRP  NE1', -0.45, (117.953, 89.568, 132.403)), (' A 132  ARG  NH1', ' A 243  PRO  HG2', -0.45, (126.774, 123.815, 110.083)), (' A  55  ARG  HE ', ' A  69  TYR  HD2', -0.45, (109.491, 126.83, 93.92)), (' A 778  SER  H  ', ' A 781  ASN  HB2', -0.449, (125.171, 138.708, 116.463)), (' A 708  LEU  HA ', ' A 724  GLN HE21', -0.448, (130.152, 136.887, 104.773)), (' C   2  LYS  HA ', ' C   2  LYS  HD3', -0.446, (103.653, 138.972, 157.543)), (' A 820  VAL HG22', ' A 821  LYS  H  ', -0.445, (130.415, 157.852, 143.431)), (' A 520  SER  O  ', ' A 524  GLN  HG3', -0.444, (155.387, 111.286, 143.598)), (' D 182  TRP  N  ', ' D 183  PRO  HD2', -0.443, (88.372, 106.949, 172.862)), (' A 692  SER  O  ', ' A 696  ILE HG13', -0.443, (136.794, 131.996, 125.622)), (" G   0    A  H2'", ' G   1    C  C6 ', -0.442, (134.156, 132.833, 153.967)), (' D 182  TRP  O  ', ' D 184  LEU  HG ', -0.442, (85.99, 109.662, 170.3)), (' A 480  PHE  O  ', ' A 641  LYS  NZ ', -0.442, (148.627, 130.664, 123.703)), (' A 619  TYR  CD2', ' A 786  LEU HD21', -0.439, (126.31, 129.433, 124.554)), (' A 474  GLU  OE2', ' A 640  ARG  NH2', -0.439, (145.579, 125.116, 115.0)), (' A  57  GLN  NE2', ' A  65  LEU  HB3', -0.439, (101.447, 122.665, 95.412)), (' A 421  ASP  O  ', ' A 425  SER  OG ', -0.438, (113.826, 144.186, 165.045)), (' A 356  ASN  ND2', ' A 535  VAL  H  ', -0.437, (146.199, 103.046, 127.832)), (' A 821  LYS  NZ ', ' A 824  ASP  OD2', -0.437, (133.75, 166.252, 142.842)), (' C  32  CYS  SG ', ' C  58  VAL HG11', -0.436, (105.377, 117.054, 156.439)), (' A   8  LEU HD12', ' A  19  LEU  HB2', -0.435, (102.275, 124.226, 84.562)), (' A 484  ASP  OD1', ' A 485  GLY  N  ', -0.435, (154.677, 128.681, 128.621)), (' A 134  PHE  H  ', ' A 784  SER  HB2', -0.434, (120.374, 130.835, 114.353)), (' A 100  ASP  HB2', ' A 117  GLN HE21', -0.434, (113.098, 117.956, 81.996)), (' A 753  PHE  CZ ', ' A 764  VAL HG11', -0.433, (130.606, 141.246, 121.081)), (' A  87  TYR  CZ ', ' A  91  LYS  HG3', -0.433, (120.298, 114.885, 81.71)), (' A 684  ASP  O  ', " F  -4    U  O2'", -0.432, (138.952, 122.361, 138.15)), (' A  82  HIS  O  ', ' A  86  ILE HG12', -0.432, (128.995, 122.04, 81.244)), (' A 853  THR  HB ', ' A 854  LEU HD12', -0.431, (133.491, 132.136, 169.18)), (' A 598  TRP  NE1', ' A 817  THR  OG1', -0.431, (130.521, 146.706, 137.503)), (' A 116  ARG  HB3', ' A 119  LEU  CD1', -0.431, (114.797, 121.61, 88.591)), (' C   3  MET  HE1', ' C  48  ALA  HB2', -0.431, (103.401, 132.959, 150.536)), (' A  80  TYR  CE1', ' A 101  PHE  HB3', -0.431, (119.727, 124.066, 77.402)), (' A 518  SER  O  ', ' B  80  ARG  NH1', -0.431, (154.782, 106.9, 148.669)), (' A 619  TYR  HD2', ' A 786  LEU HD21', -0.431, (125.943, 129.2, 124.186)), (' B 177  SER  OG ', ' B 178  PRO  HD3', -0.431, (98.65, 103.018, 142.394)), (' C   9  THR  OG1', ' C  52  MET  HE1', -0.43, (105.227, 131.373, 158.408)), (' A  44  GLY  HA2', ' A 708  LEU HD22', -0.43, (130.929, 133.752, 103.551)), (' A  33  ARG  NH2', ' A  55  ARG HH12', -0.43, (110.883, 129.325, 98.338)), (' A 197  ARG  HA ', ' A 230  GLY  O  ', -0.43, (136.212, 113.158, 88.574)), (' A 119  LEU  HB3', ' A 211  ASP  OD2', -0.43, (115.512, 121.322, 93.524)), (' A 328  PRO  HG2', ' A 378  PRO  HG2', -0.428, (136.067, 101.341, 132.808)), (' A 357  GLN  NE2', ' A 653  TYR  OH ', -0.428, (150.285, 103.794, 122.306)), (' A 312  ASN HD22', ' A 629  MET  HG3', -0.428, (133.204, 117.481, 115.761)), (' A 329  LEU  O  ', ' A 343  SER  HA ', -0.428, (140.683, 97.469, 130.033)), (' A 850  THR  O  ', ' A 852  GLY  N  ', -0.427, (127.423, 132.561, 166.001)), (' B 161  ASP  HA ', ' B 184  LEU  HA ', -0.427, (110.828, 100.096, 145.807)), (' A  19  LEU  HA ', ' A  58  GLU  HA ', -0.426, (102.195, 121.689, 88.377)), (' A 542  MET  HB2', ' A 542  MET  HE3', -0.425, (128.857, 113.262, 138.917)), (' A 194  ASP  OD1', ' A 198  ASN  ND2', -0.425, (133.356, 106.458, 90.519)), (' A 431  GLU  HA ', ' C   1  SER  H1 ', -0.423, (104.355, 144.79, 153.901)), (' D 114  CYS  HA ', ' D 131  VAL  O  ', -0.422, (90.892, 115.486, 167.613)), (' A 658  GLU  O  ', ' A 662  VAL HG12', -0.42, (138.919, 114.307, 130.491)), (' B 132  ILE  O  ', ' B 183  PRO  HA ', -0.419, (110.666, 103.165, 141.73)), (' A 393  THR HG22', ' A 454  ASP  HB2', -0.417, (118.01, 111.207, 135.368)), (' D  95  LEU HD22', ' D 103  LEU HD21', -0.417, (101.753, 129.824, 162.81)), (' B 111  ARG  HB2', ' B 111  ARG  HE ', -0.417, (140.4, 88.468, 116.994)), (' A 595  TYR  OH ', ' F   1    C  OP1', -0.415, (142.259, 144.937, 151.031)), (' B 132  ILE HG23', ' B 137  THR  OG1', -0.415, (108.947, 101.174, 136.837)), (' A 603  LYS  HA ', ' A 603  LYS  HD2', -0.415, (136.891, 151.912, 130.661)), (' D 154  TRP  HB3', ' D 188  ALA  HB1', -0.415, (84.798, 117.853, 156.586)), (' A 356  ASN  HB3', ' A 534  ASN  ND2', -0.415, (149.174, 101.008, 128.625)), (' D  87  MET  HB2', ' D  87  MET  HE2', -0.415, (115.716, 124.868, 165.372)), (' A 829  LEU  HA ', ' A 829  LEU HD23', -0.415, (133.111, 150.346, 142.113)), (' A  24  THR HG22', ' A  25  GLY  N  ', -0.414, (103.686, 135.996, 84.9)), (' A  73  LYS  HD2', ' A  75  HIS  HE1', -0.414, (118.8, 129.071, 86.848)), (' A 365  ARG HH12', ' A 367  SER  HB3', -0.413, (156.152, 98.121, 142.089)), (' A 105  ARG  HB3', ' A 110  MET  H  ', -0.413, (112.024, 134.999, 70.994)), (' A  95  ALA  O  ', ' A 216  TRP  HB2', -0.413, (122.492, 115.984, 91.419)), (' A 189  THR HG22', ' A 216  TRP  HE1', -0.412, (124.871, 115.672, 96.507)), (' A 532  LYS  HG2', ' A 654  ARG  HG2', -0.41, (150.727, 112.761, 127.997)), (' B  85  SER  O  ', ' B  89  THR HG23', -0.41, (144.62, 94.836, 151.557)), (' A 837  ILE  O  ', ' A 884  TYR  OH ', -0.41, (122.617, 140.184, 153.457)), (' A 478  LYS  HA ', ' A 481  ASP  OD2', -0.409, (147.329, 134.12, 119.059)), (' A 375  ALA  HB3', ' B  87  MET  HE2', -0.409, (143.361, 101.509, 143.745)), (' A 478  LYS  HB3', ' A 478  LYS  HE3', -0.406, (145.511, 136.198, 117.84)), (' A 798  LYS  HB2', ' A 798  LYS  HE3', -0.404, (119.123, 134.187, 129.592)), (' A 440  PHE  HA ', ' A 843  PHE  HE2', -0.404, (116.678, 132.04, 151.776)), (' A 864  ILE  HA ', ' A 921  TYR  HD1', -0.404, (133.231, 146.227, 153.037)), (' A 136  GLU  HB3', ' A 793  PHE  CZ ', -0.403, (113.74, 131.461, 120.339)), (' A 695  ASN  HB3', ' A 757  ILE HG21', -0.403, (134.794, 133.175, 127.267)), (' A 802  GLU  OE2', ' A 804  ASP  N  ', -0.403, (122.757, 151.81, 127.871)), (' A  38  TYR  OH ', ' A 729  GLU  OE2', -0.401, (138.791, 132.682, 96.49)), (' A 314  ASN  HA ', ' A 317  PHE  HB2', -0.4, (133.181, 108.298, 113.541))]
data['omega'] = [('A', ' 505 ', 'PRO', None, (137.226, 105.185, 143.98000000000005))]
data['cablam'] = [('A', '12', 'CYS', 'check CA trace,carbonyls, peptide', 'helix\nHHHTT', (106.0, 120.7, 80.7)), ('A', '15', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nTTS-S', (106.6, 115.7, 82.7)), ('A', '29', 'ASP', ' beta sheet', ' \n----S', (112.0, 136.2, 91.7)), ('A', '45', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\nEEEE-', (126.8, 131.8, 103.4)), ('A', '47', 'LYS', ' beta sheet', ' \nEE---', (120.5, 135.2, 102.4)), ('A', '74', 'ARG', ' beta sheet', ' \nB----', (116.3, 133.1, 82.3)), ('A', '105', 'ARG', ' beta sheet', 'beta bridge\nEEBTT', (111.3, 133.5, 73.0)), ('A', '107', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nBTTSS', (110.6, 138.8, 75.2)), ('A', '116', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-B--S', (114.1, 122.4, 86.0)), ('A', '117', 'GLN', 'check CA trace,carbonyls, peptide', ' \nB--S-', (112.5, 119.1, 87.0)), ('A', '119', 'LEU', 'check CA trace,carbonyls, peptide', ' \n-S--S', (113.6, 119.5, 92.6)), ('A', '121', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (110.0, 123.8, 97.1)), ('A', '141', 'THR', ' alpha helix', 'turn\n--TTT', (110.9, 128.3, 106.4)), ('A', '167', 'GLU', ' alpha helix', 'bend\nSSS-T', (112.2, 121.9, 127.6)), ('A', '218', 'ASP', 'check CA trace,carbonyls, peptide', ' \nB--TT', (123.0, 124.2, 88.5)), ('A', '220', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (127.6, 125.5, 85.6)), ('A', '229', 'SER', 'check CA trace,carbonyls, peptide', ' \nTT---', (140.2, 112.3, 85.8)), ('A', '258', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nBSSSS', (119.9, 95.8, 105.1)), ('A', '261', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (114.1, 101.5, 108.7)), ('A', '274', 'ASP', 'check CA trace,carbonyls, peptide', ' \n----H', (137.2, 97.1, 116.9)), ('A', '275', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---HH', (134.6, 98.4, 114.3)), ('A', '292', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (141.7, 114.3, 103.4)), ('A', '394', 'THR', 'check CA trace,carbonyls, peptide', ' \nS--S-', (118.1, 107.5, 130.3)), ('A', '402', 'THR', ' alpha helix', 'bend\nE-SSS', (126.3, 97.8, 146.6)), ('A', '419', 'PHE', 'check CA trace,carbonyls, peptide', 'helix\n-HHHH', (119.7, 139.5, 162.3)), ('A', '431', 'GLU', 'check CA trace,carbonyls, peptide', 'turn\nS-TT-', (104.4, 146.4, 153.6)), ('A', '448', 'ALA', ' alpha helix', 'turn\nSTTHH', (116.8, 114.7, 143.7)), ('A', '485', 'GLY', ' beta sheet', ' \n-----', (152.8, 126.9, 129.2)), ('A', '509', 'TRP', 'check CA trace,carbonyls, peptide', 'turn\nGGT--', (140.6, 105.7, 152.7)), ('A', '586', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nSSSB-', (140.4, 139.0, 127.0)), ('A', '595', 'TYR', 'check CA trace,carbonyls, peptide', 'turn\nSTTTH', (141.2, 148.2, 144.6)), ('A', '608', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (139.0, 152.0, 122.1)), ('A', '664', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nIIS-E', (132.8, 110.5, 129.0)), ('A', '677', 'PRO', 'check CA trace,carbonyls, peptide', ' \nE--SS', (127.5, 111.2, 127.8)), ('A', '759', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (134.3, 131.5, 132.8)), ('A', '760', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (130.8, 131.1, 131.3)), ('A', '843', 'PHE', 'check CA trace,carbonyls, peptide', ' \nHH-BS', (120.2, 132.7, 156.8)), ('A', '847', 'ILE', 'check CA trace,carbonyls, peptide', 'turn\nSSTT-', (123.4, 125.6, 162.5)), ('A', '848', 'VAL', 'check CA trace,carbonyls, peptide', 'turn\nSTT--', (126.9, 125.6, 163.9)), ('A', '852', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\n-TTSS', (127.7, 133.9, 168.3)), ('A', '919', 'GLU', 'check CA trace,carbonyls, peptide', 'turn\nSSTTT', (136.2, 154.0, 156.7)), ('A', '103', 'LYS', 'check CA trace', 'strand\n-EEEB', (114.5, 127.3, 74.2)), ('A', '109', 'ASP', 'check CA trace', 'bend\nTSS-E', (111.6, 137.4, 70.4)), ('A', '151', 'CYS', 'check CA trace', 'bend\nTTSS-', (107.6, 115.1, 110.3)), ('A', '326', 'PHE', 'check CA trace', ' \nTS-EE', (132.3, 101.8, 124.1)), ('A', '504', 'PHE', 'check CA trace', 'turn\n--TTG', (135.8, 107.2, 144.3)), ('A', '607', 'SER', 'check CA trace', 'bend\nHTSS-', (139.4, 150.2, 125.4)), ('A', '678', 'GLY', 'check CA trace', 'bend\n--SS-', (129.6, 114.3, 128.0)), ('A', '733', 'ARG', 'check CA trace', 'bend\nHHS-S', (139.7, 126.8, 101.1)), ('B', '126', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nH-SEE', (124.7, 86.7, 138.7)), ('B', '145', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (108.0, 86.5, 138.5)), ('B', '151', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (118.7, 87.8, 127.2)), ('B', '183', 'PRO', 'check CA trace', ' \n-S-EE', (111.0, 104.0, 143.7)), ('C', '24', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nTTS-S', (112.9, 108.6, 156.6)), ('D', '133', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S-S', (89.8, 112.5, 172.4)), ('D', '169', 'LEU', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (75.7, 111.7, 164.2)), ('D', '178', 'PRO', ' alpha helix', 'turn\nSTTSS', (80.9, 106.4, 178.1)), ('D', '179', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (80.0, 103.3, 176.1)), ('D', '183', 'PRO', 'check CA trace', ' \n-S--E', (89.0, 108.7, 169.9))]
data['smoc'] = [('A', 17, 'ALA', 0.6737510584567971, (101.03500366210938, 118.87799835205078, 82.16400146484375)), ('A', 34, 'ALA', 0.731273311348891, (119.61499786376953, 131.6719970703125, 101.41799926757812)), ('A', 53, 'CYS', 0.6019118058834508, (113.927001953125, 132.14700317382812, 89.58399963378906)), ('A', 62, 'ASP', 0.715756911574299, (92.78900146484375, 115.60399627685547, 93.27999877929688)), ('A', 69, 'TYR', 0.558412167424896, (108.75, 122.86199951171875, 91.72899627685547)), ('A', 110, 'MET', 0.716790392948107, (114.79900360107422, 135.3280029296875, 70.79199981689453)), ('A', 139, 'CYS', 0.6691069191970236, (111.44499969482422, 130.8679962158203, 111.46800231933594)), ('A', 143, 'LYS', 0.6878983556382601, (107.64399719238281, 125.58100128173828, 110.19200134277344)), ('A', 179, 'GLY', 0.6623263136327531, (117.24800109863281, 111.58100128173828, 109.01699829101562)), ('A', 185, 'ALA', 0.6154401274111989, (121.12799835205078, 113.24299621582031, 100.26300048828125)), ('A', 197, 'ARG', 0.6676979373701687, (135.29800415039062, 111.24099731445312, 88.83699798583984)), ('A', 201, 'ILE', 0.5988538413447556, (134.32899475097656, 116.49700164794922, 85.56300354003906)), ('A', 205, 'LEU', 0.5868229543571395, (129.79299926757812, 121.2490005493164, 94.86100006103516)), ('A', 211, 'ASP', 0.587154772653551, (117.47100067138672, 119.82099914550781, 97.0260009765625)), ('A', 227, 'PRO', 0.7037597794246058, (137.1179962158203, 111.96600341796875, 81.0530014038086)), ('A', 230, 'GLY', 0.6739850845305918, (137.93600463867188, 115.16000366210938, 86.85600280761719)), ('A', 234, 'VAL', 0.5517819014464364, (133.3520050048828, 118.9990005493164, 97.73300170898438)), ('A', 244, 'ILE', 0.6588084735883, (122.86199951171875, 118.8030014038086, 110.94100189208984)), ('A', 245, 'LEU', 0.6457748548674985, (124.03399658203125, 115.2229995727539, 110.37699890136719)), ('A', 246, 'THR', 0.6636772664992042, (123.7699966430664, 114.78500366210938, 114.16000366210938)), ('A', 259, 'THR', 0.7316171052213164, (120.18499755859375, 99.53700256347656, 106.03299713134766)), ('A', 306, 'CYS', 0.617764699016936, (144.0500030517578, 115.84400177001953, 112.0770034790039)), ('A', 311, 'ALA', 0.6845582641902921, (137.3509979248047, 112.7979965209961, 115.99099731445312)), ('A', 325, 'SER', 0.7196431467176357, (130.98199462890625, 98.33200073242188, 123.23100280761719)), ('A', 336, 'ASP', 0.7399940439500167, (150.75599670410156, 85.28600311279297, 140.45199584960938)), ('A', 341, 'VAL', 0.6592624872415411, (140.3979949951172, 91.89700317382812, 134.68899536132812)), ('A', 370, 'GLU', 0.6175567857387559, (150.22500610351562, 99.96499633789062, 139.44000244140625)), ('A', 379, 'ALA', 0.6460996737276564, (136.91000366210938, 97.36100006103516, 135.24099731445312)), ('A', 386, 'ASN', 0.7780197103158072, (125.24700164794922, 93.46900177001953, 140.14100646972656)), ('A', 387, 'LEU', 0.7122873875562924, (123.81900024414062, 94.26100158691406, 136.72500610351562)), ('A', 423, 'ALA', 0.5626267255732486, (116.08699798583984, 143.79100036621094, 160.25599670410156)), ('A', 424, 'VAL', 0.609048108493145, (112.38099670410156, 144.03599548339844, 161.1020050048828)), ('A', 440, 'PHE', 0.6449931582791546, (116.55999755859375, 131.11099243164062, 150.3070068359375)), ('A', 445, 'ASP', 0.672743606782097, (113.78099822998047, 115.19200134277344, 148.6820068359375)), ('A', 472, 'VAL', 0.6915112601360864, (138.11399841308594, 129.16900634765625, 115.0719985961914)), ('A', 484, 'ASP', 0.7328826083440437, (153.29400634765625, 130.5679931640625, 128.656005859375)), ('A', 495, 'VAL', 0.6623620913548371, (148.2429962158203, 122.47899627685547, 145.23300170898438)), ('A', 512, 'ALA', 0.626786732573956, (143.83200073242188, 113.88099670410156, 148.45799255371094)), ('A', 535, 'VAL', 0.6321344451380717, (144.947998046875, 105.4219970703125, 128.83099365234375)), ('A', 538, 'THR', 0.6683520927414429, (138.5279998779297, 106.73300170898438, 136.2729949951172)), ('A', 539, 'ILE', 0.6718085958275547, (135.343994140625, 107.2750015258789, 138.2969970703125)), ('A', 545, 'LYS', 0.7322650962424728, (125.62999725341797, 120.5739974975586, 146.92300415039062)), ('A', 567, 'THR', 0.6562984689925938, (148.3780059814453, 114.3270034790039, 136.3730010986328)), ('A', 571, 'PHE', 0.6045868855024445, (149.94500732421875, 118.98699951171875, 132.63499450683594)), ('A', 575, 'LEU', 0.6850195017914086, (149.23300170898438, 127.64900207519531, 131.58700561523438)), ('A', 576, 'LEU', 0.6485514239005052, (146.46099853515625, 128.052001953125, 134.16099548339844)), ('A', 579, 'ILE', 0.7245798002252681, (146.1479949951172, 132.8679962158203, 132.59800720214844)), ('A', 589, 'ILE', 0.7205540821633584, (140.4219970703125, 135.1179962158203, 135.36900329589844)), ('A', 629, 'MET', 0.6476623100687816, (133.7949981689453, 118.16100311279297, 120.08999633789062)), ('A', 643, 'THR', 0.7060756038503243, (155.66299438476562, 121.84600067138672, 121.69599914550781)), ('A', 663, 'LEU', 0.6635525431789441, (134.49099731445312, 113.86199951171875, 129.35499572753906)), ('A', 669, 'CYS', 0.6375339724270906, (125.6050033569336, 108.74199676513672, 141.14199829101562)), ('A', 690, 'ALA', 0.6925542547240069, (137.95599365234375, 125.15299987792969, 129.28399658203125)), ('A', 711, 'ASP', 0.6907016824665931, (124.8949966430664, 140.44500732421875, 102.37999725341797)), ('A', 724, 'GLN', 0.7198827133565094, (134.9219970703125, 138.67799377441406, 104.59300231933594)), ('A', 742, 'VAL', 0.6787395363730698, (144.29200744628906, 134.97000122070312, 111.31199645996094)), ('A', 753, 'PHE', 0.6652719311156863, (134.4980010986328, 143.37600708007812, 119.70800018310547)), ('A', 764, 'VAL', 0.6402517829436374, (131.1909942626953, 142.72900390625, 125.33100128173828)), ('A', 773, 'GLN', 0.7378833350956832, (124.98699951171875, 146.91200256347656, 109.8239974975586)), ('A', 784, 'SER', 0.7270159546525247, (121.41500091552734, 130.9219970703125, 116.62000274658203)), ('A', 791, 'ASN', 0.7470736288472484, (121.94000244140625, 122.38500213623047, 121.33000183105469)), ('A', 814, 'SER', 0.6277894122864452, (125.96499633789062, 138.81900024414062, 139.38999938964844)), ('A', 824, 'ASP', 0.6570089250471679, (136.0279998779297, 164.33900451660156, 141.24099731445312)), ('A', 842, 'CYS', 0.6200972338890011, (119.74600219726562, 136.40699768066406, 157.6179962158203)), ('A', 868, 'PRO', 0.579220178023354, (128.2480010986328, 150.65899658203125, 146.9149932861328)), ('A', 869, 'LEU', 0.49860116958479356, (124.59600067138672, 150.25, 147.9040069580078)), ('A', 874, 'ASN', 0.6757069689498096, (117.31199645996094, 154.8730010986328, 146.18099975585938)), ('A', 894, 'GLU', 0.6493178028742765, (127.62699890136719, 142.2740020751953, 172.62399291992188)), ('A', 913, 'SER', 0.5932923380561248, (140.3679962158203, 147.3699951171875, 161.08299255371094)), ('A', 915, 'TYR', 0.5108654295499486, (134.16700744628906, 147.36599731445312, 161.7949981689453)), ('B', 87, 'MET', 0.7873330472561064, (143.7030029296875, 98.70899963378906, 147.77499389648438)), ('B', 94, 'MET', 0.7612487949948066, (136.22000122070312, 91.85800170898438, 144.5260009765625)), ('B', 99, 'ASP', 0.7088135713201467, (137.43499755859375, 84.54100036621094, 139.24200439453125)), ('B', 103, 'LEU', 0.6930760581493955, (133.98699951171875, 85.2030029296875, 132.781005859375)), ('B', 111, 'ARG', 0.7045017277421683, (139.41700744628906, 87.15399932861328, 119.2760009765625)), ('B', 138, 'TYR', 0.7465687060278764, (106.93099975585938, 98.16400146484375, 136.74600219726562)), ('B', 142, 'CYS', 0.6666050109405431, (109.04900360107422, 93.30500030517578, 136.16200256347656)), ('B', 151, 'SER', 0.7894275019330158, (118.7040023803711, 87.84100341796875, 127.23100280761719)), ('B', 165, 'LYS', 0.7357983361699647, (110.89700317382812, 97.95099639892578, 153.26800537109375)), ('B', 182, 'TRP', 0.6978013397824965, (107.44599914550781, 105.43299865722656, 144.33099365234375)), ('B', 192, 'ASN', 0.8162797036063105, (119.87200164794922, 78.80599975585938, 134.48199462890625)), ('C', 6, 'VAL', 0.6027923477871632, (105.65499877929688, 133.7100067138672, 156.53199768066406)), ('C', 17, 'LEU', 0.5861100630255655, (110.00900268554688, 118.7249984741211, 160.5449981689453)), ('C', 26, 'SER', 0.6059337378672074, (109.28500366210938, 109.0530014038086, 150.53599548339844)), ('C', 33, 'VAL', 0.6195530055460035, (109.447998046875, 119.73100280761719, 150.71299743652344)), ('C', 37, 'ASN', 0.6206525311538089, (109.2229995727539, 125.1510009765625, 148.09300231933594)), ('C', 66, 'VAL', 0.6976525122459953, (101.87899780273438, 119.32599639892578, 171.82000732421875)), ('D', 94, 'MET', 0.5770715603290181, (106.86100006103516, 133.322998046875, 165.43099975585938)), ('D', 106, 'ILE', 0.6515406930565834, (94.68199920654297, 124.44999694824219, 164.07200622558594)), ('D', 135, 'TYR', 0.525772441428024, (83.13099670410156, 115.01200103759766, 173.7220001220703)), ('D', 147, 'PHE', 0.6466927648248052, (82.19400024414062, 121.33499908447266, 160.11599731445312)), ('D', 167, 'VAL', 0.5572787377198697, (78.26100158691406, 106.06099700927734, 164.70700073242188)), ('D', 173, 'SER', 0.5802567835388122, (74.0199966430664, 112.37300109863281, 173.7310028076172)), ('D', 182, 'TRP', 0.5917516702127293, (86.66200256347656, 108.49600219726562, 172.96299743652344)), ('D', 185, 'ILE', 0.5801399002713408, (87.5250015258789, 109.30599975585938, 163.4290008544922)), ('D', 190, 'ARG', 0.7058852143486171, (85.38800048828125, 120.06800079345703, 151.14300537109375))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-30252/7bzf/Model_validation_5/validation_cootdata/molprobity_probe7bzf_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

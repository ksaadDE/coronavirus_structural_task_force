# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 123 ', 'ALA', 0.03188477888290909, (214.493, 201.19900000000007, 132.391)), ('A', ' 328 ', 'ASN', 0.00047097, (190.573, 127.341, 132.1)), ('A', ' 526 ', 'LYS', 0.0004055024766072421, (192.343, 135.25200000000007, 129.038)), ('A', ' 696 ', 'LEU', 0.0018646304094587698, (190.958, 156.33, 187.267)), ('B', ' 123 ', 'ALA', 0.03143929051483906, (171.227, 102.228, 132.138)), ('B', ' 328 ', 'ASN', 0.005206340657179883, (119.181, 159.76000000000005, 132.091)), ('B', ' 526 ', 'LYS', 0.00453955225490962, (126.229, 153.259, 129.362)), ('B', ' 696 ', 'LEU', 0.0018835308402646053, (144.017, 144.767, 187.168)), ('C', ' 123 ', 'ALA', 0.03159038455594624, (107.20599999999999, 189.079, 131.917)), ('C', ' 696 ', 'LEU', 0.0018941297664622169, (157.398, 191.223, 187.185)), ('D', '  43 ', 'GLN', 0.0008848433179543121, (144.913, 133.236, 77.149)), ('H', '  43 ', 'GLN', 0.0009003820917655817, (147.094, 196.822, 78.397))]
data['omega'] = [('D', ' 114 ', 'PRO', None, (127.357, 142.746, 79.774)), ('E', '   8 ', 'PRO', None, (143.124, 123.571, 89.457)), ('E', '  95 ', 'PRO', None, (144.091, 147.6160000000001, 90.346)), ('H', ' 114 ', 'PRO', None, (164.622, 206.496, 80.586)), ('L', '   8 ', 'PRO', None, (139.979, 204.07700000000008, 90.433)), ('L', '  95 ', 'PRO', None, (159.644, 190.25000000000009, 91.846))]
data['rota'] = [('A', ' 200 ', 'TYR', 0.15463482677623602, (193.403, 183.46400000000006, 130.427)), ('A', ' 316 ', 'ARG', 0.0051163903989054965, (191.625, 154.039, 152.502)), ('B', ' 316 ', 'ARG', 0.0053231392165653145, (141.75900000000001, 145.499, 152.403)), ('B', ' 498 ', 'TYR', 0.03297359813530383, (119.483, 154.23000000000005, 86.515)), ('C', ' 316 ', 'ARG', 0.004436730500580626, (159.32, 192.912, 152.431)), ('H', '  87 ', 'ARG', 0.02945477727448928, (153.163, 181.01100000000002, 72.204)), ('H', ' 103 ', 'ASP', 0.0, (168.854, 200.075, 96.136)), ('L', '  10 ', 'SER', 0.09916103299073978, (138.325, 204.21, 84.503)), ('L', ' 100 ', 'GLN', 0.11324148288379379, (146.167, 197.32000000000002, 86.292)), ('D', '  87 ', 'ARG', 0.028992196345406278, (154.661, 146.79, 70.326)), ('D', ' 103 ', 'ASP', 0.0, (130.999, 150.102, 95.055)), ('E', '  10 ', 'SER', 0.098862219648738, (143.7, 121.989, 83.534)), ('E', ' 100 ', 'GLN', 0.11162378459065284, (145.283, 132.34899999999996, 85.058))]
data['cbeta'] = [('A', ' 328 ', 'ASN', ' ', 0.2925512767699995, (191.62900000000002, 126.46700000000004, 132.796))]
data['probe'] = [(' B 518  PRO  CG ', ' C 200  TYR  CE1', -1.357, (135.397, 175.839, 127.967)), (' B 372  SER  HB3', ' D 104  TYR  OH ', -1.197, (125.696, 152.239, 99.214)), (' B 518  PRO  HG3', ' C 200  TYR  CE1', -1.173, (136.221, 176.318, 129.001)), (' A 518  PRO  HB2', ' B 230  PRO  HB2', -1.111, (170.802, 130.645, 125.616)), (' B 372  SER  CB ', ' D 104  TYR  OH ', -1.095, (124.916, 151.588, 99.865)), (' B 331  ASN  ND2', ' B 358  CYS  HA ', -1.081, (122.383, 167.998, 124.334)), (' B 518  PRO  HG2', ' C 200  TYR  CE1', -1.079, (135.257, 176.577, 128.172)), (' B 445  ASN  O  ', ' B 493  GLY  HA2', -1.063, (116.677, 164.718, 88.305)), (' B 372  SER  HB3', ' D 104  TYR  CZ ', -1.032, (125.713, 150.813, 99.152)), (' A 518  PRO  CB ', ' B 230  PRO  HB2', -0.96, (169.95, 130.636, 126.055)), (' D 103  ASP  O  ', ' E  32  TRP  HH2', -0.95, (131.951, 147.811, 95.785)), (' H 103  ASP  O  ', ' L  32  TRP  HH2', -0.948, (166.409, 200.587, 96.86)), (' H 103  ASP  O  ', ' L  32  TRP  CH2', -0.922, (165.561, 200.688, 96.596)), (' D 103  ASP  O  ', ' E  32  TRP  CH2', -0.915, (131.738, 147.258, 95.547)), (' A 167  THR  HB ', ' C 354  ARG  NH1', -0.911, (195.645, 189.573, 118.004)), (' B 494  PHE  HB3', ' B 504  PRO  HD3', -0.909, (119.543, 158.474, 91.232)), (' A 518  PRO  HB2', ' B 230  PRO  CB ', -0.898, (171.467, 129.922, 126.476)), (' A 525  LYS  C  ', ' A 526  LYS  O  ', -0.887, (190.937, 136.554, 129.587)), (' A 525  LYS  O  ', ' A 526  LYS  C  ', -0.886, (191.509, 134.66, 130.551)), (' B 372  SER  HB3', ' D 104  TYR  CE1', -0.882, (126.232, 150.833, 99.324)), (' C 329  ILE  HB ', ' C1304  NAG  H82', -0.878, (187.797, 207.48, 130.058)), (' D  33  TYR  CD2', ' D 102  HIS  CE1', -0.874, (133.254, 151.552, 86.312)), (' C 360  ALA  O  ', ' C 524  PRO  HD3', -0.872, (181.725, 197.513, 123.609)), (' C 445  ASN  O  ', ' C 493  GLY  HA2', -0.857, (188.797, 206.04, 89.081)), (' B 360  ALA  O  ', ' B 524  PRO  HD3', -0.837, (126.223, 159.744, 122.866)), (' B 518  PRO  HG3', ' C 200  TYR  HE1', -0.83, (136.688, 175.16, 129.561)), (' B 402  ASP  CG ', ' D  33  TYR  OH ', -0.812, (131.168, 154.996, 88.302)), (' C 400  ARG  CZ ', ' H  54  ASN HD22', -0.797, (179.331, 197.242, 87.271)), (' D  33  TYR  CE2', ' D 102  HIS  CE1', -0.793, (133.78, 152.711, 87.283)), (' C 359  VAL HG11', ' C 524  PRO  HB3', -0.79, (182.183, 199.664, 126.513)), (' A 199  GLY  HA3', ' C 518  PRO  HD3', -0.766, (191.058, 181.311, 126.914)), (' B 331  ASN HD22', ' B 358  CYS  HA ', -0.757, (123.13, 168.509, 125.55)), (' A 326  PHE  CZ ', ' A 525  LYS  HD2', -0.752, (185.251, 136.952, 130.6)), (' D  33  TYR  CD2', ' D 102  HIS  NE2', -0.751, (133.058, 150.803, 87.132)), (' B 330  THR HG23', ' B 331  ASN  N  ', -0.748, (121.064, 165.542, 128.763)), (' H  42  GLY  O  ', ' H  44  GLY  N  ', -0.733, (147.363, 195.335, 79.401)), (' B 329  ILE  O  ', ' B 329  ILE HG22', -0.732, (115.837, 163.924, 128.327)), (' C 360  ALA  O  ', ' C 524  PRO  CD ', -0.729, (180.348, 197.89, 123.354)), (' A 199  GLY  C  ', ' C 518  PRO  HG2', -0.728, (192.692, 182.668, 127.788)), (' A 199  GLY  HA3', ' C 518  PRO  CD ', -0.727, (191.34, 181.317, 126.475)), (' A 518  PRO  CB ', ' B 230  PRO  CB ', -0.718, (170.134, 129.987, 126.875)), (' B 360  ALA  O  ', ' B 524  PRO  CD ', -0.715, (126.816, 159.357, 122.069)), (' D  42  GLY  O  ', ' D  44  GLY  N  ', -0.701, (146.132, 134.052, 78.221)), (' B 494  PHE  CD2', ' B 504  PRO  HB3', -0.701, (120.312, 160.658, 92.999)), (' C 400  ARG  CZ ', ' H  54  ASN  ND2', -0.693, (180.109, 197.11, 87.332)), (' C 372  SER  HB3', ' H 104  TYR  OH ', -0.668, (173.59, 203.744, 99.921)), (' B 331  ASN  ND2', ' B 358  CYS  CA ', -0.666, (123.016, 168.251, 124.015)), (' B 445  ASN  O  ', ' B 493  GLY  CA ', -0.655, (118.067, 164.359, 88.338)), (' C1100  PHE  HZ ', ' U   1  NAG  H62', -0.652, (154.231, 184.633, 228.531)), (' C 359  VAL  CG1', ' C 524  PRO  HB3', -0.646, (182.817, 199.71, 126.096)), (' B1100  PHE  HZ ', ' P   1  NAG  H62', -0.642, (150.665, 145.711, 228.151)), (' B 372  SER  HB2', ' D 104  TYR  OH ', -0.641, (125.298, 152.958, 100.116)), (' A1100  PHE  HZ ', ' J   1  NAG  H62', -0.64, (186.657, 162.092, 228.659)), (' B 494  PHE  CB ', ' B 504  PRO  HD3', -0.635, (119.126, 159.229, 91.058)), (' C 446  TYR  CD1', ' C 493  GLY  HA3', -0.633, (188.565, 204.207, 86.615)), (' B 361  ASP  HA ', ' B 524  PRO  HG3', -0.632, (125.312, 157.901, 122.588)), (' B 733  VAL HG22', ' B 855  LEU  HG ', -0.632, (177.639, 153.564, 158.555)), (' A 388  CYS  HA ', ' A 522  CYS  HA ', -0.627, (180.038, 135.734, 122.859)), (' B 388  CYS  HA ', ' B 522  CYS  HA ', -0.625, (132.634, 164.016, 123.369)), (' A1037  VAL HG21', ' B1032  GLY  HA3', -0.622, (173.397, 159.618, 199.489)), (' C 388  CYS  HA ', ' C 522  CYS  HA ', -0.618, (181.916, 190.305, 123.794)), (' C 733  VAL HG22', ' C 855  LEU  HG ', -0.618, (148.806, 157.769, 158.682)), (' A 851  LYS  NZ ', ' C 565  ASP  OD2', -0.616, (177.556, 189.822, 156.364)), (' A 733  VAL HG22', ' A 855  LEU  HG ', -0.616, (166.763, 181.073, 158.613)), (' A 525  LYS  O  ', ' A 526  LYS  O  ', -0.61, (190.854, 135.789, 131.061)), (' C 554  LYS  NZ ', ' C 571  ASP  OD2', -0.609, (181.963, 194.152, 154.134)), (' C 316  ARG  HG2', ' C 316  ARG HH11', -0.608, (160.001, 190.868, 148.684)), (' D  33  TYR  HD2', ' D 102  HIS  NE2', -0.607, (132.508, 151.01, 86.776)), (' A 554  LYS  NZ ', ' A 571  ASP  OD2', -0.607, (181.551, 133.776, 154.187)), (' B 554  LYS  NZ ', ' B 571  ASP  OD2', -0.603, (129.923, 164.56, 154.155)), (' B 974  LEU HD11', ' B 990  ILE HG12', -0.6, (176.634, 156.225, 139.453)), (' C 974  LEU HD11', ' C 990  ILE HG12', -0.599, (150.82, 157.04, 139.432)), (' C 357  ASN  HA ', ' C 520  THR  OG1', -0.598, (190.965, 191.94, 124.992)), (' A 316  ARG  HG2', ' A 316  ARG HH11', -0.597, (190.105, 154.571, 149.076)), (' A 808  LYS  NZ ', ' A 817  ASP  OD2', -0.595, (179.746, 195.081, 186.97)), (' B 316  ARG  HG2', ' B 316  ARG HH11', -0.594, (143.284, 147.085, 148.718)), (' C 808  LYS  NZ ', ' C 817  ASP  OD2', -0.593, (129.479, 162.193, 186.671)), (' A 565  ASP  OD2', ' B 851  LYS  NZ ', -0.593, (179.693, 139.827, 156.351)), (' A 723  ILE HG12', ' A1058  VAL HG22', -0.593, (176.799, 179.077, 185.087)), (' B 329  ILE  HB ', ' B1304  NAG  H82', -0.589, (114.7, 162.766, 130.041)), (' B 723  ILE HG12', ' B1058  VAL HG22', -0.588, (170.752, 145.783, 185.025)), (' B 330  THR  CG2', ' B 331  ASN  N  ', -0.587, (120.794, 164.758, 129.104)), (' A 974  LEU HD11', ' A 990  ILE HG12', -0.587, (164.672, 179.04, 139.385)), (' A 200  TYR  CE2', ' A 230  PRO  HB3', -0.582, (190.366, 186.569, 128.831)), (' B 808  LYS  NZ ', ' B 817  ASP  OD2', -0.581, (183.032, 135.063, 186.791)), (' C 723  ILE HG12', ' C1058  VAL HG22', -0.581, (144.8, 168.092, 184.829)), (' A 326  PHE  CZ ', ' A 525  LYS  CD ', -0.577, (185.821, 137.442, 130.563)), (' C 446  TYR  CE1', ' C 493  GLY  HA3', -0.567, (188.388, 204.913, 85.779)), (' A 326  PHE  CD2', ' A 525  LYS  HB2', -0.566, (188.037, 135.683, 131.013)), (' A1025  LYS  O  ', ' A1029  CYS  CB ', -0.563, (167.995, 173.938, 193.386)), (' B 402  ASP  CG ', ' D  33  TYR  HH ', -0.563, (131.344, 154.95, 89.279)), (' B 505  TYR  HH ', ' D 104  TYR  HE2', -0.559, (125.541, 152.029, 96.394)), (' A 760  LEU HD22', ' A1005  VAL HG21', -0.559, (161.854, 173.04, 158.841)), (' B1025  LYS  O  ', ' B1029  CYS  CB ', -0.558, (170.553, 155.538, 193.777)), (' C 760  LEU HD22', ' C1005  VAL HG21', -0.556, (157.715, 157.347, 158.812)), (' B 505  TYR  HE2', ' D 104  TYR  HH ', -0.554, (125.114, 153.061, 97.964)), (' B 760  LEU HD22', ' B1005  VAL HG21', -0.553, (173.573, 161.521, 159.09)), (' A 228  ASP  O  ', ' A 228  ASP  OD1', -0.548, (193.192, 190.913, 131.888)), (' C1025  LYS  O  ', ' C1029  CYS  CB ', -0.547, (153.229, 162.844, 193.556)), (' A 361  ASP  HA ', ' A 524  PRO  HG3', -0.543, (188.535, 132.843, 122.361)), (' C 400  ARG  NH1', ' H  54  ASN HD22', -0.538, (178.662, 197.948, 87.302)), (' B 565  ASP  OD2', ' C 851  LYS  NZ ', -0.534, (135.378, 162.804, 156.471)), (' C 357  ASN  H  ', ' C 520  THR  CG2', -0.532, (190.336, 191.852, 122.759)), (' A 376  CYS  HA ', ' A 429  CYS  HA ', -0.53, (183.933, 140.145, 108.187)), (' D 103  ASP  N  ', ' D 103  ASP  OD1', -0.528, (130.4, 150.886, 93.227)), (' A1032  GLY  HA3', ' C1037  VAL HG21', -0.524, (162.938, 174.007, 199.402)), (' B 330  THR HG23', ' B 331  ASN  H  ', -0.524, (120.947, 164.584, 128.222)), (' A1025  LYS  O  ', ' A1029  CYS  HB3', -0.522, (168.453, 174.408, 193.602)), (' B1025  LYS  O  ', ' B1029  CYS  HB3', -0.518, (171.012, 155.451, 193.965)), (' B1104  ARG HH22', ' C 904  ASN HD22', -0.517, (153.76, 162.511, 214.526)), (' C 376  CYS  HA ', ' C 429  CYS  HA ', -0.516, (175.679, 192.539, 109.496)), (' C1025  LYS  O  ', ' C1029  CYS  HB3', -0.513, (152.832, 162.533, 193.543)), (' B 376  CYS  HA ', ' B 429  CYS  HA ', -0.513, (134.977, 158.201, 108.952)), (' B 324  VAL HG11', ' B 525  LYS  HE3', -0.512, (130.318, 154.215, 131.768)), (' B1037  VAL HG21', ' C1032  GLY  HA3', -0.511, (155.653, 158.366, 199.555)), (' C 520  THR HG23', ' C 521  VAL HG23', -0.507, (188.962, 191.151, 122.486)), (' C 360  ALA  C  ', ' C 524  PRO  HD3', -0.504, (181.808, 198.303, 122.942)), (' B 505  TYR  OH ', ' D 104  TYR  HE2', -0.503, (125.638, 152.262, 96.216)), (' B 324  VAL HG11', ' B 525  LYS  CG ', -0.501, (129.867, 154.865, 132.013)), (' C 327  PRO  HB2', ' C 330  THR  OG1', -0.5, (185.585, 200.923, 132.049)), (' B 801  GLN  NE2', ' B 932  GLN  OE1', -0.498, (175.137, 133.338, 194.622)), (' A 801  GLN  NE2', ' A 932  GLN  OE1', -0.498, (184.924, 189.078, 195.042)), (' H 103  ASP  N  ', ' H 103  ASP  OD1', -0.497, (169.777, 200.158, 94.514)), (' C 801  GLN  NE2', ' C 932  GLN  OE1', -0.495, (131.852, 170.049, 194.5)), (' B 360  ALA  C  ', ' B 524  PRO  HD3', -0.491, (126.02, 160.313, 122.249)), (' A 200  TYR  CD2', ' C 518  PRO  HB3', -0.49, (190.313, 185.049, 129.096)), (' C 326  PHE  CE2', ' C 525  LYS  HB3', -0.489, (176.689, 197.458, 130.91)), (' A 198  ASP  O  ', ' C 518  PRO  HG3', -0.488, (189.981, 181.72, 128.415)), (' B 518  PRO  HG2', ' C 200  TYR  CD1', -0.488, (134.565, 176.679, 129.063)), (' A 230  PRO  HG2', ' C 520  THR  HB ', -0.488, (191.422, 189.305, 125.67)), (' D  33  TYR  HE1', ' D  52  ASN  ND2', -0.487, (131.811, 156.385, 85.926)), (' L  37  GLN  HB2', ' L  47  LEU HD11', -0.486, (151.116, 210.406, 83.705)), (' B 330  THR  CG2', ' B 331  ASN  H  ', -0.485, (121.067, 164.346, 128.852)), (' B 947  ASP  OD2', ' B 951  GLN  NE2', -0.484, (163.968, 149.405, 171.897)), (' A 518  PRO  HG3', ' B 200  TYR  CZ ', -0.484, (169.556, 132.306, 128.438)), (' A 518  PRO  HB3', ' B 200  TYR  CE2', -0.484, (170.483, 131.466, 128.481)), (' B 505  TYR  OH ', ' D 104  TYR  CE2', -0.484, (124.953, 151.793, 95.908)), (' B 324  VAL HG11', ' B 525  LYS  HG3', -0.482, (129.489, 154.9, 132.147)), (' C 357  ASN  H  ', ' C 520  THR HG23', -0.482, (190.149, 192.018, 122.98)), (' A 960  VAL HG11', ' C 567  ALA  HB1', -0.478, (175.372, 183.453, 154.65)), (' B1008  GLN  OE1', ' B1011  ARG  NH1', -0.478, (169.729, 154.334, 165.733)), (' B 802  ILE HG22', ' B 815  ILE HD12', -0.478, (175.594, 141.2, 193.582)), (' A1008  GLN  OE1', ' A1011  ARG  NH1', -0.477, (170.305, 173.674, 165.979)), (' A 199  GLY  O  ', ' C 518  PRO  HG2', -0.477, (192.8, 183.178, 127.81)), (' A 802  ILE HG22', ' A 815  ILE HD12', -0.475, (178.503, 185.755, 193.216)), (' C 494  PHE  HB3', ' C 504  PRO  HD3', -0.475, (182.696, 206.412, 91.93)), (' A 567  ALA  HB1', ' B 960  VAL HG11', -0.473, (175.328, 145.332, 154.758)), (' A 712  PRO  HB3', ' A1066  PRO  HB3', -0.47, (184.474, 165.227, 209.063)), (' E   4  MET  HE3', ' E  23  CYS  SG ', -0.47, (141.217, 134.248, 92.442)), (' C 802  ILE HG22', ' C 815  ILE HD12', -0.469, (138.0, 165.669, 193.043)), (' C1008  GLN  OE1', ' C1011  ARG  NH1', -0.468, (152.922, 164.14, 165.809)), (' B 712  PRO  HB3', ' B1066  PRO  HB3', -0.468, (155.07, 146.189, 208.612)), (' A 326  PHE  CE2', ' A 525  LYS  CB ', -0.467, (187.235, 136.875, 130.886)), (' C 947  ASP  OD2', ' C 951  GLN  NE2', -0.464, (151.571, 171.872, 171.765)), (' L   4  MET  HE3', ' L  23  CYS  SG ', -0.464, (150.288, 199.752, 93.745)), (' C 712  PRO  HB3', ' C1066  PRO  HB3', -0.463, (152.976, 181.308, 208.836)), (' A 787  LYS  HE2', ' C 701  SER  HB3', -0.462, (162.211, 196.932, 199.616)), (' E  37  GLN  HB2', ' E  47  LEU HD11', -0.461, (131.477, 129.655, 83.044)), (' D  33  TYR  CE2', ' D 102  HIS  ND1', -0.46, (133.645, 152.423, 88.3)), (' A 947  ASP  OD2', ' A 951  GLN  NE2', -0.459, (177.222, 171.441, 172.413)), (' A 327  PRO  HB2', ' A 330  THR  OG1', -0.458, (185.965, 127.717, 132.046)), (' C 505  TYR  HE2', ' H 104  TYR  HH ', -0.458, (175.201, 203.463, 98.808)), (' C 390  THR  HA ', ' C 519  ALA  HA ', -0.457, (187.033, 186.33, 123.38)), (' B 562  PHE  HD1', ' B 573  VAL HG12', -0.457, (130.396, 163.759, 144.184)), (' B 325  ARG  NH2', ' B 528  THR  O  ', -0.456, (122.409, 153.059, 137.252)), (' A 904  ASN HD22', ' C1104  ARG HH22', -0.456, (167.186, 173.722, 214.598)), (' B 331  ASN  ND2', ' B 357  ASN  O  ', -0.456, (122.84, 169.176, 124.805)), (' A 360  ALA  O  ', ' A 524  PRO  HD3', -0.456, (186.786, 133.53, 121.868)), (' B 414  ASN  OD1', ' B 415  ILE HG12', -0.455, (131.917, 164.601, 91.203)), (' A 562  PHE  HD1', ' A 573  VAL HG12', -0.454, (181.551, 134.943, 144.175)), (' B 390  THR  HA ', ' B 519  ALA  HA ', -0.453, (134.185, 170.658, 123.273)), (' C 445  ASN  O  ', ' C 493  GLY  CA ', -0.452, (188.206, 204.781, 88.995)), (' A 414  ASN  OD1', ' A 415  ILE HG12', -0.452, (180.865, 134.209, 90.99)), (' C 446  TYR  CD1', ' C 493  GLY  CA ', -0.451, (188.751, 204.56, 87.083)), (' B 494  PHE  HD1', ' B 502  TYR  O  ', -0.451, (121.478, 158.989, 89.843)), (' B 855  LEU HD21', ' B 959  LEU HD23', -0.451, (175.165, 152.097, 157.903)), (' C 414  ASN  OD1', ' C 415  ILE HG12', -0.45, (181.984, 192.339, 91.58)), (' A 390  THR  HA ', ' A 519  ALA  HA ', -0.447, (173.563, 132.967, 121.989)), (' A 230  PRO  CG ', ' C 520  THR  HB ', -0.447, (191.034, 189.03, 126.036)), (' B 567  ALA  HB1', ' C 960  VAL HG11', -0.445, (142.309, 163.878, 154.663)), (' A 899  MET  HE1', ' A1046  LEU HD13', -0.445, (175.769, 176.807, 205.842)), (' B 131  CYS  HB2', ' B 133  PHE  CE2', -0.445, (165.458, 114.903, 119.045)), (' A 131  CYS  HB2', ' A 133  PHE  CE2', -0.444, (206.601, 189.913, 119.116)), (' B 400  ARG HH12', ' D  52  ASN HD21', -0.444, (130.194, 158.247, 86.715)), (' C 325  ARG  NH2', ' C 528  THR  O  ', -0.444, (175.606, 205.974, 137.371)), (' B 390  THR HG21', ' B 515  LEU  H  ', -0.442, (138.357, 172.1, 120.634)), (' B 372  SER  HB3', ' D 104  TYR  HE1', -0.442, (126.206, 150.405, 100.25)), (' A1070  LYS  HB2', ' A1072  PHE  CE2', -0.442, (188.533, 161.296, 216.15)), (' C 562  PHE  HD1', ' C 573  VAL HG12', -0.441, (180.54, 194.014, 144.403)), (' C 855  LEU HD21', ' C 959  LEU HD23', -0.441, (148.309, 160.606, 157.824)), (' C1070  LYS  HB2', ' C1072  PHE  CE2', -0.441, (154.523, 186.605, 216.262)), (' B 414  ASN  OD1', ' B 415  ILE  N  ', -0.441, (133.049, 165.696, 91.404)), (' A 901  TYR  OH ', ' C1091  VAL HG11', -0.441, (163.914, 179.595, 214.042)), (' A 793  ASP  N  ', ' A 793  ASP  OD1', -0.441, (172.915, 193.318, 208.174)), (' B 505  TYR  HE2', ' D 104  TYR  OH ', -0.44, (125.215, 152.754, 98.546)), (' A 414  ASN  OD1', ' A 415  ILE  N  ', -0.439, (179.19, 134.568, 90.658)), (' C 131  CYS  HB2', ' C 133  PHE  CE2', -0.438, (121.067, 187.889, 118.774)), (' A 701  SER  HB3', ' B 787  LYS  HE2', -0.438, (193.297, 149.237, 200.093)), (' A 855  LEU HD21', ' A 959  LEU HD23', -0.438, (168.979, 179.301, 157.988)), (' A 325  ARG  NH2', ' A 528  THR  O  ', -0.438, (194.7, 133.626, 137.488)), (' A 390  THR HG21', ' A 515  LEU  H  ', -0.437, (170.398, 135.467, 119.985)), (' C 494  PHE  CD2', ' C 504  PRO  HB3', -0.437, (184.814, 204.58, 93.408)), (' D  36  TRP  CE2', ' D  81  MET  HB2', -0.436, (138.188, 150.466, 74.667)), (' B 905  GLY  O  ', ' B1035  LYS  HE3', -0.436, (164.844, 158.618, 206.489)), (' B 400  ARG  HB3', ' B 494  PHE  HE1', -0.435, (124.04, 160.192, 90.825)), (' C 499  GLY  O  ', ' C 503  GLN  HG3', -0.434, (177.201, 206.431, 90.797)), (' C  44  ARG  O  ', ' C 280  GLY  HA2', -0.434, (127.438, 173.538, 153.458)), (' D  24  ALA  HB1', ' D  27  TYR  CE1', -0.434, (125.565, 149.542, 75.856)), (' C 414  ASN  OD1', ' C 415  ILE  N  ', -0.434, (182.418, 190.935, 91.888)), (' C 390  THR HG21', ' C 515  LEU  H  ', -0.433, (186.398, 182.539, 120.812)), (' B 899  MET  HE1', ' B1046  LEU HD13', -0.433, (168.971, 147.846, 205.596)), (' C 899  MET  HE1', ' C1046  LEU HD13', -0.433, (147.438, 168.112, 205.505)), (' A 608  LEU HD22', ' A 663  ILE HG23', -0.432, (193.395, 157.059, 169.637)), (' C 405  ARG HH22', ' H 102  HIS  HB2', -0.432, (169.573, 196.724, 93.509)), (' B 360  ALA  O  ', ' B 524  PRO  HD2', -0.432, (127.231, 159.207, 122.495)), (' A 978  LEU HD21', ' A 990  ILE HD11', -0.431, (163.053, 180.601, 137.364)), (' C 329  ILE  CB ', ' C1304  NAG  H82', -0.43, (187.632, 206.878, 129.863)), (' H  36  TRP  CE2', ' H  81  MET  HB2', -0.43, (165.144, 192.616, 75.819)), (' H  24  ALA  HB1', ' H  27  TYR  CE1', -0.43, (171.388, 203.807, 76.474)), (' B 695  SER  O  ', ' B 696  LEU  HG ', -0.43, (141.762, 145.64, 185.923)), (' A 499  GLY  O  ', ' A 503  GLN  HG3', -0.43, (195.238, 132.295, 89.348)), (' A 328  ASN  O  ', ' A 329  ILE HD13', -0.429, (190.885, 127.528, 129.42)), (' C 905  GLY  O  ', ' C1035  LYS  HE3', -0.429, (158.557, 166.426, 206.622)), (' B1070  LYS  HB2', ' B1072  PHE  CE2', -0.429, (149.566, 144.704, 216.114)), (' A 695  SER  O  ', ' A 696  LEU  HG ', -0.429, (191.813, 153.893, 186.007)), (' B 452  LEU HD22', ' B 490  GLN  HG3', -0.429, (127.33, 169.818, 83.641)), (' C 978  LEU HD21', ' C 990  ILE HD11', -0.428, (151.074, 155.171, 137.237)), (' C 452  LEU HD22', ' C 490  GLN  HG3', -0.428, (188.484, 194.193, 83.962)), (' A 905  GLY  O  ', ' A1035  LYS  HE3', -0.428, (168.488, 167.491, 206.427)), (' A  44  ARG  O  ', ' A 280  GLY  HA2', -0.427, (190.482, 191.025, 153.804)), (' B  44  ARG  O  ', ' B 280  GLY  HA2', -0.427, (174.454, 128.011, 153.499)), (' C 695  SER  O  ', ' C 696  LEU  HG ', -0.427, (159.335, 192.827, 185.859)), (' H  40  ALA  HB1', ' H  41  PRO  HD2', -0.427, (148.595, 190.547, 75.366)), (' C1086  PHE  HB2', ' C1118  PHE  CZ ', -0.427, (171.374, 173.605, 221.523)), (' B 653  VAL HG12', ' B 655  ASN  H  ', -0.426, (135.949, 133.884, 182.003)), (' C 653  VAL HG12', ' C 655  ASN  H  ', -0.425, (152.021, 203.687, 182.025)), (' B1086  PHE  HB2', ' B1118  PHE  CZ ', -0.425, (151.828, 165.467, 221.586)), (' A 167  THR  CB ', ' C 354  ARG  NH1', -0.424, (195.715, 188.798, 117.97)), (' C 608  LEU HD22', ' C 663  ILE HG23', -0.424, (155.763, 193.086, 169.486)), (' B 608  LEU HD22', ' B 663  ILE HG23', -0.424, (143.397, 142.416, 169.058)), (' M   1  NAG  H61', ' M   2  NAG  N2 ', -0.424, (154.554, 136.781, 122.769)), (' F   1  NAG  H61', ' F   2  NAG  N2 ', -0.424, (192.821, 169.468, 123.025)), (' B1142  LEU HD21', ' C1142  LEU HD12', -0.423, (161.951, 165.704, 243.901)), (' R   1  NAG  H61', ' R   2  NAG  N2 ', -0.423, (145.275, 186.237, 123.138)), (' B 389  PHE  CD1', ' B 512  PHE  HB3', -0.422, (135.81, 165.066, 117.666)), (' B 978  LEU HD21', ' B 990  ILE HD11', -0.422, (178.605, 157.094, 137.345)), (' B 767  ILE  O  ', ' B 771  GLN  HG2', -0.422, (177.187, 158.664, 172.029)), (' A 389  PHE  CD1', ' A 512  PHE  HB3', -0.421, (177.433, 137.505, 116.891)), (' A1086  PHE  HB2', ' A1118  PHE  CZ ', -0.421, (168.508, 152.772, 221.543)), (' B 595  ILE HG23', ' B 661  ILE HG21', -0.42, (148.465, 137.576, 171.915)), (' A 595  ILE HG23', ' A 661  ILE HG21', -0.42, (195.315, 163.613, 171.757)), (' C 389  PHE  CD1', ' C 512  PHE  HB3', -0.42, (181.187, 187.716, 117.926)), (' B 102  ARG  HD2', ' B 141  LEU HD23', -0.42, (163.959, 102.885, 129.093)), (' A1025  LYS  O  ', ' A1029  CYS  HB2', -0.42, (168.083, 173.421, 193.779)), (' A 326  PHE  CE2', ' A 525  LYS  HB2', -0.42, (187.348, 136.349, 131.042)), (' B1025  LYS  O  ', ' B1029  CYS  HB2', -0.419, (170.27, 155.968, 193.796)), (' A 518  PRO  HG3', ' B 200  TYR  CE1', -0.419, (168.679, 132.373, 128.356)), (' C 102  ARG  HD2', ' C 141  LEU HD23', -0.418, (111.506, 194.913, 128.892)), (' C1025  LYS  O  ', ' C1029  CYS  HB2', -0.418, (153.982, 162.813, 193.775)), (' B 402  ASP  CG ', ' D  33  TYR  CZ ', -0.418, (131.025, 155.024, 88.089)), (' A1069  GLU  HG2', ' B 891  LEU  CD2', -0.418, (186.534, 161.086, 208.158)), (' C 595  ILE HG23', ' C 661  ILE HG21', -0.417, (149.133, 190.976, 171.826)), (' B 445  ASN  C  ', ' B 493  GLY  HA2', -0.417, (116.54, 164.497, 88.295)), (' B1104  ARG HH22', ' C 904  ASN  ND2', -0.417, (153.827, 162.577, 214.775)), (' A 653  VAL HG12', ' A 655  ASN  H  ', -0.416, (204.506, 155.049, 181.836)), (' C 523  GLY  HA2', ' C 524  PRO  HD3', -0.415, (181.452, 196.803, 123.865)), (' C 437  ASN  N  ', ' C 437  ASN  OD1', -0.415, (181.753, 211.514, 98.359)), (' A 102  ARG  HD2', ' A 141  LEU HD23', -0.415, (217.355, 194.644, 129.34)), (' B 437  ASN  N  ', ' B 437  ASN  OD1', -0.414, (114.969, 155.145, 97.309)), (' A 518  PRO  HG2', ' B 230  PRO  CA ', -0.414, (169.037, 129.429, 127.183)), (' C 767  ILE  O  ', ' C 771  GLN  HG2', -0.414, (153.251, 155.37, 171.781)), (' A1091  VAL HG11', ' B 901  TYR  OH ', -0.413, (177.689, 156.281, 214.473)), (' C 359  VAL  CG1', ' C 524  PRO  CB ', -0.41, (181.97, 199.258, 126.258)), (' H  67  ARG  HG2', ' H  84  SER  O  ', -0.41, (160.188, 181.092, 74.937)), (' D  40  ALA  HB1', ' D  41  PRO  HD2', -0.409, (149.348, 138.042, 74.255)), (' D  67  ARG  HG2', ' D  84  SER  O  ', -0.409, (150.949, 152.797, 73.065)), (' D  47  TRP  CZ2', ' D  49  GLY  HA2', -0.407, (140.705, 150.06, 84.29)), (' C 105  ILE HD11', ' C 241  LEU HD21', -0.407, (120.162, 195.979, 125.152)), (' A 730  LYS  NZ ', ' A 772  ASP  OD2', -0.407, (160.041, 184.218, 172.674)), (' A 199  GLY  C  ', ' C 518  PRO  CG ', -0.407, (191.709, 182.241, 128.019)), (' A 105  ILE HD11', ' A 241  LEU HD21', -0.407, (213.632, 186.4, 125.417)), (' A 767  ILE  O  ', ' A 771  GLN  HG2', -0.407, (162.003, 178.154, 171.888)), (' A 373  THR  HB ', ' A 432  ALA  HB3', -0.405, (189.971, 136.586, 101.073)), (' B 127  VAL HG21', ' B1302  NAG  H5 ', -0.405, (171.419, 108.016, 124.192)), (' A 200  TYR  CE1', ' A 228  ASP  HB2', -0.405, (192.562, 187.946, 132.399)), (' A 694  MET  HE3', ' A 696  LEU HD21', -0.404, (189.209, 154.894, 182.878)), (' B 402  ASP  OD1', ' D  33  TYR  OH ', -0.404, (130.718, 154.727, 89.018)), (' A 426  PHE  HE1', ' A 511  SER  HB3', -0.403, (177.436, 135.975, 107.974)), (' B 105  ILE HD11', ' B 241  LEU HD21', -0.403, (158.776, 110.085, 125.43)), (' A 100  ILE  HB ', ' A 260  ALA  HB2', -0.401, (220.447, 189.811, 137.573)), (' H  47  TRP  CZ2', ' H  49  GLY  HA2', -0.401, (163.604, 191.423, 85.808)), (' B 426  PHE  HE1', ' B 511  SER  HB3', -0.401, (134.493, 166.284, 109.009)), (' C 400  ARG  NH2', ' H  54  ASN  ND2', -0.401, (179.839, 196.976, 87.152)), (' B 694  MET  HE3', ' B 696  LEU HD21', -0.4, (143.607, 147.094, 182.769)), (' A1100  PHE  CZ ', ' J   1  NAG  H62', -0.4, (186.713, 161.924, 228.07)), (' C 694  MET  HE3', ' C 696  LEU HD21', -0.4, (160.265, 190.431, 182.87))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

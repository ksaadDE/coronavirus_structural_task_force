# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 128 ', 'PRO', 0.029563601544835054, (138.903, 180.215, 101.96)), ('A', ' 216 ', 'LEU', 0.02409828889101314, (138.381, 168.079, 135.544)), ('A', ' 217 ', 'VAL', 0.003823287964012404, (138.073, 170.403, 138.53400000000005)), ('A', ' 293 ', 'PRO', 0.07929793128430823, (114.643, 124.554, 178.004)), ('A', ' 319 ', 'PRO', 0.07793768296640304, (128.019, 119.823, 161.86700000000005)), ('C', '  11 ', 'ASN', 0.04511553026440044, (98.551, 128.833, 162.076))]
data['omega'] = []
data['rota'] = [('A', ' 227 ', 'ARG', 0.1148029744280134, (136.554, 158.998, 135.393)), ('A', ' 236 ', 'ARG', 0.2340930294964352, (136.983, 152.758, 117.65700000000001)), ('A', ' 345 ', 'GLN', 0.0, (111.01799999999997, 127.751, 160.616)), ('A', ' 565 ', 'GLU', 0.013260775701923294, (167.311, 111.334, 106.195)), ('A', '1216 ', 'GLU', 0.04103134293899418, (81.576, 137.328, 132.278)), ('A', '1274 ', 'ARG', 0.0, (94.583, 135.231, 122.09500000000001)), ('A', '1286 ', 'ARG', 0.001984047435609136, (103.95, 136.12, 116.90500000000003)), ('A', '1423 ', 'GLU', 0.04447741081562886, (109.052, 135.881, 101.142))]
data['cbeta'] = [('A', '1034 ', 'ASN', ' ', 1.2257978522441553, (156.002, 112.153, 163.416))]
data['probe'] = [(' A1432  MET  HE1', ' A1460  LEU  HA ', -1.051, (92.532, 141.597, 104.395)), (' A  65  ALA  HA ', ' A  73  PRO  O  ', -1.035, (135.585, 166.12, 96.612)), (' A1611  L0A  H30', ' A1611  L0A  H83', -1.011, (157.081, 131.728, 131.638)), (' A1611  L0A  C56', ' A1611  L0A  H51', -0.918, (162.68, 132.772, 139.802)), (' A1611  L0A  H52', ' A1611  L0A  O72', -0.876, (164.119, 133.01, 142.208)), (' A1611  L0A  H23', ' A1611  L0A  H27', -0.867, (152.959, 129.714, 131.146)), (' A 540  HIS  HB2', ' A 543  MET  HB3', -0.845, (158.17, 107.967, 134.51)), (' A 521  PHE  O  ', ' A 525  ILE HD12', -0.839, (159.892, 106.772, 104.235)), (' A 283  ASN  OD1', ' A 286  HIS  NE2', -0.82, (110.856, 125.542, 154.278)), (' A 125  PRO  HD2', ' A 130  ARG  HD3', -0.802, (133.051, 175.881, 102.866)), (' A1011  CYS  HB3', ' A1079  GLN HE22', -0.797, (153.711, 122.058, 153.343)), (' A1177  MET  HG2', ' A1275  ILE HD13', -0.796, (94.914, 141.241, 125.433)), (' A  86  SER  O  ', ' A 100  LYS  NZ ', -0.735, (134.163, 161.663, 86.964)), (' A 100  LYS  HG3', ' A 103  VAL  HB ', -0.733, (138.386, 160.208, 87.898)), (' B  30  LYS  HD3', ' B  52  PRO  HG2', -0.714, (143.196, 181.524, 161.309)), (' A 556  TYR  HE1', ' A 598  LEU HD11', -0.689, (171.454, 114.251, 122.569)), (' A  68  GLN HE22', ' A 115  SER  HB2', -0.688, (136.0, 157.742, 97.076)), (' C  51  LEU HD12', ' C  52  PRO  HD2', -0.686, (87.762, 131.006, 175.865)), (' A1457  LEU HD21', ' A1466  VAL  HB ', -0.684, (92.959, 142.971, 94.753)), (' A1611  L0A  C23', ' A1611  L0A  H83', -0.683, (155.945, 131.383, 131.623)), (' A1074  ARG HH22', ' A1081  ILE HG13', -0.676, (157.012, 129.248, 148.313)), (' A1611  L0A  H51', ' A1611  L0A  H59', -0.676, (162.85, 131.883, 139.623)), (' A1611  L0A  C55', ' A1611  L0A  H51', -0.671, (162.323, 132.351, 139.55)), (' A1611  L0A  H51', ' A1611  L0A  H60', -0.671, (162.583, 132.355, 140.978)), (' A1254  ILE HG13', ' A1261  PRO  HG3', -0.668, (93.65, 125.265, 147.93)), (' A 216  LEU  O  ', ' A 218  VAL  N  ', -0.666, (136.864, 168.772, 138.374)), (' A1183  ASN  O  ', ' A1186  THR HG22', -0.664, (96.428, 140.103, 139.787)), (' A 120  LEU HD22', ' A 196  TYR  HB3', -0.663, (125.504, 167.189, 107.401)), (' A1371  PRO  HB3', ' A1379  GLY  H  ', -0.662, (131.371, 94.018, 150.298)), (' A1231  VAL HG12', ' A1233  TRP  H  ', -0.662, (87.719, 127.71, 121.347)), (' A1167  VAL HG23', ' A1168  THR HG23', -0.658, (79.096, 136.994, 120.286)), (' A 504  PRO  HA ', ' A 507  LYS  HB3', -0.656, (177.59, 106.316, 88.744)), (' A1611  L0A  O40', ' A1611  L0A  O77', -0.652, (158.447, 129.744, 137.272)), (' A 844  ASN  OD1', ' A 847  ARG  NH1', -0.652, (99.302, 75.279, 105.959)), (' A 967  GLY  O  ', ' A1301  ASN  ND2', -0.652, (107.95, 112.648, 117.249)), (' A 127  THR HG23', ' A 131  ARG  HB2', -0.651, (140.394, 175.234, 99.598)), (' A1611  L0A  H65', ' A1611  L0A  O64', -0.646, (160.211, 134.326, 141.05)), (' A1147  LYS  HB2', ' A1434  PHE  CD1', -0.629, (89.7, 128.117, 104.376)), (' A 648  MET  HE3', ' A 698  LEU HD21', -0.626, (134.668, 135.238, 125.502)), (' A  62  PRO  HD3', ' A 121  TRP  HD1', -0.624, (123.503, 170.898, 97.52)), (' A1458  GLU  HG3', ' A1459  ALA  N  ', -0.624, (88.124, 144.012, 102.034)), (' A1182  LEU  HA ', ' A1185  VAL HG12', -0.621, (97.272, 143.92, 136.674)), (' A 873  LEU HD21', ' A 952  LEU HD22', -0.62, (117.975, 95.132, 135.38)), (' A1448  ILE  O  ', ' A1487  ILE HG22', -0.619, (80.271, 133.593, 93.975)), (' A 583  TRP  CZ3', ' A1607  PEE  H8 ', -0.615, (151.965, 121.905, 105.219)), (' A 150  ILE HG12', ' A 233  ARG HH11', -0.613, (142.239, 158.557, 121.283)), (' A 976  VAL HG21', ' A1608  PEE  H2 ', -0.605, (118.81, 103.733, 113.429)), (' A1265  ARG  HD2', ' A1268  ARG HH22', -0.604, (91.832, 133.829, 140.391)), (' A1611  L0A  H60', ' A1611  L0A  O73', -0.601, (161.987, 132.949, 141.755)), (' A 205  ASP  OD2', ' A 236  ARG  NH2', -0.6, (137.404, 159.747, 117.012)), (' A1432  MET  HE1', ' A1460  LEU  CA ', -0.598, (92.978, 142.018, 104.62)), (' A1371  PRO  HB3', ' A1378  PRO  HA ', -0.597, (130.198, 93.246, 150.876)), (' A1128  THR  HB ', ' A1133  GLN HE21', -0.597, (113.707, 122.724, 92.28)), (' A 231  VAL HG21', ' A 657  ILE HG21', -0.595, (139.977, 150.454, 129.595)), (' A  75  ARG  HD2', ' A  84  LEU HD22', -0.595, (132.763, 167.729, 90.931)), (' A1612  LHG  O9 ', ' A1612  LHG H102', -0.595, (128.41, 148.964, 117.803)), (' A1213  PHE  O  ', ' A1216  GLU  HG3', -0.594, (83.454, 135.164, 133.617)), (' A1611  L0A  O33', ' A1611  L0A  O60', -0.594, (160.778, 133.71, 137.295)), (' A 522  GLU  HA ', ' A 525  ILE HD13', -0.592, (159.09, 108.965, 104.477)), (' A1338  THR HG22', ' A1339  PHE  H  ', -0.591, (114.427, 104.323, 144.055)), (' A  71  ARG  HD3', ' A  99  LYS  HG2', -0.59, (142.354, 165.819, 91.891)), (' A1611  L0A  C17', ' A1611  L0A  H27', -0.59, (153.278, 129.865, 130.946)), (' A1088  MET  HE2', ' A1611  L0A  H29', -0.588, (154.296, 129.119, 133.742)), (' A1043  ASN  ND2', ' A1045  ASP  OD2', -0.588, (150.113, 113.101, 140.478)), (' A1611  L0A  H50', ' A1611  L0A  O43', -0.588, (162.883, 128.581, 139.89)), (' A1321  PHE  HB3', ' A1324  ILE HD11', -0.586, (128.422, 104.689, 144.024)), (' A 583  TRP  CE3', ' A1607  PEE  H8 ', -0.586, (152.37, 122.102, 104.489)), (' A 217  VAL  HA ', ' B  43  GLY  HA2', -0.583, (139.791, 170.299, 138.828)), (' A1441  ASP  OD2', ' A1445  THR  N  ', -0.582, (78.935, 129.614, 102.079)), (' A1039  ASN  OD1', ' A1040  SER  N  ', -0.575, (147.617, 115.379, 145.079)), (' A 610  ARG  O  ', ' A 613  ARG  HB3', -0.575, (160.281, 119.641, 123.442)), (' A1614  NAG  O4 ', ' A1616  NAG  N2 ', -0.572, (106.193, 124.842, 164.132)), (' A1253  LEU HD11', ' C  15  PHE  CG ', -0.572, (88.246, 120.94, 155.418)), (' B   2  LYS  NZ ', ' B  55  VAL  O  ', -0.569, (145.694, 174.096, 158.886)), (' C  18  ARG  HG2', ' C  19  ASN  H  ', -0.569, (76.321, 121.423, 162.772)), (' A 992  PHE  O  ', ' A 995  VAL HG12', -0.563, (146.517, 119.389, 121.228)), (' A 640  ALA  HB1', ' A 739  LEU HD11', -0.559, (134.298, 134.36, 110.905)), (' A 568  LEU  O  ', ' A 571  ILE HG22', -0.558, (168.9, 113.091, 99.227)), (' A 350  ASN  HB2', ' A 354  GLY  HA2', -0.557, (119.625, 135.644, 152.716)), (' A  72  LEU HD22', ' A 135  SER  HB2', -0.557, (142.613, 169.901, 100.597)), (' A1023  ILE HG22', ' A1024  THR HG23', -0.555, (156.369, 123.451, 159.563)), (' A1162  CYS  O  ', ' A1165  ASP  HB3', -0.555, (74.358, 143.655, 121.781)), (' A  75  ARG  HA ', ' A  84  LEU HD21', -0.554, (133.175, 169.941, 91.97)), (' A 416  VAL HG11', ' A1411  LEU HD11', -0.553, (121.383, 128.703, 113.617)), (' A 206  PHE  O  ', ' A 209  THR HG22', -0.55, (133.333, 164.683, 123.043)), (' A 933  TYR  HE1', ' A 951  ARG  HA ', -0.549, (119.121, 88.999, 132.464)), (' A 921  LYS  HB3', ' A1608  PEE  H48', -0.549, (121.893, 97.068, 114.171)), (' A  73  PRO  HG3', ' A  99  LYS  HE2', -0.545, (139.614, 164.256, 92.872)), (' A  67  GLU  CD ', ' A  71  ARG  H  ', -0.545, (143.242, 162.88, 96.909)), (' A 301  PHE  CE1', ' A 303  ASP  HB3', -0.544, (106.468, 132.794, 179.833)), (' A1257  TYR  HA ', ' A1606  PEE  O4P', -0.542, (101.603, 118.223, 151.983)), (' A1611  L0A  H51', ' A1611  L0A  O76', -0.54, (163.441, 132.858, 139.806)), (' A 365  PHE  HE2', ' A1610  PEE  H27', -0.539, (115.498, 139.78, 135.235)), (' C  24  GLU  HA ', ' C  27  THR  OG1', -0.538, (81.533, 122.737, 173.306)), (' A1154  LYS  HG3', ' A1164  PHE  CG ', -0.538, (74.443, 136.838, 118.345)), (' A  63  ASP  HA ', ' A 118  LYS  HB2', -0.536, (129.818, 166.141, 100.246)), (' A 100  LYS  O  ', ' A 104  VAL HG13', -0.535, (138.899, 159.658, 85.146)), (' A 105  VAL  O  ', ' A 109  GLY  N  ', -0.535, (137.474, 150.755, 85.499)), (' A1616  NAG  O4 ', ' A1618  BMA  H2 ', -0.533, (106.396, 124.155, 170.321)), (' A1401  VAL HG23', ' A1402  VAL HG23', -0.532, (122.354, 112.789, 122.778)), (' A1029  ASP  HA ', ' A1032  HIS  HB3', -0.532, (161.391, 117.648, 159.289)), (' A  71  ARG HH21', ' A  99  LYS  HB3', -0.532, (144.258, 165.817, 90.136)), (' A1160  GLN  HA ', ' A1163  ILE HG12', -0.529, (71.331, 139.108, 124.053)), (' A 331  SER  OG ', ' A 332  SER  N  ', -0.529, (107.826, 115.206, 153.23)), (' A1349  LEU HD11', ' A1358  VAL HG21', -0.526, (126.439, 113.462, 139.803)), (' A 345  GLN  HG2', ' A 346  GLY  N  ', -0.526, (110.516, 129.543, 159.448)), (' A1253  LEU  HA ', ' A1256  THR HG22', -0.526, (94.257, 121.532, 153.89)), (' A 122  MET  HE1', ' A 190  ILE  H  ', -0.524, (125.607, 175.666, 110.004)), (' A1224  LEU HD23', ' A1226  HIS  O  ', -0.524, (76.265, 128.328, 121.557)), (' A 129  ILE  O  ', ' A 132  VAL HG22', -0.523, (140.534, 175.236, 105.159)), (' A 234  SER  O  ', ' A 237  THR HG22', -0.522, (139.234, 150.461, 119.863)), (' A1027  ARG  HD2', ' A1077  HIS  HD2', -0.522, (160.752, 116.335, 148.315)), (' C  51  LEU HD23', ' C  55  VAL HG11', -0.52, (90.692, 131.121, 171.279)), (' A1177  MET  HA ', ' A1180  ILE HG22', -0.519, (93.151, 139.808, 130.277)), (' A 671  MET  HG2', ' A 671  MET  O  ', -0.517, (139.303, 142.104, 154.338)), (' A 120  LEU HD21', ' A 192  HIS  HB3', -0.517, (124.698, 170.436, 108.053)), (' A1616  NAG  O3 ', ' A1616  NAG  O7 ', -0.517, (105.454, 125.576, 167.555)), (' A 259  LYS  O  ', ' A 262  VAL HG12', -0.516, (113.654, 142.368, 122.714)), (' B  36  CYS  SG ', ' B  37  GLN  N  ', -0.515, (141.276, 179.348, 141.25)), (' A1455  GLU  HA ', ' A1458  GLU  HB3', -0.515, (85.724, 145.501, 99.294)), (' A1224  LEU HD22', ' A1228  TYR  HA ', -0.512, (78.817, 128.593, 123.178)), (' A 971  VAL  O  ', ' A 974  THR HG22', -0.51, (117.719, 111.246, 114.774)), (' A 217  VAL  HB ', ' B  44  ASN  H  ', -0.509, (138.547, 172.433, 139.339)), (' A 243  GLY  O  ', ' A 643  ASN  ND2', -0.508, (137.266, 141.293, 109.245)), (' A 286  HIS  ND1', ' A 345  GLN  HB2', -0.508, (110.86, 126.415, 157.743)), (' A  67  GLU  HB2', ' A  73  PRO  HD2', -0.504, (139.396, 163.931, 96.626)), (' B   7  VAL HG11', ' B  58  LYS  HA ', -0.503, (143.792, 170.032, 151.847)), (' A  77  ARG  NH2', ' A 121  TRP  HA ', -0.503, (125.571, 171.445, 100.327)), (' A  77  ARG HH11', ' A 123  LEU  H  ', -0.502, (127.425, 173.926, 102.752)), (' A 574  SER  O  ', ' A 577  PHE  N  ', -0.501, (165.627, 123.084, 94.779)), (' A1216  GLU  HG3', ' A1217  CYS  N  ', -0.501, (82.984, 135.658, 132.286)), (' A 522  GLU  HA ', ' A 525  ILE  CD1', -0.501, (159.317, 108.502, 104.457)), (' A 308  ASN  OD1', ' A1604  NAG  N2 ', -0.5, (117.448, 135.588, 174.836)), (' A 208  VAL HG11', ' A 233  ARG  HG3', -0.498, (136.071, 158.574, 124.806)), (' B  32  GLU  HB3', ' B  49  TYR  HB2', -0.498, (149.905, 184.901, 152.091)), (' A1338  THR HG22', ' A1339  PHE  N  ', -0.497, (114.714, 104.573, 144.193)), (' A 947  LEU HD23', ' A 950  LEU HD12', -0.497, (126.831, 86.957, 134.502)), (' A 840  ARG  O  ', ' A 843  SER  OG ', -0.494, (104.227, 72.158, 103.927)), (' A  64  GLN  N  ', ' A  64  GLN  OE1', -0.493, (130.88, 168.356, 98.621)), (' A1457  LEU HD11', ' A1466  VAL  H  ', -0.493, (93.325, 142.398, 97.351)), (' B  21  TYR  O  ', ' B  25  GLU  HG2', -0.493, (135.765, 183.991, 148.804)), (' A1321  PHE  CG ', ' A1362  ILE HD11', -0.489, (128.641, 105.197, 141.739)), (' A1279  VAL HG12', ' A1282  ALA  H  ', -0.488, (101.278, 145.167, 117.226)), (' A1611  L0A  H47', ' A1611  L0A  O34', -0.488, (160.14, 130.771, 137.042)), (' A  64  GLN  HG2', ' A  65  ALA  H  ', -0.488, (133.388, 168.172, 99.062)), (' A  64  GLN  C  ', ' A  74  ALA  HA ', -0.486, (134.072, 168.004, 96.498)), (' A1334  TYR  HB3', ' A1345  LEU HD13', -0.486, (122.071, 113.579, 144.814)), (' A 134  ILE HD13', ' A 186  ALA  HB1', -0.486, (135.447, 169.369, 106.404)), (' A1240  VAL  HA ', ' A1243  ILE HD12', -0.485, (89.658, 125.612, 136.041)), (' A 146  ILE  CD1', ' A 179  GLU  HG3', -0.484, (143.053, 163.17, 115.71)), (' A 289  VAL HG12', ' A 316  TRP  CD1', -0.483, (117.584, 127.121, 165.986)), (' A  55  ASP  HA ', ' A  59  SER  HB2', -0.483, (119.267, 163.829, 94.927)), (' A1467  GLN  HG3', ' A1469  PRO  HD2', -0.483, (92.667, 150.56, 95.564)), (' A1007  LYS  O  ', ' A1008  PHE  HB2', -0.482, (151.801, 118.156, 141.996)), (' B  15  PHE  O  ', ' B  44  ASN  ND2', -0.482, (135.548, 175.765, 141.17)), (' A 306  TRP  CZ3', ' A 310  THR HG21', -0.481, (111.252, 128.823, 169.953)), (' A 877  ASP  OD2', ' A1338  THR HG23', -0.479, (114.143, 102.709, 146.451)), (' A 600  LEU  O  ', ' A 604  GLN  N  ', -0.478, (173.799, 122.158, 128.38)), (' A 632  SER  HA ', ' A 635  THR HG22', -0.477, (144.455, 124.401, 105.123)), (' A1432  MET  O  ', ' A1436  VAL HG13', -0.475, (90.072, 137.452, 106.866)), (' A 513  GLY  O  ', ' A 516  VAL HG12', -0.475, (164.95, 109.895, 95.676)), (' A 204  LEU HD22', ' A1612  LHG  C24', -0.474, (130.588, 153.758, 119.914)), (' A 365  PHE  CE2', ' A1610  PEE  H27', -0.472, (115.815, 139.773, 135.966)), (' A  71  ARG  HG2', ' A  72  LEU  H  ', -0.472, (142.76, 166.904, 95.305)), (' A  63  ASP  N  ', ' A  63  ASP  OD1', -0.471, (128.104, 165.707, 96.835)), (' A1130  SER  OG ', ' A1133  GLN  N  ', -0.468, (112.384, 126.782, 94.635)), (' B  10  VAL  O  ', ' B  10  VAL HG12', -0.466, (138.662, 163.395, 152.688)), (' A  67  GLU  OE2', ' A  70  SER  N  ', -0.466, (143.995, 161.037, 96.612)), (' A1088  MET  CE ', ' A1611  L0A  H29', -0.466, (154.425, 129.334, 134.191)), (' A 545  ILE  O  ', ' A 549  ARG  HG2', -0.465, (167.642, 104.532, 132.607)), (' A 300  ASN  N  ', ' A 300  ASN  OD1', -0.465, (111.836, 128.416, 185.562)), (' A 904  GLU  HA ', ' A 907  ILE HG22', -0.463, (109.006, 83.085, 119.772)), (' A 837  SER  O  ', ' A 840  ARG  NE ', -0.463, (105.992, 65.023, 103.513)), (' A1371  PRO  HB3', ' A1379  GLY  N  ', -0.462, (131.396, 94.526, 151.181)), (' A1489  TYR  CG ', ' A1490  LYS  N  ', -0.461, (87.624, 127.878, 97.821)), (' A 938  VAL HG13', ' A 939  LEU HD12', -0.461, (125.631, 78.569, 134.275)), (' A 926  ASP  HA ', ' A 929  VAL HG22', -0.461, (117.649, 89.479, 122.91)), (' A 596  LEU HD22', ' A 609  PHE  CE2', -0.459, (168.023, 126.334, 120.789)), (' A 176  TYR  OH ', ' A 205  ASP  OD1', -0.459, (137.373, 159.409, 120.538)), (' A 391  TRP  CE2', ' A1613  Y01 HAR1', -0.458, (107.032, 111.993, 144.184)), (' A 549  ARG  O  ', ' A 553  THR HG23', -0.456, (168.879, 105.931, 127.064)), (' A1611  L0A  C17', ' A1611  L0A  C21', -0.456, (153.42, 129.968, 130.832)), (' B   1  VAL HG21', ' B  50  LYS  HG2', -0.454, (152.584, 182.532, 157.987)), (' A 935  LEU  O  ', ' A 938  VAL HG12', -0.454, (124.016, 79.543, 132.965)), (' C  40  SER  HB2', ' C  43  GLY  O  ', -0.454, (86.614, 130.088, 155.993)), (' A1402  VAL  O  ', ' A1405  MET  N  ', -0.453, (119.987, 117.79, 120.844)), (' A 975  LEU  HG ', ' A1405  MET  HE1', -0.452, (120.018, 112.078, 117.224)), (' A 292  PHE  C  ', ' A 294  ALA  H  ', -0.452, (113.867, 122.53, 177.121)), (' A1227  TYR  HB3', ' A1230  THR  OG1', -0.45, (78.821, 125.638, 119.251)), (' A1466  VAL HG12', ' A1470  ASN HD22', -0.45, (93.017, 145.464, 93.827)), (' A1611  L0A  C46', ' A1611  L0A  H60', -0.45, (163.393, 132.025, 140.898)), (' A1228  TYR  O  ', ' A1234  ASN  ND2', -0.448, (81.815, 128.006, 124.874)), (' A 288  CYS  SG ', ' A 328  CYS  HB3', -0.447, (116.539, 120.805, 160.241)), (' A  62  PRO  CD ', ' A 121  TRP  HD1', -0.447, (124.454, 170.76, 97.615)), (' A 204  LEU HD22', ' A1612  LHG H242', -0.446, (130.423, 153.253, 119.942)), (' A 236  ARG  HG3', ' A 236  ARG  O  ', -0.446, (138.085, 153.16, 115.631)), (' A 573  LEU  HA ', ' A 573  LEU HD23', -0.445, (165.234, 116.794, 93.709)), (' A 692  MET  HG3', ' A1089  TYR  CD2', -0.444, (143.938, 135.015, 135.892)), (' C  30  LYS  HE3', ' C  52  PRO  HG2', -0.444, (88.544, 130.022, 179.249)), (' A1253  LEU HD11', ' C  15  PHE  CD1', -0.444, (88.174, 121.25, 155.16)), (' A 568  LEU HD12', ' A 571  ILE HG21', -0.442, (171.076, 111.281, 99.694)), (' A  65  ALA  C  ', ' A  66  LEU HD22', -0.441, (134.218, 164.702, 98.046)), (' A 154  CYS  O  ', ' A 157  MET  HG2', -0.441, (145.409, 152.395, 128.996)), (' A1611  L0A  C46', ' A1611  L0A  C56', -0.441, (163.535, 132.18, 140.648)), (' A1079  GLN  OE1', ' A1080  PRO  HD2', -0.441, (153.002, 123.204, 150.536)), (' A 526  ALA  O  ', ' A 529  ILE HG22', -0.44, (155.32, 108.264, 111.642)), (' A1611  L0A  H43', ' A1611  L0A  H59', -0.439, (162.225, 131.652, 138.933)), (' A1164  PHE  O  ', ' A1167  VAL HG22', -0.439, (77.374, 139.343, 120.785)), (' A1617  BMA  H2 ', ' A1618  BMA  H61', -0.438, (102.412, 129.785, 169.875)), (' A1012  VAL HG23', ' A1017  THR  O  ', -0.438, (146.692, 120.139, 156.555)), (' A 188  GLY  HA3', ' A 196  TYR  HE2', -0.437, (128.176, 170.804, 109.395)), (' A1322  MET  HE3', ' A1323  HIS  NE2', -0.436, (123.06, 97.335, 147.896)), (' A 926  ASP  OD1', ' A 957  ARG  HD3', -0.436, (114.783, 91.628, 122.616)), (' A  64  GLN  HB2', ' A  74  ALA  HB1', -0.436, (133.609, 170.392, 96.946)), (' A 328  CYS  SG ', ' A 329  GLY  N  ', -0.435, (113.865, 121.474, 158.152)), (' A 973  SER  OG ', ' A1118  GLN  NE2', -0.435, (117.116, 109.916, 109.046)), (' A 205  ASP  CG ', ' A 236  ARG HH21', -0.434, (137.184, 159.406, 118.096)), (' A1333  VAL  O  ', ' A1333  VAL HG12', -0.434, (118.448, 113.56, 148.916)), (' C  40  SER  O  ', ' C  43  GLY  N  ', -0.434, (88.296, 130.838, 154.15)), (' A 715  TRP  CG ', ' A 715  TRP  O  ', -0.433, (122.909, 148.259, 143.03)), (' A 716  SER  O  ', ' A 716  SER  OG ', -0.433, (127.732, 149.244, 139.919)), (' A 859  GLN  O  ', ' A 863  THR HG23', -0.432, (104.555, 94.057, 120.664)), (' A 314  SER  O  ', ' A 314  SER  OG ', -0.431, (125.544, 127.849, 170.126)), (' B  51  LEU HD13', ' B  55  VAL HG21', -0.431, (142.991, 178.267, 156.565)), (' A 200  PRO  O  ', ' A 203  TRP  HB2', -0.43, (128.214, 158.698, 117.423)), (' A 525  ILE  O  ', ' A 528  ILE HG22', -0.43, (159.096, 107.969, 110.567)), (' A 120  LEU HD21', ' A 192  HIS  ND1', -0.429, (123.404, 169.944, 107.527)), (' A 841  MET  HG2', ' A 845  ILE HG13', -0.429, (103.912, 72.034, 110.295)), (' A 555  ASN  HB2', ' A 613  ARG HH12', -0.428, (164.544, 112.149, 123.153)), (' A1477  MET  O  ', ' A1479  ILE  N  ', -0.428, (89.612, 135.487, 86.324)), (' A1386  LEU  H  ', ' A1386  LEU HD23', -0.428, (134.765, 100.044, 137.568)), (' A1060  PHE  CE1', ' A1096  ILE HD11', -0.428, (136.431, 127.441, 129.873)), (' A1154  LYS  HG3', ' A1164  PHE  CD1', -0.428, (74.717, 136.388, 118.981)), (' A 582  SER  O  ', ' A 582  SER  OG ', -0.428, (154.679, 125.038, 102.264)), (' A1330  ILE HG23', ' A1335  ASN  HA ', -0.427, (124.255, 109.268, 146.871)), (' A 683  ASN  ND2', ' A 685  THR  OG1', -0.425, (141.928, 141.928, 144.82)), (' A1462  PRO  N  ', ' A1463  PRO  HD2', -0.425, (99.228, 142.201, 104.221)), (' A1254  ILE  O  ', ' A1258  PHE  HB3', -0.424, (96.591, 121.78, 148.529)), (' A 925  LEU  HA ', ' A 925  LEU HD23', -0.424, (121.471, 92.596, 121.22)), (' B  57  THR HG22', ' B  58  LYS  N  ', -0.423, (147.856, 170.966, 152.955)), (' A 532  ASN  HA ', ' A 558  PHE  CE2', -0.423, (160.461, 108.172, 119.089)), (' A1236  PHE  HZ ', ' A1267  ILE HG12', -0.423, (95.405, 127.391, 131.673)), (' A 875  LEU  O  ', ' A 875  LEU HD12', -0.423, (110.686, 96.182, 143.639)), (' A1020  SER  OG ', ' A1021  HIS  N  ', -0.421, (152.112, 129.094, 156.992)), (' A1190  GLU  HA ', ' A1194  GLN  NE2', -0.421, (101.88, 140.089, 150.287)), (' A1147  LYS  HD2', ' A1434  PHE  CD2', -0.421, (91.698, 129.162, 105.817)), (' A 292  PHE  C  ', ' A 294  ALA  N  ', -0.42, (114.605, 122.631, 177.529)), (' A1147  LYS  O  ', ' A1149  VAL HG13', -0.42, (86.514, 126.301, 107.916)), (' A 306  TRP  HH2', ' A 344  LEU HD11', -0.42, (110.348, 126.675, 167.883)), (' A 517  LEU HD21', ' A 573  LEU HD11', -0.42, (161.092, 115.062, 95.748)), (' A 693  ILE HD11', ' A 705  SER  HB3', -0.42, (133.523, 138.182, 140.728)), (' A 683  ASN  N  ', ' A 683  ASN  OD1', -0.418, (140.731, 139.502, 142.867)), (' A1140  VAL  O  ', ' A1143  THR HG22', -0.418, (97.952, 124.397, 97.518)), (' A1237  ASP  O  ', ' A1240  VAL HG12', -0.417, (88.392, 128.708, 133.074)), (' A 311  SER  O  ', ' A 311  SER  OG ', -0.417, (117.085, 134.758, 169.162)), (' A 197  LEU  HA ', ' A 197  LEU HD23', -0.417, (127.749, 163.72, 112.766)), (' A 843  SER  OG ', ' A 844  ASN  N  ', -0.416, (104.536, 73.336, 104.721)), (' A1490  LYS  HB2', ' A1490  LYS  HE3', -0.416, (91.548, 125.721, 96.316)), (' A1296  LEU  HA ', ' A1296  LEU HD12', -0.415, (107.335, 121.358, 120.816)), (' A1459  ALA  C  ', ' A1460  LEU HD22', -0.415, (90.36, 142.093, 102.788)), (' A1160  GLN  O  ', ' A1164  PHE  N  ', -0.415, (73.018, 139.676, 122.685)), (' A  75  ARG  O  ', ' A  76  MET  HB3', -0.414, (131.098, 172.801, 92.306)), (' A 982  ILE HG23', ' A1107  PHE  HE2', -0.414, (130.365, 113.47, 118.809)), (' A1613  Y01 HAO2', ' A1613  Y01 HAP1', -0.414, (108.994, 110.615, 134.018)), (' A 531  LEU  HA ', ' A 531  LEU HD12', -0.414, (156.204, 104.734, 118.72)), (' A1162  CYS  O  ', ' A1165  ASP  CB ', -0.412, (74.768, 143.727, 121.591)), (' A1130  SER  OG ', ' A1133  GLN  HG2', -0.411, (113.046, 125.719, 94.227)), (' A 192  HIS  HA ', ' A 195  ALA  HB3', -0.411, (122.716, 170.149, 109.853)), (' A 845  ILE  HA ', ' A 848  VAL HG12', -0.411, (103.04, 76.323, 110.692)), (' A1256  THR HG23', ' A1257  TYR  CE1', -0.409, (95.871, 118.874, 154.446)), (' A1036  THR  OG1', ' A1037  TRP  N  ', -0.409, (151.369, 112.915, 154.451)), (' B  62  ARG  HG2', ' B  63  CYS  N  ', -0.409, (139.64, 160.305, 147.769)), (' A 631  MET  HE2', ' A1607  PEE  H13', -0.409, (147.501, 123.24, 109.644)), (' A1057  VAL HG23', ' A1066  ILE HD11', -0.409, (141.432, 122.011, 134.986)), (' A1321  PHE  CD2', ' A1362  ILE HD11', -0.408, (128.492, 105.4, 141.563)), (' A 263  LEU  HA ', ' A 263  LEU HD12', -0.407, (110.757, 142.708, 126.508)), (' A 536  MET  HG3', ' A 613  ARG  HE ', -0.407, (159.8, 114.177, 122.8)), (' A 880  LEU  HB3', ' A 881  PRO  HD3', -0.407, (116.319, 94.226, 148.987)), (' A 876  GLU  HG3', ' A 876  GLU  O  ', -0.407, (117.08, 96.517, 143.573)), (' A 926  ASP  OD1', ' A 957  ARG  NH1', -0.407, (113.727, 90.404, 122.804)), (' A 541  HIS  CD2', ' A1006  GLY  HA2', -0.406, (156.427, 114.933, 140.591)), (' A1606  PEE  H13', ' A1606  PEE  H19', -0.406, (99.801, 115.326, 143.434)), (' A 125  PRO  HD2', ' A 130  ARG  CD ', -0.406, (132.792, 176.299, 103.745)), (' C  32  GLU  HG2', ' C  50  LYS  HD2', -0.406, (81.948, 133.237, 177.206)), (' A1611  L0A  H36', ' A1611  L0A  O62', -0.406, (158.472, 133.588, 138.179)), (' A 146  ILE HD11', ' A 179  GLU  HG3', -0.405, (143.057, 163.189, 115.456)), (' A 291  HIS  HB3', ' A 292  PHE  H  ', -0.405, (113.772, 119.952, 174.379)), (' A1210  ILE  HA ', ' A1210  ILE HD13', -0.405, (87.166, 135.054, 139.827)), (' A 521  PHE  O  ', ' A 524  PHE  HB3', -0.404, (159.823, 105.355, 105.129)), (' A 587  ASP  OD2', ' A 619  ARG  NH2', -0.404, (160.037, 115.08, 107.328)), (' B  40  SER  OG ', ' B  43  GLY  O  ', -0.404, (142.741, 172.212, 141.73)), (' C  18  ARG  HB3', ' C  21  TYR  HB2', -0.403, (79.151, 119.71, 163.395)), (' A1473  LYS  O  ', ' A1476  SER  OG ', -0.403, (93.264, 141.525, 86.559)), (' C  30  LYS  HB3', ' C  30  LYS  HE3', -0.403, (88.504, 129.175, 178.37)), (' A 290  LYS  HG2', ' A 341  TYR  CE1', -0.403, (120.258, 120.422, 169.924)), (' A 252  SER  O  ', ' A 256  THR HG23', -0.402, (120.829, 146.376, 115.781)), (' A1034  ASN HD21', ' A1601  NAG  H4 ', -0.402, (158.67, 111.469, 166.065)), (' C  35  TYR  HH ', ' C  47  TYR  HD2', -0.401, (81.851, 133.821, 164.234)), (' A 192  HIS  O  ', ' A 196  TYR  CD2', -0.401, (126.071, 168.713, 110.074)), (' A1356  ASP  N  ', ' A1356  ASP  OD1', -0.4, (131.229, 117.8, 140.173)), (' A1147  LYS  HB2', ' A1434  PHE  CE1', -0.4, (89.678, 128.343, 103.984)), (' A 733  LEU  HA ', ' A 733  LEU HD23', -0.4, (131.551, 132.702, 121.132))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('B', '  29 ', 'SER', 0.031224410083111293, (50.31, 37.663999999999994, 96.55299999999998)), ('D', '   3 ', 'LEU', 0.028992585655937583, (74.939, 55.099, 154.13)), ('E', '  51 ', 'LYS', 0.006169933412499188, (66.506, 7.291000000000002, 141.426)), ('E', '  52 ', 'SER', 0.012881023057282942, (66.35, 3.928000000000001, 139.548)), ('F', '  83 ', 'ASP', 0.0034321787001392818, (49.15400000000001, 50.129000000000005, 80.525)), ('G', '  38 ', 'VAL', 0.07406372968797308, (43.194999999999986, 20.427000000000003, 168.003)), ('H', '  11 ', 'PHE', 0.037986607002907125, (59.13400000000002, 65.615, 80.458))]
data['omega'] = [('E', ' 188 ', 'PRO', None, (41.831, 76.07000000000001, 147.815)), ('F', ' 188 ', 'PRO', None, (45.926, 15.934999999999999, 79.671)), ('G', ' 188 ', 'PRO', None, (78.31999999999996, 68.71199999999997, 109.823)), ('H', ' 188 ', 'PRO', None, (80.18499999999997, 29.46699999999999, 114.8))]
data['rota'] = [('A', '  19 ', 'LEU', 0.001518917676771716, (62.223, 58.256, 134.666)), ('A', '  22 ', 'LEU', 0.0, (57.456, 57.957, 136.454)), ('A', '  40 ', 'LEU', 0.0018816652921868197, (64.061, 65.85599999999997, 129.404)), ('A', '  73 ', 'ILE', 0.009881206957403885, (56.01700000000001, 62.54899999999999, 149.083)), ('A', '  74 ', 'ASN', 0.018591760988217673, (55.536, 63.659, 152.66099999999997)), ('B', '   3 ', 'LEU', 0.1551850966806243, (88.695, 31.463000000000008, 80.437)), ('B', '   8 ', 'MET', 0.09839061293837965, (79.16199999999998, 33.017999999999994, 88.99699999999999)), ('B', '  19 ', 'LEU', 0.006468610540599383, (63.12299999999999, 37.808, 91.402)), ('B', '  22 ', 'LEU', 0.0, (58.406, 37.275, 89.66)), ('B', '  40 ', 'LEU', 0.04743806201455319, (66.17899999999997, 30.733999999999998, 96.813)), ('C', '  19 ', 'LEU', 0.0, (65.80799999999998, 49.15600000000001, 92.48)), ('C', '  22 ', 'LEU', 0.08812278412963667, (66.61699999999998, 49.979, 97.318)), ('C', '  40 ', 'LEU', 0.0, (62.24899999999999, 56.36800000000001, 87.687)), ('C', '  55 ', 'GLU', 0.00511039651373148, (69.756, 61.128, 83.49900000000001)), ('C', '  74 ', 'ASN', 0.014974235670213984, (84.57399999999997, 53.73999999999999, 100.03)), ('D', '   7 ', 'LYS', 0.0, (76.436, 47.321000000000005, 148.632)), ('D', '   9 ', 'SER', 0.22668926835576303, (71.982, 49.88699999999999, 147.776)), ('D', '  19 ', 'LEU', 0.0, (66.252, 47.365, 133.245)), ('D', '  22 ', 'LEU', 0.00040982943886548145, (67.174, 46.836, 128.403)), ('D', '  40 ', 'LEU', 0.012377996804628543, (63.984999999999985, 39.811, 138.091)), ('D', '  52 ', 'GLU', 0.04940170698928051, (69.959, 36.68399999999998, 146.521)), ('D', '  57 ', 'MET', 0.0, (71.29, 40.22, 138.788)), ('E', '  49 ', 'VAL', 0.14634867852698663, (67.625, 11.982, 136.788)), ('E', '  53 ', 'GLU', 0.09226958946321115, (67.687, 3.948999999999999, 135.981)), ('E', '  55 ', 'ASP', 0.005156257893220331, (67.387, 4.847999999999998, 128.917)), ('E', '  85 ', 'ARG', 0.001075646718547834, (53.65699999999999, 46.149, 143.239)), ('E', ' 189 ', 'LEU', 0.15811596606875236, (44.407999999999994, 79.045, 144.793)), ('F', '  69 ', 'ASP', 0.28421752029180014, (49.65400000000001, 73.576, 91.85600000000001)), ('F', '  73 ', 'THR', 0.12669396147513642, (46.597, 68.453, 91.51299999999999)), ('F', '  80 ', 'ARG', 0.002467924274816613, (47.85899999999999, 54.284, 85.23899999999999)), ('F', ' 173 ', 'GLN', 0.13865156979682838, (49.74499999999998, 2.539, 85.539)), ('F', ' 174 ', 'LEU', 0.003597318238755782, (53.004, 3.007999999999999, 83.637)), ('G', '  39 ', 'VAL', 0.003150532575091347, (45.45999999999999, 23.386000000000003, 167.232)), ('G', '  40 ', 'LEU', 0.16364267834428065, (48.20499999999999, 21.101000000000006, 165.907)), ('G', '  73 ', 'THR', 0.07476781405536498, (65.928, 31.92799999999999, 121.37899999999999)), ('G', '  74 ', 'GLN', 0.0077977211844168495, (63.553999999999995, 33.425, 118.817)), ('G', '  96 ', 'LEU', 0.07266032074866312, (75.52799999999998, 46.961, 91.866)), ('G', ' 150 ', 'ASN', 0.04630670574763524, (78.87599999999998, 80.539, 94.492)), ('G', ' 166 ', 'ASP', 0.14654885197701292, (75.22699999999998, 74.65099999999998, 109.396)), ('G', ' 179 ', 'MET', 0.0, (90.57499999999997, 76.94099999999999, 105.309)), ('H', '  10 ', 'GLU', 0.2706520942127693, (62.89900000000002, 65.506, 80.899)), ('H', '  11 ', 'PHE', 0.14190359390584212, (59.13400000000002, 65.615, 80.458)), ('H', '  56 ', 'ARG', 0.006205199119743584, (48.41000000000002, 69.608, 84.542)), ('H', '  64 ', 'LEU', 0.016904228526373702, (55.18, 63.388, 93.04899999999999)), ('H', '  96 ', 'LEU', 0.04206160851347469, (75.634, 50.647, 133.643)), ('H', ' 122 ', 'LEU', 0.2104373670246025, (71.307, 32.095, 124.594)), ('H', ' 151 ', 'THR', 0.2983992159911788, (83.111, 20.639, 132.118)), ('H', ' 158 ', 'LEU', 0.1590080112362163, (80.382, 24.502, 137.144))]
data['cbeta'] = []
data['probe'] = [(' B  61  LEU HD21', ' F 112  ILE HD11', -1.079, (64.689, 29.362, 81.946)), (' D  65  LEU HD11', ' H 111  ILE HD13', -1.073, (77.735, 39.934, 131.154)), (' F  80  ARG  H  ', ' F  80  ARG  HD2', -1.07, (47.616, 53.32, 87.478)), (' F  72  MET  HE2', ' H  56  ARG  HG2', -1.02, (46.61, 71.039, 84.516)), (' A  32  LYS  H  ', ' A  32  LYS  HD2', -1.012, (49.793, 62.368, 125.023)), (' C   8  MET  HE2', ' C  12  LYS  HE3', -0.989, (67.086, 51.125, 77.387)), (' D  65  LEU  CD1', ' H 111  ILE HD13', -0.987, (77.423, 39.299, 130.893)), (' H 152  PHE  HB2', ' H 161  ILE HD11', -0.986, (80.489, 24.11, 129.261)), (' A  27  VAL HG12', ' A  67  MET  HE1', -0.985, (51.901, 59.513, 135.941)), (' G 125  ILE HD11', ' G 154  TYR  HE2', -0.949, (73.301, 65.155, 93.069)), (' H 111  ILE HD12', ' H 112  ILE  N  ', -0.896, (79.771, 39.296, 131.785)), (' G 128  THR  HB ', ' G 131  ALA  HB2', -0.895, (65.034, 70.895, 87.615)), (' A  61  LEU HD21', ' E 112  ILE HD11', -0.866, (62.045, 66.489, 143.391)), (' C  61  LEU HD21', ' G 112  ILE HD11', -0.833, (76.258, 55.54, 91.441)), (' H 182  SER  HB2', ' H 183  PRO  HD3', -0.828, (91.006, 24.835, 113.734)), (' A  70  ALA  O  ', ' A  74  ASN  HB2', -0.816, (53.626, 64.455, 151.309)), (' G  97  PHE  HE1', ' G 112  ILE HD12', -0.793, (77.861, 54.443, 93.425)), (' B  15  SER  HB3', ' B  57  MET  HE1', -0.788, (69.971, 34.456, 89.99)), (' H  35  ASP  HB3', ' H  39  VAL HG11', -0.766, (45.022, 73.933, 56.133)), (' G 171  ILE  H  ', ' G 171  ILE HD12', -0.763, (70.547, 80.717, 108.998)), (' C  74  ASN  HB3', ' G 116  ARG  HG2', -0.762, (85.328, 55.727, 99.508)), (' C   5  SER  HB3', ' C   8  MET  HB3', -0.756, (70.462, 50.094, 73.654)), (' D  65  LEU HD11', ' H 111  ILE  CD1', -0.753, (78.108, 39.676, 131.816)), (' G 125  ILE HD13', ' G 133  LEU HD13', -0.749, (70.457, 66.775, 94.004)), (' H 161  ILE HD12', ' H 191  VAL  CG1', -0.744, (79.446, 22.586, 126.978)), (' C  74  ASN  N  ', ' C  74  ASN HD22', -0.733, (83.08, 54.493, 100.845)), (' C  64  LEU  O  ', ' C  71  VAL HG21', -0.729, (72.368, 54.751, 99.076)), (' F  59  ALA  O  ', ' F  60  MET  HE2', -0.725, (54.272, 85.112, 100.177)), (' F 129  THR HG22', ' F 197  ASN  O  ', -0.724, (70.104, 12.012, 94.679)), (' G 125  ILE HD11', ' G 154  TYR  CE2', -0.716, (73.919, 65.375, 93.091)), (' F  71  ALA  HA ', ' F  74  GLN HE21', -0.711, (43.002, 72.829, 92.93)), (' H 122  LEU HD13', ' H 136  VAL HG23', -0.703, (73.972, 31.52, 121.965)), (' H  85  ARG  HG2', ' H  85  ARG HH11', -0.696, (66.839, 54.951, 119.558)), (' G 177  ILE HD13', ' G 185  LEU  CD1', -0.693, (82.133, 77.939, 107.172)), (' E  76  TYR  HD2', ' G  60  MET  HG3', -0.689, (50.35, 30.595, 137.545)), (' F 171  ILE  H  ', ' F 171  ILE HD12', -0.68, (43.816, 7.551, 90.617)), (' H 166  ASP  HB2', ' H 186  ALA  HB3', -0.678, (79.112, 23.598, 112.119)), (' H 111  ILE HD12', ' H 112  ILE HG13', -0.676, (79.307, 39.989, 132.811)), (' E  61  GLN  O  ', ' E  65  GLU  HG3', -0.674, (59.45, 14.404, 134.263)), (' G 119  CYS  HB2', ' G 142  THR HG21', -0.671, (81.68, 65.441, 99.52)), (' A  27  VAL HG12', ' A  67  MET  CE ', -0.666, (51.985, 59.759, 135.951)), (' F 173  GLN  O  ', ' F 176  GLU  HG2', -0.662, (49.686, 3.109, 82.589)), (' D  67  MET  HE3', ' G  75  MET  HE1', -0.662, (66.812, 41.935, 122.264)), (' F  76  TYR  HB3', ' H  60  MET  CE ', -0.659, (46.579, 64.746, 89.079)), (' F  76  TYR  HB3', ' H  60  MET  HE2', -0.657, (47.022, 65.145, 89.709)), (' F  80  ARG  HD2', ' F  80  ARG  N  ', -0.655, (47.071, 53.727, 86.769)), (' E  44  LYS  HG3', ' H 196  ALA  HA ', -0.649, (75.826, 19.308, 138.469)), (' E  46  SER  O  ', ' E  50  ALA  HB2', -0.649, (70.335, 10.972, 139.882)), (' F 125  ILE HD13', ' F 133  LEU  CD1', -0.647, (60.362, 19.649, 89.428)), (' C  72  ASP  O  ', ' C  76  LEU HD13', -0.644, (80.303, 51.182, 100.983)), (' G 137  VAL HG11', ' G 143  TYR  HB2', -0.644, (82.343, 71.707, 101.843)), (' B  61  LEU HD23', ' F 111  ILE HD11', -0.642, (65.007, 26.906, 84.276)), (' G 182  SER  OG ', ' G 183  PRO  HD3', -0.641, (88.711, 75.899, 109.269)), (' G 125  ILE HD13', ' G 133  LEU  CD1', -0.639, (71.304, 67.324, 93.794)), (' E  66  LYS  HG2', ' E  67  MET  HE2', -0.633, (54.109, 18.283, 128.786)), (' F 108  LEU  O  ', ' F 112  ILE HG12', -0.633, (65.421, 26.762, 80.519)), (' E 160  GLU  HG2', ' E 162  GLN  NE2', -0.625, (53.674, 88.739, 134.728)), (' G 168  ASP  O  ', ' G 169  SER  HB2', -0.625, (69.574, 74.805, 112.831)), (' E  43  LEU  HB3', ' H 160  GLU  OE1', -0.622, (76.951, 15.706, 134.977)), (' H 136  VAL HG22', ' H 190  ILE  CD1', -0.619, (75.592, 30.365, 119.672)), (' E 108  LEU  O  ', ' E 112  ILE HG12', -0.615, (62.998, 68.937, 145.049)), (' E  70  GLN  O  ', ' E  74  GLN  HG3', -0.603, (47.872, 22.894, 131.907)), (' H 111  ILE  CD1', ' H 112  ILE HG13', -0.598, (78.51, 40.303, 132.575)), (' G 165  VAL HG13', ' G 190  ILE  HB ', -0.597, (72.419, 72.699, 105.354)), (' F 128  THR HG23', ' F2005  GOL  H12', -0.597, (67.225, 19.849, 98.36)), (' C  73  ILE  H  ', ' C  73  ILE HD12', -0.597, (79.47, 54.727, 100.221)), (' F 166  ASP  HB3', ' F 168  ASP  H  ', -0.587, (41.896, 12.002, 84.025)), (' D  55  GLU  HB3', ' H 127  LEU HD13', -0.585, (70.484, 33.545, 141.141)), (' A  22  LEU  O  ', ' A  27  VAL HG13', -0.584, (54.481, 57.54, 135.331)), (' G 133  LEU HD12', ' G 134  MET  H  ', -0.583, (70.347, 68.61, 96.049)), (' B  61  LEU HD21', ' F 112  ILE  CD1', -0.582, (64.382, 28.438, 82.112)), (' C   8  MET  HE3', ' C  11  VAL  CG1', -0.579, (69.884, 51.797, 78.785)), (' B  71  VAL HG23', ' B  72  ASP  N  ', -0.578, (52.019, 31.518, 76.888)), (' F  80  ARG  CD ', ' F  80  ARG  H  ', -0.577, (47.436, 53.24, 87.228)), (' D   7  LYS  O  ', ' D  11  VAL HG23', -0.577, (74.425, 46.562, 146.1)), (' E 128  THR HG23', ' E2001  GOL  H12', -0.575, (62.819, 76.51, 128.247)), (' C  73  ILE HG22', ' C  77  CYS  SG ', -0.575, (82.634, 53.629, 96.041)), (' D  36  GLN  HA ', ' D  36  GLN  NE2', -0.572, (60.37, 36.971, 133.819)), (' B  70  ALA  HB2', ' F 118  GLY  HA2', -0.57, (53.164, 24.34, 77.614)), (' E  45  LYS  NZ ', ' H 194  LEU HD11', -0.569, (70.454, 17.733, 131.422)), (' G  61  GLN  O  ', ' G  65  GLU  HG3', -0.567, (59.664, 30.611, 135.289)), (' F  61  GLN  O  ', ' F  65  GLU  HG3', -0.566, (53.908, 81.614, 93.346)), (' H  12  SER  HA ', ' H  17  TYR  CD2', -0.564, (57.983, 63.986, 75.824)), (' H  35  ASP  HB3', ' H  39  VAL  CG1', -0.563, (44.691, 74.702, 56.4)), (' E  47  LEU  CD2', ' H 129  THR HG21', -0.561, (72.697, 18.959, 141.357)), (' G 171  ILE HG22', ' G 172  VAL  N  ', -0.558, (73.772, 81.28, 106.205)), (' F 125  ILE HD13', ' F 133  LEU HD11', -0.557, (60.117, 19.727, 89.176)), (' C   8  MET  O  ', ' C  11  VAL HG12', -0.554, (70.662, 50.883, 78.892)), (' E 182  SER  OG ', ' E 183  PRO  HD3', -0.552, (42.641, 84.565, 156.272)), (' H 122  LEU  CD1', ' H 136  VAL HG23', -0.551, (73.925, 31.673, 121.467)), (' F 165  VAL  CG2', ' F 190  ILE  HB ', -0.547, (48.441, 13.632, 87.907)), (' E 187  TRP  CZ3', ' E 189  LEU HD22', -0.547, (45.664, 81.3, 148.031)), (' B  71  VAL HG23', ' B  72  ASP  H  ', -0.545, (51.991, 31.238, 77.131)), (' F 144  LYS  HD2', ' F 145  ASN  N  ', -0.544, (59.52, 11.278, 73.519)), (' C  68  GLN  HG2', ' G 120  VAL HG21', -0.544, (75.225, 60.259, 102.939)), (' F 129  THR HG22', ' F 197  ASN  C  ', -0.539, (70.534, 12.26, 94.69)), (' C  74  ASN  N  ', ' C  74  ASN  ND2', -0.538, (83.261, 54.658, 101.406)), (' C   5  SER  HB3', ' C   8  MET  CB ', -0.537, (70.537, 50.628, 74.19)), (' E  56  ARG  C  ', ' E  58  ALA  H  ', -0.531, (63.559, 7.49, 130.072)), (' G  78  GLN  O  ', ' G  82  GLU  HG3', -0.529, (67.646, 38.795, 112.242)), (' A  32  LYS  CD ', ' A  32  LYS  H  ', -0.529, (49.825, 62.622, 125.034)), (' D  61  LEU HD23', ' H 111  ILE HD11', -0.529, (76.762, 40.542, 133.966)), (' F 126  PRO  HB3', ' F 131  ALA  HB1', -0.528, (63.061, 17.995, 95.975)), (' E 160  GLU  HG2', ' E 162  GLN HE21', -0.527, (53.437, 88.146, 135.207)), (' A  49  ASP  OD2', ' A  51  THR  HB ', -0.527, (74.958, 74.541, 133.434)), (' E 173  GLN  HA ', ' E 173  GLN  NE2', -0.525, (43.506, 90.852, 141.781)), (' H  89  THR  O  ', ' H  93  GLN  HG2', -0.525, (73.813, 52.721, 126.391)), (' F 159  TRP  CZ3', ' F 195  ARG  HB2', -0.523, (64.159, 15.347, 91.895)), (' F 138  PRO  HA ', ' F 188  PRO  HB3', -0.522, (48.53, 17.296, 78.894)), (' B  28  GLU  C  ', ' B  30  SER  H  ', -0.515, (52.565, 36.761, 96.7)), (' G  10  GLU  OE1', ' H 128  THR HG22', -0.512, (67.06, 26.789, 143.238)), (' F  80  ARG  HG3', ' F  85  ARG HH21', -0.512, (50.507, 53.44, 86.722)), (' G 165  VAL  CG1', ' G 190  ILE  HB ', -0.51, (71.924, 73.083, 105.249)), (' C  65  LEU HD12', ' G 111  ILE HD12', -0.51, (74.683, 59.32, 93.295)), (' F 112  ILE  O  ', ' F 116  ARG  HG3', -0.505, (60.735, 26.09, 76.594)), (' D  74  ASN  C  ', ' D  76  LEU  H  ', -0.505, (83.941, 48.089, 124.803)), (' A  26  ARG  HA ', ' A2016  HOH  O  ', -0.505, (53.223, 54.053, 133.102)), (' B  54  PHE  O  ', ' B  58  VAL HG23', -0.505, (69.908, 25.931, 88.611)), (' F 187  TRP  CE3', ' F 189  LEU HD13', -0.504, (48.675, 11.966, 79.046)), (' B   8  MET  HE1', ' B  47  ALA  O  ', -0.503, (78.727, 31.766, 95.402)), (' G  97  PHE  CE1', ' G 112  ILE HD12', -0.503, (77.607, 53.889, 93.745)), (' H 161  ILE HD13', ' H 193  ALA  HB2', -0.502, (77.743, 22.657, 129.148)), (' H 162  GLN  O  ', ' H 163  GLN  HB3', -0.501, (74.623, 16.845, 124.658)), (' C   8  MET  HE1', ' C  53  ALA  HB2', -0.497, (68.012, 54.303, 79.038)), (' G 150  ASN  ND2', ' G 151  THR HG23', -0.496, (78.799, 80.941, 91.122)), (' F  59  ALA  C  ', ' F  60  MET  HE2', -0.495, (54.462, 85.518, 99.988)), (' D  36  GLN  HA ', ' D  36  GLN HE21', -0.494, (59.969, 36.485, 133.948)), (' A  14  THR  HB ', ' A  57  MET  HE1', -0.494, (68.932, 62.598, 138.746)), (' D  54  PHE  O  ', ' D  58  VAL HG23', -0.494, (73.704, 37.756, 140.036)), (' B   3  LEU  N  ', ' B   3  LEU HD22', -0.493, (89.201, 30.254, 78.8)), (' G 140  TYR  CE2', ' G 144  LYS  HD2', -0.492, (89.331, 74.818, 101.056)), (' G 171  ILE  CD1', ' G 171  ILE  H  ', -0.491, (70.693, 80.929, 109.008)), (' A   7  LYS  O  ', ' A  11  VAL HG23', -0.491, (75.405, 65.083, 139.005)), (' G 187  TRP  HB3', ' G 188  PRO  HA ', -0.49, (80.109, 69.214, 108.348)), (' B  27  VAL HG22', ' B  67  MET  SD ', -0.49, (54.709, 34.374, 90.459)), (' H  85  ARG  HG2', ' H  85  ARG  NH1', -0.489, (66.696, 54.166, 120.158)), (' F 126  PRO  HG2', ' F 132  LYS  O  ', -0.489, (60.178, 17.601, 94.215)), (' E 150  ASN  HA ', ' E 161  ILE HD12', -0.488, (52.342, 88.963, 142.493)), (' B  65  LEU HD11', ' F 112  ILE HD13', -0.487, (62.546, 27.383, 82.299)), (' H 161  ILE HD12', ' H 191  VAL HG11', -0.486, (79.565, 23.426, 126.951)), (' F 125  ILE  CD1', ' F 133  LEU HD11', -0.485, (60.027, 19.763, 88.678)), (' D  15  SER  HB3', ' D  57  MET  HE1', -0.485, (69.53, 45.128, 139.729)), (' E  45  LYS  HZ3', ' H 194  LEU HD11', -0.484, (70.698, 17.46, 130.866)), (' H  21  ALA  O  ', ' H  25  GLU  HG3', -0.484, (54.764, 68.321, 67.487)), (' G 180  ASP  O  ', ' G 183  PRO  HD2', -0.482, (89.477, 77.98, 110.661)), (' A  28  GLU  HG3', ' A2016  HOH  O  ', -0.482, (54.429, 54.197, 131.82)), (' F 171  ILE  N  ', ' F 171  ILE HD12', -0.481, (44.524, 7.448, 90.039)), (' E  80  ARG  HB3', ' E  80  ARG  NH1', -0.48, (50.284, 42.029, 137.276)), (' B  65  LEU HD21', ' F 112  ILE HD13', -0.478, (61.765, 28.627, 81.664)), (' C  55  GLU  HB3', ' G 127  LEU HD13', -0.478, (67.75, 62.871, 83.341)), (' F  73  THR HG21', ' H  63  LYS  HD3', -0.478, (49.512, 67.52, 94.146)), (' A  78  GLU  HG3', ' A2015  HOH  O  ', -0.478, (59.627, 56.185, 155.322)), (' B  68  GLN  HB2', ' B  73  ILE HD11', -0.477, (56.54, 31.012, 81.48)), (' C  74  ASN  H  ', ' C  74  ASN HD22', -0.477, (82.79, 54.519, 100.936)), (' F 125  ILE  CD1', ' F 154  TYR  HE2', -0.477, (61.525, 20.471, 87.049)), (' G 119  CYS  HB2', ' G 142  THR  CG2', -0.475, (81.998, 66.079, 99.599)), (' D   7  LYS  HB2', ' D   7  LYS  NZ ', -0.473, (78.184, 45.167, 150.195)), (' B  74  ASN  O  ', ' B  78  GLU  HG3', -0.472, (58.443, 32.324, 71.212)), (' D  61  LEU  CD2', ' H 111  ILE HD11', -0.472, (77.252, 40.452, 133.657)), (' H  16  SER  HB3', ' H  57  ASP  OD1', -0.469, (50.445, 64.202, 80.488)), (' A  76  LEU  O  ', ' A  76  LEU HD13', -0.467, (60.345, 59.113, 151.203)), (' D  44  ILE HD13', ' D  57  MET  CE ', -0.465, (69.847, 43.101, 139.42)), (' A  75  ARG  O  ', ' A  78  GLU  HG2', -0.464, (58.044, 58.642, 154.561)), (' G 178  ASN  ND2', ' G 180  ASP  HB2', -0.463, (90.517, 80.992, 107.397)), (' G 136  VAL HG23', ' G 188  PRO  HB2', -0.463, (77.194, 67.731, 106.168)), (' E  55  ASP  HB2', ' E  56  ARG  H  ', -0.461, (65.869, 4.178, 127.062)), (' H 165  VAL HG22', ' H 190  ILE  HB ', -0.461, (74.758, 24.218, 119.486)), (' H 165  VAL HG12', ' H 171  ILE HD13', -0.46, (73.902, 19.394, 118.345)), (' G  14  LEU  O  ', ' G  17  TYR  HB3', -0.46, (57.056, 33.878, 148.063)), (' G 122  LEU  O  ', ' H  72  MET  HE2', -0.459, (67.355, 62.786, 99.948)), (' D   8  MET  SD ', ' D  12  LYS  HE3', -0.459, (69.389, 45.144, 148.311)), (' H  16  SER  CB ', ' H  57  ASP  OD1', -0.458, (50.25, 64.361, 80.495)), (' C  74  ASN  CB ', ' G 116  ARG  HG2', -0.458, (84.776, 55.326, 99.661)), (' F 125  ILE HD13', ' F 133  LEU HD13', -0.458, (60.437, 19.918, 90.129)), (' B  75  ARG  HG3', ' B  76  LEU  N  ', -0.458, (56.857, 35.39, 74.221)), (' B  55  GLU  O  ', ' B  58  VAL  HB ', -0.456, (68.082, 24.588, 90.119)), (' G 133  LEU HD12', ' G 134  MET  N  ', -0.456, (70.246, 68.987, 96.282)), (' F  98  THR HG22', ' F 102  LYS  HE3', -0.455, (71.303, 38.442, 76.44)), (' E  85  ARG  H  ', ' E  85  ARG  HD2', -0.455, (52.678, 44.324, 142.885)), (' A  32  LYS  HD2', ' A  32  LYS  N  ', -0.455, (50.81, 62.856, 125.867)), (' B  72  ASP  O  ', ' B  75  ARG  HG2', -0.453, (55.757, 34.041, 75.353)), (' C  22  LEU  O  ', ' C  27  VAL HG23', -0.453, (65.195, 50.81, 99.942)), (' B  75  ARG  HA ', ' B  78  GLU  OE1', -0.452, (56.727, 33.963, 70.727)), (' C  61  LEU HD23', ' G 111  ILE HD11', -0.452, (74.883, 57.666, 90.81)), (' B  15  SER  HB3', ' B  57  MET  CE ', -0.451, (70.292, 33.292, 90.097)), (' C  74  ASN  H  ', ' C  74  ASN  ND2', -0.451, (83.112, 54.842, 100.921)), (' F 144  LYS  C  ', ' F 144  LYS  HD2', -0.451, (59.193, 10.595, 73.642)), (' D  15  SER  CB ', ' D  57  MET  HE1', -0.45, (70.055, 45.263, 139.432)), (' B   4  GLY  C  ', ' B   6  SER  H  ', -0.45, (85.571, 33.773, 84.545)), (' F 119  CYS  HB2', ' F 142  THR HG21', -0.45, (56.324, 17.723, 78.284)), (' G 177  ILE  O  ', ' G 177  ILE HG22', -0.449, (84.781, 77.757, 103.122)), (' A  74  ASN  ND2', ' E 116  ARG  HD2', -0.448, (56.709, 66.573, 153.763)), (' E  50  ALA  O  ', ' E  51  LYS  C  ', -0.447, (66.845, 6.602, 139.607)), (' G 195  ARG  HG2', ' G 195  ARG HH11', -0.447, (71.429, 71.685, 85.746)), (' G  80  ARG  HA ', ' G  80  ARG  NE ', -0.446, (72.912, 35.288, 113.544)), (' A  61  LEU HD21', ' E 112  ILE  CD1', -0.446, (61.791, 67.042, 144.157)), (' E  76  TYR  CD2', ' G  60  MET  HG3', -0.445, (50.307, 30.696, 138.446)), (' G 165  VAL HG12', ' G 190  ILE  O  ', -0.444, (72.611, 74.109, 103.866)), (' B  65  LEU HD12', ' F 111  ILE HD12', -0.444, (62.495, 26.017, 84.33)), (' D  62  SER  HB3', ' H 125  ILE HD12', -0.443, (73.853, 35.382, 132.68)), (' H   9  SER  OG ', ' H  10  GLU  N  ', -0.44, (64.018, 66.45, 78.84)), (' B  75  ARG  HG3', ' B  76  LEU HD22', -0.44, (56.843, 36.149, 74.897)), (' G 173  GLN  O  ', ' G 176  GLU  HG2', -0.438, (80.13, 82.132, 105.672)), (' D  73  ILE HD12', ' H  97  PHE  CZ ', -0.438, (77.985, 44.948, 128.776)), (' C  22  LEU HD12', ' C  27  VAL HG21', -0.438, (65.887, 52.792, 98.668)), (' E 126  PRO  HB2', ' E 131  ALA  CB ', -0.437, (58.816, 78.653, 130.56)), (' G  74  GLN  HG2', ' G  75  MET  N  ', -0.437, (63.23, 35.596, 119.214)), (' E  44  LYS  HA ', ' E  44  LYS  HD3', -0.436, (74.79, 15.787, 140.006)), (' A  72  ASP  O  ', ' A  76  LEU  HB2', -0.436, (55.74, 59.888, 150.269)), (' B  15  SER  CB ', ' B  57  MET  HE1', -0.436, (69.455, 34.357, 89.986)), (' G 131  ALA  O  ', ' G 194  LEU  HA ', -0.435, (68.353, 73.926, 91.683)), (' E  56  ARG  HA ', ' E  56  ARG  HD2', -0.434, (65.09, 7.106, 126.997)), (' H  32  ALA  C  ', ' H  34  GLY  H  ', -0.433, (52.624, 76.835, 55.298)), (' E  85  ARG  HD2', ' E  85  ARG  N  ', -0.433, (52.941, 44.254, 142.832)), (' B  22  LEU  HA ', ' B  22  LEU HD12', -0.432, (57.645, 36.099, 88.666)), (' G 150  ASN  C  ', ' G 150  ASN HD22', -0.432, (79.09, 80.575, 92.646)), (' H 111  ILE  C  ', ' H 111  ILE HD12', -0.431, (79.474, 38.656, 131.964)), (' G 177  ILE HD13', ' G 185  LEU HD13', -0.431, (81.387, 77.037, 107.26)), (' C   5  SER  OG ', ' C   6  SER  N  ', -0.43, (73.194, 48.792, 72.765)), (' G 178  ASN  OD1', ' G 181  ASN  HB3', -0.428, (86.925, 81.173, 107.414)), (' G 150  ASN  C  ', ' G 150  ASN  ND2', -0.428, (78.621, 80.765, 92.654)), (' G 171  ILE  N  ', ' G 171  ILE HD12', -0.428, (70.911, 80.028, 109.126)), (' F  84  LYS  HA ', ' F  87  LYS  HD2', -0.427, (53.405, 50.402, 77.991)), (' F 171  ILE  CD1', ' F 171  ILE  H  ', -0.426, (44.494, 6.896, 90.589)), (' E 165  VAL HG12', ' E 171  ILE HD13', -0.426, (41.151, 84.092, 137.813)), (' H 165  VAL  CG2', ' H 190  ILE  HB ', -0.425, (74.634, 24.85, 119.292)), (' F 121  PRO  HA ', ' F 135  VAL HG12', -0.425, (57.019, 20.238, 86.82)), (' G 150  ASN  H  ', ' G 150  ASN HD22', -0.425, (79.766, 81.113, 92.713)), (' H  20  TYR  CZ ', ' H  51  LYS  HG2', -0.424, (52.014, 73.644, 75.545)), (' F 132  LYS  HE2', ' F 134  MET  SD ', -0.424, (53.469, 16.496, 93.969)), (' H   9  SER  O  ', ' H  10  GLU  C  ', -0.424, (61.668, 66.764, 80.622)), (' G  36  SER  O  ', ' G  39  VAL HG13', -0.424, (47.199, 21.86, 169.3)), (' F 129  THR  O  ', ' F 130  ALA  HB3', -0.423, (65.527, 12.389, 98.875)), (' G 172  VAL HG11', ' G 177  ILE HD11', -0.423, (79.771, 77.984, 106.245)), (' G  42  LYS  HB3', ' G  42  LYS  HE2', -0.423, (44.966, 24.587, 164.487)), (' D  47  ALA  HB1', ' D  52  GLU  HG2', -0.422, (67.849, 39.363, 147.041)), (' G 177  ILE  CD1', ' G 189  LEU HD21', -0.422, (80.589, 76.399, 105.728)), (' F 125  ILE  CD1', ' F 133  LEU  CD1', -0.421, (60.513, 20.053, 89.119)), (' B  36  GLN  O  ', ' B  40  LEU HD22', -0.421, (63.173, 29.661, 97.448)), (' A  27  VAL HG23', ' A  34  TRP  CE3', -0.419, (55.592, 58.456, 131.614)), (' E  55  ASP  C  ', ' E  57  ASP  H  ', -0.418, (65.359, 5.599, 129.721)), (' H  80  ARG  HA ', ' H  80  ARG  NE ', -0.418, (71.183, 62.596, 112.312)), (' F 182  SER  OG ', ' F 183  PRO  HD3', -0.416, (48.586, 6.666, 72.27)), (' F 166  ASP  OD1', ' F 186  ALA  HB3', -0.416, (42.895, 10.32, 81.82)), (' A  36  GLN  O  ', ' A  40  LEU HD22', -0.416, (60.693, 66.154, 128.947)), (' F 126  PRO  CB ', ' F 131  ALA  HB1', -0.415, (62.99, 17.82, 95.796)), (' F  95  MET  O  ', ' F  99  MET  HG3', -0.415, (68.433, 39.176, 80.583)), (' A  33  LEU  HA ', ' A  36  GLN HE21', -0.415, (54.006, 65.924, 127.744)), (' G 168  ASP  O  ', ' G 169  SER  CB ', -0.414, (69.621, 74.553, 112.821)), (' C  73  ILE HD13', ' G 115  ALA  HB1', -0.414, (78.719, 57.45, 98.754)), (' G 134  MET  HA ', ' G 191  VAL  O  ', -0.414, (71.955, 71.36, 99.052)), (' H  16  SER  OG ', ' H  54  PHE  HA ', -0.412, (50.51, 67.15, 79.188)), (' F 196  ALA  O  ', ' F 197  ASN  HB2', -0.411, (70.137, 11.579, 91.369)), (' D  44  ILE HD13', ' D  57  MET  HE3', -0.41, (70.026, 43.061, 140.157)), (' A  76  LEU  C  ', ' A  76  LEU HD13', -0.41, (59.946, 59.682, 150.819)), (' A  18  LEU HD23', ' A  60  LEU HD23', -0.41, (64.131, 63.294, 135.775)), (' C  11  VAL  CG2', ' C  57  MET  HE2', -0.41, (71.599, 52.662, 83.895)), (' E  46  SER  O  ', ' E  50  ALA  CB ', -0.41, (69.712, 11.055, 140.126)), (' C  55  GLU  HG3', ' G 127  LEU HD22', -0.409, (69.65, 64.252, 83.798)), (' F 121  PRO  HB3', ' F 125  ILE HD11', -0.408, (59.491, 21.555, 87.465)), (' G 171  ILE  CG2', ' G 172  VAL  N  ', -0.408, (73.546, 81.166, 106.425)), (' H 126  PRO  HB2', ' H 131  ALA  CB ', -0.407, (69.594, 26.291, 135.896)), (' A  39  GLN HE22', ' H  84  LYS  NZ ', -0.407, (66.44, 64.938, 123.002)), (' F 125  ILE  HA ', ' F 126  PRO  HD3', -0.407, (61.426, 20.273, 91.548)), (' B  41  HIS  O  ', ' B  45  LEU HD23', -0.406, (70.229, 35.849, 95.334)), (' D  34  TRP  O  ', ' D  38  VAL HG23', -0.406, (59.744, 42.949, 132.085)), (' E 168  ASP  O  ', ' E 169  SER  HB2', -0.406, (35.699, 79.02, 139.003)), (' E  84  LYS  HE3', ' E  85  ARG  NH2', -0.406, (55.848, 41.533, 141.27)), (' C  71  VAL  O  ', ' C  73  ILE HD12', -0.406, (78.144, 55.272, 100.934)), (' H 119  CYS  HA ', ' H 136  VAL  O  ', -0.406, (80.031, 32.371, 123.584)), (' F 125  ILE HD11', ' F 154  TYR  HE2', -0.405, (61.122, 20.966, 87.269)), (' G  14  LEU HD21', ' G  61  GLN  NE2', -0.405, (58.616, 32.493, 141.504)), (' D  42  ASN HD22', ' E  85  ARG HH21', -0.405, (56.766, 42.764, 139.798)), (' D  26  ARG  HG2', ' D  26  ARG HH11', -0.404, (62.598, 50.358, 120.887)), (' F  56  ARG  HB3', ' F  59  ALA  HB3', -0.404, (56.942, 86.933, 101.68)), (' B  65  LEU HD21', ' F 112  ILE  CD1', -0.404, (62.377, 28.946, 81.511)), (' E 178  ASN  ND2', ' E 181  ASN  H  ', -0.403, (43.534, 89.955, 154.631)), (' H  98  THR  HA ', ' H 101  ARG HH12', -0.403, (82.952, 51.252, 135.411)), (' F 111  ILE HG13', ' F 112  ILE  N  ', -0.402, (63.805, 25.395, 81.455)), (' D  26  ARG  NH2', ' H  85  ARG  NH1', -0.402, (64.68, 53.353, 119.378)), (' G 137  VAL HG11', ' G 143  TYR  CB ', -0.401, (82.471, 71.511, 101.585))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' B 617  CYS  O  ', ' B 618  THR HG23', -1.255, (182.375, 126.811, 157.995)), (' B 617  CYS  O  ', ' B 618  THR  CG2', -1.088, (182.658, 126.127, 157.367)), (' B 617  CYS  C  ', ' B 618  THR HG23', -0.761, (182.672, 126.812, 157.762)), (' A 617  CYS  O  ', ' A 620  VAL  O  ', -0.725, (175.679, 197.705, 156.74)), (' B1032  CYS  O  ', ' B1033  VAL HG23', -0.692, (170.996, 170.023, 191.962)), (' B 326  ILE HD11', ' B 534  VAL  HB ', -0.687, (173.534, 122.186, 140.459)), (' A 617  CYS  C  ', ' A 620  VAL  O  ', -0.577, (175.704, 196.929, 156.961)), (' A  81  ASN  N  ', ' A 265  TYR  HH ', -0.558, (144.593, 215.689, 131.153)), (' B1032  CYS  SG ', ' B1048  HIS  CE1', -0.555, (172.108, 164.846, 194.979)), (' B 617  CYS  O  ', ' B 618  THR  CB ', -0.551, (182.269, 126.418, 157.265)), (' B1037  SER  HB3', ' B1043  CYS  SG ', -0.528, (168.673, 162.496, 194.757)), (' B 716  THR HG23', ' B1071  GLN  HG2', -0.517, (182.317, 148.451, 211.138)), (' B 612  TYR  HB2', ' B 649  CYS  HB3', -0.49, (183.177, 134.754, 159.538)), (' B1081  ILE HD12', ' B1135  ASN  HB3', -0.472, (168.358, 142.397, 226.701)), (' A1032  CYS  CB ', ' A1043  CYS  SG ', -0.472, (153.082, 166.285, 193.588)), (' B1030  SER  O  ', ' B1031  GLU  C  ', -0.446, (166.546, 168.612, 193.668)), (' B 200  TYR  CD1', ' B 230  PRO  HA ', -0.442, (194.094, 164.556, 123.251)), (' A 718  PHE  O  ', ' A 719  THR  C  ', -0.437, (152.645, 180.495, 203.186)), (' C1083  HIS  CD2', ' C1084  ASP  H  ', -0.436, (146.915, 168.618, 231.89)), (' B1037  SER  CB ', ' B1043  CYS  SG ', -0.435, (168.544, 162.991, 194.779)), (' B 380  TYR  CE2', ' B 433  VAL HG21', -0.434, (163.158, 127.73, 101.426)), (' B  34  ARG  NH1', ' B 221  SER  HB3', -0.422, (208.682, 156.921, 145.84)), (' B 889  GLY  HA3', ' B1034  LEU  HB2', -0.415, (166.09, 174.582, 195.957)), (' B1032  CYS  SG ', ' B1048  HIS  NE2', -0.407, (171.319, 164.817, 195.643)), (' B  34  ARG HH11', ' B 221  SER  HB3', -0.401, (208.555, 156.725, 145.582)), (' C  64  TRP  HE1', ' C 264  ALA  HB1', -0.401, (118.409, 116.464, 135.903))]
data['cbeta'] = [('A', ' 603 ', 'ASN', ' ', 0.32679906426647565, (145.408, 196.337, 168.844)), ('A', ' 784 ', 'GLN', ' ', 0.26299569022375374, (144.81, 155.70199999999994, 188.381)), ('A', ' 878 ', 'LEU', ' ', 0.2807555729657388, (139.53699999999995, 167.21299999999994, 194.18500000000003)), ('B', ' 487 ', 'ASN', ' ', 0.2515727003372788, (145.374, 131.377, 72.27200000000002)), ('B', ' 878 ', 'LEU', ' ', 0.27312281714022285, (177.44999999999993, 175.865, 193.314)), ('B', '1032 ', 'CYS', ' ', 0.4566946576590001, (170.04599999999994, 166.61399999999995, 194.973)), ('C', ' 198 ', 'ASP', ' ', 0.26432840386903544, (139.72699999999995, 135.205, 121.27500000000003)), ('C', ' 878 ', 'LEU', ' ', 0.2701491076278539, (166.03099999999995, 138.681, 193.60500000000002)), ('C', '1083 ', 'HIS', ' ', 0.3341124553419199, (144.77699999999987, 167.06, 231.61))]
data['smoc'] = [('A', 66, u'HIS', 0.7327051390373978, (142.455, 219.75, 136.28)), ('A', 97, u'LYS', 0.7963671560029819, (130.183, 216.093, 140.222)), ('A', 135, u'PHE', 0.8068837723451635, (140.503, 212.371, 113.12799999999999)), ('A', 140, u'PHE', 0.7672111064785309, (129.929, 214.872, 119.489)), ('A', 212, u'LEU', 0.7832627735554636, (133.607, 217.071, 149.45600000000002)), ('A', 224, u'GLU', 0.7028316855507092, (134.43, 194.964, 140.10299999999998)), ('A', 270, u'LEU', 0.6359932115661173, (150.123, 199.251, 138.317)), ('A', 277, u'LEU', 0.6888550699263737, (142.871, 189.972, 150.298)), ('A', 297, u'SER', 0.6053400572376014, (152.95000000000002, 194.032, 155.814)), ('A', 332, u'ILE', 0.7634840122007324, (195.34, 184.24899999999997, 123.787)), ('A', 333, u'THR', 0.7546798127090956, (197.58700000000002, 181.565, 122.184)), ('A', 342, u'PHE', 0.7370327822639493, (193.71399999999997, 183.966, 102.785)), ('A', 345, u'THR', 0.6638247991098138, (200.83200000000002, 185.191, 97.1)), ('A', 355, u'ARG', 0.714108108080988, (192.664, 172.319, 101.329)), ('A', 356, u'LYS', 0.7317312434905654, (194.278, 173.47299999999998, 104.636)), ('A', 387, u'LEU', 0.708897112714966, (180.12, 178.55, 113.918)), ('A', 390, u'LEU', 0.6866863523933026, (181.41899999999998, 175.761, 118.31700000000001)), ('A', 408, u'ARG', 0.5974932333031782, (177.787, 181.54, 92.80199999999999)), ('A', 415, u'THR', 0.6703620696291122, (174.578, 172.036, 89.4)), ('A', 417, u'LYS', 0.6415750462484063, (180.52200000000002, 173.047, 85.41100000000002)), ('A', 427, u'ASP', 0.4616893095387805, (171.569, 170.292, 99.386)), ('A', 428, u'ASP', 0.5308365052991829, (172.038, 171.124, 103.141)), ('A', 437, u'ASN', 0.6299420806031669, (188.389, 190.409, 93.422)), ('A', 445, u'VAL', 0.48351149508938585, (198.813, 189.89600000000002, 79.614)), ('A', 449, u'TYR', 0.611871207789529, (196.594, 179.89100000000002, 81.589)), ('A', 467, u'ASP', 0.6132206362760322, (189.46200000000002, 165.342, 92.093)), ('A', 469, u'SER', 0.5641528500697207, (192.569, 164.24099999999999, 87.10799999999999)), ('A', 482, u'GLY', 0.21594548028474553, (196.44899999999998, 159.45200000000003, 75.561)), ('A', 483, u'VAL', 0.16533102224091054, (195.76899999999998, 162.30700000000002, 73.002)), ('A', 486, u'PHE', 0.1991014180070871, (187.91, 162.258, 66.569)), ('A', 493, u'GLN', 0.6530788059877852, (189.36, 175.024, 80.009)), ('A', 502, u'GLY', 0.4542342873843688, (185.309, 193.195, 82.70400000000001)), ('A', 508, u'TYR', 0.6755540072955492, (188.037, 186.206, 92.295)), ('A', 518, u'LEU', 0.514439923692197, (183.33, 163.17499999999998, 115.403)), ('A', 540, u'ASN', 0.7735744853135496, (179.683, 186.752, 139.54)), ('A', 551, u'VAL', 0.8124672845404518, (183.757, 187.82000000000002, 147.19)), ('A', 557, u'LYS', 0.8055219833707244, (197.348, 179.48800000000003, 150.524)), ('A', 564, u'GLN', 0.7757525580082136, (194.14399999999998, 175.39700000000002, 139.599)), ('A', 574, u'ASP', 0.7883074220140946, (187.093, 178.054, 148.291)), ('A', 576, u'VAL', 0.7844371932769799, (191.20999999999998, 179.77399999999997, 142.54)), ('A', 577, u'ARG', 0.7959266501780033, (194.435, 180.54, 140.638)), ('A', 582, u'LEU', 0.7799285801430522, (200.646, 184.068, 140.017)), ('A', 587, u'ILE', 0.7877992840423692, (186.538, 182.829, 147.55100000000002)), ('A', 595, u'VAL', 0.6673631887398498, (165.414, 188.687, 157.778)), ('A', 596, u'SER', 0.6638738783153131, (163.312, 188.707, 160.946)), ('A', 597, u'VAL', 0.6274483249944376, (160.71899999999997, 191.292, 162.04)), ('A', 603, u'ASN', 0.7787563566585252, (146.88500000000002, 196.759, 168.796)), ('A', 606, u'ASN', 0.7542526679369453, (152.621, 199.14499999999998, 164.429)), ('A', 619, u'GLU', 0.6800455353548477, (176.444, 194.42700000000002, 153.835)), ('A', 620, u'VAL', 0.6306490073225832, (173.107, 195.95800000000003, 155.015)), ('A', 689, u'SER', 0.8310821425164209, (156.24299999999997, 208.494, 171.909)), ('A', 718, u'PHE', 0.6105570287186964, (154.559, 180.647, 206.083)), ('A', 733, u'LYS', 0.5493104327648892, (141.80100000000002, 162.38800000000003, 167.053)), ('A', 802, u'PHE', 0.5709239828321603, (136.315, 174.251, 198.732)), ('A', 819, u'GLU', 0.587692140455506, (136.99, 174.19899999999998, 185.10999999999999)), ('A', 825, u'LYS', 0.656906115088393, (139.011, 180.79299999999998, 174.934)), ('A', 866, u'THR', 0.6203323414716186, (133.372, 162.90200000000002, 177.23)), ('A', 876, u'ALA', 0.5938446447243023, (136.024, 161.95700000000002, 192.365)), ('A', 880, u'GLY', 0.5761786589844584, (138.478, 161.511, 197.731)), ('A', 898, u'PHE', 0.6040699141271709, (140.52800000000002, 168.001, 206.925)), ('A', 901, u'GLN', 0.5462678398306158, (144.865, 165.761, 207.39200000000002)), ('A', 905, u'ARG', 0.5585455323937601, (150.85000000000002, 167.309, 205.845)), ('A', 908, u'GLY', 0.5582040699207639, (155.377, 165.67, 206.504)), ('A', 924, u'ALA', 0.5695025141192477, (142.537, 178.60999999999999, 205.93)), ('A', 933, u'LYS', 0.5878733745050306, (141.166, 186.483, 195.393)), ('A', 942, u'ALA', 0.4410389427008448, (143.469, 182.963, 178.818)), ('A', 962, u'LEU', 0.5240405723486049, (147.564, 168.629, 153.96200000000002)), ('A', 979, u'ASP', 0.6846869942584036, (140.431, 168.20299999999997, 134.784)), ('A', 997, u'ILE', 0.5639093733812336, (149.94, 160.383, 143.13299999999998)), ('A', 1008, u'VAL', 0.5712868743543675, (152.056, 161.105, 159.24299999999997)), ('A', 1012, u'LEU', 0.6115038570910314, (154.06, 160.218, 165.008)), ('A', 1018, u'ILE', 0.567768306840018, (152.08100000000002, 164.26, 174.02700000000002)), ('A', 1019, u'ARG', 0.577062496439136, (152.796, 160.71499999999997, 175.409)), ('A', 1022, u'ALA', 0.5146075033709363, (150.576, 162.364, 179.599)), ('A', 1026, u'ALA', 0.5096948425705273, (149.86800000000002, 160.578, 185.323)), ('A', 1051, u'SER', 0.5428067217947337, (147.561, 169.21899999999997, 194.85600000000002)), ('A', 1077, u'THR', 0.6162427408148068, (173.937, 179.38500000000002, 216.311)), ('A', 1108, u'ASN', 0.6183722015176608, (161.455, 175.453, 209.39700000000002)), ('A', 1147, u'SER', 0.7845155053076357, (161.315, 166.345, 247.148)), ('A', 1301, u'NAG', 0.6720612903712109, (156.83800000000002, 199.006, 118.438)), ('A', 1303, u'NAG', 0.5583739279957856, (147.994, 191.288, 169.05700000000002)), ('B', 27, u'ALA', 0.7327969949968489, (211.25, 138.32800000000003, 136.937)), ('B', 66, u'HIS', 0.7615367899934034, (217.797, 145.30200000000002, 133.339)), ('B', 88, u'ASP', 0.7804717887684092, (194.36, 149.772, 131.771)), ('B', 97, u'LYS', 0.8005659704837329, (222.51, 157.73999999999998, 136.94299999999998)), ('B', 106, u'PHE', 0.7592741010927659, (202.49800000000002, 153.24099999999999, 122.357)), ('B', 115, u'GLN', 0.7594799157159122, (198.876, 155.70299999999997, 113.436)), ('B', 122, u'ASN', 0.8277015923667436, (216.796, 163.97899999999998, 122.147)), ('B', 124, u'THR', 0.8688490367332318, (217.71099999999998, 169.037, 125.648)), ('B', 143, u'VAL', 0.7542356203768569, (214.607, 154.537, 113.415)), ('B', 193, u'VAL', 0.7199116490280019, (202.74899999999997, 156.911, 135.129)), ('B', 197, u'ILE', 0.7568172822215806, (190.577, 157.0, 128.676)), ('B', 210, u'ILE', 0.7808391876263774, (218.315, 156.676, 146.52100000000002)), ('B', 216, u'LEU', 0.7384584704359726, (212.23399999999998, 149.81, 144.55100000000002)), ('B', 220, u'PHE', 0.7069878760098318, (205.43800000000002, 156.983, 149.546)), ('B', 231, u'ILE', 0.6946946682985812, (196.82600000000002, 162.314, 120.727)), ('B', 263, u'ALA', 0.7593524283543637, (220.224, 150.657, 134.47)), ('B', 267, u'VAL', 0.7564764565277078, (206.783, 147.77299999999997, 134.79299999999998)), ('B', 285, u'ILE', 0.695022188655214, (200.05700000000002, 164.594, 149.24399999999997)), ('B', 291, u'CYS', 0.7246747521972322, (191.49200000000002, 150.646, 150.86100000000002)), ('B', 324, u'GLU', 0.8334284530323313, (177.305, 127.49900000000001, 138.32600000000002)), ('B', 340, u'GLU', 0.6655815690417186, (155.68200000000002, 111.49400000000001, 109.027)), ('B', 357, u'ARG', 0.6634265896402957, (150.183, 120.17799999999998, 109.651)), ('B', 363, u'ALA', 0.6929513805765555, (160.4, 121.268, 117.853)), ('B', 372, u'ALA', 0.6680406467645996, (172.925, 112.79, 106.60799999999999)), ('B', 373, u'SER', 0.6971654045251874, (169.453, 112.036, 105.02799999999999)), ('B', 375, u'SER', 0.6789170461352143, (171.05200000000002, 116.44400000000002, 99.837)), ('B', 384, u'PRO', 0.6119347420691185, (168.60899999999998, 127.148, 111.729)), ('B', 414, u'GLN', 0.5466426989712375, (160.816, 134.71299999999997, 93.59400000000001)), ('B', 417, u'LYS', 0.5898262868900909, (157.221, 128.967, 86.412)), ('B', 432, u'CYS', 0.6714721292933282, (163.258, 125.573, 107.003)), ('B', 445, u'VAL', 0.3391998945500837, (161.444, 104.082, 81.965)), ('B', 446, u'GLY', 0.13690089842758468, (160.15, 106.17699999999999, 79.006)), ('B', 449, u'TYR', 0.5846539383321927, (154.077, 111.432, 83.62599999999999)), ('B', 458, u'LYS', 0.34362008635503466, (144.51299999999998, 133.399, 84.971)), ('B', 470, u'THR', 0.5174133973744462, (142.842, 123.13199999999999, 87.729)), ('B', 479, u'PRO', 0.3939346600752024, (136.754, 131.347, 73.809)), ('B', 503, u'VAL', 0.6105185691091128, (170.814, 115.82499999999999, 87.398)), ('B', 505, u'TYR', 0.6587938173764208, (166.22899999999998, 117.024, 84.99600000000001)), ('B', 510, u'VAL', 0.67986524311039, (161.49800000000002, 119.076, 98.39)), ('B', 511, u'VAL', 0.7023582530265979, (159.83700000000002, 120.351, 101.612)), ('B', 519, u'HIS', 0.5646277603154741, (146.268, 135.90200000000002, 116.832)), ('B', 520, u'ALA', 0.49018765319388663, (145.57899999999998, 132.14899999999997, 117.196)), ('B', 526, u'GLY', 0.6856140458565616, (160.82500000000002, 125.16, 122.053)), ('B', 527, u'PRO', 0.7393429792317012, (162.768, 122.088, 123.428)), ('B', 533, u'LEU', 0.7724917906173684, (171.0, 118.51100000000001, 139.053)), ('B', 534, u'VAL', 0.7573025728200692, (173.287, 119.73700000000001, 141.923)), ('B', 552, u'LEU', 0.7685293367550202, (169.284, 123.389, 146.961)), ('B', 565, u'PHE', 0.7854605254406852, (156.383, 125.26, 144.38400000000001)), ('B', 575, u'ALA', 0.7913715347889652, (160.92600000000002, 125.1, 147.756)), ('B', 583, u'GLU', 0.7811432585969469, (161.98100000000002, 115.02, 144.697)), ('B', 586, u'ASP', 0.7563843901525127, (164.236, 123.489, 149.756)), ('B', 587, u'ILE', 0.7532235218695997, (165.71499999999997, 126.681, 148.32200000000003)), ('B', 590, u'CYS', 0.7822580935124672, (172.9, 132.55700000000002, 149.108)), ('B', 595, u'VAL', 0.6865816698970348, (182.101, 141.953, 157.803)), ('B', 601, u'GLY', 0.7638407798842403, (194.80200000000002, 150.65800000000002, 170.13299999999998)), ('B', 694, u'ALA', 0.746455265944856, (188.121, 136.106, 172.181)), ('B', 699, u'LEU', 0.7087057216814938, (179.502, 139.442, 184.57399999999998)), ('B', 703, u'ASN', 0.7252286954701008, (179.929, 136.684, 196.238)), ('B', 718, u'PHE', 0.5893070080964062, (182.835, 155.82000000000002, 205.944)), ('B', 767, u'LEU', 0.5574430998190919, (163.736, 173.57899999999998, 161.917)), ('B', 770, u'ILE', 0.5499647307342955, (163.76299999999998, 172.70999999999998, 166.945)), ('B', 774, u'GLN', 0.48880538408033625, (167.601, 174.816, 172.61399999999998)), ('B', 777, u'ASN', 0.5904281422717101, (165.978, 173.35500000000002, 177.24899999999997)), ('B', 781, u'VAL', 0.5346309919439027, (168.008, 173.407, 183.354)), ('B', 813, u'SER', 0.5427707807301727, (183.90800000000002, 183.877, 180.771)), ('B', 822, u'LEU', 0.6247901218639154, (185.153, 170.844, 180.656)), ('B', 858, u'LEU', 0.6380617026770397, (172.433, 176.476, 155.561)), ('B', 870, u'ILE', 0.5255740051459153, (175.138, 180.025, 181.77299999999997)), ('B', 874, u'THR', 0.5210296402545379, (175.854, 177.76399999999998, 187.692)), ('B', 877, u'LEU', 0.46212708617641934, (173.148, 177.82700000000003, 191.954)), ('B', 878, u'LEU', 0.5105476904293196, (176.253, 176.63899999999998, 193.869)), ('B', 881, u'THR', 0.5348372587149863, (173.646, 175.924, 197.742)), ('B', 905, u'ARG', 0.5726858750597194, (172.39600000000002, 166.11399999999998, 205.23299999999998)), ('B', 923, u'ILE', 0.5790772771603584, (185.172, 164.424, 206.23)), ('B', 930, u'ALA', 0.6050348284617989, (187.656, 163.54899999999998, 196.031)), ('B', 950, u'ASP', 0.6468639176959238, (178.647, 162.612, 170.489)), ('B', 962, u'LEU', 0.6109557743253131, (173.336, 167.5, 153.73999999999998)), ('B', 985, u'ASP', 0.680463371221977, (167.38600000000002, 172.841, 125.208)), ('B', 993, u'ILE', 0.6550164663114274, (166.32600000000002, 170.25, 136.872)), ('B', 1013, u'ILE', 0.5779138756966551, (163.88100000000003, 162.661, 165.985)), ('B', 1017, u'GLU', 0.5833292886610386, (166.21499999999997, 162.702, 172.694)), ('B', 1031, u'GLU', 0.4237725956639274, (165.75, 167.23299999999998, 192.947)), ('B', 1032, u'CYS', 0.42943194094705645, (169.349, 167.893, 194.42200000000003)), ('B', 1039, u'ARG', 0.5773873044951514, (165.58, 158.317, 195.23299999999998)), ('B', 1040, u'VAL', 0.5611337627542401, (168.117, 155.44899999999998, 195.064)), ('B', 1048, u'HIS', 0.5664266845447207, (173.20499999999998, 161.004, 198.65200000000002)), ('B', 1071, u'GLN', 0.5848787983649656, (183.417, 147.707, 206.865)), ('B', 1072, u'GLU', 0.4021785693248666, (182.26899999999998, 144.041, 206.489)), ('B', 1073, u'LYS', 0.4127620701623563, (182.89000000000001, 142.059, 209.76399999999998)), ('B', 1082, u'CYS', 0.6533297896936519, (163.31, 140.184, 227.053)), ('B', 1087, u'ALA', 0.628817698309804, (159.70899999999997, 142.38700000000003, 224.941)), ('B', 1302, u'NAG', 0.8239982271327866, (159.02800000000002, 113.394, 134.178)), ('B', 1304, u'NAG', 0.7120687346534472, (189.262, 124.05199999999999, 179.102)), ('C', 31, u'SER', 0.4011967465244364, (124.24100000000001, 126.032, 142.47899999999998)), ('C', 36, u'VAL', 0.2602211942432528, (136.189, 126.106, 140.212)), ('C', 37, u'TYR', 0.48891099118713277, (139.21599999999998, 124.933, 138.135)), ('C', 39, u'PRO', 0.34385449579344846, (144.295, 126.76, 137.507)), ('C', 52, u'GLN', 0.08940203356827188, (140.359, 136.52800000000002, 138.447)), ('C', 54, u'LEU', 0.15730765966487578, (136.791, 134.059, 134.6)), ('C', 83, u'VAL', 0.4278196829807798, (120.745, 125.131, 121.54100000000001)), ('C', 103, u'GLY', 0.2112440375566502, (128.69899999999998, 114.536, 125.251)), ('C', 113, u'LYS', 0.6659719902566381, (129.08700000000002, 125.193, 107.503)), ('C', 114, u'THR', 0.6818055167383895, (132.375, 125.479, 109.568)), ('C', 137, u'ASN', 0.6070380362795063, (117.229, 116.96900000000001, 112.289)), ('C', 166, u'CYS', 0.5606286173614011, (139.91299999999998, 118.99000000000001, 109.972)), ('C', 203, u'ILE', 0.3902598546016101, (137.997, 122.164, 129.91299999999998)), ('C', 205, u'SER', 0.45389493357854116, (136.46800000000002, 117.82, 135.098)), ('C', 221, u'SER', 0.2782803297283401, (133.90200000000002, 120.757, 144.27599999999998)), ('C', 231, u'ILE', 0.38436489692426956, (143.414, 125.586, 118.889)), ('C', 232, u'GLY', 0.40668697335073356, (142.692, 128.824, 116.892)), ('C', 239, u'GLN', 0.41313816838454887, (124.37799999999999, 121.94600000000001, 123.181)), ('C', 263, u'ALA', 0.48832414253325235, (120.633, 111.004, 132.629)), ('C', 264, u'ALA', 0.48523538918833825, (120.018, 114.648, 133.784)), ('C', 267, u'VAL', 0.3021992269505386, (123.681, 125.01400000000001, 132.811)), ('C', 268, u'GLY', 0.3057433373011467, (125.361, 128.277, 134.118)), ('C', 272, u'PRO', 0.14152555243713924, (135.728, 137.941, 136.231)), ('C', 277, u'LEU', 0.20631398886893446, (140.65200000000002, 130.945, 147.74299999999997)), ('C', 288, u'ALA', 0.2535813130295964, (136.01899999999998, 129.35800000000003, 148.89800000000002)), ('C', 297, u'SER', 0.6538087189022477, (133.792, 137.569, 157.08)), ('C', 338, u'PHE', 0.7187263363144636, (133.70399999999998, 174.629, 110.16499999999999)), ('C', 342, u'PHE', 0.6920801745541811, (137.88400000000001, 173.187, 105.253)), ('C', 343, u'ASN', 0.7735645522102013, (136.632, 175.54899999999998, 102.524)), ('C', 347, u'PHE', 0.8135368044872484, (145.31, 181.35700000000003, 104.056)), ('C', 382, u'VAL', 0.7596799845380087, (143.766, 167.632, 125.49000000000001)), ('C', 401, u'VAL', 0.8260570389183349, (150.47, 178.089, 104.381)), ('C', 404, u'GLY', 0.8196939119766377, (155.11399999999998, 170.06, 103.93700000000001)), ('C', 415, u'THR', 0.7977460535371742, (163.206, 176.061, 117.34700000000001)), ('C', 423, u'TYR', 0.8024224520424427, (155.01399999999998, 181.58700000000002, 114.256)), ('C', 445, u'VAL', 0.7944272189422832, (152.756, 176.435, 86.93400000000001)), ('C', 464, u'PHE', 0.8132395966141499, (151.941, 184.737, 119.32499999999999)), ('C', 470, u'THR', 0.8029727637785916, (159.437, 194.404, 105.436)), ('C', 477, u'SER', 0.739652780842889, (176.553, 200.056, 109.769)), ('C', 501, u'ASN', 0.8075669708840746, (157.72, 168.648, 93.137)), ('C', 511, u'VAL', 0.7738258734540865, (145.181, 175.541, 111.18499999999999)), ('C', 529, u'LYS', 0.7982370623256975, (122.63199999999999, 167.196, 125.63)), ('C', 544, u'ASN', 0.7184012478248957, (130.42800000000003, 173.206, 131.346)), ('C', 546, u'LEU', 0.7270383032903884, (133.21899999999997, 170.605, 135.57899999999998)), ('C', 571, u'ASP', 0.6337703843773835, (141.075, 173.953, 144.64299999999997)), ('C', 583, u'GLU', 0.7531371361183317, (120.62799999999999, 180.647, 140.67299999999997)), ('C', 585, u'LEU', 0.68629965410125, (123.96000000000001, 175.96200000000002, 143.843)), ('C', 590, u'CYS', 0.6866242961008078, (128.546, 162.526, 148.945)), ('C', 595, u'VAL', 0.664578615668213, (132.983, 151.165, 158.79)), ('C', 597, u'VAL', 0.6813173754578992, (132.689, 145.85100000000003, 163.067)), ('C', 615, u'VAL', 0.6574322304948902, (127.338, 159.071, 159.417)), ('C', 641, u'ASN', 0.769305365483212, (118.13799999999999, 147.416, 165.44299999999998)), ('C', 666, u'ILE', 0.688581592098425, (132.624, 152.85600000000002, 170.562)), ('C', 697, u'MET', 0.6888480132391294, (129.70499999999998, 153.52200000000002, 180.11499999999998)), ('C', 763, u'LEU', 0.6176885245791396, (170.19, 154.409, 156.42000000000002)), ('C', 767, u'LEU', 0.6452715982431882, (169.978, 151.117, 161.895)), ('C', 770, u'ILE', 0.5797374633455307, (169.345, 151.501, 166.845)), ('C', 771, u'ALA', 0.6028971824835192, (171.155, 148.135, 167.165)), ('C', 878, u'LEU', 0.5663747875877629, (167.324, 139.32000000000002, 194.11899999999997)), ('C', 885, u'GLY', 0.5181413945824725, (168.29399999999998, 144.54399999999998, 201.736)), ('C', 888, u'PHE', 0.6208723927724242, (174.086, 146.38400000000001, 198.172)), ('C', 905, u'ARG', 0.4497133849466889, (160.505, 147.91, 205.32200000000003)), ('C', 911, u'VAL', 0.5939290254610091, (154.095, 151.01299999999998, 210.655)), ('C', 926, u'GLN', 0.6448388673517481, (150.21099999999998, 136.20899999999997, 202.965)), ('C', 930, u'ALA', 0.6723992107032483, (150.404, 136.031, 196.955)), ('C', 940, u'SER', 0.744166140705788, (145.906, 130.876, 183.099)), ('C', 942, u'ALA', 0.6658865535430986, (149.091, 134.162, 177.318)), ('C', 962, u'LEU', 0.6088900463525, (159.74399999999997, 145.476, 153.708)), ('C', 979, u'ASP', 0.7313788420832795, (162.407, 140.60399999999998, 133.612)), ('C', 993, u'ILE', 0.6306883661157795, (164.772, 150.472, 136.876)), ('C', 996, u'LEU', 0.6567651051166994, (162.092, 150.467, 141.187)), ('C', 1014, u'ARG', 0.5854839153686152, (159.79399999999998, 152.984, 167.698)), ('C', 1021, u'SER', 0.5256363523606273, (160.577, 152.089, 178.52800000000002)), ('C', 1022, u'ALA', 0.5285189841816799, (164.184, 150.966, 179.253)), ('C', 1025, u'ALA', 0.5334986141816707, (162.712, 149.948, 183.846)), ('C', 1037, u'SER', 0.5160667944805584, (160.411, 154.007, 197.009)), ('C', 1041, u'ASP', 0.5914502444698678, (151.91899999999998, 154.21299999999997, 192.917)), ('C', 1049, u'LEU', 0.5640737618953138, (157.722, 147.164, 200.853)), ('C', 1077, u'THR', 0.6331449008190069, (138.995, 161.787, 217.077)), ('C', 1094, u'VAL', 0.5147292018330162, (146.647, 160.178, 216.34)), ('C', 1147, u'SER', 0.8107524088161733, (155.664, 155.196, 246.38000000000002))]
data['rota'] = [('A', '  81 ', 'ASN', 0.21242641467663653, (144.756, 217.279, 129.831)), ('A', ' 515 ', 'PHE', 0.02689391484234522, (184.49, 171.347, 110.01)), ('A', ' 602 ', 'THR', 0.08054442881694185, (149.62399999999994, 195.098, 166.652)), ('A', ' 603 ', 'ASN', 0.033035834962339194, (146.885, 196.759, 168.796)), ('A', ' 784 ', 'GLN', 0.09174565968585395, (143.272, 155.611, 188.356)), ('A', ' 935 ', 'GLN', 0.06269802782541295, (143.722, 182.925, 191.20200000000003)), ('B', ' 319 ', 'ARG', 5.0339873451771326e-05, (178.024, 137.442, 149.766)), ('B', ' 400 ', 'PHE', 0.004499415926852965, (156.414, 118.382, 96.33400000000002)), ('B', ' 403 ', 'ARG', 0.050325704643619844, (163.409, 118.76799999999997, 88.881)), ('B', ' 602 ', 'THR', 0.05930958432145417, (196.40299999999993, 151.706, 166.794)), ('B', ' 603 ', 'ASN', 0.007552222364162883, (199.79599999999996, 152.24599999999998, 168.546)), ('B', ' 657 ', 'ASN', 0.0, (188.379, 129.878, 177.80900000000003)), ('B', ' 935 ', 'GLN', 0.017400583348945026, (188.124, 165.064, 189.69100000000003)), ('B', ' 965 ', 'GLN', 0.1347209084105901, (174.10499999999993, 165.684, 148.679)), ('B', ' 986 ', 'LYS', 0.29593631215368776, (164.98999999999995, 174.692, 127.57400000000001)), ('B', '1034 ', 'LEU', 0.03911265116144831, (168.46599999999995, 173.066, 196.12000000000006)), ('B', '1071 ', 'GLN', 0.2773840234280441, (183.41699999999994, 147.70699999999994, 206.86500000000004)), ('C', '  42 ', 'VAL', 0.03406665553261643, (152.16299999999995, 123.59299999999998, 138.428)), ('C', '  44 ', 'ARG', 0.0009402273301033043, (151.91499999999994, 126.527, 144.903)), ('C', ' 200 ', 'TYR', 0.24864756823964304, (142.947, 128.977, 123.328)), ('C', ' 239 ', 'GLN', 0.12147006706943243, (124.37800000000006, 121.946, 123.181)), ('C', ' 328 ', 'ARG', 7.704714163258272e-05, (124.56200000000005, 171.126, 131.982)), ('C', ' 331 ', 'ASN', 0.08153719520619485, (121.41799999999998, 176.66, 125.73600000000002)), ('C', ' 351 ', 'TYR', 0.007580897264767306, (155.38099999999994, 185.391, 108.116)), ('C', ' 391 ', 'CYS', 0.2994249260179772, (133.627, 173.61399999999995, 127.05800000000002)), ('C', ' 602 ', 'THR', 0.008087669993983582, (134.41099999999994, 134.442, 167.819)), ('C', ' 603 ', 'ASN', 0.11614546730612742, (134.012, 131.545, 170.307)), ('C', ' 776 ', 'LYS', 0.27830051068000766, (172.738, 149.897, 176.185)), ('C', ' 935 ', 'GLN', 0.0, (152.13, 131.638, 188.88)), ('C', '1074 ', 'ASN', 0.0, (135.44599999999994, 154.286, 212.63600000000002))]
data['clusters'] = [('A', '108', 1, 'cablam Outlier', (151.1, 203.4, 120.3)), ('A', '110', 1, 'cablam Outlier', (146.9, 207.3, 118.6)), ('A', '111', 1, 'cablam CA Geom Outlier', (147.2, 208.8, 115.0)), ('A', '112', 1, 'Bond angle:C\ncablam CA Geom Outlier', (147.354, 206.54399999999998, 111.86999999999999)), ('A', '113', 1, 'Bond angle:N:CA', (149.596, 203.406, 111.23400000000001)), ('A', '114', 1, 'Dihedral angle:CA:C', (147.721, 201.197, 113.82199999999999)), ('A', '115', 1, 'Dihedral angle:N:CA', (144.32000000000002, 200.324, 115.23)), ('A', '133', 1, 'cablam Outlier', (142.0, 207.0, 113.8)), ('A', '134', 1, 'Dihedral angle:CA:C', (143.58100000000002, 210.202, 112.426)), ('A', '135', 1, 'Dihedral angle:N:CA\ncablam CA Geom Outlier\nsmoc Outlier', (140.503, 212.371, 113.12799999999999)), ('A', '1032', 2, 'Dihedral angle:CA:C', (151.095, 164.599, 194.407)), ('A', '1033', 2, 'Dihedral angle:N:CA', (147.282, 164.405, 194.156)), ('A', '1038', 2, 'Dihedral angle:CA:C', (159.11899999999997, 164.983, 199.271)), ('A', '1039', 2, 'Dihedral angle:N:CA', (160.592, 165.864, 195.88100000000003)), ('A', '1041', 2, 'Ramachandran', (159.90899999999993, 171.478, 192.473)), ('A', '1043', 2, 'cablam Outlier', (154.8, 170.2, 192.7)), ('A', '1045', 2, 'cablam Outlier', (158.1, 176.2, 194.2)), ('A', '1051', 2, 'smoc Outlier', (147.561, 169.21899999999997, 194.85600000000002)), ('A', '1064', 2, 'Bond angle:CB:CG:CD2', (149.681, 172.845, 193.88400000000001)), ('A', '1303', 3, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (147.994, 191.288, 169.05700000000002)), ('A', '310', 3, 'cablam Outlier', (154.1, 190.0, 170.1)), ('A', '600', 3, 'Ramachandran', (154.97599999999994, 194.184, 169.959)), ('A', '602', 3, 'Rotamer', (149.62399999999994, 195.098, 166.652)), ('A', '603', 3, 'Rotamer\nC-beta\nDihedral angle:CA:C\nBond angle:CA:CB:CG\nBond angle:C:CA:CB\ncablam Outlier\nsmoc Outlier', (146.88500000000002, 196.759, 168.796)), ('A', '604', 3, 'Dihedral angle:N:CA', (149.689, 198.08, 171.03)), ('A', '606', 3, 'smoc Outlier', (152.621, 199.14499999999998, 164.429)), ('A', '1091', 4, 'Dihedral angle:CA:C', (167.523, 165.816, 219.131)), ('A', '1092', 4, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\ncablam Outlier', (165.593, 167.45600000000002, 216.297)), ('A', '1105', 4, 'Dihedral angle:CA:C', (163.947, 175.493, 217.702)), ('A', '1106', 4, 'Dihedral angle:N:CA\nBond angle:OE1:CD:NE2', (162.42100000000002, 173.36, 214.964)), ('A', '1108', 4, 'smoc Outlier', (161.455, 175.453, 209.39700000000002)), ('A', '1109', 4, 'cablam Outlier', (159.6, 177.9, 211.8)), ('A', '293', 5, 'cablam CA Geom Outlier', (154.9, 197.9, 151.5)), ('A', '294', 5, 'Bond angle:CA:CB:CG', (156.813, 197.611, 154.784)), ('A', '297', 5, 'smoc Outlier', (152.95000000000002, 194.032, 155.814)), ('A', '298', 5, 'Dihedral angle:CB:CG:CD:OE1', (155.516, 191.35100000000003, 154.88600000000002)), ('A', '32', 5, 'cablam Outlier', (146.4, 205.6, 150.3)), ('A', '58', 5, 'Bond angle:CA:CB:CG', (149.65, 201.28, 148.57)), ('A', '187', 6, 'Dihedral angle:CA:C', (129.106, 213.536, 144.15800000000002)), ('A', '188', 6, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (130.758, 210.265, 143.142)), ('A', '189', 6, 'Dihedral angle:N:CA', (134.37800000000001, 209.21099999999998, 142.977)), ('A', '191', 6, 'Dihedral angle:CB:CG:CD:OE1', (137.506, 204.804, 140.09)), ('A', '207', 6, 'Bond angle:CB:CG:CD2', (131.377, 204.632, 141.02100000000002)), ('A', '97', 6, 'cablam Outlier\nsmoc Outlier', (130.2, 216.1, 140.2)), ('A', '1018', 7, 'smoc Outlier', (152.08100000000002, 164.26, 174.02700000000002)), ('A', '1019', 7, 'smoc Outlier', (152.796, 160.71499999999997, 175.409)), ('A', '1022', 7, 'smoc Outlier', (150.576, 162.364, 179.599)), ('A', '1026', 7, 'smoc Outlier', (149.86800000000002, 160.578, 185.323)), ('A', '780', 7, 'Dihedral angle:CB:CG:CD:OE1', (146.339, 156.85000000000002, 182.44299999999998)), ('A', '784', 7, 'Rotamer\nC-beta', (144.81, 155.70199999999994, 188.381)), ('A', '265', 8, 'side-chain clash', (144.593, 215.689, 131.153)), ('A', '66', 8, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (142.455, 219.75, 136.28)), ('A', '81', 8, 'Rotamer\nside-chain clash', (144.593, 215.689, 131.153)), ('A', '82', 8, 'Dihedral angle:CA:C', (147.941, 215.52200000000002, 128.406)), ('A', '83', 8, 'Dihedral angle:N:CA', (148.64299999999997, 212.377, 126.429)), ('A', '551', 9, 'smoc Outlier', (183.757, 187.82000000000002, 147.19)), ('A', '553', 9, 'Dihedral angle:CA:C', (190.318, 188.27299999999997, 148.08)), ('A', '554', 9, 'Dihedral angle:N:CA', (194.05100000000002, 187.833, 148.58700000000002)), ('A', '574', 9, 'smoc Outlier', (187.093, 178.054, 148.291)), ('A', '587', 9, 'smoc Outlier', (186.538, 182.829, 147.55100000000002)), ('A', '797', 10, 'cablam Outlier', (136.5, 171.2, 206.0)), ('A', '898', 10, 'smoc Outlier', (140.52800000000002, 168.001, 206.925)), ('A', '901', 10, 'smoc Outlier', (144.865, 165.761, 207.39200000000002)), ('A', '905', 10, 'smoc Outlier', (150.85000000000002, 167.309, 205.845)), ('A', '908', 10, 'smoc Outlier', (155.377, 165.67, 206.504)), ('A', '564', 11, 'smoc Outlier', (194.14399999999998, 175.39700000000002, 139.599)), ('A', '576', 11, 'smoc Outlier', (191.20999999999998, 179.77399999999997, 142.54)), ('A', '577', 11, 'smoc Outlier', (194.435, 180.54, 140.638)), ('A', '582', 11, 'smoc Outlier', (200.646, 184.068, 140.017)), ('A', '583', 11, 'Dihedral angle:CB:CG:CD:OE1', (197.809, 185.19299999999998, 142.39600000000002)), ('A', '1307', 12, 'Planar group:C2:C7:C8:N2:O7', (153.767, 185.732, 212.24299999999997)), ('A', '717', 12, 'Dihedral angle:CA:C', (155.8, 182.98000000000002, 208.83700000000002)), ('A', '718', 12, 'backbone clash\nDihedral angle:N:CA\nsmoc Outlier', (154.559, 180.647, 206.083)), ('A', '719', 12, 'backbone clash\nRamachandran\ncablam Outlier', (152.439, 182.41099999999994, 203.358)), ('A', '270', 13, 'smoc Outlier', (150.123, 199.251, 138.317)), ('A', '88', 13, 'cablam Outlier', (152.1, 198.0, 132.3)), ('A', '90', 13, 'Dihedral angle:CA:C', (146.671, 202.31, 134.72)), ('A', '91', 13, 'Dihedral angle:N:CA', (144.665, 203.095, 137.795)), ('A', '220', 14, 'cablam CA Geom Outlier', (138.5, 200.8, 150.7)), ('A', '221', 14, 'cablam Outlier', (136.4, 200.4, 147.5)), ('A', '222', 14, 'cablam Outlier', (137.1, 197.0, 145.7)), ('A', '224', 14, 'smoc Outlier', (134.43, 194.964, 140.10299999999998)), ('A', '318', 15, 'Bond angle:CA:CB:CG', (168.099, 188.38000000000002, 151.777)), ('A', '595', 15, 'smoc Outlier', (165.414, 188.687, 157.778)), ('A', '596', 15, 'smoc Outlier', (163.312, 188.707, 160.946)), ('A', '597', 15, 'smoc Outlier', (160.71899999999997, 191.292, 162.04)), ('A', '360', 16, 'Dihedral angle:CA:C', (195.18200000000002, 172.1, 118.189)), ('A', '361', 16, 'Dihedral angle:N:CA', (194.007, 175.73399999999998, 118.21700000000001)), ('A', '363', 16, 'Dihedral angle:CA:C', (189.38500000000002, 179.92800000000003, 116.05)), ('A', '364', 16, 'Dihedral angle:N:CA', (188.17299999999997, 183.48200000000003, 115.599)), ('A', '354', 17, 'Bond angle:CA:CB:CG', (193.83700000000002, 173.177, 97.736)), ('A', '355', 17, 'smoc Outlier', (192.664, 172.319, 101.329)), ('A', '356', 17, 'smoc Outlier', (194.278, 173.47299999999998, 104.636)), ('A', '357', 17, 'Dihedral angle:CD:NE:CZ:NH1', (193.833, 171.541, 107.956)), ('A', '403', 18, 'Dihedral angle:CD:NE:CZ:NH1', (185.592, 184.20499999999998, 87.415)), ('A', '437', 18, 'smoc Outlier', (188.389, 190.409, 93.422)), ('A', '508', 18, 'smoc Outlier', (188.037, 186.206, 92.295)), ('A', '933', 19, 'smoc Outlier', (141.166, 186.483, 195.393)), ('A', '935', 19, 'Rotamer\nDihedral angle:CA:C', (143.722, 182.925, 191.202)), ('A', '936', 19, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (140.23999999999998, 183.395, 189.668)), ('A', '825', 20, 'Dihedral angle:CA:C\nsmoc Outlier', (139.011, 180.79299999999998, 174.934)), ('A', '826', 20, 'Dihedral angle:N:CA', (140.972, 177.57, 174.37)), ('A', '942', 20, 'smoc Outlier', (143.469, 182.963, 178.818)), ('A', '387', 21, 'smoc Outlier', (180.12, 178.55, 113.918)), ('A', '389', 21, 'Bond angle:CA:CB:CG', (181.236, 179.512, 119.21700000000001)), ('A', '390', 21, 'smoc Outlier', (181.41899999999998, 175.761, 118.31700000000001)), ('A', '617', 22, 'backbone clash\nBond length:CA:CB', (175.834, 196.569, 159.065)), ('A', '619', 22, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (176.444, 194.42700000000002, 153.835)), ('A', '620', 22, 'backbone clash\nsmoc Outlier', (175.704, 196.929, 156.961)), ('A', '876', 23, 'smoc Outlier', (136.024, 161.95700000000002, 192.365)), ('A', '878', 23, 'C-beta', (139.53699999999995, 167.21299999999994, 194.18500000000003)), ('A', '880', 23, 'smoc Outlier', (138.478, 161.511, 197.731)), ('A', '486', 24, 'cablam CA Geom Outlier\nsmoc Outlier', (187.9, 162.3, 66.6)), ('A', '488', 24, 'Dihedral angle:CA:C', (188.037, 162.95100000000002, 71.959)), ('A', '489', 24, 'Dihedral angle:N:CA', (188.859, 166.123, 73.94500000000001)), ('A', '466', 25, 'Dihedral angle:CD:NE:CZ:NH1', (187.846, 166.171, 95.474)), ('A', '467', 25, 'smoc Outlier', (189.46200000000002, 165.342, 92.093)), ('A', '469', 25, 'smoc Outlier', (192.569, 164.24099999999999, 87.10799999999999)), ('A', '802', 26, 'smoc Outlier', (136.315, 174.251, 198.732)), ('A', '803', 26, 'cablam Outlier', (133.7, 175.6, 196.2)), ('A', '804', 26, 'Bond angle:OE1:CD:NE2', (135.502, 177.07399999999998, 193.157)), ('A', '1305', 27, 'Planar group:C2:C7:C8:N2:O7', (170.74399999999997, 205.138, 175.282)), ('A', '655', 27, 'Bond angle:CB:CG:CD2', (170.11499999999998, 200.30100000000002, 171.999)), ('A', '1302', 28, 'Planar group:C2:C7:C8:N2:O7', (129.12800000000001, 190.536, 158.023)), ('A', '281', 28, 'Dihedral angle:CB:CG:CD:OE1', (131.257, 186.789, 155.15200000000002)), ('A', '666', 29, 'cablam Outlier', (167.1, 188.2, 169.7)), ('A', '667', 29, 'cablam Outlier', (170.0, 185.9, 170.6)), ('A', '540', 30, 'smoc Outlier', (179.683, 186.752, 139.54)), ('A', '549', 30, 'cablam CA Geom Outlier', (179.5, 183.9, 142.7)), ('A', '338', 31, 'Bond angle:CA:CB:CG', (194.35100000000003, 181.36800000000002, 108.59)), ('A', '342', 31, 'smoc Outlier', (193.71399999999997, 183.966, 102.785)), ('A', '414', 32, 'Bond angle:OE1:CD:NE2', (174.11899999999997, 173.536, 92.929)), ('A', '415', 32, 'smoc Outlier', (174.578, 172.036, 89.4)), ('A', '427', 33, 'smoc Outlier', (171.569, 170.292, 99.386)), ('A', '428', 33, 'smoc Outlier', (172.038, 171.124, 103.141)), ('A', '369', 34, 'Dihedral angle:CA:C', (183.5, 188.759, 108.795)), ('A', '370', 34, 'Dihedral angle:N:CA', (184.596, 192.161, 110.224)), ('A', '707', 35, 'Dihedral angle:CA:C', (176.918, 183.844, 205.404)), ('A', '708', 35, 'Dihedral angle:N:CA', (179.112, 183.47299999999998, 208.512)), ('A', '1122', 36, 'Dihedral angle:CA:C', (174.89700000000002, 163.503, 224.553)), ('A', '1123', 36, 'Dihedral angle:N:CA', (177.969, 162.268, 222.7)), ('A', '518', 37, 'smoc Outlier', (183.33, 163.17499999999998, 115.403)), ('A', '519', 37, 'Bond angle:CB:CG:CD2', (182.995, 160.969, 118.52799999999999)), ('A', '1008', 38, 'smoc Outlier', (152.056, 161.105, 159.24299999999997)), ('A', '1012', 38, 'smoc Outlier', (154.06, 160.218, 165.008)), ('A', '332', 39, 'smoc Outlier', (195.34, 184.24899999999997, 123.787)), ('A', '333', 39, 'smoc Outlier', (197.58700000000002, 181.565, 122.184)), ('A', '61', 40, 'Dihedral angle:CA:C', (152.19, 208.77899999999997, 144.196)), ('A', '62', 40, 'Dihedral angle:N:CA', (149.295, 209.51399999999998, 141.79399999999998)), ('A', '1054', 41, 'Bond angle:OE1:CD:NE2', (141.093, 170.37800000000001, 187.284)), ('A', '819', 41, 'smoc Outlier', (136.99, 174.19899999999998, 185.10999999999999)), ('A', '227', 42, 'Dihedral angle:CA:C', (134.758, 193.83100000000002, 130.35600000000002)), ('A', '228', 42, 'Dihedral angle:N:CA', (137.686, 192.009, 128.768)), ('A', '557', 43, 'smoc Outlier', (197.348, 179.48800000000003, 150.524)), ('A', '559', 43, 'Bond angle:CA:CB:CG', (199.02100000000002, 175.945, 145.636)), ('A', '277', 44, 'smoc Outlier', (142.871, 189.972, 150.298)), ('A', '49', 44, 'Bond angle:CB:CG:CD2', (143.475, 184.786, 149.966)), ('A', '894', 45, 'Dihedral angle:CA:C', (139.55, 156.515, 205.343)), ('A', '895', 45, 'Dihedral angle:N:CA', (137.635, 159.656, 206.41299999999998)), ('A', '482', 46, 'smoc Outlier', (196.44899999999998, 159.45200000000003, 75.561)), ('A', '483', 46, 'smoc Outlier', (195.76899999999998, 162.30700000000002, 73.002)), ('B', '1031', 1, 'Bond angle:C\nsmoc Outlier', (165.75, 167.23299999999998, 192.947)), ('B', '1032', 1, 'C-beta\nBond angle:C\nBond angle:CA:CB:SG\nBond angle:C:CA:CB\nBond angle:N:CA\nDihedral angle:CA:C\nsmoc Outlier', (169.349, 167.893, 194.42200000000003)), ('B', '1033', 1, 'Ramachandran\nBond angle:N:CA\nDihedral angle:N:CA', (171.503, 171.24699999999999, 194.58800000000002)), ('B', '1034', 1, 'Rotamer\ncablam Outlier', (168.46599999999995, 173.066, 196.12000000000006)), ('B', '1036', 1, 'cablam Outlier', (168.7, 166.2, 198.9)), ('B', '1043', 1, 'cablam Outlier', (171.9, 161.3, 192.5)), ('B', '1048', 1, 'Bond angle:CB:CG:CD2\nBond angle:ND1:CG:CD2\nsmoc Outlier', (173.20499999999998, 161.004, 198.65200000000002)), ('B', '1050', 1, 'Dihedral angle:CA:C', (174.889, 167.137, 197.796)), ('B', '1051', 1, 'Dihedral angle:N:CA', (175.459, 168.07399999999998, 194.172)), ('B', '1054', 1, 'Bond angle:OE1:CD:NE2', (179.12800000000001, 172.834, 186.35000000000002)), ('B', '870', 1, 'smoc Outlier', (175.138, 180.025, 181.77299999999997)), ('B', '874', 1, 'smoc Outlier', (175.854, 177.76399999999998, 187.692)), ('B', '877', 1, 'smoc Outlier', (173.148, 177.82700000000003, 191.954)), ('B', '878', 1, 'C-beta\nsmoc Outlier', (177.44999999999993, 175.865, 193.314)), ('B', '881', 1, 'smoc Outlier', (173.646, 175.924, 197.742)), ('B', '324', 2, 'smoc Outlier', (177.305, 127.49900000000001, 138.32600000000002)), ('B', '326', 2, 'side-chain clash', (173.534, 122.186, 140.459)), ('B', '531', 2, 'Dihedral angle:CA:C', (171.39600000000002, 119.929, 132.88500000000002)), ('B', '532', 2, 'Dihedral angle:N:CA', (172.30100000000002, 117.43900000000001, 135.58800000000002)), ('B', '533', 2, 'smoc Outlier', (171.0, 118.51100000000001, 139.053)), ('B', '534', 2, 'side-chain clash\nsmoc Outlier', (173.534, 122.186, 140.459)), ('B', '539', 2, 'Dihedral angle:CA:C', (174.008, 128.023, 142.221)), ('B', '540', 2, 'Dihedral angle:N:CA', (171.82200000000003, 129.872, 139.777)), ('B', '549', 2, 'cablam CA Geom Outlier', (169.6, 131.7, 143.1)), ('B', '590', 2, 'smoc Outlier', (172.9, 132.55700000000002, 149.108)), ('B', '106', 3, 'Bond angle:CA:CB:CG\nsmoc Outlier', (202.49800000000002, 153.24099999999999, 122.357)), ('B', '108', 3, 'cablam Outlier', (197.4, 149.3, 118.9)), ('B', '110', 3, 'Ramachandran', (202.90699999999995, 150.20499999999996, 116.686)), ('B', '111', 3, 'cablam CA Geom Outlier', (204.1, 149.1, 113.2)), ('B', '112', 3, 'Bond angle:C\ncablam CA Geom Outlier', (201.939, 150.3, 110.18599999999999)), ('B', '113', 3, 'Bond angle:N:CA', (198.162, 149.653, 109.41400000000002)), ('B', '115', 3, 'smoc Outlier', (198.876, 155.70299999999997, 113.436)), ('B', '131', 3, 'Dihedral angle:CA:C', (202.67499999999998, 159.069, 112.551)), ('B', '132', 3, 'Dihedral angle:N:CA', (201.924, 155.75, 110.81)), ('B', '357', 4, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (150.183, 120.17799999999998, 109.651)), ('B', '394', 4, 'Dihedral angle:CA:C', (151.40800000000002, 126.085, 113.368)), ('B', '395', 4, 'Dihedral angle:N:CA', (154.15200000000002, 124.654, 111.17699999999999)), ('B', '515', 4, 'Bond angle:CA:CB:CG', (156.006, 128.64899999999997, 110.024)), ('B', '516', 4, 'Dihedral angle:CB:CG:CD:OE1', (153.26899999999998, 131.05200000000002, 111.251)), ('B', '517', 4, 'Dihedral angle:CA:C', (152.63, 133.154, 114.415)), ('B', '518', 4, 'Dihedral angle:N:CA', (149.16899999999998, 134.756, 114.56700000000001)), ('B', '519', 4, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (146.268, 135.90200000000002, 116.832)), ('B', '520', 4, 'smoc Outlier', (145.57899999999998, 132.14899999999997, 117.196)), ('B', '216', 5, 'smoc Outlier', (212.23399999999998, 149.81, 144.55100000000002)), ('B', '218', 5, 'cablam CA Geom Outlier', (210.0, 151.7, 150.8)), ('B', '220', 5, 'smoc Outlier', (205.43800000000002, 156.983, 149.546)), ('B', '221', 5, 'side-chain clash', (208.555, 156.725, 145.582)), ('B', '32', 5, 'cablam Outlier', (205.7, 148.8, 148.2)), ('B', '33', 5, 'cablam Outlier', (203.6, 152.1, 148.6)), ('B', '34', 5, 'side-chain clash\ncablam CA Geom Outlier', (208.555, 156.725, 145.582)), ('B', '58', 5, 'Bond angle:CA:CB:CG', (200.125, 148.363, 147.256)), ('B', '1070', 6, 'Dihedral angle:CA:C', (183.291, 150.966, 204.79299999999998)), ('B', '1071', 6, 'Rotamer\nDihedral angle:N:CA\nsmoc Outlier', (183.417, 147.707, 206.865)), ('B', '1072', 6, 'smoc Outlier', (182.26899999999998, 144.041, 206.489)), ('B', '1073', 6, 'Dihedral angle:CA:C\nsmoc Outlier', (182.89000000000001, 142.059, 209.76399999999998)), ('B', '1074', 6, 'Dihedral angle:N:CA', (179.895, 140.648, 211.61899999999997)), ('B', '1308', 6, 'Planar group:C2:C7:C8:N2:O7', (181.572, 134.71299999999997, 211.333)), ('B', '718', 6, 'smoc Outlier', (182.835, 155.82000000000002, 205.944)), ('B', '552', 7, 'smoc Outlier', (169.284, 123.389, 146.961)), ('B', '559', 7, 'Bond angle:CA:CB:CG', (153.623, 118.512, 148.136)), ('B', '563', 7, 'Bond angle:OE1:CD:NE2', (151.724, 121.221, 143.284)), ('B', '565', 7, 'Bond angle:CA:CB:CG\nsmoc Outlier', (156.383, 125.26, 144.38400000000001)), ('B', '575', 7, 'smoc Outlier', (160.92600000000002, 125.1, 147.756)), ('B', '586', 7, 'smoc Outlier', (164.236, 123.489, 149.756)), ('B', '587', 7, 'smoc Outlier', (165.71499999999997, 126.681, 148.32200000000003)), ('B', '197', 8, 'Ramachandran\nsmoc Outlier', (190.577, 157.0, 128.676)), ('B', '198', 8, 'cablam Outlier', (189.8, 158.2, 125.1)), ('B', '199', 8, 'cablam CA Geom Outlier', (189.8, 161.8, 126.7)), ('B', '200', 8, 'side-chain clash\ncablam Outlier', (194.094, 164.556, 123.251)), ('B', '230', 8, 'side-chain clash', (194.094, 164.556, 123.251)), ('B', '231', 8, 'smoc Outlier', (196.82600000000002, 162.314, 120.727)), ('B', '193', 9, 'smoc Outlier', (202.74899999999997, 156.911, 135.129)), ('B', '267', 9, 'smoc Outlier', (206.783, 147.77299999999997, 134.79299999999998)), ('B', '61', 9, 'Dihedral angle:CA:C', (204.52800000000002, 142.476, 142.177)), ('B', '62', 9, 'Dihedral angle:N:CA', (205.97899999999998, 144.76299999999998, 139.48700000000002)), ('B', '90', 9, 'Dihedral angle:CA:C', (201.23499999999999, 151.65800000000002, 133.20299999999997)), ('B', '91', 9, 'Dihedral angle:N:CA', (203.597, 152.58200000000002, 136.02100000000002)), ('B', '1307', 10, 'Planar group:C2:C7:C8:N2:O7', (190.74499999999998, 176.61399999999998, 202.064)), ('B', '797', 10, 'cablam Outlier', (183.0, 176.6, 205.1)), ('B', '799', 10, 'cablam Outlier', (187.4, 172.4, 206.2)), ('B', '923', 10, 'smoc Outlier', (185.172, 164.424, 206.23)), ('B', '925', 10, 'Bond angle:CA:CB:CG', (189.795, 166.298, 203.98800000000003)), ('B', '1082', 11, 'smoc Outlier', (163.31, 140.184, 227.053)), ('B', '1083', 11, 'Bond angle:CB:CG:CD2', (163.38000000000002, 141.97899999999998, 230.43200000000002)), ('B', '1087', 11, 'smoc Outlier', (159.70899999999997, 142.38700000000003, 224.941)), ('B', '1122', 11, 'Dihedral angle:CA:C', (157.94899999999998, 147.73899999999998, 224.89600000000002)), ('B', '1123', 11, 'Dihedral angle:N:CA\ncablam Outlier', (155.317, 145.678, 223.08100000000002)), ('B', '774', 12, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (167.601, 174.816, 172.61399999999998)), ('B', '777', 12, 'Bond angle:CA:CB:CG\nsmoc Outlier', (165.978, 173.35500000000002, 177.24899999999997)), ('B', '780', 12, 'Dihedral angle:CB:CG:CD:OE1', (164.595, 174.71699999999998, 182.14499999999998)), ('B', '781', 12, 'smoc Outlier', (168.008, 173.407, 183.354)), ('B', '784', 12, 'Bond angle:OE1:CD:NE2', (165.601, 177.849, 187.813)), ('B', '612', 13, 'side-chain clash', (183.177, 134.754, 159.538)), ('B', '617', 13, 'side-chain clash\nDihedral angle:CA:C', (182.912, 129.10399999999998, 158.657)), ('B', '618', 13, 'side-chain clash\nRamachandran\nDihedral angle:N:CA\ncablam Outlier', (183.251, 126.62299999999999, 155.76399999999998)), ('B', '619', 13, 'Dihedral angle:CB:CG:CD:OE1', (181.36700000000002, 129.283, 153.695)), ('B', '649', 13, 'side-chain clash', (183.177, 134.754, 159.538)), ('B', '310', 14, 'cablam CA Geom Outlier', (189.7, 150.5, 169.9)), ('B', '600', 14, 'Ramachandran\ncablam Outlier', (192.88699999999994, 147.359, 169.758)), ('B', '601', 14, 'cablam Outlier\nsmoc Outlier', (194.8, 150.7, 170.1)), ('B', '602', 14, 'Rotamer', (196.40299999999993, 151.706, 166.794)), ('B', '603', 14, 'Rotamer', (199.79599999999996, 152.24599999999998, 168.546)), ('B', '1304', 15, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (189.262, 124.05199999999999, 179.102)), ('B', '655', 15, 'Bond angle:CB:CG:CD2', (189.85200000000003, 131.52100000000002, 171.525)), ('B', '657', 15, 'Rotamer', (188.379, 129.878, 177.80900000000003)), ('B', '694', 15, 'smoc Outlier', (188.121, 136.106, 172.181)), ('B', '363', 16, 'Dihedral angle:CA:C\nsmoc Outlier', (160.4, 121.268, 117.853)), ('B', '364', 16, 'Dihedral angle:N:CA', (164.076, 120.389, 117.49400000000001)), ('B', '526', 16, 'smoc Outlier', (160.82500000000002, 125.16, 122.053)), ('B', '527', 16, 'smoc Outlier', (162.768, 122.088, 123.428)), ('B', '1092', 17, 'Dihedral angle:CB:CG:CD:OE1\ncablam Outlier', (165.73, 153.89000000000001, 216.18800000000002)), ('B', '1105', 17, 'Dihedral angle:CA:C', (173.52100000000002, 150.984, 217.533)), ('B', '1106', 17, 'Dihedral angle:N:CA', (172.304, 153.395, 214.90800000000002)), ('B', '1113', 17, 'Bond angle:OE1:CD:NE2', (174.94899999999998, 152.38100000000003, 223.305)), ('B', '121', 18, 'Bond angle:OD1:CG:ND2', (214.025, 162.653, 124.45)), ('B', '122', 18, 'smoc Outlier', (216.796, 163.97899999999998, 122.147)), ('B', '123', 18, 'cablam Outlier', (219.4, 165.8, 124.3)), ('B', '124', 18, 'smoc Outlier', (217.71099999999998, 169.037, 125.648)), ('B', '403', 19, 'Rotamer\nDihedral angle:CD:NE:CZ:NH1', (163.409, 118.768, 88.881)), ('B', '503', 19, 'smoc Outlier', (170.814, 115.82499999999999, 87.398)), ('B', '505', 19, 'smoc Outlier', (166.22899999999998, 117.024, 84.99600000000001)), ('B', '400', 20, 'Rotamer\nBond angle:CA:CB:CG', (156.414, 118.38199999999999, 96.334)), ('B', '510', 20, 'smoc Outlier', (161.49800000000002, 119.076, 98.39)), ('B', '511', 20, 'smoc Outlier', (159.83700000000002, 120.351, 101.612)), ('B', '372', 21, 'smoc Outlier', (172.925, 112.79, 106.60799999999999)), ('B', '373', 21, 'smoc Outlier', (169.453, 112.036, 105.02799999999999)), ('B', '375', 21, 'smoc Outlier', (171.05200000000002, 116.44400000000002, 99.837)), ('B', '985', 22, 'smoc Outlier', (167.38600000000002, 172.841, 125.208)), ('B', '986', 22, 'Rotamer', (164.98999999999995, 174.692, 127.57400000000001)), ('B', '988', 22, 'Dihedral angle:CB:CG:CD:OE1', (164.585, 169.197, 128.297)), ('B', '789', 23, 'Ramachandran', (173.37199999999996, 184.699, 194.73)), ('B', '790', 23, 'cablam Outlier', (176.8, 186.2, 193.7)), ('B', '791', 23, 'cablam Outlier', (179.6, 184.2, 195.4)), ('B', '380', 24, 'side-chain clash', (163.158, 127.73, 101.426)), ('B', '432', 24, 'smoc Outlier', (163.258, 125.573, 107.003)), ('B', '433', 24, 'side-chain clash', (163.158, 127.73, 101.426)), ('B', '661', 25, 'Dihedral angle:CB:CG:CD:OE1', (185.09, 141.788, 181.632)), ('B', '699', 25, 'smoc Outlier', (179.502, 139.442, 184.57399999999998)), ('B', '40', 26, 'Bond angle:CA:CB:CG', (193.268, 166.002, 140.04899999999998)), ('B', '41', 26, 'cablam Outlier', (194.6, 169.6, 139.8)), ('B', '139', 27, 'cablam CA Geom Outlier', (217.9, 151.0, 116.8)), ('B', '143', 27, 'smoc Outlier', (214.607, 154.537, 113.415)), ('B', '210', 28, 'Dihedral angle:CA:C\nsmoc Outlier', (218.315, 156.676, 146.52100000000002)), ('B', '211', 28, 'Dihedral angle:N:CA', (220.96, 154.272, 147.859)), ('B', '930', 29, 'smoc Outlier', (187.656, 163.54899999999998, 196.031)), ('B', '935', 29, 'Rotamer\nBond angle:OE1:CD:NE2', (188.124, 165.064, 189.691)), ('B', '767', 30, 'smoc Outlier', (163.736, 173.57899999999998, 161.917)), ('B', '770', 30, 'smoc Outlier', (163.76299999999998, 172.70999999999998, 166.945)), ('B', '263', 31, 'smoc Outlier', (220.224, 150.657, 134.47)), ('B', '66', 31, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (217.797, 145.30200000000002, 133.339)), ('B', '319', 32, 'Rotamer', (178.024, 137.442, 149.766)), ('B', '321', 32, 'Bond angle:OE1:CD:NE2', (178.311, 134.151, 144.804)), ('B', '702', 33, 'Dihedral angle:CB:CG:CD:OE1', (180.923, 135.87800000000001, 192.621)), ('B', '703', 33, 'smoc Outlier', (179.929, 136.684, 196.238)), ('B', '582', 34, 'cablam Outlier', (159.4, 113.5, 142.3)), ('B', '583', 34, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (161.98100000000002, 115.02, 144.697)), ('B', '445', 35, 'smoc Outlier', (161.444, 104.082, 81.965)), ('B', '446', 35, 'smoc Outlier', (160.15, 106.17699999999999, 79.006)), ('B', '744', 36, 'Ramachandran', (170.773, 178.721, 144.331)), ('B', '745', 36, 'cablam Outlier', (170.5, 181.7, 141.9)), ('B', '856', 37, 'cablam CA Geom Outlier', (174.7, 176.5, 150.8)), ('B', '858', 37, 'smoc Outlier', (172.433, 176.476, 155.561)), ('B', '962', 38, 'smoc Outlier', (173.336, 167.5, 153.73999999999998)), ('B', '965', 38, 'Rotamer', (174.10499999999993, 165.684, 148.679)), ('B', '1039', 39, 'smoc Outlier', (165.58, 158.317, 195.23299999999998)), ('B', '1040', 39, 'smoc Outlier', (168.117, 155.44899999999998, 195.064)), ('B', '486', 40, 'cablam CA Geom Outlier', (144.2, 127.9, 69.6)), ('B', '487', 40, 'C-beta', (145.374, 131.377, 72.27200000000002)), ('C', '272', 1, 'smoc Outlier', (135.728, 137.941, 136.231)), ('C', '274', 1, 'Dihedral angle:CA:C\ncablam Outlier', (138.55, 138.29, 141.92800000000003)), ('C', '275', 1, 'Dihedral angle:N:CA\ncablam Outlier', (137.86800000000002, 136.401, 145.19)), ('C', '277', 1, 'smoc Outlier', (140.65200000000002, 130.945, 147.74299999999997)), ('C', '279', 1, 'Bond angle:C', (145.507, 127.18799999999999, 149.813)), ('C', '280', 1, 'Ramachandran\nBond angle:N:CA', (145.60899999999998, 125.516, 153.28)), ('C', '287', 1, 'Bond angle:CA:CB:CG', (136.71099999999998, 125.549, 148.959)), ('C', '288', 1, 'smoc Outlier', (136.01899999999998, 129.35800000000003, 148.89800000000002)), ('C', '36', 1, 'smoc Outlier', (136.189, 126.106, 140.212)), ('C', '37', 1, 'Dihedral angle:CA:C\nsmoc Outlier', (139.21599999999998, 124.933, 138.135)), ('C', '38', 1, 'Dihedral angle:N:CA', (142.63299999999998, 123.71900000000001, 139.24499999999998)), ('C', '39', 1, 'smoc Outlier', (144.295, 126.76, 137.507)), ('C', '41', 1, 'Dihedral angle:CA:C', (149.285, 121.52, 136.967)), ('C', '42', 1, 'Rotamer\nDihedral angle:CA:C\nDihedral angle:N:CA', (152.16299999999998, 123.593, 138.42800000000003)), ('C', '43', 1, 'Dihedral angle:N:CA\ncablam Outlier', (150.642, 125.109, 141.55700000000002)), ('C', '44', 1, 'Rotamer', (151.91499999999994, 126.527, 144.903)), ('C', '46', 1, 'Ramachandran', (150.481, 126.493, 151.344)), ('C', '49', 1, 'Bond angle:CB:CG:CD2', (145.785, 134.287, 147.165)), ('C', '52', 1, 'smoc Outlier', (140.359, 136.52800000000002, 138.447)), ('C', '53', 1, 'cablam CA Geom Outlier', (140.6, 134.5, 135.1)), ('C', '54', 1, 'cablam Outlier\nsmoc Outlier', (136.8, 134.1, 134.6)), ('C', '55', 1, 'Bond angle:CA:CB:CG', (135.77499999999998, 132.75, 138.05)), ('C', '536', 2, 'cablam Outlier', (119.2, 167.2, 147.3)), ('C', '537', 2, 'Dihedral angle:CA:C', (120.083, 163.64, 145.975)), ('C', '538', 2, 'Dihedral angle:N:CA', (123.691, 162.46800000000002, 145.684)), ('C', '539', 2, 'Dihedral angle:CA:C', (124.43700000000001, 162.864, 141.91899999999998)), ('C', '540', 2, 'Dihedral angle:N:CA', (127.161, 162.76399999999998, 139.334)), ('C', '549', 2, 'cablam CA Geom Outlier', (130.1, 164.0, 142.3)), ('C', '550', 2, 'Dihedral angle:CA:C', (128.05, 165.472, 145.2)), ('C', '551', 2, 'Dihedral angle:N:CA', (124.811, 166.495, 146.89100000000002)), ('C', '553', 2, 'Dihedral angle:CA:C', (121.276, 172.262, 146.455)), ('C', '554', 2, 'Dihedral angle:N:CA', (120.38799999999999, 175.969, 146.35500000000002)), ('C', '576', 2, 'Dihedral angle:CA:C', (128.17399999999998, 177.078, 140.842)), ('C', '577', 2, 'Dihedral angle:N:CA', (125.76700000000001, 179.201, 138.79399999999998)), ('C', '583', 2, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (120.62799999999999, 180.647, 140.67299999999997)), ('C', '585', 2, 'smoc Outlier', (123.96000000000001, 175.96200000000002, 143.843)), ('C', '590', 2, 'smoc Outlier', (128.546, 162.526, 148.945)), ('C', '100', 3, 'Dihedral angle:CA:C', (122.851, 108.581, 127.46400000000001)), ('C', '101', 3, 'Dihedral angle:N:CA', (124.49400000000001, 112.013, 127.35)), ('C', '103', 3, 'smoc Outlier', (128.69899999999998, 114.536, 125.251)), ('C', '104', 3, 'Dihedral angle:CA:C', (128.38100000000003, 118.05499999999999, 123.73)), ('C', '105', 3, 'Dihedral angle:N:CA', (128.819, 120.209, 120.63499999999999)), ('C', '214', 3, 'Ramachandran', (117.06099999999998, 116.377, 140.969)), ('C', '239', 3, 'Rotamer\nsmoc Outlier', (124.37800000000006, 121.946, 123.181)), ('C', '263', 3, 'smoc Outlier', (120.633, 111.004, 132.629)), ('C', '264', 3, 'side-chain clash\nsmoc Outlier', (118.409, 116.464, 135.903)), ('C', '64', 3, 'side-chain clash', (118.409, 116.464, 135.903)), ('C', '66', 3, 'Bond angle:CB:CG:CD2', (115.61, 115.953, 133.001)), ('C', '83', 3, 'smoc Outlier', (120.745, 125.131, 121.54100000000001)), ('C', '95', 3, 'Dihedral angle:CA:C', (124.286, 112.274, 137.131)), ('C', '96', 3, 'Dihedral angle:N:CA', (125.58, 110.069, 134.333)), ('C', '309', 4, 'Dihedral angle:CB:CG:CD:OE1', (139.23899999999998, 138.39000000000001, 169.48200000000003)), ('C', '310', 4, 'cablam Outlier', (136.9, 140.8, 171.4)), ('C', '595', 4, 'smoc Outlier', (132.983, 151.165, 158.79)), ('C', '597', 4, 'smoc Outlier', (132.689, 145.85100000000003, 163.067)), ('C', '599', 4, 'Bond angle:CA:C', (132.65800000000002, 141.608, 167.83200000000002)), ('C', '600', 4, 'Ramachandran\nBond angle:N\ncablam Outlier', (132.759, 139.64299999999997, 171.194)), ('C', '602', 4, 'Rotamer', (134.41099999999994, 134.442, 167.819)), ('C', '603', 4, 'Rotamer', (134.012, 131.545, 170.307)), ('C', '1036', 5, 'cablam Outlier', (162.3, 151.3, 199.0)), ('C', '1037', 5, 'smoc Outlier', (160.411, 154.007, 197.009)), ('C', '1041', 5, 'smoc Outlier', (151.91899999999998, 154.21299999999997, 192.917)), ('C', '1043', 5, 'cablam Outlier', (155.7, 150.3, 192.7)), ('C', '1048', 5, 'Bond angle:CB:CG:CD2', (155.76999999999998, 149.797, 198.88500000000002)), ('C', '1049', 5, 'smoc Outlier', (157.722, 147.164, 200.853)), ('C', '1064', 5, 'Bond angle:CB:CG:CD2', (156.08100000000002, 144.568, 193.61299999999997)), ('C', '905', 5, 'smoc Outlier', (160.505, 147.91, 205.32200000000003)), ('C', '328', 6, 'Rotamer', (124.56200000000005, 171.126, 131.982)), ('C', '391', 6, 'Rotamer', (133.627, 173.61399999999995, 127.05800000000002)), ('C', '529', 6, 'smoc Outlier', (122.63199999999999, 167.196, 125.63)), ('C', '531', 6, 'Dihedral angle:CA:C', (119.52499999999999, 167.07, 131.58100000000002)), ('C', '532', 6, 'Dihedral angle:N:CA', (117.01100000000001, 168.25, 134.17399999999998)), ('C', '544', 6, 'smoc Outlier', (130.42800000000003, 173.206, 131.346)), ('C', '546', 6, 'smoc Outlier', (133.21899999999997, 170.605, 135.57899999999998)), ('C', '198', 7, 'C-beta\nBond angle:CA:CB:CG\ncablam Outlier', (139.654, 133.692, 121.579)), ('C', '199', 7, 'Dihedral angle:CA:C', (141.342, 130.503, 120.198)), ('C', '200', 7, 'Rotamer\nDihedral angle:N:CA', (142.947, 128.977, 123.32799999999999)), ('C', '229', 7, 'Dihedral angle:CA:C', (145.038, 123.642, 124.33)), ('C', '230', 7, 'Dihedral angle:N:CA', (146.042, 126.22, 121.699)), ('C', '231', 7, 'cablam Outlier\nsmoc Outlier', (143.4, 125.6, 118.9)), ('C', '232', 7, 'smoc Outlier', (142.692, 128.824, 116.892)), ('C', '1014', 8, 'smoc Outlier', (159.79399999999998, 152.984, 167.698)), ('C', '1017', 8, 'Dihedral angle:CB:CG:CD:OE1', (159.567, 154.546, 172.72)), ('C', '1019', 8, 'Dihedral angle:CD:NE:CZ:NH1', (164.348, 153.677, 175.172)), ('C', '1021', 8, 'smoc Outlier', (160.577, 152.089, 178.52800000000002)), ('C', '1022', 8, 'smoc Outlier', (164.184, 150.966, 179.253)), ('C', '1025', 8, 'smoc Outlier', (162.712, 149.948, 183.846)), ('C', '762', 9, 'Bond angle:OE1:CD:NE2', (172.912, 157.16, 156.066)), ('C', '763', 9, 'smoc Outlier', (170.19, 154.409, 156.42000000000002)), ('C', '767', 9, 'smoc Outlier', (169.978, 151.117, 161.895)), ('C', '770', 9, 'smoc Outlier', (169.345, 151.501, 166.845)), ('C', '771', 9, 'smoc Outlier', (171.155, 148.135, 167.165)), ('C', '1094', 10, 'smoc Outlier', (146.647, 160.178, 216.34)), ('C', '1105', 10, 'Dihedral angle:CA:C', (147.38000000000002, 154.92800000000003, 218.031)), ('C', '1106', 10, 'Dihedral angle:N:CA', (149.917, 154.722, 215.248)), ('C', '1109', 10, 'cablam Outlier', (147.4, 150.2, 211.9)), ('C', '911', 10, 'smoc Outlier', (154.095, 151.01299999999998, 210.655)), ('C', '267', 11, 'smoc Outlier', (123.681, 125.01400000000001, 132.811)), ('C', '268', 11, 'smoc Outlier', (125.361, 128.277, 134.118)), ('C', '90', 11, 'Dihedral angle:CA:C', (130.07299999999998, 127.405, 131.11499999999998)), ('C', '91', 11, 'Dihedral angle:N:CA', (129.611, 125.283, 134.262)), ('C', '92', 11, 'Bond angle:CA:CB:CG', (127.768, 121.959, 133.696)), ('C', '218', 12, 'cablam CA Geom Outlier', (125.0, 122.2, 148.5)), ('C', '31', 12, 'smoc Outlier', (124.24100000000001, 126.032, 142.47899999999998)), ('C', '32', 12, 'Ramachandran\ncablam Outlier', (125.76700000000005, 127.57599999999996, 145.711)), ('C', '58', 12, 'Bond angle:CA:CB:CG', (127.933, 131.69, 143.319)), ('C', '445', 13, 'smoc Outlier', (152.756, 176.435, 86.93400000000001)), ('C', '496', 13, 'cablam Outlier', (157.7, 179.4, 94.8)), ('C', '498', 13, 'Bond angle:OE1:CD:NE2', (155.70999999999998, 174.131, 91.86)), ('C', '501', 13, 'smoc Outlier', (157.72, 168.648, 93.137)), ('C', '718', 14, 'Dihedral angle:CA:C', (146.47899999999998, 144.339, 206.538)), ('C', '719', 14, 'Dihedral angle:N:CA', (147.038, 142.255, 203.41299999999998)), ('C', '926', 14, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (150.21099999999998, 136.20899999999997, 202.965)), ('C', '930', 14, 'smoc Outlier', (150.404, 136.031, 196.955)), ('C', '122', 15, 'Bond angle:C', (133.636, 106.774, 125.66)), ('C', '123', 15, 'Bond angle:N:CA', (133.71699999999998, 106.101, 129.49800000000002)), ('C', '125', 15, 'Dihedral angle:CA:C', (138.283, 108.356, 127.43400000000001)), ('C', '126', 15, 'Dihedral angle:N:CA', (136.978, 111.835, 126.54700000000001)), ('C', '291', 16, 'Dihedral angle:CA:C', (134.81, 139.258, 152.62)), ('C', '292', 16, 'Dihedral angle:N:CA', (131.518, 140.035, 150.88700000000003)), ('C', '294', 16, 'Bond angle:CA:CB:CG', (128.85600000000002, 139.39100000000002, 155.90800000000002)), ('C', '297', 16, 'smoc Outlier', (133.792, 137.569, 157.08)), ('C', '111', 17, 'Bond angle:C\nBond angle:CA:CB:CG', (127.17599999999999, 122.268, 112.106)), ('C', '112', 17, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (128.863, 121.509, 108.70400000000001)), ('C', '113', 17, 'smoc Outlier', (129.08700000000002, 125.193, 107.503)), ('C', '114', 17, 'cablam CA Geom Outlier\nsmoc Outlier', (132.4, 125.5, 109.6)), ('C', '1072', 18, 'Dihedral angle:CB:CG:CD:OE1', (138.99200000000002, 149.572, 209.18800000000002)), ('C', '1074', 18, 'Rotamer', (135.44599999999994, 154.286, 212.63600000000002)), ('C', '1308', 18, 'Planar group:C2:C7:C8:N2:O7', (130.721, 156.178, 210.30100000000002)), ('C', '338', 19, 'smoc Outlier', (133.70399999999998, 174.629, 110.16499999999999)), ('C', '342', 19, 'Dihedral angle:CA:C\nsmoc Outlier', (137.88400000000001, 173.187, 105.253)), ('C', '343', 19, 'Dihedral angle:N:CA\nsmoc Outlier', (136.632, 175.54899999999998, 102.524)), ('C', '423', 20, 'smoc Outlier', (155.01399999999998, 181.58700000000002, 114.256)), ('C', '464', 20, 'Bond angle:CA:CB:CG\nsmoc Outlier', (151.941, 184.737, 119.32499999999999)), ('C', '466', 20, 'Dihedral angle:CD:NE:CZ:NH1', (153.039, 189.18200000000002, 114.99100000000001)), ('C', '1088', 21, 'Bond angle:CB:CG:CD2', (148.89700000000002, 167.995, 224.39100000000002)), ('C', '1122', 21, 'Dihedral angle:CA:C', (152.71599999999998, 170.15, 225.13)), ('C', '1123', 21, 'Dihedral angle:N:CA\ncablam Outlier', (152.27299999999997, 173.403, 223.198)), ('C', '382', 22, 'smoc Outlier', (143.766, 167.632, 125.49000000000001)), ('C', '430', 22, 'Dihedral angle:CA:C', (146.547, 173.925, 125.02799999999999)), ('C', '431', 22, 'Dihedral angle:N:CA', (145.16899999999998, 173.288, 121.585)), ('C', '568', 23, 'Dihedral angle:CA:C', (137.565, 176.359, 148.70299999999997)), ('C', '569', 23, 'Dihedral angle:N:CA', (141.20999999999998, 175.945, 149.708)), ('C', '571', 23, 'smoc Outlier', (141.075, 173.953, 144.64299999999997)), ('C', '615', 24, 'smoc Outlier', (127.338, 159.071, 159.417)), ('C', '617', 24, 'Bond angle:CA:CB:SG', (121.29, 156.864, 159.71299999999997)), ('C', '619', 24, 'Dihedral angle:CB:CG:CD:OE1', (122.47, 158.042, 154.724)), ('C', '666', 25, 'cablam Outlier\nsmoc Outlier', (132.6, 152.9, 170.6)), ('C', '667', 25, 'cablam Outlier', (133.4, 156.5, 171.5)), ('C', '136', 26, 'Ramachandran', (120.34099999999994, 114.65499999999997, 112.164)), ('C', '137', 26, 'smoc Outlier', (117.229, 116.96900000000001, 112.289)), ('C', '691', 27, 'Dihedral angle:CA:C', (122.621, 140.101, 171.653)), ('C', '692', 27, 'Dihedral angle:N:CA', (125.335, 142.71299999999997, 171.189)), ('C', '347', 28, 'Bond angle:CA:CB:CG\nsmoc Outlier', (145.31, 181.35700000000003, 104.056)), ('C', '401', 28, 'smoc Outlier', (150.47, 178.089, 104.381)), ('C', '403', 29, 'Dihedral angle:CD:NE:CZ:NH1', (155.877, 173.629, 102.69)), ('C', '404', 29, 'smoc Outlier', (155.11399999999998, 170.06, 103.93700000000001)), ('C', '993', 30, 'smoc Outlier', (164.772, 150.472, 136.876)), ('C', '996', 30, 'smoc Outlier', (162.092, 150.467, 141.187)), ('C', '414', 31, 'Bond angle:OE1:CD:NE2', (160.35600000000002, 174.065, 118.992)), ('C', '415', 31, 'smoc Outlier', (163.206, 176.061, 117.34700000000001)), ('C', '1083', 32, 'C-beta\nBond angle:CA:CB:CG', (144.256, 168.44299999999998, 231.177)), ('C', '1084', 32, 'cablam Outlier', (146.1, 171.0, 233.4)), ('C', '776', 33, 'Rotamer', (172.738, 149.897, 176.185)), ('C', '780', 33, 'Dihedral angle:CB:CG:CD:OE1', (171.258, 149.959, 181.991)), ('C', '796', 34, 'Bond angle:CA:CB:CG', (166.27599999999998, 130.463, 206.69)), ('C', '797', 34, 'cablam Outlier', (164.4, 133.6, 205.5)), ('C', '518', 35, 'Dihedral angle:CA:C', (140.15800000000002, 181.52100000000002, 131.329)), ('C', '519', 35, 'Dihedral angle:N:CA', (137.556, 181.698, 134.14499999999998)), ('C', '641', 36, 'smoc Outlier', (118.13799999999999, 147.416, 165.44299999999998)), ('C', '643', 36, 'Bond angle:CA:CB:CG', (120.755, 153.668, 166.91299999999998)), ('C', '888', 37, 'smoc Outlier', (174.086, 146.38400000000001, 198.172)), ('C', '890', 37, 'cablam Outlier', (174.7, 152.0, 198.2)), ('C', '203', 38, 'smoc Outlier', (137.997, 122.164, 129.91299999999998)), ('C', '205', 38, 'smoc Outlier', (136.46800000000002, 117.82, 135.098)), ('C', '351', 39, 'Rotamer', (155.38099999999994, 185.391, 108.116)), ('C', '353', 39, 'cablam Outlier', (149.7, 184.4, 109.9))]
data['rama'] = [('A', ' 600 ', 'PRO', 0.0893263227931407, (154.97599999999994, 194.184, 169.959)), ('A', ' 719 ', 'THR', 0.005751672056963807, (152.439, 182.41099999999994, 203.358)), ('A', '1041 ', 'ASP', 0.025850703831649845, (159.90899999999993, 171.478, 192.473)), ('B', ' 110 ', 'LEU', 0.03606666668024943, (202.90699999999995, 150.20499999999996, 116.686)), ('B', ' 197 ', 'ILE', 0.04039441389932032, (190.577, 157.0, 128.676)), ('B', ' 600 ', 'PRO', 0.02289296800838517, (192.88699999999994, 147.359, 169.758)), ('B', ' 618 ', 'THR', 0.008081486450930259, (183.25099999999995, 126.623, 155.764)), ('B', ' 744 ', 'GLY', 0.031060397182706652, (170.773, 178.721, 144.331)), ('B', ' 789 ', 'TYR', 0.02456257260867161, (173.37199999999996, 184.699, 194.73)), ('B', '1033 ', 'VAL', 0.0, (171.50299999999993, 171.24699999999996, 194.58800000000005)), ('C', '  32 ', 'PHE', 0.03925294843459168, (125.76700000000005, 127.57599999999996, 145.711)), ('C', '  46 ', 'SER', 0.012327418920037102, (150.481, 126.493, 151.344)), ('C', ' 112 ', 'SER', 0.0059486075334230755, (128.863, 121.509, 108.704)), ('C', ' 136 ', 'CYS', 0.04310754010799718, (120.34099999999994, 114.65499999999997, 112.164)), ('C', ' 214 ', 'ARG', 0.013398870596358678, (117.06099999999998, 116.377, 140.969)), ('C', ' 280 ', 'ASN', 0.019329875417525347, (145.60899999999995, 125.51599999999998, 153.28)), ('C', ' 600 ', 'PRO', 0.026612854173923107, (132.75899999999993, 139.643, 171.194)), ('C', ' 986 ', 'LYS', 0.027513980953219105, (169.808, 150.036, 128.068))]
data['cablam'] = [('A', '32', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (146.4, 205.6, 150.3)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (135.8, 185.6, 138.5)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (152.1, 198.0, 132.3)), ('A', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\nEETS-', (130.2, 216.1, 140.2)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (151.1, 203.4, 120.3)), ('A', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (146.9, 207.3, 118.6)), ('A', '133', 'PHE', ' beta sheet', ' \n----S', (142.0, 207.0, 113.8)), ('A', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTSS', (147.6, 188.4, 130.4)), ('A', '221', 'SER', 'check CA trace,carbonyls, peptide', ' \nS---B', (136.4, 200.4, 147.5)), ('A', '222', 'ALA', ' beta sheet', ' \n---BE', (137.1, 197.0, 145.7)), ('A', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (154.1, 190.0, 170.1)), ('A', '603', 'ASN', ' alpha helix', 'turn\n-TTT-', (146.9, 196.8, 168.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (167.1, 188.2, 169.7)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (170.0, 185.9, 170.6)), ('A', '719', 'THR', ' beta sheet', ' \nB---E', (152.4, 182.4, 203.4)), ('A', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-H', (136.3, 159.2, 143.9)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (136.5, 171.2, 206.0)), ('A', '803', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SS', (133.7, 175.6, 196.2)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (154.8, 170.2, 192.7)), ('A', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (158.1, 176.2, 194.2)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (165.6, 167.5, 216.3)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (159.6, 177.9, 211.8)), ('A', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (147.2, 208.8, 115.0)), ('A', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (147.4, 206.5, 111.9)), ('A', '135', 'PHE', 'check CA trace', 'bend\n--S-S', (140.5, 212.4, 113.1)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (138.5, 200.8, 150.7)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (154.9, 197.9, 151.5)), ('A', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (187.9, 162.3, 66.6)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (179.5, 183.9, 142.7)), ('A', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (139.0, 165.5, 151.4)), ('A', '936', 'ASP', 'check CA trace', 'helix-3\nTTGGG', (140.2, 183.4, 189.7)), ('B', '32', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (205.7, 148.8, 148.2)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'turn\n-TT--', (203.6, 152.1, 148.6)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (194.6, 169.6, 139.8)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (194.4, 149.8, 131.8)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (222.5, 157.7, 136.9)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (197.4, 149.3, 118.9)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (219.4, 165.8, 124.3)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (189.8, 158.2, 125.1)), ('B', '200', 'TYR', 'check CA trace,carbonyls, peptide', ' \nSS-EE', (193.6, 162.3, 125.9)), ('B', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nS-SS-', (218.7, 147.4, 141.9)), ('B', '582', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTSS-E', (159.4, 113.5, 142.3)), ('B', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (192.9, 147.4, 169.8)), ('B', '601', 'GLY', 'check CA trace,carbonyls, peptide', ' \nE--TT', (194.8, 150.7, 170.1)), ('B', '618', 'THR', 'check CA trace,carbonyls, peptide', 'turn\n-TT--', (183.3, 126.6, 155.8)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (181.3, 140.7, 169.6)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-H', (170.5, 181.7, 141.9)), ('B', '790', 'LYS', 'check CA trace,carbonyls, peptide', ' \nB----', (176.8, 186.2, 193.7)), ('B', '791', 'THR', 'check CA trace,carbonyls, peptide', ' \n----S', (179.6, 184.2, 195.4)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (183.0, 176.6, 205.1)), ('B', '799', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nSTT--', (187.4, 172.4, 206.2)), ('B', '1034', 'LEU', ' alpha helix', 'bend\nTTSS-', (168.5, 173.1, 196.1)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (168.7, 166.2, 198.9)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (171.9, 161.3, 192.5)), ('B', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (175.9, 155.6, 193.8)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (165.7, 153.9, 216.2)), ('B', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (155.3, 145.7, 223.1)), ('B', '34', 'ARG', 'check CA trace', ' \nTT--E', (204.8, 154.0, 145.5)), ('B', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (204.1, 149.1, 113.2)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (201.9, 150.3, 110.2)), ('B', '139', 'PRO', 'check CA trace', 'bend\nSSSTT', (217.9, 151.0, 116.8)), ('B', '199', 'GLY', 'check CA trace', 'bend\nSSS-E', (189.8, 161.8, 126.7)), ('B', '218', 'GLN', 'check CA trace', 'bend\n--SS-', (210.0, 151.7, 150.8)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (189.7, 150.5, 169.9)), ('B', '484', 'GLU', 'check CA trace', ' \nTS-BT', (141.9, 123.0, 74.5)), ('B', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (144.2, 127.9, 69.6)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (169.6, 131.7, 143.1)), ('B', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (174.7, 176.5, 150.8)), ('C', '32', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (125.8, 127.6, 145.7)), ('C', '43', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\nSSEEE', (150.6, 125.1, 141.6)), ('C', '54', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n-SSB-', (136.8, 134.1, 134.6)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (132.2, 133.8, 128.8)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (130.0, 129.0, 116.1)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nSSTTS', (128.9, 121.5, 108.7)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (139.7, 133.7, 121.6)), ('C', '231', 'ILE', ' beta sheet', ' \nEE---', (143.4, 125.6, 118.9)), ('C', '274', 'THR', ' beta sheet', ' \n----B', (138.6, 138.3, 141.9)), ('C', '275', 'PHE', ' beta sheet', ' \n---B-', (137.9, 136.4, 145.2)), ('C', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (136.9, 140.8, 171.4)), ('C', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (149.7, 184.4, 109.9)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (157.7, 179.4, 94.8)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (119.2, 167.2, 147.3)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (132.8, 139.6, 171.2)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (132.6, 152.9, 170.6)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (133.4, 156.5, 171.5)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (164.4, 133.6, 205.5)), ('C', '890', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nGGSSS', (174.7, 152.0, 198.2)), ('C', '986', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\nS-THH', (169.8, 150.0, 128.1)), ('C', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (162.3, 151.3, 199.0)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (155.7, 150.3, 192.7)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (146.1, 171.0, 233.4)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (147.4, 150.2, 211.9)), ('C', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (152.3, 173.4, 223.2)), ('C', '53', 'ASP', 'check CA trace', 'bend\n--SSB', (140.6, 134.5, 135.1)), ('C', '114', 'THR', 'check CA trace', 'bend\nTTS-E', (132.4, 125.5, 109.6)), ('C', '218', 'GLN', 'check CA trace', 'bend\n--SS-', (125.0, 122.2, 148.5)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (130.1, 164.0, 142.3))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23553/7lwp/Model_validation_1/validation_cootdata/molprobity_probe7lwp_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

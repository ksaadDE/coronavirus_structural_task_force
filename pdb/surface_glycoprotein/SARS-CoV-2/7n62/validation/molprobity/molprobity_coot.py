# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('H', ' 157 ', 'PRO', None, (77.971, 89.431, 120.504)), ('H', ' 159 ', 'PRO', None, (83.939, 89.78699999999999, 118.18800000000002)), ('L', '   8 ', 'PRO', None, (97.549, 66.242, 101.54000000000006)), ('L', ' 141 ', 'PRO', None, (100.018, 65.95199999999998, 118.937))]
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' L  48  LEU  HB3', ' L  49  ILE HD12', -0.838, (102.425, 81.183, 95.46)), (' H  45  LEU HD21', ' L  39  GLN HE22', -0.818, (91.7, 81.531, 103.785)), (' A 253  ASP  OD2', ' H 106  TYR  HB3', -0.79, (88.507, 86.848, 80.391)), (' A 176  LEU  HB3', ' A 190  ARG  HE ', -0.769, (87.959, 107.186, 59.732)), (' L 120  PRO  HB3', ' L 124  GLN  HG2', -0.751, (78.366, 75.134, 135.705)), (' L  23  CYS  HB3', ' L  72  PHE  HB2', -0.749, (96.628, 70.798, 91.74)), (' A 253  ASP  OD2', ' H 106  TYR  CD2', -0.743, (89.919, 86.254, 80.502)), (' A 158  ARG  NH2', ' H 101  ASP  OD1', -0.738, (92.849, 93.397, 80.948)), (' A  14  GLN  O  ', ' A 158  ARG  NH1', -0.715, (94.739, 96.235, 80.457)), (' L 142  ARG  NH1', ' L 142  ARG  O  ', -0.703, (93.336, 68.014, 117.13)), (' A  53  ASP  OD1', ' A  54  LEU  N  ', -0.698, (106.532, 122.439, 55.173)), (' H  47  TRP  CE2', ' L  96  PRO  HG2', -0.694, (85.022, 83.735, 91.153)), (' L 136  LEU  HB2', ' L 175  LEU  HB3', -0.694, (92.932, 69.124, 124.603)), (' H 178  ALA  HB2', ' H 188  LEU HD23', -0.681, (84.515, 82.868, 121.703)), (' L  48  LEU HD13', ' L  59  ILE HD12', -0.678, (103.872, 83.599, 97.17)), (' H 191  VAL HG11', ' L 135  LEU HD11', -0.672, (92.903, 76.203, 129.56)), (' H 136  PRO  HG3', ' H 148  LEU  HB3', -0.671, (92.909, 77.41, 139.21)), (' H  22  CYS  HB3', ' H  79  LEU  HB3', -0.666, (84.709, 96.413, 97.764)), (' H   6  GLU  OE1', ' H  36  TRP  HZ3', -0.665, (85.018, 92.21, 101.611)), (' H  20  LEU  HB2', ' H  81  LEU  HB3', -0.661, (79.032, 93.744, 100.523)), (' H  99  ASP  OD1', ' H 100  GLN  N  ', -0.659, (92.438, 90.136, 87.738)), (' A 275  PHE  HB3', ' A 288  ALA  HB1', -0.659, (104.534, 121.698, 44.548)), (' L 108  ARG  NH1', ' L 171  SER  O  ', -0.653, (104.316, 71.874, 118.746)), (' L  13  LEU  HA ', ' L 107  LYS  HE3', -0.65, (108.18, 67.614, 109.421)), (' H 153  LYS  NZ ', ' H 154  ASP  OD1', -0.649, (75.616, 79.499, 126.546)), (' H 146  ALA  HB2', ' H 196  SER  HA ', -0.645, (99.573, 74.943, 140.492)), (' A 131  CYS  HA ', ' A 166  CYS  HB2', -0.644, (98.894, 115.933, 79.955)), (' L 190  LYS  HG3', ' L 191  VAL HG22', -0.639, (79.221, 59.062, 139.721)), (' H 111  ASP  OD1', ' H 112  VAL  N  ', -0.638, (95.796, 90.851, 94.15)), (' A  34  ARG HH12', ' A 221  SER  HB2', -0.638, (93.889, 112.513, 46.91)), (' H 133  PRO  HB3', ' H 221  VAL HG12', -0.635, (87.028, 81.551, 139.077)), (' H  57  ASN  ND2', ' H 104  TYR  O  ', -0.634, (81.831, 88.332, 82.454)), (' H 146  ALA  HB3', ' H 194  VAL HG23', -0.634, (98.576, 77.368, 138.319)), (' L   6  GLN  OE1', ' L 101  GLY  N  ', -0.633, (91.758, 72.848, 100.476)), (' H  62  ASP  HA ', ' H  65  LYS  HB2', -0.632, (74.275, 80.0, 92.004)), (' L 108  ARG HH22', ' L 172  THR  HB ', -0.626, (103.532, 72.084, 121.96)), (' H   6  GLU  OE1', ' H  36  TRP  CZ3', -0.625, (84.736, 92.355, 101.101)), (' A 212  LEU HD23', ' A 214  ARG  H  ', -0.624, (95.329, 98.006, 44.461)), (' A 280  ASN  ND2', ' A 284  THR  O  ', -0.623, (92.449, 122.861, 41.247)), (' H   6  GLU  HA ', ' H  22  CYS  HA ', -0.621, (85.444, 97.373, 102.09)), (' A 256  SER  OG ', ' A 257  GLY  N  ', -0.617, (93.426, 85.492, 73.475)), (' A 105  ILE HD11', ' A 241  LEU HD22', -0.614, (96.944, 106.3, 71.706)), (' A  21  ARG HH22', ' A  78  ARG  HA ', -0.607, (101.499, 87.734, 64.521)), (' A 104  TRP  H  ', ' A 119  ILE  HB ', -0.605, (95.522, 109.667, 67.885)), (' A 100  ILE HG21', ' A 263  ALA  HB2', -0.604, (93.323, 97.554, 61.214)), (' H 207  ASN  ND2', ' H 218  ASP  OD2', -0.604, (89.727, 91.961, 136.0)), (' A 214  ARG  NH2', ' A 266  TYR  OH ', -0.598, (98.327, 98.254, 50.864)), (' H  53  PHE  HA ', ' H  72  ARG  NH1', -0.595, (84.909, 96.718, 88.187)), (' L  18  ARG  HG2', ' L  77  SER  HA ', -0.592, (111.855, 71.958, 98.727)), (' H   5  VAL  O  ', ' H  23  ALA  N  ', -0.589, (86.56, 98.975, 100.643)), (' H  73  ASP  OD1', ' H  76  LYS  N  ', -0.589, (82.13, 106.574, 92.452)), (' L 153  ALA  O  ', ' L 155  GLN  NE2', -0.585, (77.837, 59.264, 129.723)), (' L  34  LEU HD22', ' L  72  PHE  CD2', -0.581, (97.012, 73.237, 90.141)), (' L 120  PRO  HD2', ' L 132  VAL HG22', -0.58, (81.116, 70.475, 135.39)), (' L 181  LEU HD11', ' L 185  ASP  HB2', -0.568, (72.83, 67.564, 132.537)), (' L 137  ASN  OD1', ' L 138  ASN  ND2', -0.567, (100.299, 74.303, 128.565)), (' L   4  LEU HD21', ' L  23  CYS  SG ', -0.566, (93.087, 71.694, 94.01)), (' L 186  TYR  O  ', ' L 192  TYR  OH ', -0.565, (75.456, 66.048, 137.337)), (' H 164  TRP  HE1', ' H 190  SER  HG ', -0.564, (92.09, 83.886, 130.325)), (' L  21  LEU HD12', ' L  74  LEU HD22', -0.564, (101.938, 74.043, 99.284)), (' A 156  GLU  OE2', ' A 160  TYR  OH ', -0.56, (92.045, 107.633, 79.382)), (' A  92  PHE  O  ', ' A 192  PHE  N  ', -0.56, (96.674, 110.136, 56.327)), (' L  62  ARG  NH1', ' L  83  ASP  OD2', -0.559, (109.326, 80.28, 103.288)), (' L 166  GLN  OE1', ' L 171  SER  OG ', -0.555, (104.801, 73.773, 115.983)), (' A  83  VAL HG12', ' A 239  GLN  HB2', -0.553, (104.781, 104.252, 69.43)), (' H  91  THR  HB ', ' H 121  VAL HG22', -0.55, (75.606, 83.891, 109.49)), (' A 256  SER  O  ', ' A 258  TRP  HD1', -0.548, (93.816, 89.624, 73.168)), (' A 172  SER  OG ', ' A 173  GLN  N  ', -0.543, (85.147, 117.722, 66.223)), (' L  84  PHE  HA ', ' L 104  VAL HG23', -0.542, (103.052, 76.026, 107.414)), (' A 253  ASP  OD2', ' H 106  TYR  CB ', -0.541, (88.705, 85.861, 80.764)), (' H 173  VAL  O  ', ' H 174  HIS  ND1', -0.541, (97.873, 80.3, 126.265)), (' A 153  MET  HE2', ' A 155  SER  HB2', -0.539, (86.104, 100.994, 79.176)), (' H   6  GLU  CD ', ' H  36  TRP  CH2', -0.537, (83.927, 93.292, 101.26)), (' H 199  LEU  HA ', ' H 204  TYR  HE2', -0.536, (97.419, 80.585, 142.077)), (' H 140  SER  O  ', ' H 141  THR  OG1', -0.535, (96.019, 69.55, 140.819)), (' A 178  ASP  OD1', ' A 190  ARG  NH2', -0.534, (85.173, 104.936, 59.168)), (' A 105  ILE HD12', ' A 135  PHE  CE1', -0.532, (98.715, 107.418, 74.18)), (' A  95  THR  OG1', ' A  96  GLU  N  ', -0.532, (92.341, 99.414, 55.021)), (' A  56  LEU HD12', ' A  57  PRO  HD2', -0.531, (107.666, 112.344, 51.844)), (' H 131  VAL HG22', ' H 152  VAL HG12', -0.531, (82.597, 86.192, 131.128)), (' A 248  TYR  O  ', ' A 250  THR HG23', -0.53, (87.076, 85.312, 75.402)), (' A  19  THR  O  ', ' A  21  ARG  HD3', -0.525, (105.118, 88.205, 68.464)), (' H 100  GLN  HB3', ' H 108  TYR  HD2', -0.525, (95.089, 88.688, 86.104)), (' L  21  LEU HD22', ' L 102  THR HG21', -0.522, (99.145, 71.016, 101.4)), (' L 199  GLN  N  ', ' L 199  GLN  OE1', -0.522, (98.413, 60.377, 120.251)), (' A  68  ILE  H  ', ' A  68  ILE HD12', -0.517, (96.746, 95.044, 64.312)), (' A  20  THR HG23', ' A1301  NAG  H62', -0.517, (107.988, 89.018, 74.252)), (' A  98  SER  O  ', ' A 100  ILE  N  ', -0.516, (88.98, 99.944, 61.799)), (' H 134  LEU  HB3', ' L 118  PHE  CD1', -0.515, (88.13, 75.946, 136.018)), (' A  69  HIS  N  ', ' A  78  ARG  O  ', -0.512, (99.063, 90.872, 62.132)), (' L  34  LEU HD21', ' L  89  CYS  SG ', -0.511, (96.397, 73.613, 92.952)), (' H 106  TYR  HE2', ' H 108  TYR  CE1', -0.509, (93.272, 85.781, 82.482)), (' A  88  ASP  N  ', ' A  88  ASP  OD1', -0.504, (111.008, 115.04, 60.499)), (' A 189  LEU  O  ', ' A 189  LEU HD23', -0.504, (93.042, 107.937, 51.609)), (' A 167  THR  OG1', ' A 168  PHE  N  ', -0.502, (97.427, 120.738, 78.677)), (' A  69  HIS  HB3', ' A  78  ARG  HB2', -0.501, (101.062, 89.409, 60.933)), (' H 174  HIS  N  ', ' H 191  VAL  O  ', -0.5, (95.422, 80.344, 128.514)), (' L  13  LEU  N  ', ' L 105  GLU  O  ', -0.499, (105.325, 70.174, 110.242)), (' A 277  LEU  HB3', ' A 285  ILE HD12', -0.498, (98.519, 124.492, 44.378)), (' H  36  TRP  CD1', ' H  81  LEU HD13', -0.495, (80.01, 90.61, 96.573)), (' L 115  VAL HG22', ' L 136  LEU  HG ', -0.494, (94.0, 66.328, 127.805)), (' A 144  TYR  HH ', ' H  53  PHE  HZ ', -0.493, (86.338, 97.002, 79.72)), (' H 134  LEU  HB2', ' H 149  GLY  H  ', -0.492, (89.5, 78.112, 135.775)), (' L 117  ILE HD12', ' L 209  PHE  HD1', -0.488, (86.43, 66.452, 137.508)), (' A 119  ILE  CD1', ' A 128  ILE HD12', -0.487, (94.319, 114.199, 68.731)), (' A 231  ILE HG22', ' A 233  ILE HG12', -0.486, (102.369, 119.93, 73.126)), (' L 150  VAL HG13', ' L 192  TYR  CE1', -0.483, (77.616, 63.206, 134.992)), (' A 251  PRO  HB3', ' L  33  TYR  HE2', -0.482, (92.949, 79.44, 79.438)), (' A 112  SER  N  ', ' A 134  GLN  OE1', -0.482, (105.37, 107.42, 82.129)), (' A 253  ASP  OD2', ' H 106  TYR  CG ', -0.48, (89.323, 85.765, 81.001)), (' H  51  ILE  HB ', ' H  70  ILE HG12', -0.478, (80.688, 92.213, 91.862)), (' L  36  TRP  CE2', ' L  74  LEU  HB2', -0.477, (100.402, 74.544, 94.829)), (' A 144  TYR  HB3', ' A 246  ARG  HB3', -0.476, (85.659, 93.28, 74.125)), (' A  86  PHE  HE1', ' A  90  VAL HG12', -0.474, (104.103, 112.865, 61.87)), (' H  36  TRP  CH2', ' H  96  CYS  HB3', -0.473, (84.729, 93.222, 99.305)), (' H 137  SER  OG ', ' H 141  THR  OG1', -0.471, (94.315, 69.952, 140.731)), (' A 244  LEU  HB3', ' A 259  THR  H  ', -0.469, (91.37, 92.962, 69.508)), (' A  36  VAL  O  ', ' A 223  LEU  N  ', -0.469, (96.189, 117.58, 50.725)), (' L 172  THR  OG1', ' L 173  TYR  N  ', -0.467, (100.579, 72.359, 121.925)), (' A  29  THR HG23', ' A  62  VAL HG13', -0.466, (104.784, 103.84, 50.153)), (' H 155  TYR  HD2', ' H 210  HIS  CD2', -0.464, (80.713, 88.4, 124.619)), (' L 147  GLN  NE2', ' L 148  TRP  O  ', -0.464, (81.107, 59.914, 127.326)), (' H  87  ARG  O  ', ' H 121  VAL HG21', -0.463, (73.215, 83.074, 107.612)), (' A 186  PHE  HA ', ' A 210  ILE  O  ', -0.463, (88.988, 101.478, 46.605)), (' H   6  GLU  CD ', ' H  36  TRP  CZ3', -0.462, (84.009, 92.987, 101.768)), (' H 181  GLN  N  ', ' H 181  GLN  OE1', -0.458, (77.064, 77.539, 120.991)), (' A  21  ARG  NH1', ' A  22  THR  HB ', -0.458, (105.088, 88.618, 65.451)), (' A  52  GLN  HA ', ' A 274  THR  HA ', -0.458, (108.203, 124.691, 49.286)), (' H   2  VAL HG23', ' H  27  PHE  CD2', -0.458, (95.505, 98.527, 94.39)), (' A 246  ARG  HD3', ' A 258  TRP  CH2', -0.456, (90.173, 93.457, 76.146)), (' L  34  LEU HD22', ' L  72  PHE  CG ', -0.456, (97.689, 72.545, 90.063)), (' L 189  HIS  O  ', ' L 211  ARG  HD3', -0.455, (75.831, 64.268, 140.588)), (' A 177  MET  HG3', ' A 179  LEU  HG ', -0.454, (82.879, 110.027, 55.657)), (' H 210  HIS  CE1', ' H 212  PRO  HG2', -0.453, (79.26, 92.177, 122.574)), (' L 108  ARG  NH2', ' L 172  THR  HB ', -0.453, (104.332, 72.092, 122.154)), (' A 109  THR  HA ', ' A 237  ARG HH21', -0.452, (110.309, 108.423, 74.242)), (' H  47  TRP  HZ2', ' H  50  VAL HG12', -0.451, (82.978, 85.268, 90.378)), (' A 188  ASN  HA ', ' A 209  PRO  HA ', -0.451, (87.806, 105.765, 49.223)), (' A  70  VAL  O  ', ' A  70  VAL HG13', -0.451, (95.209, 86.477, 57.836)), (' L 159  SER  O  ', ' L 160  GLN  NE2', -0.45, (79.665, 70.23, 120.88)), (' H 210  HIS  HE1', ' H 212  PRO  HG2', -0.45, (78.84, 92.365, 122.176)), (' L 123  GLU  OE1', ' L 126  LYS  NZ ', -0.449, (73.518, 82.63, 141.687)), (' H 157  PRO  HD2', ' H 212  PRO  HG3', -0.449, (79.008, 92.398, 120.116)), (' H  34  MET  HB3', ' H  34  MET  HE3', -0.449, (86.73, 93.739, 94.263)), (' A  57  PRO  HB3', ' A 273  ARG  NH2', -0.449, (111.392, 115.0, 48.767)), (' H  45  LEU HD21', ' L  39  GLN  NE2', -0.447, (91.864, 82.037, 103.557)), (' A 145  TYR  O  ', ' H 104  TYR  OH ', -0.445, (80.726, 92.665, 76.438)), (' L 139  PHE  O  ', ' L 172  THR  OG1', -0.445, (100.883, 71.267, 122.56)), (' A 233  ILE  O  ', ' A 235  ILE HD12', -0.443, (105.61, 118.674, 70.567)), (' H   6  GLU  CD ', ' H  36  TRP  HH2', -0.443, (83.619, 93.747, 101.339)), (' H  36  TRP  CE2', ' H  81  LEU  HB2', -0.441, (80.972, 92.35, 98.27)), (' H 139  LYS  O  ', ' H 196  SER  OG ', -0.44, (99.519, 73.153, 143.922)), (' L 136  LEU HD13', ' L 175  LEU HD22', -0.44, (91.049, 68.131, 125.486)), (' A 276  LEU  O  ', ' A 288  ALA  HA ', -0.438, (103.149, 122.231, 41.951)), (' H  67  ARG  HG2', ' H  84  ASN  O  ', -0.437, (69.824, 86.267, 99.825)), (' L  55  ARG  NH1', ' L  61  ASP  OD1', -0.437, (111.846, 82.258, 92.358)), (' A 204  TYR  HE2', ' A 225  PRO  HG3', -0.436, (96.112, 122.801, 56.169)), (' A 204  TYR  CE2', ' A 225  PRO  HG3', -0.435, (96.15, 122.825, 56.428)), (' A 119  ILE HD13', ' A 128  ILE HD12', -0.434, (94.077, 114.294, 69.394)), (' A 105  ILE  O  ', ' A 105  ILE HG22', -0.434, (102.173, 108.377, 72.047)), (' A 145  TYR  CZ ', ' A 147  LYS  HA ', -0.433, (75.105, 92.494, 76.54)), (' A  34  ARG  HA ', ' A  34  ARG  HD3', -0.43, (98.454, 112.008, 47.716)), (' A 210  ILE  O  ', ' A 210  ILE HG23', -0.43, (90.907, 102.062, 46.955)), (' A  40  ASP  HB2', ' A  42  VAL HG23', -0.43, (96.652, 130.701, 53.616)), (' H  39  GLN  NE2', ' L  39  GLN  OE1', -0.429, (91.025, 81.891, 106.46)), (' L  62  ARG  H  ', ' L  62  ARG  HG2', -0.429, (112.239, 80.868, 98.688)), (' A 246  ARG HH12', ' A 253  ASP  CG ', -0.429, (89.599, 87.83, 78.732)), (' A  46  SER  OG ', ' A 281  GLU  N  ', -0.427, (89.994, 128.495, 38.838)), (' L  14  SER  N  ', ' L  17  GLU  OE2', -0.427, (109.805, 69.202, 109.442)), (' L   6  GLN  NE2', ' L 102  THR  OG1', -0.427, (95.217, 72.6, 100.53)), (' L  76  ILE HG23', ' L  79  LEU HD21', -0.427, (108.156, 73.44, 102.808)), (' A 131  CYS  HB2', ' A 133  PHE  CE2', -0.426, (98.315, 112.389, 78.456)), (' L 192  TYR  HB2', ' L 209  PHE  CE1', -0.426, (82.64, 65.661, 136.869)), (' L  34  LEU HD11', ' L  89  CYS  SG ', -0.425, (95.145, 74.172, 92.892)), (' H 181  GLN  HG2', ' H 183  SER  H  ', -0.425, (73.349, 76.73, 121.494)), (' H 161  THR  O  ', ' H 209  ASN  N  ', -0.425, (87.192, 90.884, 127.735)), (' H 156  PHE  HA ', ' H 157  PRO  HA ', -0.425, (78.238, 86.91, 120.28)), (' A 158  ARG  NH2', ' H 102  ASP  OD2', -0.423, (91.709, 94.846, 80.626)), (' A 126  VAL  HB ', ' A 174  PRO  HA ', -0.423, (86.834, 112.824, 66.26)), (' L 124  GLN  HG3', ' L 129  THR  O  ', -0.422, (75.689, 76.397, 135.326)), (' A 246  ARG  NH1', ' A 253  ASP  OD1', -0.421, (89.723, 88.235, 77.761)), (' L  35  ALA  N  ', ' L  90  GLN  O  ', -0.421, (94.908, 78.428, 90.687)), (' H   2  VAL HG23', ' H  27  PHE  HD2', -0.42, (95.68, 98.724, 94.399)), (' L 147  GLN  HB3', ' L 195  GLU  OE2', -0.419, (85.514, 58.778, 126.342)), (' H  47  TRP  NE1', ' L  96  PRO  HG2', -0.419, (85.28, 83.913, 91.9)), (' H  88  ALA  O  ', ' H  91  THR HG22', -0.418, (75.764, 81.577, 109.26)), (' L 185  ASP  HA ', ' L 188  LYS  HD3', -0.417, (69.525, 64.991, 135.087)), (' H  52  SER  HA ', ' H 103  GLY  O  ', -0.417, (84.631, 91.907, 84.887)), (' L  13  LEU  O  ', ' L 106  ILE  HA ', -0.417, (106.836, 71.765, 111.204)), (' H  12  VAL  O  ', ' H 121  VAL  HA ', -0.417, (72.243, 87.67, 111.136)), (' L 164  THR HG22', ' L 174  SER  H  ', -0.417, (95.79, 74.78, 122.041)), (' A 253  ASP  OD2', ' H 106  TYR  HD2', -0.417, (89.82, 86.741, 81.726)), (' A 103  GLY  HA3', ' A 119  ILE  O  ', -0.416, (94.022, 108.266, 68.424)), (' H  35  HIS  CE1', ' H 107  TYR  HB3', -0.416, (87.705, 86.259, 88.73)), (' H 205  ILE HD12', ' H 207  ASN HD21', -0.416, (91.256, 91.953, 136.415)), (' A 240  THR HG21', ' A 265  TYR  CE2', -0.415, (99.719, 101.89, 63.334)), (' H 140  SER  C  ', ' H 142  SER  H  ', -0.413, (98.285, 68.928, 141.162)), (' A  19  THR  O  ', ' A  21  ARG  N  ', -0.413, (106.219, 88.765, 69.462)), (' H 107  TYR  O  ', ' L  92  TYR  HB2', -0.413, (90.442, 83.221, 87.4)), (' H  36  TRP  NE1', ' H  81  LEU  HB2', -0.412, (80.335, 92.491, 97.825)), (' A  67  ALA  HB1', ' A 242  LEU HD21', -0.412, (97.522, 97.562, 64.175)), (' A 205  SER  OG ', ' A 226  LEU HD11', -0.412, (91.406, 116.091, 57.992)), (' H  27  PHE  CE1', ' H  29  PHE  HA ', -0.411, (91.495, 99.586, 91.563)), (' A 122  ASN  C  ', ' A 124  THR  H  ', -0.411, (82.872, 108.333, 68.374)), (' A  16  VAL HG21', ' A 254  SER  C  ', -0.411, (97.89, 90.331, 77.429)), (' A 143  VAL  O  ', ' A 245  HIS  HA ', -0.41, (86.217, 94.721, 71.075)), (' L  39  GLN  O  ', ' L  85  ALA  HB1', -0.41, (97.948, 80.805, 106.816)), (' A 201  PHE  HB3', ' A 229  LEU  HB2', -0.409, (98.417, 120.343, 67.769)), (' H 110  MET  HB2', ' H 110  MET  HE2', -0.409, (91.688, 85.614, 95.038)), (' A 128  ILE  HB ', ' A 170  TYR  HB3', -0.408, (91.958, 117.713, 71.782)), (' A 130  VAL  CG2', ' A 168  PHE  HB3', -0.408, (97.622, 119.62, 76.402)), (' A  78  ARG  HA ', ' A  78  ARG  HD2', -0.408, (102.517, 87.981, 64.407)), (' L 147  GLN HE22', ' L 155  GLN  H  ', -0.406, (80.458, 59.272, 126.938)), (' A 244  LEU  HB3', ' A 258  TRP  HB3', -0.404, (92.23, 92.921, 70.7)), (' A 240  THR HG21', ' A 265  TYR  CZ ', -0.404, (100.139, 101.898, 63.4)), (' A 150  LYS  O  ', ' A 152  TRP  HE3', -0.404, (78.161, 97.088, 70.579)), (' L 149  LYS  HB2', ' L 149  LYS  HE2', -0.404, (84.277, 58.335, 132.254)), (' H 129  PRO  HA ', ' H 155  TYR  HB3', -0.403, (78.821, 86.383, 127.448)), (' A 241  LEU  HA ', ' A 241  LEU HD12', -0.403, (97.607, 102.651, 69.631)), (' H  27  PHE  O  ', ' H  29  PHE  N  ', -0.403, (92.524, 102.552, 90.915)), (' L 140  TYR  CE1', ' L 141  PRO  HB3', -0.402, (102.015, 66.312, 116.469)), (' A 249  LEU  O  ', ' A 249  LEU HD12', -0.402, (85.864, 81.818, 76.648)), (' A  34  ARG HH21', ' A 217  PRO  HG2', -0.401, (96.221, 109.355, 44.989)), (' A 105  ILE HD12', ' A 105  ILE HG23', -0.401, (99.385, 107.15, 73.492)), (' A 106  PHE  HZ ', ' A 194  PHE  CD2', -0.4, (99.757, 112.295, 63.158)), (' A 117  LEU HD21', ' A 119  ILE HD11', -0.4, (96.728, 114.457, 69.01)), (' A  16  VAL HG13', ' A  18  LEU HD22', -0.4, (98.903, 92.782, 74.419))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

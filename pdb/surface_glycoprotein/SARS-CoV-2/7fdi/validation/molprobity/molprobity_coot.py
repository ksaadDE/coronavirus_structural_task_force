# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('A', ' 146 ', 'PRO', None, (183.942, 150.265, 163.91499999999996)), ('A', ' 531 ', 'GLN', None, (188.21, 189.189, 149.904))]
data['rota'] = [('E', ' 501 ', 'HIS', 0.20681427732402277, (155.99, 172.48499999999999, 155.875))]
data['cbeta'] = []
data['probe'] = [(' A 455  MET  HE1', ' A 481  LYS  HD3', -0.837, (197.291, 156.587, 144.42)), (' A 460  ARG  NH1', ' A 510  TYR  O  ', -0.804, (182.723, 157.379, 141.336)), (' A 477  TRP  HD1', ' A 478  TRP  CD1', -0.772, (197.484, 150.071, 142.699)), (' A 133  CYS  HA ', ' A 141  CYS  HB2', -0.756, (188.488, 139.825, 162.62)), (' A 177  ARG  NH1', ' A 495  GLU  O  ', -0.741, (192.884, 142.616, 139.257)), (' A 238  GLU  OE2', ' A 605  GLY  N  ', -0.726, (209.833, 166.546, 146.255)), (' A 524  GLN  OE1', ' A 580  ASN  N  ', -0.696, (189.351, 177.669, 140.203)), (' A 460  ARG HH21', ' A 506  VAL HG22', -0.694, (185.93, 155.179, 142.999)), (' A 131  LYS  HB3', ' A 143  LEU HD23', -0.68, (182.403, 142.777, 159.482)), (' A  34  HIS  HD1', ' E 453  TYR  HH ', -0.679, (151.022, 172.2, 143.072)), (' A 183  TYR  OH ', ' A 509  ASP  OD1', -0.675, (179.354, 153.49, 139.591)), (' E 403  ARG  HG2', ' E 505  TYR  HA ', -0.67, (153.088, 176.688, 150.23)), (' A 378  HIS  HE1', ' A 402  GLU  HA ', -0.67, (178.735, 170.519, 151.411)), (' A 293  VAL HG23', ' A 297  MET  HE2', -0.662, (184.435, 175.426, 170.848)), (' A 261  CYS  HB2', ' A 488  VAL HG13', -0.66, (206.448, 155.144, 147.117)), (' A  34  HIS  ND1', ' E 453  TYR  OH ', -0.654, (150.966, 172.62, 143.1)), (' A 245  ARG  NH1', ' A 260  GLY  O  ', -0.653, (210.184, 160.538, 148.841)), (' A  85  LEU HD22', ' A  94  LYS  HG3', -0.647, (167.321, 170.734, 125.604)), (' A 201  ASP  OD2', ' A 219  ARG  NE ', -0.642, (180.272, 163.196, 127.182)), (' A 198  ASP  OD1', ' A 201  ASP  N  ', -0.634, (183.235, 159.254, 130.593)), (' A 123  MET  HG2', ' A 176  LEU HD22', -0.63, (181.61, 145.177, 144.7)), (' A  42  GLN  NE2', ' E 449  TYR  OH ', -0.629, (151.959, 163.549, 150.54)), (' A 573  VAL HG23', ' A 574  VAL HG23', -0.617, (183.892, 182.659, 142.694)), (' A 152  MET  HA ', ' A 152  MET  HE3', -0.613, (195.662, 152.619, 159.893)), (' A  41  TYR  OH ', ' E 500  THR  OG1', -0.613, (156.867, 168.569, 156.615)), (' A 152  MET  HG3', ' A 270  MET  HA ', -0.609, (193.132, 152.141, 156.876)), (' A 482  ARG  O  ', ' A 606  TRP  NE1', -0.606, (205.845, 159.775, 142.654)), (' E 439  ASN  O  ', ' E 443  SER  OG ', -0.604, (148.852, 172.316, 159.47)), (' A 103  ASN  OD1', ' A 194  ASN  ND2', -0.603, (169.369, 157.701, 128.616)), (' A 500  PRO  HB2', ' A 506  VAL HG11', -0.601, (188.325, 151.793, 142.937)), (' A 454  TYR  HE2', ' A 484  ILE HD12', -0.592, (198.024, 163.203, 138.826)), (' A  47  SER  O  ', ' A  51  ASN  ND2', -0.591, (166.481, 158.598, 156.806)), (' A 419  LYS  HE2', ' A 428  PHE  HB3', -0.585, (193.197, 184.753, 171.481)), (' E 457  ARG  NH1', ' E 459  SER  O  ', -0.583, (141.349, 181.241, 131.6)), (' A 379  ILE  O  ', ' A 383  MET  HG3', -0.581, (169.277, 176.681, 153.581)), (' A 455  MET  HB2', ' A 484  ILE HG21', -0.576, (196.765, 161.054, 141.241)), (' A 252  TYR  CZ ', ' A 266  LEU HD11', -0.576, (204.13, 155.46, 160.809)), (' A 177  ARG  HD3', ' A 498  CYS  HB2', -0.573, (189.011, 144.591, 141.416)), (' A 165  TRP  HA ', ' A 270  MET  HE1', -0.572, (193.452, 147.986, 155.193)), (' A 307  ILE HG23', ' A 369  PHE  HD1', -0.564, (179.208, 175.239, 167.768)), (' A 245  ARG  NH2', ' A 603  PHE  O  ', -0.563, (212.081, 164.488, 149.259)), (' A 148  LEU HD22', ' A 164  ALA  HB1', -0.557, (192.383, 147.379, 159.196)), (' A 249  MET  HE1', ' A 256  ILE  O  ', -0.557, (213.22, 155.979, 155.433)), (' A 318  VAL  O  ', ' A 551  GLY  HA3', -0.554, (176.105, 187.928, 153.984)), (' E 401  VAL HG22', ' E 509  ARG  HG2', -0.55, (142.391, 178.843, 155.2)), (' E 476  GLY  H  ', ' E 487  ASN  HB3', -0.547, (149.103, 168.646, 124.709)), (' E 376  THR  HB ', ' E 435  ALA  HB3', -0.545, (147.748, 187.283, 154.552)), (' A 530  CYS  HA ', ' A 533  ALA  HB3', -0.542, (186.029, 189.802, 153.009)), (' A 482  ARG  NH1', ' A 608  THR  O  ', -0.541, (208.091, 152.255, 142.558)), (' E 431  GLY  HA3', ' E 513  LEU  O  ', -0.54, (138.106, 194.34, 149.16)), (' E 462  LYS  HB2', ' E 465  GLU  HG3', -0.538, (136.389, 187.127, 134.46)), (' A 595  LEU  O  ', ' A 599  ASN  ND2', -0.538, (209.697, 172.073, 152.938)), (' A 503  LEU HD23', ' A 506  VAL HG23', -0.536, (186.738, 155.338, 145.65)), (' E 454  ARG  NH2', ' E 467  ASP  O  ', -0.534, (138.444, 175.594, 137.887)), (' A 294  THR  HA ', ' A 297  MET  HE3', -0.534, (184.343, 173.363, 172.417)), (' A 157  ASP  OD1', ' A 160  GLU  N  ', -0.534, (201.768, 146.443, 163.056)), (' E 474  GLN  NE2', ' E 476  GLY  O  ', -0.534, (146.105, 170.684, 121.667)), (' A 429  GLN  OE1', ' A 430  GLU  N  ', -0.533, (199.517, 186.178, 168.834)), (' A 482  ARG  HB3', ' A 608  THR HG22', -0.53, (206.312, 156.721, 141.379)), (' A 203  TRP  HZ3', ' A 460  ARG  HD3', -0.527, (183.787, 156.082, 138.835)), (' A 431  ASP  O  ', ' A 434  THR HG22', -0.526, (200.852, 181.612, 166.234)), (' A 144  LEU  HA ', ' A 148  LEU  HB2', -0.524, (187.806, 148.71, 159.255)), (' E 349  SER  HB3', ' E 452  LEU  H  ', -0.52, (141.181, 173.549, 146.579)), (' A 378  HIS  CE1', ' A 402  GLU  HA ', -0.501, (178.542, 171.272, 151.444)), (' A  43  SER  HA ', ' A  65  ALA  HB1', -0.5, (158.951, 158.614, 150.349)), (' A 133  CYS  HA ', ' A 141  CYS  CB ', -0.498, (188.555, 138.931, 162.814)), (' A 477  TRP  CD1', ' A 478  TRP  CD1', -0.497, (196.482, 150.155, 143.215)), (' A 284  PRO  HG3', ' A 440  LEU HD13', -0.495, (203.346, 171.438, 160.596)), (' A 237  TYR  CE1', ' A 451  PRO  HG2', -0.49, (199.492, 165.466, 147.622)), (' A 208  GLU  HB2', ' A 219  ARG  HG2', -0.488, (180.132, 167.579, 129.747)), (' A 432  ASN  HA ', ' A 435  GLU  OE2', -0.486, (203.063, 182.972, 162.722)), (' A 312  GLU  O  ', ' A 316  VAL HG23', -0.485, (172.238, 184.143, 161.631)), (' A 148  LEU HD23', ' A 151  ILE HD12', -0.484, (191.313, 147.336, 162.175)), (' A  19  SER  O  ', ' A  24  GLN  NE2', -0.478, (152.847, 172.199, 120.709)), (' A 477  TRP  O  ', ' A 480  MET  HG2', -0.477, (197.904, 154.29, 139.792)), (' A 188  ASN  HB3', ' A 192  ARG  NH1', -0.477, (181.266, 150.662, 127.502)), (' A 503  LEU  HG ', ' A 505  HIS  H  ', -0.477, (185.137, 155.371, 148.286)), (' A  48  TRP  CZ3', ' A 359  LEU  HB2', -0.477, (168.372, 165.022, 160.28)), (' A 473  TRP  HB3', ' A 474  MET  HE2', -0.476, (193.038, 147.557, 138.789)), (' E 350  VAL HG22', ' E 422  ASN  HB3', -0.475, (142.687, 179.802, 143.608)), (' A 285  PHE  CG ', ' A 433  GLU  HG2', -0.475, (206.048, 176.457, 166.275)), (' E 348  ALA  HB2', ' E 354  ASN  OD1', -0.473, (134.444, 177.761, 150.205)), (' A 188  ASN  O  ', ' A 192  ARG  HG3', -0.473, (178.72, 152.233, 127.225)), (' A 108  LEU  HB3', ' A 112  LYS  HG3', -0.473, (170.585, 146.303, 130.585)), (' A  25  ALA  HB1', ' A  97  LEU HD11', -0.472, (160.125, 170.753, 127.356)), (' A 369  PHE  CE1', ' A 373  HIS  HE1', -0.472, (179.935, 177.97, 165.787)), (' E 426  PRO  HB3', ' E 463  PRO  HB3', -0.472, (139.001, 192.85, 138.58)), (' A 354  GLY  HA3', ' E 502  GLY  HA3', -0.472, (158.816, 175.582, 154.187)), (' A 396  ALA  HB1', ' A 566  TRP  HA ', -0.472, (177.006, 176.311, 138.528)), (' A 152  MET  O  ', ' A 161  ARG  NH1', -0.471, (196.445, 154.518, 160.999)), (' A 247  LYS  HB2', ' A 282  THR HG22', -0.468, (205.111, 164.116, 159.987)), (' A 392  LEU HD13', ' A 563  SER  HA ', -0.467, (168.051, 175.996, 136.439)), (' A 450  LEU HD21', ' A 519  THR  HB ', -0.467, (190.255, 170.055, 146.508)), (' A 439  LEU  HB3', ' A 591  LEU  HB2', -0.466, (199.883, 176.261, 156.563)), (' A 534  LYS  HB2', ' A 534  LYS  HE2', -0.466, (186.615, 195.721, 154.296)), (' A 459  TRP  CG ', ' A 477  TRP  HE3', -0.463, (192.931, 153.228, 139.499)), (' A 517  THR  HB ', ' A 521  TYR  CE2', -0.462, (184.185, 172.028, 141.406)), (' A 403  ALA  O  ', ' A 407  ILE HG23', -0.459, (183.365, 176.947, 150.911)), (' A 104  GLY  O  ', ' A 107  VAL HG12', -0.458, (170.065, 153.624, 130.708)), (' A 327  PHE  HE1', ' A 358  ILE HG13', -0.458, (170.088, 172.142, 160.075)), (' A 332  MET  HE2', ' A 359  LEU  HG ', -0.458, (169.067, 162.931, 163.784)), (' A 482  ARG  NH2', ' A 489  GLU  OE2', -0.458, (205.416, 149.108, 143.848)), (' A 293  VAL HG22', ' A 366  MET  HG3', -0.456, (186.459, 175.751, 169.552)), (' A 432  ASN  O  ', ' A 436  ILE HG12', -0.455, (203.598, 179.779, 161.971)), (' A 233  ILE HD13', ' A 450  LEU HD13', -0.454, (194.674, 170.504, 145.203)), (' A 200  GLY  O  ', ' A 204  ARG  HG3', -0.454, (183.342, 161.483, 133.301)), (' E 490  PHE  CD1', ' E 491  PRO  HD2', -0.452, (141.46, 167.887, 135.56)), (' A 323  MET  HA ', ' A 323  MET  HE3', -0.452, (167.377, 178.64, 159.221)), (' A  21  ILE HG21', ' A  87  GLU  HB2', -0.451, (160.386, 171.562, 119.83)), (' A 356  PHE  HB3', ' A 379  ILE HG23', -0.45, (167.55, 173.887, 155.667)), (' A 476  LYS  O  ', ' A 479  GLU  HB2', -0.45, (199.579, 152.295, 137.503)), (' A 478  TRP  CE3', ' A 489  GLU  HB3', -0.449, (200.388, 150.007, 146.077)), (' A 481  LYS  HD2', ' A 487  VAL  HB ', -0.448, (199.502, 155.835, 146.597)), (' E 411  ALA  HB3', ' E 414  GLN  HG3', -0.448, (149.468, 190.982, 144.499)), (' A 600  LYS  HG3', ' A 601  ASN  OD1', -0.447, (217.862, 172.399, 155.477)), (' A 465  LYS  HD3', ' A 467  GLU  OE1', -0.446, (190.046, 157.408, 127.982)), (' E 368  LEU  HA ', ' E 368  LEU HD23', -0.446, (139.693, 191.231, 161.998)), (' E 354  ASN  O  ', ' E 398  ASP  HA ', -0.446, (134.945, 184.232, 149.111)), (' A 331  SER  HB2', ' A 358  ILE  H  ', -0.446, (168.045, 170.007, 161.512)), (' A 524  GLN  HG2', ' A 583  PRO  HG2', -0.445, (190.005, 180.289, 143.592)), (' A 511  SER  O  ', ' A 514  ARG  NH1', -0.445, (180.78, 161.936, 144.129)), (' A 351  LEU  HB2', ' A 355  ASP  HB3', -0.444, (161.321, 169.273, 154.748)), (' E 439  ASN  HA ', ' E 507  PRO  HG2', -0.442, (148.697, 175.161, 157.8)), (' A 168  TRP  HB3', ' A 270  MET  HE2', -0.442, (191.498, 147.525, 154.764)), (' A 225  ASP  CG ', ' A 578  ASN HD21', -0.441, (189.688, 174.808, 133.082)), (' E 502  GLY  O  ', ' E 506  GLN  N  ', -0.44, (154.426, 176.422, 154.557)), (' A 203  TRP  HZ3', ' A 460  ARG  CD ', -0.439, (184.033, 156.538, 138.854)), (' A 474  MET  HA ', ' A 477  TRP  HB3', -0.438, (195.854, 149.025, 140.099)), (' A 424  LEU  HA ', ' A 424  LEU HD12', -0.436, (189.469, 180.911, 173.882)), (' A 161  ARG  HB2', ' A 265  HIS  HD2', -0.435, (200.431, 149.916, 158.64)), (' A 137  ASN  ND2', ' A 140  GLU  HB2', -0.435, (188.611, 136.738, 168.988)), (' A 450  LEU  HA ', ' A 450  LEU HD23', -0.434, (191.693, 167.132, 146.556)), (' A 362  THR  HA ', ' A 368  ASP  OD2', -0.434, (177.34, 167.357, 168.174)), (' E 347  PHE  CD2', ' E 509  ARG  HD3', -0.432, (140.411, 179.715, 156.861)), (' A 302  TRP  CH2', ' A 310  GLU  HG3', -0.431, (178.894, 179.897, 171.02)), (' A 108  LEU HD22', ' A 112  LYS  HD2', -0.43, (171.667, 147.337, 128.464)), (' A 553  LYS  HE3', ' A 573  VAL  O  ', -0.43, (183.51, 187.168, 143.837)), (' A 456  LEU HD22', ' A 512  PHE  CD2', -0.429, (187.946, 158.831, 144.21)), (' A 524  GLN  HB3', ' A 574  VAL HG21', -0.428, (186.761, 181.03, 143.255)), (' A 168  TRP  CD1', ' A 502  SER  HB2', -0.428, (189.486, 147.935, 151.873)), (' A 315  PHE  CZ ', ' A 408  MET  HG3', -0.428, (177.805, 178.835, 156.586)), (' A 446  ILE HD13', ' A 523  PHE  HZ ', -0.428, (191.374, 173.847, 152.589)), (' A 297  MET  HG2', ' A 302  TRP  CE3', -0.428, (180.559, 176.619, 173.314)), (' E 458  LYS  HA ', ' E 458  LYS  HD3', -0.428, (144.804, 177.055, 127.221)), (' A 589  GLU  HB3', ' A 590  PRO  HD3', -0.426, (199.996, 182.24, 152.669)), (' E 476  GLY  N  ', ' E 487  ASN  HB3', -0.426, (149.022, 169.15, 124.596)), (' A 137  ASN HD21', ' A 140  GLU  HB2', -0.425, (187.99, 136.555, 169.207)), (' A 376  MET  HB2', ' A 376  MET  HE3', -0.425, (173.814, 175.306, 161.209)), (' A 315  PHE  HE1', ' A 408  MET  HE3', -0.421, (177.439, 180.39, 154.951)), (' A 524  GLN  HA ', ' A 583  PRO  HG2', -0.42, (190.032, 181.075, 144.717)), (' E 360  ASN  H  ', ' E 523  THR  HB ', -0.419, (122.933, 196.019, 153.689)), (' A 468  ILE HD11', ' A 472  GLN  O  ', -0.419, (195.553, 149.243, 134.588)), (' A 457  GLU  OE2', ' A 513  ILE  N  ', -0.419, (185.562, 162.385, 141.179)), (' E 452  LEU HD23', ' E 494  SER  HB3', -0.418, (143.9, 168.784, 145.755)), (' A 355  ASP  OD2', ' A 357  ARG  NH2', -0.418, (160.089, 168.251, 158.243)), (' E 338  PHE  O  ', ' E 342  PHE  HD1', -0.417, (134.454, 186.878, 159.941)), (' A 455  MET  SD ', ' A 481  LYS  HA ', -0.417, (198.553, 157.411, 143.029)), (' A 208  GLU  OE1', ' A 219  ARG  NH1', -0.417, (177.984, 165.895, 127.869)), (' A 165  TRP  HA ', ' A 270  MET  CE ', -0.416, (193.562, 148.224, 155.204)), (' A 288  LYS  HG3', ' A 433  GLU  HB3', -0.415, (203.861, 177.865, 168.202)), (' A 232  GLU  HB2', ' A 581  VAL HG11', -0.415, (197.535, 175.311, 139.965)), (' A 237  TYR  CD1', ' A 451  PRO  HG2', -0.413, (199.211, 165.893, 147.641)), (' A 148  LEU  HA ', ' A 148  LEU HD23', -0.413, (191.064, 148.094, 161.47)), (' E 377  PHE  CD1', ' E 434  ILE HG12', -0.413, (142.768, 192.186, 157.166)), (' A 173  GLY  O  ', ' A 498  CYS  HB3', -0.413, (188.259, 143.763, 144.48)), (' A 378  HIS  NE2', ' A 402  GLU  OE2', -0.413, (178.428, 169.29, 152.932)), (' A 145  GLU  HA ', ' A 146  PRO  HA ', -0.412, (185.2, 151.892, 162.566)), (' E 402  ILE HD11', ' E 510  VAL HG21', -0.412, (146.282, 183.731, 150.285)), (' A  36  ALA  HA ', ' A  69  TRP  HZ3', -0.412, (158.354, 164.131, 142.621)), (' A 152  MET  HE1', ' A 161  ARG  HB3', -0.411, (197.828, 150.682, 159.247)), (' A 182  GLU  HA ', ' A 185  VAL HG22', -0.409, (181.035, 143.613, 133.929)), (' A 176  LEU  O  ', ' A 180  TYR  N  ', -0.408, (183.754, 144.304, 141.244)), (' A 177  ARG  NH1', ' A 497  TYR  O  ', -0.408, (192.137, 143.917, 140.531)), (' A 225  ASP  O  ', ' A 229  THR HG23', -0.408, (192.756, 172.704, 136.836)), (' A  42  GLN  NE2', ' E 449  TYR  HH ', -0.408, (151.216, 163.034, 150.534)), (' A 226  VAL HG12', ' A 454  TYR  CD1', -0.407, (192.671, 166.227, 138.215)), (' A  82  MET  HB2', ' E 486  PHE  CE1', -0.406, (156.39, 162.434, 124.971)), (' A  31  LYS  HB2', ' E 456  PHE  HZ ', -0.405, (151.256, 170.245, 135.02)), (' A 554  LEU  O  ', ' A 558  LEU  HG ', -0.405, (175.864, 182.646, 147.669)), (' A 243  TYR  CE1', ' A 247  LYS  HD3', -0.405, (208.47, 167.712, 160.551)), (' A 209  VAL HG11', ' A 565  PRO  HB3', -0.405, (177.153, 176.753, 131.703)), (' A 237  TYR  CZ ', ' A 451  PRO  HG2', -0.405, (199.307, 164.952, 147.137)), (' A 285  PHE  CD2', ' A 433  GLU  HG2', -0.404, (205.864, 176.639, 166.05)), (' A 268  GLY  O  ', ' A 277  ASN  ND2', -0.403, (193.718, 158.439, 160.715)), (' E 350  VAL  O  ', ' E 353  TRP  HD1', -0.403, (139.113, 180.236, 143.996)), (' A 501  ALA  O  ', ' A 507  SER  HB3', -0.402, (184.394, 149.591, 147.682)), (' A 457  GLU  HG3', ' A 513  ILE  N  ', -0.402, (186.619, 162.319, 141.453)), (' A 126  ILE HG22', ' A 172  VAL HG13', -0.401, (183.648, 144.211, 149.987)), (' A 525  PHE  O  ', ' A 529  LEU  HG ', -0.401, (184.011, 184.004, 149.168)), (' E 425  LEU  HA ', ' E 425  LEU HD23', -0.401, (140.389, 190.189, 142.712)), (' A 457  GLU  HG2', ' A 512  PHE  HB3', -0.4, (186.87, 159.876, 142.105))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

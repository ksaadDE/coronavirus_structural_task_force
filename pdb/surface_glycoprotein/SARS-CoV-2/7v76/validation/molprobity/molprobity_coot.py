# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('C', ' 617 ', 'VAL', 0.0194906, (196.77901, 174.08401, 203.85801000000006))]
data['omega'] = []
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' A  64  TRP  HE1', ' A 261  ALA  HB1', -0.784, (151.503, 223.814, 185.504)), (' A 381  PRO  HA ', ' A 384  LEU HD23', -0.723, (205.216, 236.224, 157.217)), (' B  46  SER  HA ', ' B 276  TYR  O  ', -0.7, (223.589, 245.109, 201.319)), (' B  64  TRP  HE1', ' B 261  ALA  HB1', -0.688, (253.872, 251.175, 182.962)), (' C 400  ARG  NH1', ' C 501  GLY  O  ', -0.687, (204.642, 214.537, 148.507)), (' B 722  GLU  OE2', ' B1061  HIS  NE2', -0.683, (215.284, 225.503, 237.69)), (' C  64  TRP  HE1', ' C 261  ALA  HB1', -0.678, (226.891, 151.749, 188.041)), (' C  31  SER  HB3', ' C  60  SER  H  ', -0.675, (220.002, 164.096, 195.037)), (' A 355  ILE  HB ', ' A 392  VAL  HB ', -0.668, (217.13, 242.665, 155.716)), (' A1084  ALA  HB2', ' A1123  CYS  HB3', -0.667, (212.673, 234.152, 272.193)), (' A 866  MET  HG2', ' C 696  LEU HD21', -0.665, (198.196, 185.385, 230.927)), (' B 696  LEU HD21', ' C 866  MET  HG2', -0.656, (239.664, 213.675, 230.991)), (' C  46  SER  HA ', ' C 276  TYR  O  ', -0.651, (234.905, 183.352, 203.695)), (' B 112  SER  HA ', ' B 132  GLU  HB3', -0.651, (240.583, 241.342, 156.239)), (' A 439  ASP  O  ', ' A 445  ASN  ND2', -0.635, (213.036, 253.274, 131.001)), (' A 783  LYS  HG3', ' A 784  GLN  HG3', -0.633, (205.409, 186.623, 242.92)), (' A 986  ALA  O  ', ' A 990  ILE HG12', -0.632, (205.261, 197.588, 182.904)), (' A 143  VAL HG12', ' A 154  GLU  HG3', -0.629, (144.283, 210.22, 169.792)), (' A 911  ASN  ND2', ' C1120  SER  OG ', -0.629, (193.376, 211.689, 268.982)), (' B  17  ASN  OD1', ' B 137  ASN  ND2', -0.623, (256.826, 247.705, 159.385)), (' C 144  TYR  OH ', ' C 158  ARG  NH2', -0.623, (239.582, 147.078, 164.793)), (' C 296  THR HG21', ' C 594  VAL HG21', -0.618, (212.576, 179.055, 210.222)), (' P   1  NAG  H3 ', ' P   1  NAG  H83', -0.618, (232.935, 237.995, 153.574)), (' A  46  SER  HA ', ' A 276  TYR  O  ', -0.617, (175.146, 201.952, 201.063)), (' C 449  LEU HD11', ' C 489  LEU  HB3', -0.611, (189.015, 224.11, 148.378)), (' C 770  GLU  OE2', ' C1016  ARG  NH1', -0.607, (219.178, 215.199, 219.62)), (' A 112  SER  HA ', ' A 132  GLU  HB3', -0.601, (164.121, 218.774, 157.598)), (' A 721  THR HG23', ' A 931  ILE HD11', -0.6, (187.328, 208.888, 237.398)), (' C  99  ASN  OD1', ' C 190  ARG  NH2', -0.598, (241.133, 158.911, 183.716)), (' A 552  SER  HB3', ' A 583  ASP  HB2', -0.592, (207.86, 250.369, 195.097)), (' A1002  GLN  OE1', ' C 999  GLN  NE2', -0.591, (211.774, 206.346, 198.831)), (' C 210  ILE HG12', ' C 217  PRO  HG3', -0.591, (233.363, 158.135, 197.191)), (' A 515  LEU HD23', ' A 517  ALA  H  ', -0.591, (224.53, 232.755, 163.324)), (' B 165  ASN  HB3', ' P   1  NAG  C7 ', -0.591, (233.719, 241.23, 153.735)), (' C  65  PHE  O  ', ' C 261  ALA  HA ', -0.586, (227.081, 151.645, 185.43)), (' B 450  TYR  HE1', ' B 490  GLN HE21', -0.585, (210.472, 186.908, 148.095)), (' C 713  THR  OG1', ' C1068  GLN  O  ', -0.582, (211.86, 186.883, 260.832)), (' A 350  TRP  O  ', ' A 463  ARG  NH2', -0.578, (222.974, 241.746, 142.626)), (' C 783  LYS  HG3', ' C 784  GLN  HG3', -0.578, (235.394, 220.44, 242.919)), (' A 346  SER  OG ', ' A 449  LEU  O  ', -0.576, (219.784, 244.057, 132.553)), (' B 704  TYR  HB3', ' C 789  PRO  HG3', -0.575, (240.377, 208.762, 253.273)), (' B 423  PRO  HG2', ' B 426  PHE  HB2', -0.574, (220.104, 191.743, 170.661)), (' C 313  SER  OG ', ' C 314  ASN  N  ', -0.574, (206.47, 183.386, 201.387)), (' B  31  SER  HB3', ' B  60  SER  H  ', -0.573, (246.494, 240.057, 192.005)), (' C  81  ASN  ND2', ' C 240  THR  O  ', -0.573, (227.462, 154.393, 175.353)), (' A 767  ILE  O  ', ' A 771  GLN  HG2', -0.573, (204.915, 197.425, 218.202)), (' B 615  THR  OG1', ' B 616  GLU  OE1', -0.568, (252.539, 210.188, 204.531)), (' B 755  SER  O  ', ' B 759  GLN  NE2', -0.568, (197.957, 211.576, 199.677)), (' A 980  ARG  HG2', ' C 379  VAL HG12', -0.566, (195.497, 197.93, 174.068)), (' C 565  ASP  OD1', ' C 569  THR  OG1', -0.565, (186.698, 196.839, 196.716)), (' C 400  ARG  HD3', ' C 402  ASP  H  ', -0.563, (202.702, 215.019, 150.452)), (' C 355  ILE  HB ', ' C 392  VAL  HB ', -0.562, (183.979, 199.76, 164.399)), (' C 106  PHE  HB2', ' C 117  LEU  HB2', -0.562, (227.389, 167.05, 171.058)), (' C 316  ARG  HG2', ' C 589  PHE  HB2', -0.56, (198.84, 184.262, 198.582)), (' B 719  VAL HG22', ' B1062  VAL HG22', -0.56, (216.572, 232.654, 244.455)), (' A 324  VAL HG23', ' A 539  ASN  HB3', -0.559, (204.078, 241.922, 178.371)), (' C 374  PHE  HE2', ' C 381  PRO  HB3', -0.558, (199.569, 195.819, 163.77)), (' A 557  LEU HD12', ' A 560  GLN HE22', -0.558, (223.698, 249.637, 190.956)), (' A 423  PRO  HD3', ' A 460  PRO  HB3', -0.555, (218.459, 228.973, 144.58)), (' B 601  THR  HA ', ' B2005  NAG  H82', -0.555, (240.536, 240.913, 218.899)), (' C  17  ASN  OD1', ' C 137  ASN  ND2', -0.553, (223.44, 147.269, 164.213)), (' A 389  PHE  HD1', ' A 514  LEU  HB2', -0.553, (216.535, 231.842, 160.4)), (' A 653  VAL  HA ', ' A2004  NAG  H82', -0.553, (179.076, 242.04, 222.259)), (' B 119  ILE HG12', ' B 128  ILE HG12', -0.548, (235.119, 249.241, 169.925)), (' A 106  PHE  HB3', ' A 235  ILE HG21', -0.543, (166.751, 218.65, 170.526)), (' A 314  ASN  ND2', ' B 734  ASP  OD2', -0.541, (195.527, 226.974, 198.705)), (' A 757  CYS  HA ', ' A 760  LEU  HB2', -0.54, (210.637, 197.052, 202.452)), (' B 373  THR  HB ', ' B 375  LYS  NZ ', -0.54, (221.884, 202.627, 158.795)), (' A 408  ALA  HB3', ' A 411  GLN  HG3', -0.539, (207.317, 230.678, 140.377)), (' C 518  PRO  HG3', ' C 561  GLN  HG3', -0.539, (177.662, 196.396, 181.197)), (' C 430  VAL HG12', ' C 509  VAL HG12', -0.539, (195.104, 207.05, 162.067)), (' A 445  ASN  OD1', ' A 447  ASN  ND2', -0.539, (216.867, 253.963, 129.946)), (' C  91  TYR  OH ', ' C 191  GLU  OE2', -0.536, (229.4, 164.118, 191.708)), (' C 122  ASN  OD1', ' C 123  ALA  N  ', -0.533, (243.597, 160.243, 178.198)), (' b   2  NAG  H3 ', ' b   2  NAG  H83', -0.533, (179.679, 175.139, 209.427)), (' A 767  ILE HD11', ' A1009  LEU HD23', -0.533, (209.11, 201.841, 214.189)), (' B 893  ILE HD12', ' B 894  PRO  HD2', -0.53, (201.37, 232.287, 257.919)), (' C 986  ALA  O  ', ' C 990  ILE HG12', -0.529, (224.67, 209.585, 182.122)), (' B 783  LYS  HG3', ' B 784  GLN  HG3', -0.528, (190.644, 229.144, 241.456)), (' C 143  VAL HG12', ' C 154  GLU  HG3', -0.528, (242.775, 151.821, 172.602)), (' C 499  GLY  O  ', ' C 503  GLN  NE2', -0.527, (205.059, 209.44, 142.611)), (' A 203  ILE  HB ', ' A 227  VAL HG12', -0.523, (166.003, 207.445, 176.807)), (' B 374  PHE  HE1', ' B 381  PRO  HB3', -0.523, (229.576, 204.884, 164.637)), (' B 354  ARG  NH1', ' C 230  PRO  O  ', -0.522, (231.655, 181.069, 169.573)), (' B 421  LYS  HZ3', ' B 458  LEU  HB2', -0.522, (212.092, 185.013, 164.305)), (' C 292  PRO  O  ', ' C 296  THR HG23', -0.521, (213.91, 177.716, 207.489)), (' B 210  ILE HG12', ' B 217  PRO  HG3', -0.521, (246.226, 254.415, 192.58)), (' A  65  PHE  O  ', ' A 261  ALA  HA ', -0.521, (151.868, 223.176, 182.883)), (' C 723  ILE HG13', ' C1058  VAL HG22', -0.521, (225.664, 197.854, 232.544)), (' B 491  SER  OG ', ' B 492  TYR  N  ', -0.519, (214.738, 186.076, 144.35)), (' C 799  PHE  HD1', ' C 802  ILE HD11', -0.519, (232.795, 199.428, 246.374)), (' B1083  LYS  HD2', ' B1119  VAL HG21', -0.518, (220.352, 202.259, 279.376)), (' B 355  ILE  HB ', ' B 392  VAL  HB ', -0.518, (234.673, 189.476, 166.414)), (' B 660  ASP  N  ', ' B 660  ASP  OD1', -0.516, (239.077, 226.022, 225.169)), (' B 574  ARG  HB3', ' B 581  ILE HG22', -0.515, (246.213, 188.066, 188.846)), (' C 565  ASP  OD1', ' C 566  ILE  N  ', -0.515, (185.089, 197.905, 197.257)), (' C 153  MET  N  ', ' C 153  MET  SD ', -0.514, (249.619, 150.902, 172.611)), (' C 424  ASP  OD1', ' C 425  ASP  N  ', -0.513, (195.608, 213.253, 174.217)), (' C 877  GLY  O  ', ' C 881  SER  OG ', -0.511, (231.656, 212.327, 249.042)), (' B 723  ILE HG12', ' B1058  VAL HG22', -0.51, (214.902, 231.504, 230.386)), (' A 719  VAL HG22', ' A1062  VAL HG22', -0.509, (189.434, 207.387, 245.043)), (' A 339  PHE  HB2', ' H   1  NAG  H82', -0.508, (209.379, 250.614, 150.66)), (' A 129  LYS  HD3', ' A 133  PHE  HZ ', -0.508, (160.125, 211.066, 161.921)), (' B 373  THR  OG1', ' B 432  ALA  HB3', -0.508, (222.459, 200.99, 156.41)), (' A 739  ILE HD11', ' A 750  LEU HD22', -0.507, (208.315, 195.4, 194.28)), (' C 414  ASN  OD1', ' C 415  ILE  N  ', -0.506, (198.176, 220.03, 156.834)), (' A 164  ASN  OD1', ' A 165  ASN  N  ', -0.506, (164.48, 212.737, 154.157)), (' C 602  SER  OG ', ' C 603  ASN  N  ', -0.505, (216.586, 169.296, 216.532)), (' C  87  ASN  HB2', ' C 266  TYR  HE2', -0.505, (217.47, 167.334, 180.516)), (' B  46  SER  CA ', ' B 276  TYR  O  ', -0.504, (223.061, 245.192, 201.372)), (' A 354  ARG  NH1', ' A 393  TYR  OH ', -0.504, (224.482, 238.047, 154.658)), (' B 439  ASP  OD1', ' B 448  TYR  OH ', -0.503, (225.403, 189.201, 145.804)), (' C 457  ASN  OD1', ' C 458  LEU  N  ', -0.502, (192.682, 224.019, 165.39)), (' C 976  ASP  HB3', ' C 980  ARG HH12', -0.501, (231.348, 199.177, 181.398)), (' B 726  VAL HG22', ' B1056  GLY  HA2', -0.5, (208.433, 228.61, 226.131)), (' B 108  THR  O  ', ' B 237  ARG  NH1', -0.5, (246.271, 236.423, 165.149)), (' A1102  THR HG22', ' A1109  PRO  HA ', -0.5, (194.991, 223.503, 268.388)), (' C 968  GLY  HA3', ' C 992  ARG HH21', -0.499, (215.878, 202.116, 185.6)), (' B 358  CYS  HB2', ' B 521  VAL HG23', -0.499, (241.043, 191.283, 166.536)), (' C1101  VAL HG13', ' C1112  ILE HG12', -0.498, (202.99, 199.357, 273.496)), (' B 709  ILE HD11', ' B1093  VAL HG12', -0.496, (230.573, 216.115, 264.546)), (' C 117  LEU HD13', ' C 130  VAL HG22', -0.496, (231.17, 169.741, 169.389)), (' B  21  ARG  O  ', ' B  23  GLN  NE2', -0.495, (263.105, 247.959, 170.021)), (' B 164  ASN  OD1', ' B 165  ASN  N  ', -0.495, (235.098, 243.473, 153.117)), (' B 100  ILE HG23', ' B 243  ILE HD13', -0.494, (249.584, 259.062, 174.505)), (' B 143  VAL HG12', ' B 154  GLU  HG3', -0.494, (245.693, 263.51, 167.575)), (' C 274  LEU HD23', ' C 282  ILE HD13', -0.494, (230.814, 177.618, 195.644)), (' B 129  LYS  HG2', ' B 169  GLU  HG3', -0.493, (232.766, 250.911, 162.089)), (' B 380  SER  N  ', ' C 980  ARG  O  ', -0.493, (229.284, 204.06, 172.997)), (' C 451  ARG HH22', ' C 454  ARG  HG3', -0.492, (188.92, 227.588, 158.121)), (' C 976  ASP  HB3', ' C 980  ARG  NH1', -0.49, (231.303, 200.007, 181.452)), (' A 902  ARG  NH1', ' A1046  LEU  O  ', -0.489, (198.532, 205.348, 249.278)), (' A 763  ALA  O  ', ' A 767  ILE HG12', -0.487, (208.481, 198.808, 213.228)), (' C 738  TYR  CE1', ' C 963  LEU HD11', -0.487, (227.234, 204.306, 198.635)), (' A 389  PHE  CD1', ' A 514  LEU  HB2', -0.486, (216.319, 231.502, 160.259)), (' C 719  VAL HG22', ' C1062  VAL HG22', -0.485, (224.58, 196.647, 246.758)), (' C 373  THR  HB ', ' C 432  ALA  HB3', -0.483, (200.647, 204.732, 156.257)), (' C 325  ARG  NH2', ' C 577  GLN  OE1', -0.483, (178.841, 181.714, 178.459)), (' A 979  SER  O  ', ' A 979  SER  OG ', -0.481, (195.39, 192.165, 177.32)), (' A 105  ILE HG13', ' A 241  LEU HD21', -0.48, (156.992, 216.519, 169.105)), (' A  89  GLY  HA3', ' A 267  LEU HD12', -0.479, (170.9, 218.243, 181.397)), (' B 194  PHE  HD1', ' B 203  ILE HG12', -0.479, (236.156, 245.516, 176.731)), (' A 985  GLU  O  ', ' A 989  GLN  HG2', -0.477, (204.635, 201.167, 179.572)), (' A 608  LEU HD12', ' A 647  LEU HD13', -0.477, (186.26, 233.639, 212.583)), (' A 637  SER  OG ', ' A 638  ASN  N  ', -0.477, (176.044, 239.912, 211.429)), (' B 703  ALA  HB2', ' W   2  NAG  H62', -0.477, (242.677, 215.119, 254.647)), (' C 806  PRO  O  ', ' C 811  LYS  NZ ', -0.476, (248.672, 201.825, 237.092)), (' B 983  PRO  N  ', ' B 984  PRO  HD2', -0.475, (202.819, 220.543, 173.475)), (' B 402  ASP  N  ', ' B 402  ASP  OD1', -0.474, (213.924, 197.988, 150.924)), (' A1087  PRO  HD3', ' A1092  PHE  HE2', -0.474, (206.266, 228.025, 268.028)), (' A 730  LYS  HE3', ' A 768  ALA  HB1', -0.473, (204.04, 192.956, 216.719)), (' C 408  ALA  HB3', ' C 411  GLN  HG3', -0.473, (201.582, 213.406, 164.47)), (' A 104  TRP  HB3', ' A 106  PHE  HE1', -0.472, (161.415, 215.659, 173.213)), (' C1025  LYS  NZ ', ' C1039  PHE  O  ', -0.472, (215.629, 203.484, 237.913)), (' B 342  THR  O  ', ' B 506  ARG  NH2', -0.471, (228.904, 190.499, 146.637)), (' A1040  CYS  HB2', ' A1061  HIS  CE1', -0.47, (197.922, 209.247, 239.992)), (' A 452  LEU  N  ', ' A 488  PRO  O  ', -0.469, (220.805, 237.17, 126.862)), (' A1132  ASN  OD1', ' A1133  THR  N  ', -0.469, (201.691, 232.617, 277.869)), (' C 102  ARG  NH2', ' C 122  ASN  O  ', -0.469, (241.398, 157.474, 179.297)), (' B  83  VAL HG11', ' B 237  ARG HH21', -0.469, (248.886, 238.935, 167.303)), (' C  82  PRO  O  ', ' C 239  GLN  NE2', -0.467, (223.04, 155.774, 174.557)), (' C 106  PHE  HB3', ' C 235  ILE HG21', -0.467, (224.612, 167.424, 172.708)), (' B 107  GLY  HA2', ' B 235  ILE HG22', -0.466, (239.478, 239.233, 166.997)), (' B 408  ALA  HB3', ' B 411  GLN  HG3', -0.465, (214.259, 197.991, 164.366)), (' C 335  PHE  HE1', ' C 355  ILE HD13', -0.464, (184.732, 198.052, 161.521)), (' E   1  NAG  H4 ', ' E   2  NAG  H2 ', -0.463, (175.844, 226.017, 163.871)), (' A 498  TYR  HD2', ' A 502  TYR  HB3', -0.462, (206.129, 245.656, 126.134)), (' B  88  ASP  OD1', ' B  89  GLY  N  ', -0.461, (239.692, 235.326, 179.756)), (' C 400  ARG  NH1', ' C 502  TYR  HA ', -0.461, (203.593, 214.075, 147.359)), (' B 419  ASN HD21', ' B 451  ARG  H  ', -0.461, (213.334, 183.734, 154.503)), (' A 793  ASP  N  ', ' A 793  ASP  OD1', -0.461, (186.243, 191.335, 255.745)), (' C  46  SER  CA ', ' C 276  TYR  O  ', -0.459, (235.04, 183.431, 203.457)), (' A 578  THR  OG1', ' A 580  GLU  OE2', -0.459, (206.655, 255.667, 185.006)), (' C1102  THR HG22', ' C1109  PRO  HA ', -0.459, (208.287, 195.148, 270.052)), (' C 423  PRO  HG2', ' C 426  PHE  HB2', -0.458, (193.383, 210.89, 170.172)), (' B 799  PHE  HD1', ' B 802  ILE HD11', -0.458, (210.538, 238.035, 243.943)), (' B 421  LYS  HE2', ' B 457  ASN  HB3', -0.457, (209.145, 185.952, 166.071)), (' A 891  LEU HD21', ' C1069  GLU  HG2', -0.457, (206.723, 189.059, 255.593)), (' B 374  PHE  CE1', ' B 381  PRO  HB3', -0.456, (229.993, 204.577, 164.624)), (' B1046  LEU  HB2', ' B1062  VAL  O  ', -0.456, (215.394, 227.851, 247.366)), (' A 928  ILE  O  ', ' A 931  ILE HG22', -0.456, (182.709, 206.143, 241.128)), (' B 451  ARG  HG3', ' B 488  PRO  HB2', -0.455, (209.715, 179.703, 154.152)), (' C 981  LEU HD12', ' C 985  GLU  HG3', -0.455, (224.206, 206.465, 174.293)), (' A 535  CYS  HB2', ' A 587  CYS  HB3', -0.454, (196.355, 241.934, 193.9)), (' B  17  ASN  HA ', ' B 137  ASN HD21', -0.452, (257.256, 249.475, 159.791)), (' A 808  LYS  HB2', ' A 808  LYS  HE3', -0.452, (179.916, 189.486, 234.926)), (' C1100  PHE  HZ ', ' g   1  NAG  H62', -0.451, (206.79, 190.256, 276.65)), (' C 129  LYS  HZ1', ' C 169  GLU  HB3', -0.451, (239.708, 168.615, 165.596)), (' A 418  TYR  HA ', ' A 458  LEU HD23', -0.451, (221.53, 231.963, 133.973)), (' B 793  ASP  N  ', ' B 793  ASP  OD1', -0.451, (203.979, 243.997, 253.515)), (' B 639  VAL HG22', ' B 648  ILE HG12', -0.451, (251.117, 220.281, 209.199)), (' C 112  SER  HA ', ' C 132  GLU  HB3', -0.45, (225.84, 164.941, 160.224)), (' B 614  CYS  HB2', ' B 646  CYS  HB3', -0.45, (248.726, 214.12, 210.293)), (' B  65  PHE  O  ', ' B 261  ALA  HA ', -0.449, (253.407, 251.005, 180.685)), (' B1007  GLN  HB3', ' B1011  ARG HH12', -0.449, (213.711, 220.3, 209.781)), (' C 439  ASP  O  ', ' C 445  ASN  ND2', -0.449, (193.315, 211.355, 141.996)), (' C 326  PHE  HE2', ' C 525  LYS  HD3', -0.448, (188.904, 186.09, 173.245)), (' C 481  LYS  HA ', ' C 485  CYS  HB2', -0.448, (188.902, 238.732, 149.094)), (' A 388  CYS  HB3', ' A 522  CYS  HB3', -0.448, (210.763, 238.468, 163.05)), (' B 773  LYS  NZ ', ' B 777  GLU  OE1', -0.448, (199.047, 217.98, 227.522)), (' C1126  VAL  HB ', ' C1129  ILE HD11', -0.447, (189.933, 203.384, 269.836)), (' A1043  GLY  HA2', ' B 887  ALA  HB1', -0.446, (196.269, 219.071, 247.228)), (' C 296  THR  HA ', ' C 299  THR HG22', -0.446, (215.297, 181.685, 206.745)), (' B 307  LYS  HG3', ' B 597  PRO  HA ', -0.445, (238.952, 231.313, 218.842)), (' A1025  LYS  NZ ', ' A1039  PHE  O  ', -0.445, (200.578, 211.418, 237.286)), (' C 304  THR  HA ', ' C 599  THR HG21', -0.445, (222.913, 177.074, 213.294)), (' B 744  THR  OG1', ' B 745  GLU  OE1', -0.444, (196.736, 225.653, 182.155)), (' A 659  CYS  HB2', ' A 694  MET  HG2', -0.444, (188.694, 230.691, 225.653)), (' A 430  VAL HG22', ' A 509  VAL HG22', -0.443, (210.809, 237.451, 145.134)), (' C 326  PHE  O  ', ' C 577  GLN  NE2', -0.442, (180.072, 184.038, 175.188)), (' B 350  TRP  O  ', ' B 463  ARG  NH2', -0.442, (224.772, 182.049, 158.823)), (' A 100  ILE HG23', ' A 243  ILE HD13', -0.442, (146.862, 215.834, 177.856)), (' A 400  ARG  NH1', ' A 501  GLY  O  ', -0.441, (205.437, 240.97, 128.69)), (' C 764  LEU HD23', ' C 767  ILE HD11', -0.44, (223.753, 211.42, 211.215)), (' B 806  PRO  O  ', ' B 811  LYS  NZ ', -0.44, (199.737, 249.8, 234.296)), (' B 313  SER  OG ', ' B 314  ASN  N  ', -0.44, (236.875, 220.023, 201.168)), (' A 364  VAL HG13', ' A 365  LEU HD12', -0.44, (206.03, 248.52, 155.082)), (' A 350  TRP  CZ2', ' A 463  ARG  HB2', -0.439, (223.443, 237.782, 141.992)), (' A  91  TYR  OH ', ' A 191  GLU  OE1', -0.439, (161.58, 215.697, 189.763)), (' B 331  ASN  O  ', ' B 359  VAL HG22', -0.437, (246.124, 192.62, 164.962)), (' C 131  CYS  HB3', ' C 166  CYS  HB3', -0.436, (231.146, 170.012, 160.628)), (' C 718  SER  OG ', ' C1063  THR  OG1', -0.436, (218.579, 194.307, 246.745)), (' A 893  ILE HD12', ' A 894  PRO  HD2', -0.435, (197.826, 195.327, 259.911)), (' B 328  ASN  OD1', ' B 329  ILE  N  ', -0.434, (250.452, 189.157, 173.661)), (' A 942  LEU HD23', ' A 945  LEU HD12', -0.434, (189.389, 204.099, 226.309)), (' B1047  MET  HE2', ' B1049  PHE  CZ ', -0.434, (209.8, 232.472, 245.848)), (' B 325  ARG  NH1', ' B 530  LEU HD23', -0.434, (252.449, 195.519, 184.679)), (' C 118  LEU HD11', ' C 135  PHE  HZ ', -0.433, (230.118, 161.857, 166.627)), (' A 374  PHE  CD1', ' A 431  ILE HG12', -0.432, (204.872, 241.927, 149.039)), (' W   1  NAG  O3 ', ' W   2  NAG  N2 ', -0.432, (243.756, 221.034, 256.649)), (' A 609  TYR  HE2', ' A 648  ILE HD12', -0.431, (183.913, 236.136, 204.908)), (' C1042  LYS  H  ', ' C1063  THR HG21', -0.431, (216.559, 197.498, 245.082)), (' A 818  LEU HD21', ' A 936  SER  HB2', -0.43, (178.63, 202.877, 233.91)), (' C 324  VAL HG22', ' C 539  ASN  HB3', -0.43, (189.301, 184.798, 179.068)), (' A 390  THR  HA ', ' A 519  ALA  HA ', -0.43, (218.676, 236.977, 163.958)), (' C 535  CYS  HB2', ' C 587  CYS  HB3', -0.43, (191.557, 180.524, 194.546)), (' A 439  ASP  OD1', ' A 448  TYR  OH ', -0.429, (213.849, 250.733, 136.252)), (' C 284  ASP  HB3', ' C 303  PHE  CE2', -0.429, (228.038, 175.505, 204.694)), (' C1087  PRO  HD3', ' C1092  PHE  HE2', -0.429, (198.779, 202.957, 269.227)), (' B  99  ASN  HB2', ' B 102  ARG HH22', -0.428, (242.429, 261.982, 176.143)), (' C 140  PHE  HB3', ' C 242  HIS  HB3', -0.427, (231.945, 150.791, 172.092)), (' B 526  LYS  NZ ', ' B 527  SER  H  ', -0.426, (251.845, 199.807, 174.682)), (' C 100  ILE HG23', ' C 243  ILE HD13', -0.426, (236.068, 151.084, 180.609)), (' A 436  ASN  O  ', ' A 440  SER  OG ', -0.426, (206.612, 254.08, 131.356)), (' C 935  LEU  HA ', ' C 935  LEU HD23', -0.425, (228.019, 189.253, 234.142)), (' A 548  VAL HG12', ' A 585  THR  O  ', -0.423, (200.6, 242.746, 195.148)), (' A 903  PHE  CD2', ' A 913  LEU  HB2', -0.423, (192.929, 208.636, 258.868)), (' A 709  ILE HD11', ' A1093  VAL HG12', -0.422, (197.107, 229.657, 263.53)), (' A 473  GLY  H  ', ' A 484  ASN  HB3', -0.422, (227.893, 228.777, 117.438)), (' B 124  THR HG23', ' B 125  ASN  H  ', -0.421, (232.606, 259.586, 173.21)), (' A 104  TRP  N  ', ' A 241  LEU HD23', -0.421, (157.033, 215.405, 171.663)), (' B 728  MET  HB2', ' B 952  ASN HD21', -0.42, (209.721, 226.789, 215.829)), (' A1036  ARG  H  ', ' A1036  ARG  HG2', -0.42, (206.336, 212.252, 244.458)), (' B1047  MET  HE2', ' B1049  PHE  CE1', -0.419, (209.336, 232.754, 245.362)), (' B 131  CYS  HB3', ' B 166  CYS  HB3', -0.419, (233.763, 243.934, 157.574)), (' C1035  LYS  HB3', ' C1035  LYS  HE3', -0.418, (210.338, 208.392, 250.395)), (' B 400  ARG  HB2', ' B 403  GLU  HG3', -0.417, (213.269, 195.118, 152.077)), (' A 452  LEU HD22', ' A 490  GLN  HG3', -0.417, (218.293, 238.723, 123.426)), (' C1040  CYS  HB2', ' C1061  HIS  CE1', -0.417, (219.33, 202.562, 241.049)), (' C 335  PHE  CE1', ' C 355  ILE HD13', -0.416, (184.991, 198.096, 161.523)), (' B 190  ARG  HG2', ' B 207  HIS  CE1', -0.415, (239.027, 255.815, 182.145)), (' C 371  PHE  HA ', ' C 433  TRP  HB3', -0.415, (198.349, 200.476, 152.773)), (' C 609  TYR  HB2', ' C 646  CYS  SG ', -0.415, (198.804, 177.112, 208.84)), (' B1007  GLN  HB3', ' B1011  ARG  NH1', -0.415, (213.527, 220.212, 210.01)), (' C 822  LYS  HA ', ' C 822  LYS  HD2', -0.414, (232.443, 189.328, 227.31)), (' B 121  ASN  HA ', ' B 126  VAL HG12', -0.414, (236.56, 254.862, 173.206)), (' B 596  THR  HB ', ' B 605  VAL HG12', -0.414, (240.597, 230.615, 211.909)), (' A  99  ASN  HB3', ' A 102  ARG  NH2', -0.413, (150.494, 208.529, 178.803)), (' C 204  TYR  CD1', ' C 225  PRO  HA ', -0.413, (233.928, 174.287, 185.059)), (' B 439  ASP  OD2', ' B 506  ARG  NE ', -0.413, (226.505, 192.563, 147.884)), (' A 736  THR  O  ', ' A 740  CYS  HB2', -0.412, (203.738, 192.428, 194.207)), (' B  99  ASN  OD1', ' B 190  ARG  NH2', -0.412, (240.868, 260.916, 180.133)), (' B 455  LYS  HB2', ' B 455  LYS  HE2', -0.411, (205.865, 177.027, 162.035)), (' C 793  ASP  N  ', ' C 793  ASP  OD1', -0.411, (240.606, 202.307, 256.595)), (' B 745  GLU  N  ', ' B 745  GLU  OE1', -0.411, (198.011, 224.391, 182.561)), (' B  95  THR  HB ', ' B 189  LEU HD13', -0.411, (246.426, 253.665, 186.97)), (' C  97  LYS  O  ', ' C 100  ILE HG12', -0.41, (239.097, 151.71, 184.904)), (' B 575  ASP  N  ', ' B 575  ASP  OD1', -0.409, (248.621, 190.702, 185.834)), (' C 453  PHE  HB3', ' C 470  TYR  CD2', -0.409, (192.328, 231.902, 155.699)), (' B 696  LEU HD22', ' C 870  TYR  CZ ', -0.409, (236.681, 214.755, 232.942)), (' C 813  SER  OG ', ' C 816  GLU  HG3', -0.408, (235.941, 199.296, 237.192)), (' B 373  THR  HB ', ' B 375  LYS  HZ3', -0.407, (222.102, 202.49, 158.789)), (' C 291  ASP  HB2', ' C 292  PRO  HD2', -0.406, (211.839, 171.798, 206.056)), (' C 400  ARG  HB2', ' C 492  TYR  CE1', -0.406, (198.097, 216.616, 149.514)), (' B 143  VAL  HA ', ' B 154  GLU  HG2', -0.405, (246.282, 263.991, 165.664)), (' C 672  GLN  HG2', ' C 688  SER  HB3', -0.405, (210.194, 166.526, 223.391)), (' C 322  SER  HA ', ' C 537  ASN  O  ', -0.405, (191.23, 180.967, 184.078)), (' A 749  LEU  O  ', ' A 752  GLN  HG2', -0.404, (214.156, 196.474, 188.906)), (' A 204  TYR  CD1', ' A 225  PRO  HA ', -0.403, (168.466, 206.661, 183.112)), (' C 113  LYS  HB3', ' C 113  LYS  HE2', -0.403, (219.018, 166.164, 158.811)), (' A 435  SER  OG ', ' A 439  ASP  OD2', -0.403, (209.761, 250.268, 136.999)), (' A 450  TYR  HE2', ' A 452  LEU HD13', -0.403, (216.453, 237.316, 125.815)), (' A  17  ASN  OD1', ' A 137  ASN  ND2', -0.403, (150.02, 228.73, 161.364)), (' B 535  CYS  HB2', ' B 587  CYS  HB3', -0.402, (247.033, 206.946, 196.085)), (' A 122  ASN  OD1', ' A2002  NAG  N2 ', -0.402, (151.06, 202.911, 173.059)), (' C 390  THR HG22', ' C 520  THR  H  ', -0.401, (181.302, 196.338, 172.952)), (' C 118  LEU  O  ', ' C 128  ILE  HA ', -0.401, (234.826, 166.428, 170.687)), (' A 964  SER  O  ', ' A 964  SER  OG ', -0.401, (192.67, 204.93, 191.517)), (' B 157  PHE  HE1', ' B 160  TYR  HE1', -0.401, (240.741, 253.213, 160.007)), (' B 493  GLY  O  ', ' B 502  TYR  OH ', -0.4, (213.252, 192.656, 141.861)), (' B 390  THR HG22', ' B 513  GLU  OE2', -0.4, (234.15, 188.233, 175.59)), (' A  96  GLU  HG2', ' A 190  ARG  HD2', -0.4, (152.993, 211.36, 183.228)), (' C 434  ASN  OD1', ' C 435  SER  N  ', -0.4, (198.62, 205.325, 145.748))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

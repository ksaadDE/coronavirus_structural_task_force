# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 123 ', 'ALA', 0.025195584880369815, (119.88000000000012, 123.051, 130.576)), ('A', ' 175 ', 'PHE', 0.0016351741410489853, (124.75800000000005, 127.92, 136.999)), ('A', '1067 ', 'GLN', 0.023834321975796796, (135.71799999999988, 151.564, 218.84)), ('B', ' 175 ', 'PHE', 0.0016245455809525365, (205.905, 145.66100000000012, 137.002)), ('B', ' 473 ', 'TYR', 0.01825813075717577, (125.65900000000006, 162.462, 116.67700000000002)), ('B', '1125 ', 'VAL', 0.08677670176335879, (153.297, 135.124, 228.469)), ('B', '1126 ', 'ILE', 0.0884729004609252, (156.781, 134.852, 230.09300000000002)), ('C', ' 123 ', 'ALA', 0.011763451186410652, (148.183, 213.80000000000013, 130.432)), ('C', ' 175 ', 'PHE', 0.0016729966033834911, (149.974, 207.061, 137.002)), ('C', ' 473 ', 'TYR', 0.01872176426022628, (175.547, 129.15, 116.678)), ('C', ' 571 ', 'ASP', 0.02907001694282928, (181.34600000000006, 164.521, 154.204)), ('C', '1067 ', 'GLN', 0.017049840649523654, (165.446, 185.4920000000001, 218.688))]
data['omega'] = []
data['rota'] = [('A', ' 121 ', 'ASN', 0.006361171027181508, (121.20300000000006, 129.089, 131.162)), ('A', ' 124 ', 'THR', 0.07839336613399162, (123.32800000000013, 121.723, 129.632)), ('A', ' 326 ', 'ILE', 0.07938508128983283, (128.6849999999999, 170.323, 141.549)), ('A', ' 372 ', 'THR', 0.2861456012318092, (145.488, 168.987, 112.794)), ('A', ' 455 ', 'LEU', 0.0277703044620541, (173.454, 180.684, 115.761)), ('A', ' 474 ', 'GLN', 0.221524172948297, (183.215, 189.088, 116.448)), ('A', ' 535 ', 'LYS', 0.020029226002136472, (123.93400000000001, 174.397, 149.273)), ('A', ' 712 ', 'THR', 0.05865624768652124, (138.8639999999999, 151.162, 223.136)), ('A', ' 811 ', 'ARG', 0.04479941201053761, (158.369, 129.828, 196.668)), ('A', ' 812 ', 'SER', 0.014299383304271994, (155.779, 130.822, 199.331)), ('A', ' 890 ', 'LEU', 0.00874487501975562, (170.543, 140.617, 216.186)), ('A', ' 897 ', 'GLN', 0.036271061678887453, (159.85, 142.68000000000012, 218.983)), ('A', '1129 ', 'VAL', 0.01973174792831278, (140.009, 172.19, 238.887)), ('A', '1130 ', 'ASN', 0.1811449048343194, (141.189, 168.758, 240.20400000000004)), ('B', ' 121 ', 'ASN', 0.0, (206.543, 142.2010000000001, 131.183)), ('B', ' 124 ', 'THR', 0.05497266248677677, (211.991, 147.371, 129.144)), ('B', ' 326 ', 'ILE', 0.09229892478376306, (167.219, 127.852, 141.553)), ('B', ' 455 ', 'LEU', 0.02487589550231642, (135.80799999999996, 161.46100000000013, 115.77400000000002)), ('B', ' 712 ', 'THR', 0.06866661759180687, (178.713, 146.268, 223.308)), ('B', ' 800 ', 'GLN', 0.03756796907757882, (189.878, 167.308, 204.081)), ('B', ' 811 ', 'ARG', 0.044277573927279275, (187.44400000000002, 173.81200000000013, 196.67200000000005)), ('B', ' 812 ', 'SER', 0.014814547518990587, (187.88, 171.071, 199.33300000000003)), ('B', '1126 ', 'ILE', 0.021795450298288308, (156.781, 134.852, 230.09300000000002)), ('B', '1129 ', 'VAL', 0.01715527026860145, (159.94700000000012, 136.789, 239.024)), ('C', ' 121 ', 'ASN', 0.0, (152.646, 209.37700000000012, 131.023)), ('C', ' 124 ', 'THR', 0.06500272319078407, (145.50800000000007, 211.369, 129.215)), ('C', ' 126 ', 'VAL', 0.025041493036056916, (150.442, 206.4340000000001, 129.51)), ('C', ' 326 ', 'ILE', 0.08742293302144118, (184.74, 182.462, 141.554)), ('C', ' 800 ', 'GLN', 0.06913100677644006, (139.25499999999988, 182.2620000000001, 204.07000000000005)), ('C', ' 811 ', 'ARG', 0.04341337677725901, (134.8239999999999, 177.0, 196.673)), ('C', ' 812 ', 'SER', 0.015088739902837179, (136.97999999999988, 178.747, 199.335)), ('C', ' 850 ', 'LYS', 0.23441561295397695, (138.2939999999999, 171.248, 165.661)), ('C', ' 890 ', 'LEU', 0.2680429195040456, (138.0799999999999, 161.078, 216.183)), ('C', '1068 ', 'GLU', 0.022072577163209924, (168.70700000000005, 183.446, 219.037)), ('C', '1129 ', 'VAL', 0.01884577174183449, (180.69400000000013, 171.716, 238.888)), ('C', '1130 ', 'ASN', 0.1813952071800983, (177.13100000000014, 172.409, 240.203))]
data['cbeta'] = [('A', ' 122 ', 'ASN', ' ', 0.34422394313391164, (118.98000000000015, 126.68, 127.694)), ('C', ' 122 ', 'ASN', ' ', 0.35136041547002944, (151.818, 212.679, 127.67500000000003))]
data['probe'] = [(' C 847  CYS  HA ', ' C 850  LYS  HB2', -0.728, (137.67, 173.398, 165.582)), (' A 474  GLN  HB3', ' A 480  CYS  HB2', -0.708, (184.155, 191.371, 115.474)), (' B 711  PRO  HG2', ' B1065  PRO  HB2', -0.683, (174.77, 147.032, 217.237)), (' C 326  ILE HD11', ' C 534  VAL  H  ', -0.628, (188.372, 185.048, 144.338)), (' B 727  MET  HB2', ' B 951  ASN HD21', -0.621, (173.537, 165.598, 179.801)), (' B 326  ILE HD11', ' B 534  VAL  H  ', -0.615, (167.22, 123.854, 144.29)), (' B 712  THR  H  ', ' B1067  GLN  HB3', -0.614, (179.059, 144.798, 220.99)), (' C 712  THR  HB ', ' C1067  GLN  HG2', -0.614, (163.875, 185.781, 221.795)), (' C 120  VAL  O  ', ' C 120  VAL HG12', -0.606, (153.876, 209.621, 127.45)), (' C 302  THR HG21', ' C 316  SER  H  ', -0.601, (168.104, 183.3, 164.402)), (' C 472  ILE HG13', ' C 482  GLY  HA2', -0.598, (180.144, 126.585, 111.876)), (' C 137  ASN HD22', ' C1301  NAG  H2 ', -0.597, (174.492, 213.885, 121.332)), (' B 302  THR HG21', ' B 316  SER  H  ', -0.596, (175.795, 141.701, 164.271)), (' B 472  ILE HG13', ' B 482  GLY  HA2', -0.595, (121.085, 159.624, 111.82)), (' B 137  ASN HD22', ' B1301  NAG  H2 ', -0.594, (199.161, 120.831, 121.412)), (' A 457  ARG  NH1', ' A 467  ASP  OD2', -0.592, (170.615, 188.086, 121.891)), (' A 302  THR HG21', ' A 316  SER  H  ', -0.592, (136.19, 155.522, 164.33)), (' A 979  ARG  HE ', ' B 517  LEU HD13', -0.591, (154.486, 140.204, 139.239)), (' A1119  SER  CB ', ' C 910  ASN HD22', -0.59, (154.565, 174.372, 231.988)), (' A 137  ASN HD22', ' A1301  NAG  H2 ', -0.589, (106.152, 145.835, 121.14)), (' A 472  ILE HG13', ' A 482  GLY  HA2', -0.589, (179.557, 194.79, 111.777)), (' B 131  CYS  HA ', ' B 166  CYS  HA ', -0.588, (193.273, 141.8, 118.558)), (' A 370  ASN  HB3', ' B 455  LEU HD11', -0.587, (138.27, 164.462, 111.969)), (' C 357  ARG  NH2', ' C 394  ASN  OD1', -0.587, (190.411, 158.242, 130.411)), (' A 357  ARG  NH2', ' A 394  ASN  OD1', -0.586, (147.127, 186.979, 130.477)), (' A 910  ASN HD22', ' B1119  SER  CB ', -0.585, (150.676, 147.929, 231.996)), (' A 896  MET  HE1', ' B1073  THR  OG1', -0.582, (165.057, 141.016, 226.63)), (' C 457  ARG  NH1', ' C 467  ASP  OD2', -0.582, (179.1, 137.354, 121.918)), (' B 910  ASN HD22', ' C1119  SER  CB ', -0.582, (175.158, 157.786, 232.017)), (' B 457  ARG  NH1', ' B 467  ASP  OD2', -0.581, (130.426, 155.614, 122.259)), (' B 896  MET  HE1', ' C1073  THR  OG1', -0.581, (174.47, 173.989, 226.688)), (' B 357  ARG  NH2', ' B 394  ASN  OD1', -0.58, (143.846, 135.355, 130.331)), (' C 409  GLN HE22', ' C 418  ILE  H  ', -0.578, (168.189, 146.029, 119.72)), (' B 979  ARG  HE ', ' C 517  LEU HD13', -0.576, (179.86, 165.121, 139.43)), (' A 517  LEU HD13', ' C 979  ARG  HE ', -0.574, (146.272, 174.814, 139.386)), (' B 409  GLN HE22', ' B 418  ILE  H  ', -0.574, (143.542, 160.195, 119.589)), (' A1024  LYS  NZ ', ' A1038  PHE  O  ', -0.574, (153.659, 152.847, 200.828)), (' C1024  LYS  NZ ', ' C1038  PHE  O  ', -0.572, (157.254, 169.409, 200.338)), (' A 409  GLN HE22', ' A 418  ILE  H  ', -0.569, (168.695, 174.207, 119.901)), (' B1026  SER  O  ', ' C1036  VAL  HB ', -0.569, (165.429, 168.172, 205.349)), (' A1036  VAL  HB ', ' C1026  SER  O  ', -0.569, (150.106, 160.958, 205.197)), (' B1024  LYS  NZ ', ' B1038  PHE  O  ', -0.567, (169.812, 158.135, 200.801)), (' B 100  ILE HG12', ' B 242  LEU HD12', -0.567, (208.658, 130.208, 134.951)), (' A 805  PRO  HA ', ' A 810  LYS  HD2', -0.566, (160.9, 124.192, 198.925)), (' C 100  ILE HG12', ' C 242  LEU HD12', -0.566, (161.423, 217.269, 134.868)), (' C 131  CYS  HA ', ' C 166  CYS  HA ', -0.565, (159.908, 198.428, 118.777)), (' A1073  THR  OG1', ' C 896  MET  HE1', -0.565, (141.078, 165.705, 226.615)), (' B  34  ARG  HA ', ' B 221  SER  HB3', -0.564, (197.46, 140.4, 151.841)), (' C 897  GLN HE21', ' C 901  ARG  HE ', -0.563, (146.673, 169.183, 213.541)), (' A1026  SER  O  ', ' B1036  VAL  HB ', -0.563, (164.506, 151.686, 205.407)), (' C 188  ASN  OD1', ' C 207  HIS  NE2', -0.562, (150.27, 212.194, 145.316)), (' B 897  GLN HE21', ' B 901  ARG  HE ', -0.56, (174.724, 167.906, 213.649)), (' B 805  PRO  HA ', ' B 810  LYS  HD2', -0.56, (191.412, 178.937, 199.315)), (' A 131  CYS  HA ', ' A 166  CYS  HA ', -0.559, (127.288, 140.894, 118.765)), (' C 210  ILE HD13', ' C 217  PRO  HG3', -0.558, (157.826, 212.414, 151.942)), (' B 132  GLU  HB2', ' B 164  ASN  O  ', -0.557, (192.456, 138.55, 116.169)), (' A  20  THR  HA ', ' A  79  PHE  H  ', -0.556, (101.388, 141.204, 133.342)), (' A 188  ASN  OD1', ' A 207  HIS  NE2', -0.554, (120.18, 125.634, 145.403)), (' A 100  ILE HG12', ' A 242  LEU HD12', -0.553, (110.122, 132.773, 134.785)), (' C 132  GLU  HB2', ' C 164  ASN  O  ', -0.55, (163.283, 198.854, 116.364)), (' B1304  NAG  H3 ', ' B1304  NAG  H83', -0.55, (202.879, 160.528, 156.073)), (' B 334  ASN  O  ', ' B 362  VAL  N  ', -0.55, (154.886, 128.926, 125.218)), (' C  20  THR  HA ', ' C  79  PHE  H  ', -0.549, (173.119, 220.724, 133.339)), (' C1304  NAG  H3 ', ' C1304  NAG  H83', -0.549, (139.098, 196.643, 156.301)), (' A 979  ARG  HE ', ' B 517  LEU  CD1', -0.549, (154.434, 140.638, 138.925)), (' C 805  PRO  HA ', ' C 810  LYS  HD2', -0.549, (128.314, 177.568, 198.869)), (' A 927  ILE  HA ', ' A 930  ILE HG12', -0.548, (146.679, 137.331, 203.999)), (' A 100  ILE HD13', ' A 263  ALA  HB2', -0.547, (108.67, 132.584, 136.72)), (' A1304  NAG  H3 ', ' A1304  NAG  H83', -0.547, (139.263, 123.618, 156.379)), (' C  34  ARG  HA ', ' C 221  SER  HB3', -0.545, (159.221, 202.327, 152.04)), (' A  34  ARG  HA ', ' A 221  SER  HB3', -0.544, (124.24, 137.834, 151.756)), (' A 132  GLU  HB2', ' A 164  ASN  O  ', -0.544, (124.643, 143.163, 116.414)), (' A 575  ALA  HA ', ' A 586  ASP  HA ', -0.543, (132.938, 179.498, 152.032)), (' C1112  THR HG22', ' C1113  THR  H  ', -0.543, (165.073, 167.104, 240.861)), (' C 108  THR  O  ', ' C 237  ARG  NH1', -0.543, (173.06, 201.224, 127.374)), (' B 188  ASN  OD1', ' B 207  HIS  NE2', -0.542, (210.186, 142.864, 145.401)), (' B 575  ALA  HA ', ' B 586  ASP  HA ', -0.542, (156.725, 127.173, 151.794)), (' C 927  ILE  HA ', ' C 930  ILE HG12', -0.541, (147.223, 183.12, 204.509)), (' B 210  ILE HD13', ' B 217  PRO  HG3', -0.54, (206.667, 136.063, 151.956)), (' B  29  THR HG22', ' B  30  ASN  H  ', -0.54, (198.468, 128.86, 152.873)), (' A 210  ILE HD13', ' A 217  PRO  HG3', -0.54, (116.0, 132.028, 152.016)), (' C 575  ALA  HA ', ' C 586  ASP  HA ', -0.539, (190.524, 173.8, 151.728)), (' C  29  THR HG22', ' C  30  ASN  H  ', -0.538, (167.964, 209.429, 152.864)), (' A 517  LEU  CD1', ' C 979  ARG  HE ', -0.538, (146.117, 175.064, 138.964)), (' B  81  ASN HD22', ' B 242  LEU HD23', -0.538, (204.212, 128.74, 132.728)), (' B 862  THR HG22', ' B 864  GLU  H  ', -0.537, (183.358, 177.838, 189.417)), (' B 100  ILE HD13', ' B 263  ALA  HB2', -0.536, (209.495, 129.207, 136.89)), (' B  20  THR  HA ', ' B  79  PHE  H  ', -0.535, (206.405, 118.238, 133.295)), (' A1112  THR HG22', ' A1113  THR  H  ', -0.535, (151.752, 161.429, 240.774)), (' C 862  THR HG22', ' C 864  GLU  H  ', -0.535, (133.322, 171.262, 188.967)), (' B 718  VAL HG22', ' B1061  VAL HG22', -0.534, (181.326, 159.695, 207.981)), (' A 718  VAL HG22', ' A1061  VAL HG22', -0.534, (149.619, 142.46, 207.979)), (' B 927  ILE  HA ', ' B 930  ILE HG12', -0.534, (186.916, 160.092, 204.421)), (' C  81  ASN HD22', ' C 242  LEU HD23', -0.534, (166.014, 213.982, 132.605)), (' B 979  ARG  HE ', ' C 517  LEU  CD1', -0.533, (180.022, 164.819, 138.936)), (' A  29  THR HG22', ' A  30  ASN  H  ', -0.531, (113.726, 142.34, 152.788)), (' A 455  LEU HD11', ' C 370  ASN  OD1', -0.531, (174.568, 177.245, 111.397)), (' C 100  ILE HD13', ' C 263  ALA  HB2', -0.528, (162.299, 218.73, 136.616)), (' A  81  ASN HD22', ' A 242  LEU HD23', -0.528, (110.786, 138.218, 132.474)), (' B1112  THR HG22', ' B1113  THR  H  ', -0.526, (163.707, 152.65, 240.856)), (' A 108  THR  O  ', ' A 237  ARG  NH1', -0.525, (118.171, 151.166, 127.302)), (' C 718  VAL HG22', ' C1061  VAL HG22', -0.522, (150.211, 178.767, 208.063)), (' C 334  ASN  O  ', ' C 362  VAL  N  ', -0.522, (189.942, 171.19, 125.134)), (' B 710  ILE HD11', ' B1090  VAL HG21', -0.521, (168.126, 144.222, 225.035)), (' C  40  ASP  OD2', ' C  44  ARG  NH2', -0.52, (153.87, 183.882, 148.389)), (' C 712  THR  H  ', ' C1067  GLN  HB3', -0.515, (164.597, 184.093, 220.747)), (' A 102  ARG  NH1', ' A 122  ASN  HA ', -0.515, (117.078, 126.994, 129.854)), (' B 108  THR  O  ', ' B 237  ARG  NH1', -0.513, (189.356, 128.662, 127.54)), (' A 334  ASN  O  ', ' A 362  VAL  N  ', -0.513, (135.809, 180.415, 125.177)), (' A 974  ASN  O  ', ' A 978  SER  OG ', -0.512, (160.031, 138.812, 143.34)), (' C 710  ILE HD11', ' C1090  VAL HG21', -0.511, (169.933, 175.531, 224.974)), (' C 974  ASN  O  ', ' C 978  SER  OG ', -0.509, (141.937, 170.588, 143.215)), (' A 339  GLY  O  ', ' A 343  ASN  HB3', -0.507, (143.472, 178.299, 111.624)), (' C 676  THR  HA ', ' C 686  GLN  HA ', -0.506, (168.517, 203.51, 182.558)), (' C 339  GLY  O  ', ' C 343  ASN  HB3', -0.506, (184.213, 165.722, 111.637)), (' C1094  ASN  N  ', ' C1097  HIS  O  ', -0.505, (173.236, 180.399, 234.247)), (' B1094  ASN  N  ', ' B1097  HIS  O  ', -0.504, (170.911, 138.883, 234.597)), (' A1094  ASN  N  ', ' A1097  HIS  O  ', -0.501, (136.196, 161.67, 234.635)), (' B 676  THR  HA ', ' B 686  GLN  HA ', -0.5, (193.512, 131.456, 182.538)), (' C 303  LEU  O  ', ' C 305  SER  N  ', -0.498, (159.246, 186.433, 164.82)), (' A  40  ASP  OD2', ' A  44  ARG  NH2', -0.498, (143.057, 142.818, 148.242)), (' A 676  THR  HA ', ' A 686  GLN  HA ', -0.497, (118.861, 145.839, 182.519)), (' A 212  LEU HD13', ' A 215  ASP  HB3', -0.497, (111.484, 133.549, 154.216)), (' B 339  GLY  O  ', ' B 343  ASN  HB3', -0.497, (153.041, 136.255, 111.869)), (' A 125  ASN  HB2', ' E   1  NAG  H61', -0.497, (125.09, 124.009, 126.32)), (' B 642  VAL HG12', ' B 651  ILE HG12', -0.495, (178.086, 123.97, 172.411)), (' C 212  LEU HD13', ' C 215  ASP  HB3', -0.494, (161.102, 215.661, 154.462)), (' B 303  LEU  O  ', ' B 305  SER  N  ', -0.494, (183.321, 148.045, 164.843)), (' A 303  LEU  O  ', ' A 305  SER  N  ', -0.494, (137.927, 146.289, 164.749)), (' C 642  VAL HG12', ' C 651  ILE HG12', -0.493, (182.52, 193.912, 172.324)), (' B 376  THR  HB ', ' B 435  ALA  HB3', -0.492, (155.356, 152.059, 119.438)), (' C1089  GLY  HA2', ' C1101  THR  O  ', -0.492, (167.127, 171.421, 227.376)), (' B 105  ILE HG13', ' B 241  LEU HD21', -0.492, (199.73, 133.831, 128.123)), (' A 125  ASN  H  ', ' A 174  PRO  HD3', -0.49, (125.861, 123.457, 131.374)), (' B 848  ALA  O  ', ' B 852  ASN  ND2', -0.49, (180.761, 169.739, 161.177)), (' A 105  ILE HG13', ' A 241  LEU HD21', -0.489, (117.479, 138.75, 128.154)), (' B 540  ASN  ND2', ' B 549  THR  OG1', -0.489, (168.942, 134.743, 147.471)), (' A 642  VAL HG12', ' A 651  ILE HG12', -0.488, (119.388, 162.402, 172.371)), (' C 376  THR  HB ', ' C 435  ALA  HB3', -0.487, (169.731, 160.118, 119.443)), (' B 212  LEU HD13', ' B 215  ASP  HB3', -0.487, (207.726, 131.741, 154.507)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.486, (155.359, 168.873, 119.137)), (' C 563  GLN  O  ', ' C 577  ARG  NH1', -0.485, (196.016, 167.266, 144.657)), (' C 105  ILE HG13', ' C 241  LEU HD21', -0.485, (162.835, 207.87, 128.243)), (' B 856  VAL  O  ', ' C 613  GLN  NE2', -0.485, (178.574, 176.933, 173.879)), (' A 848  ALA  O  ', ' A 852  ASN  ND2', -0.484, (158.131, 137.743, 161.185)), (' B1089  GLY  HA2', ' B1101  THR  O  ', -0.484, (166.448, 148.533, 227.445)), (' A 427  ASP  OD2', ' B 982  PRO  HG2', -0.484, (166.776, 175.544, 137.422)), (' A1089  GLY  HA2', ' A1101  THR  O  ', -0.483, (146.823, 160.157, 227.353)), (' A 563  GLN  O  ', ' A 577  ARG  NH1', -0.483, (136.157, 187.606, 144.663)), (' A 540  ASN  ND2', ' A 549  THR  OG1', -0.483, (134.005, 165.372, 147.237)), (' B1094  ASN  OD1', ' B1095  GLY  N  ', -0.48, (174.822, 137.038, 234.856)), (' A1094  ASN  OD1', ' A1095  GLY  N  ', -0.478, (132.817, 159.168, 234.941)), (' B 187  LYS  HA ', ' B 210  ILE  O  ', -0.478, (213.315, 138.081, 149.607)), (' B  40  ASP  OD2', ' B  44  ARG  NH2', -0.477, (183.731, 153.965, 148.293)), (' C1094  ASN  HB3', ' C1097  HIS  HB2', -0.476, (171.908, 182.154, 236.335)), (' A 187  LYS  HA ', ' A 210  ILE  O  ', -0.475, (114.85, 125.427, 149.955)), (' B 427  ASP  OD2', ' C 982  PRO  HG2', -0.475, (143.943, 157.846, 137.212)), (' B 791  LYS  HA ', ' B 791  LYS  HD3', -0.474, (188.479, 174.363, 211.098)), (' A 849  GLN  HB3', ' A 959  VAL HG21', -0.473, (156.543, 139.564, 165.446)), (' C 187  LYS  HA ', ' C 210  ILE  O  ', -0.472, (152.747, 217.07, 149.557)), (' B 563  GLN  O  ', ' B 577  ARG  NH1', -0.472, (148.697, 125.203, 144.498)), (' A1094  ASN  HB3', ' A1097  HIS  HB2', -0.471, (134.989, 159.537, 236.793)), (' A 856  VAL  O  ', ' B 613  GLN  NE2', -0.47, (165.643, 135.991, 174.017)), (' C 727  MET  HB2', ' C 951  ASN HD21', -0.469, (148.764, 169.793, 179.687)), (' A 982  PRO  HG2', ' C 427  ASP  OD2', -0.469, (170.14, 146.962, 137.416)), (' A 425  LEU HD21', ' A 512  VAL HG11', -0.466, (157.156, 177.531, 126.256)), (' B1094  ASN  HB3', ' B1097  HIS  HB2', -0.466, (173.29, 138.882, 236.772)), (' B 173  GLN  HB3', ' B 174  PRO  HD2', -0.465, (208.655, 150.377, 133.648)), (' A 173  GLN  HB3', ' A 174  PRO  HD2', -0.464, (127.468, 123.12, 133.673)), (' C 411  ALA  HB3', ' C 414  GLN  HG2', -0.464, (167.082, 151.909, 127.06)), (' C 425  LEU HD21', ' C 512  VAL HG11', -0.464, (176.446, 153.864, 126.416)), (' B 974  ASN  O  ', ' B 978  SER  OG ', -0.462, (178.605, 171.038, 143.419)), (' A 727  MET  HB2', ' A 951  ASN HD21', -0.461, (157.997, 145.597, 179.959)), (' B 761  ARG  NE ', ' C 953  GLN  NE2', -0.46, (156.574, 177.268, 170.862)), (' C 173  GLN  HB3', ' C 174  PRO  HD2', -0.459, (144.526, 206.626, 133.805)), (' A 613  GLN  NE2', ' C 856  VAL  O  ', -0.458, (136.538, 167.584, 174.024)), (' C 849  GLN  HB3', ' C 959  VAL HG21', -0.458, (143.873, 173.354, 165.605)), (' A1084  HIS  HB3', ' A1116  THR HG21', -0.457, (149.449, 167.728, 236.34)), (' B 251  PRO  N  ', ' B 255  SER  O  ', -0.457, (213.845, 121.657, 124.661)), (' B 425  LEU HD21', ' B 512  VAL HG11', -0.456, (146.697, 148.927, 126.219)), (' B1084  HIS  HB3', ' B1116  THR HG21', -0.456, (159.15, 146.65, 236.297)), (' B 849  GLN  HB3', ' B 959  VAL HG21', -0.456, (179.698, 167.768, 165.668)), (' C1084  HIS  HB3', ' C1116  THR HG21', -0.455, (172.551, 165.916, 236.361)), (' A 251  PRO  N  ', ' A 255  SER  O  ', -0.455, (99.791, 133.505, 124.67)), (' C 125  ASN  HB2', ' L   1  NAG  H61', -0.454, (146.989, 208.076, 126.256)), (' C1076  ALA  HB2', ' C1085  PHE  CE2', -0.454, (177.648, 164.623, 230.708)), (' C1094  ASN  OD1', ' C1095  GLY  N  ', -0.454, (172.998, 184.48, 234.852)), (' B 411  ALA  HB3', ' B 414  GLN  HG2', -0.453, (149.481, 158.284, 127.14)), (' B 452  LEU  HG ', ' B 494  ARG  HG2', -0.453, (136.367, 154.071, 107.122)), (' A 411  ALA  HB3', ' A 414  GLN  HG2', -0.452, (163.551, 170.154, 127.114)), (' A 712  THR  H  ', ' A1067  GLN  HB3', -0.451, (137.368, 151.687, 220.871)), (' C 251  PRO  N  ', ' C 255  SER  O  ', -0.451, (167.219, 225.85, 124.828)), (' A 798  PHE  CD1', ' A 801  ILE HD11', -0.451, (154.691, 135.85, 208.049)), (' C 350  VAL HG22', ' C 422  ASN  HB3', -0.451, (175.311, 146.731, 118.62)), (' A 847  CYS  HA ', ' A 850  LYS  HB3', -0.451, (160.183, 133.775, 165.878)), (' C 452  LEU  HG ', ' C 494  ARG  HG2', -0.449, (177.499, 142.708, 107.085)), (' A 761  ARG  NE ', ' B 953  GLN  NE2', -0.448, (177.107, 154.815, 170.703)), (' B 761  ARG  NE ', ' C 953  GLN HE22', -0.447, (156.765, 177.629, 171.305)), (' A  67  ALA  HB2', ' A 263  ALA  HB3', -0.447, (107.618, 135.413, 137.539)), (' B1076  ALA  HB2', ' B1085  PHE  CE2', -0.447, (154.915, 143.033, 230.451)), (' A 953  GLN HE22', ' C 761  ARG  NE ', -0.445, (146.818, 148.454, 171.271)), (' A 953  GLN  NE2', ' C 761  ARG  NE ', -0.445, (146.749, 148.492, 170.534)), (' A 452  LEU  HG ', ' A 494  ARG  HG2', -0.443, (166.403, 183.889, 107.421)), (' A1076  ALA  HB2', ' A1085  PHE  CE2', -0.443, (147.693, 172.892, 230.618)), (' A 350  VAL HG22', ' A 422  ASN  HB3', -0.442, (164.708, 180.295, 118.71)), (' B 847  CYS  HA ', ' B 850  LYS  HB3', -0.441, (183.234, 173.428, 165.676)), (' A 979  ARG  NE ', ' B 517  LEU  CD1', -0.441, (154.184, 141.406, 139.28)), (' C  67  ALA  HB2', ' C 263  ALA  HB3', -0.44, (164.997, 218.25, 137.555)), (' A 403  THR HG22', ' A 497  PHE  HE1', -0.44, (163.604, 173.139, 109.103)), (' C1080  ASP  HB3', ' C1082  LYS  HE3', -0.438, (176.922, 162.501, 243.615)), (' B  67  ALA  HB2', ' B 263  ALA  HB3', -0.438, (207.943, 126.646, 137.57)), (' C 403  THR HG22', ' C 497  PHE  HE1', -0.438, (169.712, 150.797, 109.099)), (' B1049  PRO  O  ', ' B1050  GLN  NE2', -0.438, (181.507, 168.651, 200.442)), (' A 791  LYS  HA ', ' A 791  LYS  HD3', -0.437, (158.028, 128.825, 211.546)), (' B 979  ARG  NE ', ' C 517  LEU  CD1', -0.436, (179.677, 164.498, 139.429)), (' B 403  THR HG22', ' B 497  PHE  HE1', -0.436, (147.184, 156.983, 109.416)), (' B 350  VAL HG22', ' B 422  ASN  HB3', -0.435, (140.858, 153.783, 118.542)), (' A 517  LEU  CD1', ' C 979  ARG  NE ', -0.435, (146.716, 175.163, 139.058)), (' C1095  GLY  O  ', ' C1096  THR  OG1', -0.434, (175.602, 184.199, 238.795)), (' A 850  LYS  HB2', ' A 850  LYS  HE3', -0.434, (160.879, 134.344, 167.909)), (' A 798  PHE  HD1', ' A 801  ILE HD11', -0.433, (154.326, 135.735, 208.408)), (' C  32  SER  OG ', ' C  33  THR  N  ', -0.433, (162.581, 203.802, 156.285)), (' B  48  LEU HD22', ' B 306  PHE  HE1', -0.433, (188.194, 150.267, 161.004)), (' C  48  LEU HD22', ' C 306  PHE  HE1', -0.432, (155.179, 189.684, 161.06)), (' A  48  LEU HD22', ' A 306  PHE  HE1', -0.431, (137.168, 141.023, 161.043)), (' A 324  ASP  N  ', ' A 324  ASP  OD1', -0.431, (125.693, 164.565, 145.735)), (' C 791  LYS  HA ', ' C 791  LYS  HD3', -0.43, (134.187, 177.903, 211.518)), (' A 456  PHE  HB3', ' A 473  TYR  CD2', -0.43, (178.283, 184.519, 117.029)), (' A  32  SER  OG ', ' A  33  THR  N  ', -0.429, (120.913, 140.296, 156.456)), (' A 314  GLN  NE2', ' A 596  SER  OG ', -0.427, (134.619, 160.126, 172.954)), (' A1080  ASP  HB3', ' A1082  LYS  HE3', -0.426, (149.806, 173.503, 243.454)), (' A 126  VAL HG12', ' A 172  SER  O  ', -0.426, (127.701, 127.232, 130.752)), (' C 324  ASP  N  ', ' C 324  ASP  OD1', -0.426, (181.228, 187.954, 145.793)), (' C1076  ALA  O  ', ' C1127  GLY  HA2', -0.426, (179.968, 167.866, 233.477)), (' A 761  ARG  NE ', ' B 953  GLN HE22', -0.426, (177.044, 154.6, 171.161)), (' B1080  ASP  HB3', ' B1082  LYS  HE3', -0.425, (154.333, 144.511, 243.614)), (' C 848  ALA  O  ', ' C 852  ASN  ND2', -0.425, (141.744, 173.337, 161.168)), (' A1076  ALA  O  ', ' A1127  GLY  HA2', -0.424, (143.641, 173.394, 233.468)), (' B 850  LYS  HB2', ' B 850  LYS  HE3', -0.423, (182.476, 173.743, 167.842)), (' C 314  GLN  NE2', ' C 596  SER  OG ', -0.423, (172.688, 182.105, 173.108)), (' C 319  ARG  HG2', ' C 629  LEU HD22', -0.422, (176.718, 189.767, 159.114)), (' B1025  MET  HE2', ' B1049  PRO  HB3', -0.422, (175.35, 168.379, 199.851)), (' B  32  SER  OG ', ' B  33  THR  N  ', -0.422, (197.159, 136.262, 156.469)), (' C 471  GLU  O  ', ' C 491  PRO  HD3', -0.422, (178.412, 132.381, 113.423)), (' B 314  GLN  NE2', ' B 596  SER  OG ', -0.422, (172.766, 138.446, 172.962)), (' B 471  GLU  O  ', ' B 491  PRO  HD3', -0.422, (127.061, 158.248, 113.437)), (' B 800  GLN  HB2', ' B 800  GLN HE21', -0.421, (188.899, 165.274, 205.362)), (' B 885  GLY  O  ', ' C1041  LYS  HE2', -0.42, (164.916, 176.349, 206.494)), (' A 875  ALA  O  ', ' A 879  THR  OG1', -0.42, (165.086, 136.411, 210.892)), (' C1025  MET  HE2', ' C1049  PRO  HB3', -0.42, (145.401, 169.152, 199.907)), (' B 324  ASP  N  ', ' B 324  ASP  OD1', -0.42, (173.717, 128.171, 145.836)), (' C 921  ASN  HA ', ' C 921  ASN HD22', -0.419, (145.285, 186.399, 215.49)), (' A 471  GLU  O  ', ' A 491  PRO  HD3', -0.419, (174.998, 189.475, 113.343)), (' B 759  LEU HD22', ' B1004  VAL HG21', -0.419, (164.935, 168.808, 167.707)), (' B 126  VAL HG12', ' B 172  SER  O  ', -0.419, (204.79, 148.259, 130.953)), (' B 761  ARG  CD ', ' C 953  GLN HE22', -0.418, (156.831, 177.276, 171.564)), (' A 953  GLN HE22', ' C 761  ARG  CD ', -0.418, (147.03, 148.716, 171.471)), (' A 294  ASP  N  ', ' A 294  ASP  OD1', -0.417, (125.748, 150.402, 162.709)), (' C 426  PRO  HB3', ' C 463  PRO  HB3', -0.417, (177.184, 148.559, 132.257)), (' A 319  ARG  HG2', ' A 629  LEU HD22', -0.416, (126.346, 159.599, 159.154)), (' A1025  MET  HE2', ' A1049  PRO  HB3', -0.415, (159.987, 143.38, 199.863)), (' C 137  ASN  ND2', ' C1301  NAG  H2 ', -0.414, (175.123, 213.576, 121.568)), (' A 112  SER  OG ', ' A 134  GLN  HB2', -0.414, (117.906, 145.068, 116.539)), (' B 319  ARG  HG2', ' B 629  LEU HD22', -0.412, (177.787, 130.923, 158.803)), (' C 570  ALA  O  ', ' C 572  THR  N  ', -0.412, (182.423, 166.287, 155.038)), (' A 721  GLU  OE2', ' A1024  LYS  HE3', -0.411, (153.575, 151.606, 197.378)), (' A 761  ARG  CD ', ' B 953  GLN HE22', -0.411, (176.375, 154.322, 171.521)), (' B  37  TYR  OH ', ' B  54  LEU  O  ', -0.411, (187.113, 142.1, 145.292)), (' A 759  LEU HD22', ' A1004  VAL HG21', -0.411, (165.334, 151.855, 167.74)), (' B 112  SER  OG ', ' B 134  GLN  HB2', -0.411, (194.535, 131.264, 116.546)), (' A 930  ILE HG13', ' A 931  GLN  N  ', -0.411, (145.891, 136.456, 201.747)), (' B 721  GLU  OE2', ' B1024  LYS  HE3', -0.411, (170.965, 158.746, 197.374)), (' A 137  ASN  ND2', ' A1301  NAG  H2 ', -0.41, (106.608, 146.341, 121.378)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.41, (168.953, 194.824, 162.783)), (' C 141  LEU  HA ', ' C 141  LEU HD12', -0.409, (159.101, 214.434, 125.454)), (' B 401  VAL HG22', ' B 509  ARG  HG2', -0.409, (148.776, 148.045, 112.098)), (' B 890  LEU HD23', ' C 709  ALA  O  ', -0.409, (169.621, 178.39, 219.56)), (' B 570  ALA  O  ', ' B 572  THR  N  ', -0.409, (154.462, 138.094, 155.079)), (' C 930  ILE HG13', ' C 931  GLN  N  ', -0.409, (146.632, 184.907, 201.76)), (' C 102  ARG  NH1', ' C 122  ASN  HA ', -0.409, (152.831, 213.512, 130.024)), (' A1079  HIS  O  ', ' A1082  LYS  HG2', -0.408, (148.504, 173.324, 241.425)), (' C1077  ILE HD12', ' C1130  ASN  HB3', -0.408, (175.142, 171.308, 238.577)), (' A 326  ILE HD11', ' A 534  VAL  H  ', -0.408, (124.575, 172.152, 144.534)), (' C1049  PRO  O  ', ' C1050  GLN  NE2', -0.408, (142.125, 174.351, 200.49)), (' C 112  SER  OG ', ' C 134  GLN  HB2', -0.407, (168.164, 204.011, 116.44)), (' C 129  LYS  HB3', ' C 131  CYS  SG ', -0.407, (157.233, 201.391, 121.335)), (' B 126  VAL  N  ', ' B 172  SER  O  ', -0.407, (206.118, 148.077, 129.937)), (' A 401  VAL HG22', ' A 509  ARG  HG2', -0.406, (155.352, 176.295, 112.113)), (' C 627  ASP  N  ', ' C 627  ASP  OD1', -0.406, (184.178, 192.792, 157.535)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.405, (185.789, 135.348, 162.807)), (' A 125  ASN  HA ', ' A 125  ASN HD22', -0.405, (127.228, 124.364, 130.236)), (' C  64  TRP  HH2', ' C 214  ARG  HB2', -0.405, (166.858, 218.409, 150.204)), (' B 930  ILE HG13', ' B 931  GLN  N  ', -0.405, (187.927, 159.667, 201.728)), (' C 174  PRO  O  ', ' C 175  PHE  O  ', -0.405, (147.949, 208.146, 137.051)), (' C 875  ALA  O  ', ' C 879  THR  OG1', -0.405, (137.134, 167.866, 210.86)), (' C 721  GLU  OE2', ' C1024  LYS  HE3', -0.405, (156.125, 170.677, 197.33)), (' B  64  TRP  HH2', ' B 214  ARG  HB2', -0.404, (207.275, 125.441, 150.181)), (' A 426  PRO  HB3', ' A 463  PRO  HB3', -0.404, (161.759, 180.776, 132.194)), (' B 712  THR HG23', ' B1106  TYR  HB3', -0.404, (177.989, 145.908, 226.096)), (' B 426  PRO  HB3', ' B 463  PRO  HB3', -0.404, (141.373, 151.486, 131.957)), (' B 627  ASP  N  ', ' B 627  ASP  OD1', -0.403, (176.439, 123.21, 157.521)), (' A 802  LEU  HA ', ' A 802  LEU HD23', -0.403, (158.592, 132.599, 204.271)), (' B 137  ASN  ND2', ' B1301  NAG  H2 ', -0.403, (198.961, 120.661, 121.405)), (' A1041  LYS  HE2', ' C 885  GLY  O  ', -0.402, (144.073, 156.584, 206.583)), (' A 129  LYS  HB3', ' A 131  CYS  SG ', -0.402, (126.105, 137.217, 120.962)), (' C 401  VAL HG22', ' C 509  ARG  HG2', -0.402, (176.429, 155.982, 112.067)), (' C1091  PHE  HA ', ' C1091  PHE  HD1', -0.401, (171.268, 172.75, 231.981)), (' A1077  ILE HD12', ' A1130  ASN  HB3', -0.401, (143.125, 167.617, 238.557)), (' C 298  GLU  O  ', ' C 302  THR HG23', -0.4, (166.784, 185.927, 164.124)), (' A 885  GLY  O  ', ' B1041  LYS  HE2', -0.4, (171.514, 147.981, 206.766)), (' C 893  PRO  HB2', ' C 896  MET  HB3', -0.4, (141.264, 170.411, 222.194)), (' A 711  PRO  HG3', ' C 890  LEU HD21', -0.4, (140.667, 156.208, 217.678))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['cbeta'] = []
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' B 448  ASN  HB3', ' B 497  PHE  HB2', -0.707, (186.651, 234.923, 116.174)), (' B 367  VAL  HA ', ' B 371  SER  HB2', -0.635, (176.319, 229.324, 141.579)), (' A 328  ARG  NH2', ' A 531  THR  O  ', -0.615, (159.999, 156.123, 161.493)), (' C 777  ASN  OD1', ' C1019  ARG  NH1', -0.607, (179.04, 194.367, 209.516)), (' B 352  ALA  HA ', ' B 466  ARG  HD3', -0.605, (200.563, 223.734, 125.812)), (' A 131  CYS  HA ', ' A 166  CYS  HB3', -0.6, (199.094, 149.095, 140.547)), (' C 422  ASN HD21', ' C 454  ARG  H  ', -0.595, (186.547, 162.937, 138.08)), (' B 452  LEU HD21', ' B 492  LEU  HB3', -0.592, (198.424, 227.103, 114.751)), (' B 350  VAL HG12', ' B 400  PHE  HB2', -0.59, (191.561, 224.298, 124.474)), (' B 707  TYR  HB3', ' C 792  PRO  HG2', -0.588, (175.618, 213.422, 237.381)), (' C 133  PHE  HD2', ' C 162  SER  H  ', -0.587, (215.956, 229.873, 145.036)), (' C 901  GLN HE21', ' C 905  ARG  HE ', -0.581, (184.05, 202.091, 236.334)), (' C 212  LEU HD23', ' C 214  ARG  H  ', -0.579, (228.927, 231.464, 179.5)), (' A 642  VAL HG22', ' A 651  ILE HG12', -0.578, (174.494, 146.569, 193.526)), (' C 447  GLY  N  ', ' C 449  TYR  HH ', -0.575, (188.526, 170.071, 120.119)), (' A  99  ASN  HB3', ' A 102  ARG HH12', -0.567, (211.106, 133.076, 156.621)), (' B 134  GLN  O  ', ' B 160  TYR  OH ', -0.561, (131.937, 195.216, 147.292)), (' B 605  SER  OG ', ' B 606  ASN  N  ', -0.561, (149.13, 198.954, 199.229)), (' B 454  ARG  NH1', ' B 469  SER  O  ', -0.559, (202.07, 221.756, 117.157)), (' C 134  GLN  H  ', ' C 162  SER  HB3', -0.558, (218.144, 227.986, 142.734)), (' B 474  GLN  NE2', ' B 478  THR  O  ', -0.557, (207.149, 216.131, 103.336)), (' B 424  LYS  HB3', ' B 463  PRO  HA ', -0.557, (196.518, 211.765, 127.181)), (' B 546  LEU HD21', ' B 573  THR HG21', -0.555, (186.854, 217.451, 175.414)), (' A 518  LEU HD23', ' A 519  HIS  HB2', -0.554, (160.042, 180.326, 165.272)), (' B 777  ASN  OD1', ' B1019  ARG  NH1', -0.552, (183.846, 174.929, 208.826)), (' A 940  SER  OG ', ' A 941  THR  N  ', -0.549, (204.528, 156.743, 214.958)), (' C 494  SER  OG ', ' C 495  TYR  N  ', -0.546, (186.196, 165.374, 127.972)), (' A  99  ASN  O  ', ' A 102  ARG  NH1', -0.541, (209.258, 133.068, 155.849)), (' B 415  THR  OG1', ' B 416  GLY  N  ', -0.539, (189.048, 211.037, 119.418)), (' A 716  THR  OG1', ' A1071  GLN  O  ', -0.537, (188.735, 160.019, 243.906)), (' A 901  GLN HE21', ' A 905  ARG  HE ', -0.534, (202.839, 180.109, 236.006)), (' C 277  LEU HD22', ' C 285  ILE HD13', -0.533, (206.339, 218.815, 180.028)), (' A 352  ALA  HA ', ' A 466  ARG  HD2', -0.532, (160.267, 195.548, 141.813)), (' A 553  THR  HB ', ' A 586  ASP  HB3', -0.529, (160.446, 160.609, 177.775)), (' C 106  PHE  HB2', ' C 117  LEU  HB3', -0.528, (213.829, 221.367, 154.484)), (' C 605  SER  OG ', ' C 606  ASN  N  ', -0.528, (220.419, 211.092, 199.195)), (' B 457  ARG  NH1', ' B 459  SER  O  ', -0.528, (200.227, 212.249, 118.019)), (' B1028  LYS  NZ ', ' B1042  PHE  O  ', -0.527, (177.597, 185.527, 222.513)), (' C 122  ASN  HB3', ' C 125  ASN  H  ', -0.524, (211.007, 239.268, 156.093)), (' A 357  ARG  NH1', ' A 359  SER  OG ', -0.524, (153.757, 178.975, 151.226)), (' A 128  ILE  HB ', ' A 170  TYR  HB3', -0.524, (206.696, 149.459, 148.952)), (' C 349  SER  OG ', ' C 452  LEU  O  ', -0.524, (190.008, 163.517, 133.782)), (' B 226  LEU HD12', ' B 227  VAL HG22', -0.521, (141.731, 181.683, 161.822)), (' A 443  SER  OG ', ' A 444  LYS  N  ', -0.521, (174.085, 190.696, 123.403)), (' C 273  ARG  NH2', ' C 290  ASP  OD2', -0.519, (215.438, 209.856, 179.981)), (' C1103  PHE  HZ ', ' T   1  NAG  H62', -0.518, (208.91, 194.442, 260.668)), (' B 136  CYS  SG ', ' B 137  ASN  N  ', -0.518, (129.227, 201.243, 149.27)), (' A 106  PHE  HB2', ' A 117  LEU  HB3', -0.518, (196.593, 146.911, 150.974)), (' A 707  TYR  HB3', ' B 792  PRO  HG3', -0.518, (168.757, 162.155, 236.921)), (' B  34  ARG  NH2', ' B 217  PRO  O  ', -0.517, (137.713, 190.1, 181.731)), (' C 530  SER  OG ', ' C 531  THR  N  ', -0.517, (226.333, 176.663, 160.778)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.516, (157.11, 197.779, 203.416)), (' A 454  ARG  NH2', ' A 467  ASP  O  ', -0.514, (161.082, 202.665, 142.952)), (' A  34  ARG  NH2', ' A 191  GLU  OE2', -0.513, (204.639, 142.492, 172.95)), (' B 406  GLU  OE2', ' B 495  TYR  OH ', -0.513, (186.888, 223.862, 118.161)), (' A 333  THR  OG1', ' A 334  ASN  OD1', -0.511, (153.118, 168.571, 147.012)), (' C 457  ARG  NH1', ' C 467  ASP  OD1', -0.508, (185.22, 155.874, 144.967)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.507, (218.065, 208.439, 186.73)), (' B 403  ARG  HA ', ' B 507  PRO  HA ', -0.506, (182.644, 227.188, 120.126)), (' A 659  SER  HB3', ' A 698  SER  HB3', -0.506, (177.965, 153.478, 215.628)), (' A 737  ASP  OD2', ' C 319  ARG  NH2', -0.503, (210.191, 189.59, 182.97)), (' A 383  SER  OG ', ' B 985  ASP  OD1', -0.502, (178.673, 175.27, 156.655)), (' A 552  LEU HD23', ' A 585  LEU HD11', -0.498, (161.016, 159.128, 170.101)), (' C 136  CYS  SG ', ' C 160  TYR  OH ', -0.498, (224.184, 227.631, 147.201)), (' B 402  ILE HG23', ' B 406  GLU  HG2', -0.494, (185.244, 221.858, 120.881)), (' B 454  ARG  NH2', ' B 467  ASP  O  ', -0.494, (201.078, 220.942, 120.919)), (' C 381  GLY  HA3', ' C 430  THR HG23', -0.493, (200.132, 175.176, 156.921)), (' B 409  GLN  HG3', ' B 419  ALA  H  ', -0.492, (188.732, 214.525, 120.695)), (' A 553  THR  O  ', ' A 586  ASP  N  ', -0.49, (159.233, 160.767, 175.284)), (' B1141  LEU HD13', ' C1141  LEU HD11', -0.489, (187.381, 187.909, 270.149)), (' A 719  THR  HA ', ' A 926  GLN HE22', -0.486, (197.056, 162.8, 236.824)), (' B 456  PHE  HB2', ' B 491  PRO  HA ', -0.484, (198.872, 220.366, 111.07)), (' B 444  LYS  HG2', ' B 448  ASN  HB2', -0.484, (186.832, 238.287, 116.599)), (' B 433  VAL HG22', ' B 512  VAL HG13', -0.483, (187.961, 218.543, 132.385)), (' B 901  GLN HE21', ' B 905  ARG  HE ', -0.483, (174.706, 175.016, 236.177)), (' B 452  LEU  HA ', ' B 494  SER  HA ', -0.48, (193.859, 228.632, 115.828)), (' B 716  THR  OG1', ' B1071  GLN  O  ', -0.479, (163.992, 197.496, 244.596)), (' A 110  LEU  HB3', ' A 135  PHE  HD2', -0.478, (192.346, 140.131, 146.113)), (' B 127  VAL HG12', ' B 171  VAL HG12', -0.477, (134.966, 179.393, 151.664)), (' C 108  THR  OG1', ' C 234  ASN  O  ', -0.477, (214.058, 214.118, 151.766)), (' A 335  LEU HD12', ' A 336  CYS  H  ', -0.475, (160.816, 169.282, 143.7)), (' B 940  SER  OG ', ' B 941  THR  N  ', -0.474, (152.779, 184.964, 215.004)), (' A 457  ARG  NH2', ' A 459  SER  O  ', -0.472, (165.658, 206.289, 149.49)), (' C 719  THR  HA ', ' C 926  GLN HE22', -0.472, (201.943, 206.306, 237.542)), (' A 852  ALA  O  ', ' A 856  ASN  ND2', -0.471, (208.222, 176.899, 183.605)), (' C 318  PHE  HZ ', ' C 615  VAL HG21', -0.47, (219.718, 188.325, 187.803)), (' A  65  PHE  O  ', ' A 264  ALA  N  ', -0.469, (198.038, 130.465, 164.477)), (' A 231  ILE HD12', ' A 233  ILE HG12', -0.468, (195.63, 152.013, 150.282)), (' C 625  HIS  HB2', ' C 629  LEU HD13', -0.468, (221.248, 199.384, 179.333)), (' B 442  ASP  O  ', ' B 448  ASN  ND2', -0.466, (186.452, 235.662, 118.844)), (' C  83  VAL HG11', ' C 237  ARG HH21', -0.465, (224.633, 216.477, 152.7)), (' B  37  TYR  OH ', ' B  54  LEU  O  ', -0.464, (150.506, 190.843, 170.91)), (' C 168  PHE  HZ ', ' C 231  ILE  HA ', -0.463, (204.233, 220.502, 152.718)), (' A 437  ASN  HA ', ' A 508  TYR  HA ', -0.462, (175.441, 186.476, 134.399)), (' A 476  GLY  H  ', ' A 487  ASN  HB3', -0.46, (168.611, 220.463, 141.459)), (' B 424  LYS  HG3', ' B 461  LEU  HB2', -0.459, (197.448, 212.626, 124.308)), (' A 448  ASN  OD1', ' A 450  ASN  ND2', -0.458, (166.492, 192.998, 125.519)), (' A 298  GLU  HG2', ' A 315  THR  HB ', -0.456, (186.118, 158.245, 186.645)), (' A 984  LEU  O  ', ' C 386  LYS  NZ ', -0.455, (205.971, 185.237, 160.359)), (' C 574  ASP  N  ', ' C 574  ASP  OD1', -0.454, (213.219, 170.507, 176.343)), (' B  66  HIS  HD2', ' B  68  ILE HG12', -0.454, (123.926, 202.902, 169.476)), (' C 491  PRO  HG2', ' C 492  LEU HD12', -0.452, (183.69, 156.064, 135.022)), (' A 117  LEU HD22', ' A 231  ILE HD13', -0.451, (198.338, 150.099, 151.581)), (' A 604  THR  HA ', ' A1306  NAG  H82', -0.449, (197.419, 147.605, 201.702)), (' B 581  THR  O  ', ' B 583  GLU  N  ', -0.447, (185.589, 231.723, 173.06)), (' C 858  LEU HD13', ' C 959  LEU HD22', -0.447, (184.488, 204.934, 190.408)), (' C 444  LYS  H  ', ' C 447  GLY  HA2', -0.446, (192.065, 171.219, 121.192)), (' C 825  LYS  NZ ', ' C 940  SER  O  ', -0.445, (199.494, 214.475, 214.454)), (' C 599  THR HG22', ' C 608  VAL HG12', -0.445, (216.82, 205.404, 196.462)), (' C 318  PHE  CZ ', ' C 615  VAL HG21', -0.442, (219.528, 188.604, 187.943)), (' C 659  SER  HB3', ' C 698  SER  HB2', -0.44, (221.424, 193.489, 216.125)), (' C 642  VAL HG22', ' C 651  ILE HG12', -0.438, (227.779, 195.39, 193.992)), (' A 743  CYS  HB3', ' A 749  CYS  HB3', -0.438, (205.056, 188.906, 173.941)), (' B 403  ARG  NH2', ' B 405  ASP  OD2', -0.437, (181.024, 222.704, 115.685)), (' B 234  ASN  N  ', ' B 234  ASN  OD1', -0.437, (149.552, 196.805, 152.485)), (' B 361  CYS  HB2', ' B 524  VAL HG23', -0.437, (191.243, 224.386, 148.018)), (' A 134  GLN  O  ', ' A 160  TYR  OH ', -0.436, (195.783, 137.593, 141.421)), (' A 452  LEU HD12', ' A 492  LEU  HB3', -0.435, (164.887, 202.898, 133.681)), (' C 581  THR  O  ', ' C 583  GLU  N  ', -0.435, (225.286, 165.448, 167.425)), (' B 332  ILE HG23', ' B 362  VAL HG21', -0.433, (187.04, 228.532, 153.962)), (' A 618  THR  OG1', ' A 619  GLU  OE1', -0.433, (164.197, 150.588, 189.924)), (' A  37  TYR  OH ', ' A  54  LEU  O  ', -0.433, (195.954, 153.833, 168.068)), (' B 763  LEU HD22', ' B1008  VAL HG21', -0.432, (183.92, 176.857, 189.381)), (' A 551  VAL  HB ', ' A 588  THR HG23', -0.432, (166.737, 159.73, 177.842)), (' B 133  PHE  HE1', ' B 162  SER  H  ', -0.431, (133.163, 189.413, 146.156)), (' B 293  LEU  O  ', ' B 632  THR  OG1', -0.431, (150.004, 202.971, 185.632)), (' A 384  PRO  HA ', ' A 387  LEU HD12', -0.43, (173.671, 174.254, 151.097)), (' B 280  ASN HD21', ' B1302  NAG  H82', -0.429, (146.076, 174.697, 186.015)), (' B 708  SER  OG ', ' B 709  ASN  N  ', -0.428, (176.474, 213.288, 245.379)), (' A 985  ASP  OD2', ' C 383  SER  OG ', -0.428, (203.905, 185.925, 154.972)), (' C 743  CYS  HB3', ' C 749  CYS  HB3', -0.425, (176.397, 200.992, 173.777)), (' C 186  PHE  HB3', ' C 187  LYS  H  ', -0.424, (223.197, 237.656, 174.199)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.424, (201.362, 149.609, 165.454)), (' B 659  SER  HB3', ' B 698  SER  HB2', -0.422, (162.723, 210.035, 216.524)), (' B 713  ALA  HB3', ' C 894  LEU  HB3', -0.421, (171.893, 202.513, 241.068)), (' C 112  SER  O  ', ' C 112  SER  OG ', -0.421, (216.99, 219.309, 140.224)), (' A 904  TYR  OH ', ' C1093  GLY  O  ', -0.42, (200.73, 183.624, 248.896)), (' C 188  ASN  HA ', ' C 209  PRO  HA ', -0.419, (218.546, 236.053, 176.582)), (' B 846  ALA  HB3', ' B 849  LEU  HG ', -0.417, (160.097, 160.008, 186.661)), (' A 128  ILE HD13', ' A 229  LEU HD11', -0.417, (204.759, 149.972, 152.539)), (' B1142  GLN  NE2', ' B1146  ASP  OD2', -0.415, (184.01, 192.483, 277.152)), (' C 902  MET  HB3', ' C 916  LEU HD11', -0.414, (189.964, 204.555, 241.692)), (' C 947  LYS  HB3', ' C 947  LYS  HE2', -0.413, (194.175, 199.782, 210.415)), (' B 357  ARG  HE ', ' B 394  ASN  ND2', -0.412, (199.303, 220.949, 144.402)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.41, (181.202, 153.21, 202.546)), (' C 518  LEU HD21', ' C 546  LEU HD12', -0.408, (210.326, 173.492, 167.023)), (' B 121  ASN  HB3', ' B 126  VAL HG12', -0.405, (133.044, 182.296, 158.691)), (' A 138  ASP  N  ', ' A 138  ASP  OD1', -0.405, (193.448, 129.938, 147.473)), (' C 501  ASN  HB3', ' C 505  TYR  HB2', -0.404, (185.764, 178.07, 127.508)), (' A 391  CYS  HB3', ' A 522  ALA  HB1', -0.402, (160.202, 171.81, 157.713)), (' C 442  ASP  HB3', ' C 451  TYR  HE2', -0.401, (194.763, 169.659, 128.39))]
data['smoc'] = [('A', 45, u'SER', -0.1739848639608519, (210.95100000000002, 162.092, 180.48100000000002)), ('A', 46, u'SER', -0.07488972241617352, (209.474, 161.399, 183.953)), ('A', 57, u'PRO', 0.12390550101323562, (191.85500000000002, 147.777, 174.874)), ('A', 63, u'THR', -0.10821208492527276, (191.39200000000002, 135.311, 167.753)), ('A', 82, u'PRO', -0.17128856332922385, (190.33, 133.404, 156.18800000000002)), ('A', 134, u'GLN', -0.19727577194759488, (193.122, 139.54299999999998, 140.598)), ('A', 160, u'TYR', -0.18699315804166763, (202.697, 135.43800000000002, 142.58800000000002)), ('A', 165, u'ASN', -0.28244752241724214, (197.74599999999998, 150.098, 136.142)), ('A', 171, u'VAL', -0.15853113437645708, (211.503, 148.52800000000002, 148.167)), ('A', 214, u'ARG', -0.11466779221205324, (201.546, 128.86700000000002, 173.57399999999998)), ('A', 215, u'ASP', -0.2380568590721861, (200.11499999999998, 132.178, 174.91)), ('A', 225, u'PRO', -0.06559989301741392, (206.785, 153.686, 164.27299999999997)), ('A', 272, u'PRO', 0.0631038201744812, (188.7, 154.71899999999997, 170.238)), ('A', 287, u'ASP', -0.01818058435574498, (203.08200000000002, 151.68200000000002, 182.171)), ('A', 288, u'ALA', -0.12000414053198462, (199.554, 152.48600000000002, 180.999)), ('A', 292, u'ALA', -0.029126601203400868, (187.236, 152.708, 179.879)), ('A', 303, u'LEU', 0.011487300188335638, (193.39800000000002, 162.164, 189.21899999999997)), ('A', 336, u'CYS', -0.2540301286376609, (159.366, 171.73399999999998, 144.08)), ('A', 341, u'VAL', 0.05052919678988017, (162.92800000000003, 180.256, 138.38700000000003)), ('A', 342, u'PHE', 0.033966706321124564, (166.27499999999998, 179.072, 136.99800000000002)), ('A', 353, u'TRP', 0.07195604363014267, (161.996, 192.266, 141.32000000000002)), ('A', 354, u'ASN', 0.10086163711502796, (159.62800000000001, 189.32500000000002, 141.69299999999998)), ('A', 379, u'CYS', 0.04002879464877424, (175.142, 180.637, 151.664)), ('A', 380, u'TYR', 0.007496527741453101, (174.995, 182.83100000000002, 154.71299999999997)), ('A', 381, u'GLY', -0.07681248256506486, (173.287, 181.314, 157.737)), ('A', 403, u'ARG', 0.12268258800944615, (176.315, 193.43, 135.654)), ('A', 404, u'GLY', -0.009764798544471374, (178.89600000000002, 191.123, 137.21299999999997)), ('A', 410, u'ILE', -0.005800154005645553, (174.24299999999997, 190.89200000000002, 146.74399999999997)), ('A', 440, u'ASN', 0.38590112778195274, (173.497, 185.017, 124.866)), ('A', 450, u'ASN', 0.23653594315132614, (165.612, 195.52, 128.33)), ('A', 463, u'PRO', -0.04679500279506477, (165.83100000000002, 195.95200000000003, 153.92100000000002)), ('A', 472, u'ILE', -0.039289854464179035, (162.0, 212.83, 138.142)), ('A', 476, u'GLY', -0.30858536175946244, (168.906, 222.22, 143.1)), ('A', 525, u'CYS', 0.10536379023021608, (161.623, 170.039, 153.577)), ('A', 526, u'GLY', 0.1895220552655876, (164.495, 168.041, 152.142)), ('A', 591, u'SER', -0.17271759389296476, (176.003, 160.20399999999998, 180.036)), ('A', 622, u'VAL', -0.22646480346090572, (169.32000000000002, 151.009, 182.79399999999998)), ('A', 623, u'ALA', -0.14833521651811316, (170.759, 154.32700000000003, 184.02800000000002)), ('A', 635, u'VAL', 0.15244332715923156, (180.259, 143.42000000000002, 187.539)), ('A', 658, u'ASN', 0.151493273289268, (177.333, 147.012, 214.118)), ('A', 660, u'TYR', 0.1348866314577913, (181.71399999999997, 152.13, 214.38400000000001)), ('A', 670, u'ILE', 0.0028018787496072836, (176.47299999999998, 155.82500000000002, 206.23999999999998)), ('A', 705, u'VAL', -0.14790578622965678, (174.038, 160.125, 235.197)), ('A', 743, u'CYS', -0.2215926010347694, (204.66899999999998, 186.939, 176.24899999999997)), ('A', 790, u'LYS', -0.27241302574574455, (217.599, 183.77599999999998, 229.508)), ('A', 794, u'ILE', -0.15116588915124352, (220.996, 175.859, 237.71699999999998)), ('A', 799, u'GLY', -0.21722173153186464, (211.39200000000002, 168.641, 240.365)), ('A', 828, u'LEU', 0.13756722232809104, (208.0, 168.225, 201.36)), ('A', 849, u'LEU', -0.14501792499795021, (209.39800000000002, 171.01899999999998, 189.547)), ('A', 850, u'ILE', -0.09880960448919866, (211.056, 174.183, 190.83200000000002)), ('A', 866, u'THR', 0.10905037577413644, (214.924, 183.319, 209.72299999999998)), ('A', 888, u'PHE', -0.13234390818542038, (206.539, 189.85000000000002, 232.316)), ('A', 918, u'GLU', -0.222951342529136, (201.32500000000002, 168.24899999999997, 249.918)), ('A', 962, u'LEU', -0.0420477491628493, (199.607, 177.624, 186.54299999999998)), ('A', 967, u'SER', -0.13516663805783238, (200.648, 174.26, 176.925)), ('A', 974, u'SER', -0.1729998189380912, (199.924, 176.093, 168.52200000000002)), ('A', 979, u'ASP', -0.13830923809479567, (206.197, 178.903, 166.08)), ('A', 990, u'GLU', -0.19109312159454553, (198.272, 188.79899999999998, 165.423)), ('A', 1045, u'LYS', 0.2553468302274285, (190.525, 170.29299999999998, 227.659)), ('A', 1057, u'PRO', 0.05485645844857937, (207.598, 175.436, 209.946)), ('A', 1079, u'PRO', -0.24357016860962213, (171.863, 172.993, 250.97299999999998)), ('A', 1080, u'ALA', -0.31356079270022985, (172.023, 174.353, 254.53)), ('A', 1087, u'ALA', -0.2860118050277061, (170.16899999999998, 178.47, 258.699)), ('A', 1102, u'TRP', -0.23479481173441547, (178.53, 165.834, 258.4)), ('A', 1105, u'THR', -0.33439339941692475, (184.57, 170.29899999999998, 251.784)), ('A', 1117, u'THR', -0.3379661895342476, (181.35600000000002, 179.194, 262.65700000000004)), ('A', 1118, u'ASP', -0.32903918253579684, (184.467, 180.207, 260.666)), ('A', 1303, u'NAG', 0.09413639698496729, (214.42800000000003, 152.202, 184.453)), ('A', 1311, u'NAG', -0.22279819172043866, (192.16899999999998, 151.465, 134.472)), ('B', 69, u'HIS', -0.047768230378916615, (120.524, 205.689, 164.75)), ('B', 82, u'PRO', 0.04167921440715975, (132.29899999999998, 204.09, 160.85100000000003)), ('B', 105, u'ILE', -0.03230399154698766, (136.934, 193.98600000000002, 155.561)), ('B', 111, u'ASP', 0.16919337204852558, (138.875, 202.47899999999998, 145.10899999999998)), ('B', 128, u'ILE', -0.03541057634809761, (138.417, 184.26899999999998, 152.977)), ('B', 142, u'GLY', -0.02251040308116754, (120.959, 189.138, 151.629)), ('B', 162, u'SER', 0.26938950499246367, (132.74499999999998, 189.366, 143.758)), ('B', 163, u'ALA', 0.3411061735577071, (135.508, 187.813, 141.63)), ('B', 210, u'ILE', 0.24410421833481283, (129.423, 185.605, 180.39600000000002)), ('B', 211, u'ASN', 0.09741494079396242, (126.38199999999999, 186.58, 182.45800000000003)), ('B', 225, u'PRO', -0.0503158239969543, (145.142, 180.782, 167.60999999999999)), ('B', 226, u'LEU', -0.0786564046695751, (143.007, 179.453, 164.772)), ('B', 268, u'GLY', 0.06896415420034688, (141.039, 198.425, 171.22)), ('B', 299, u'THR', -0.4977650181302049, (158.77299999999997, 195.66899999999998, 191.222)), ('B', 332, u'ILE', -0.20368491457237195, (186.224, 230.349, 156.99)), ('B', 333, u'THR', -0.19254068468922034, (189.313, 232.409, 156.281)), ('B', 341, u'VAL', -0.1971468271057991, (189.972, 230.94899999999998, 136.311)), ('B', 346, u'ARG', -0.2619341958396979, (190.722, 236.05800000000002, 128.04299999999998)), ('B', 352, u'ALA', -0.3023854540931634, (199.20899999999997, 225.298, 125.10799999999999)), ('B', 353, u'TRP', -0.20689370042403724, (196.465, 225.435, 127.73700000000001)), ('B', 386, u'LYS', 0.05179212665811902, (177.599, 216.3, 147.752)), ('B', 404, u'GLY', -0.20688201977145154, (180.30100000000002, 224.32000000000002, 120.94600000000001)), ('B', 415, u'THR', -0.3726547997484342, (187.701, 210.07399999999998, 120.66799999999999)), ('B', 416, u'GLY', -0.34944644834029986, (188.12, 212.47299999999998, 117.77)), ('B', 420, u'ASP', -0.2683813834989097, (193.268, 212.464, 119.333)), ('B', 436, u'TRP', -0.17205306535960938, (179.589, 227.571, 128.79)), ('B', 444, u'LYS', -0.27541612415864936, (183.82600000000002, 240.112, 116.353)), ('B', 459, u'SER', -0.2243308987564511, (200.342, 210.181, 116.42)), ('B', 496, u'GLY', -0.40449115922395906, (187.585, 232.08800000000002, 112.76400000000001)), ('B', 507, u'PRO', -0.2569922049127313, (182.359, 228.883, 120.427)), ('B', 530, u'SER', -0.05026028361545638, (178.255, 225.91, 161.989)), ('B', 536, u'ASN', 0.05483759695577583, (172.671, 225.76999999999998, 180.435)), ('B', 574, u'ASP', 0.1008397881597221, (185.89600000000002, 218.73299999999998, 181.271)), ('B', 737, u'ASP', -0.09940392012635602, (179.341, 168.483, 186.015)), ('B', 747, u'THR', 0.05228861582214112, (181.084, 165.035, 171.32700000000003)), ('B', 766, u'ALA', -0.048666018881348874, (187.11399999999998, 174.148, 194.577)), ('B', 809, u'PRO', -0.01712632183091553, (159.434, 160.224, 222.6)), ('B', 810, u'SER', -0.07620211332348148, (155.92700000000002, 160.295, 221.071)), ('B', 871, u'ALA', 0.08601596442364351, (168.9, 166.23499999999999, 217.57299999999998)), ('B', 897, u'PRO', -0.2022691933007205, (171.112, 168.635, 242.48800000000003)), ('B', 907, u'ASN', -0.269483461919811, (177.73499999999999, 183.033, 243.39000000000001)), ('B', 950, u'ASP', -0.11845608703135752, (168.76299999999998, 184.71399999999997, 203.999)), ('B', 967, u'SER', 0.020402722062132596, (169.995, 180.95700000000002, 177.042)), ('B', 991, u'VAL', 0.1668166249360034, (183.664, 179.765, 165.38600000000002)), ('B', 992, u'GLN', -0.12797868455013633, (180.24399999999997, 179.88400000000001, 167.05700000000002)), ('B', 993, u'ILE', -0.01168120720710188, (180.92800000000003, 176.966, 169.38700000000003)), ('B', 1007, u'TYR', -0.037591431225430225, (179.507, 181.22, 190.27399999999997)), ('B', 1042, u'PHE', 0.027567790772505308, (178.732, 187.42200000000003, 224.909)), ('B', 1057, u'PRO', 0.07657174841343195, (167.758, 173.98100000000002, 209.798)), ('B', 1058, u'HIS', -0.10806618786951117, (171.45200000000003, 174.65800000000002, 208.996)), ('B', 1070, u'ALA', -0.23380961604929204, (165.099, 195.62800000000001, 239.148)), ('B', 1092, u'GLU', -0.2603172185146613, (182.9, 192.772, 250.13899999999998)), ('B', 1106, u'GLN', -0.31213374690407253, (176.165, 193.593, 248.925)), ('B', 1114, u'ILE', -0.30277952041444234, (175.155, 195.49200000000002, 261.059)), ('B', 1115, u'ILE', -0.31886911003099366, (178.74499999999998, 196.74899999999997, 260.7)), ('B', 1125, u'ASN', -0.33411701687541884, (194.105, 206.65200000000002, 260.09)), ('B', 1126, u'CYS', -0.37846083911199707, (191.076, 208.918, 259.67900000000003)), ('B', 1134, u'ASN', -0.2612310603047302, (182.01, 208.865, 261.919)), ('B', 1306, u'NAG', -0.1231539149826245, (153.21099999999998, 220.689, 210.333)), ('C', 81, u'ASN', -0.16757149483583042, (228.824, 223.88000000000002, 158.991)), ('C', 95, u'THR', -0.3305612395466265, (222.83100000000002, 232.63899999999998, 171.77299999999997)), ('C', 96, u'GLU', -0.31001406047768326, (223.803, 235.592, 169.632)), ('C', 111, u'ASP', -0.043251115114101985, (220.708, 217.54899999999998, 143.91899999999998)), ('C', 134, u'GLN', 0.00686787250213174, (219.80800000000002, 225.67299999999997, 142.753)), ('C', 159, u'VAL', -0.036187022821514064, (220.483, 236.983, 148.185)), ('C', 168, u'PHE', -0.12322470931736595, (203.446, 225.972, 148.63)), ('C', 193, u'VAL', -0.18761547453772262, (212.824, 221.708, 168.236)), ('C', 240, u'THR', -0.16106695364148418, (222.23, 225.797, 158.944)), ('C', 292, u'ALA', -0.04029158908718418, (215.48800000000003, 206.10399999999998, 182.507)), ('C', 296, u'LEU', -0.039428045515572496, (215.835, 207.132, 191.783)), ('C', 297, u'SER', -0.0011128830904954636, (214.06, 208.64399999999998, 188.77299999999997)), ('C', 304, u'LYS', 0.0664241461188213, (203.89100000000002, 208.787, 190.123)), ('C', 312, u'ILE', -0.1346182367636123, (211.97, 199.459, 199.305)), ('C', 344, u'ALA', -0.24415606621018288, (205.95100000000002, 168.532, 132.76899999999998)), ('C', 375, u'SER', -0.23397802744559257, (197.593, 183.067, 138.701)), ('C', 387, u'LEU', 0.07903551973952064, (208.823, 179.471, 153.444)), ('C', 437, u'ASN', -0.206159549249491, (196.296, 179.36700000000002, 132.77299999999997)), ('C', 440, u'ASN', -0.25233119484106925, (198.40200000000002, 176.993, 124.669)), ('C', 444, u'LYS', -0.12363573989374911, (193.677, 171.401, 119.73)), ('C', 462, u'LYS', 0.12570523559966582, (187.65200000000002, 160.997, 152.159)), ('C', 482, u'GLY', -0.24488295903602447, (178.01899999999998, 146.671, 131.04299999999998)), ('C', 500, u'THR', -0.16480311121941255, (187.10999999999999, 179.631, 121.09400000000001)), ('C', 512, u'VAL', -0.013579818721252697, (199.196, 171.334, 145.379)), ('C', 518, u'LEU', 0.05792278158536685, (208.601, 170.835, 163.045)), ('C', 531, u'THR', 0.011510151241916223, (227.4, 178.818, 161.405)), ('C', 547, u'THR', -0.24023194134691744, (214.126, 179.561, 167.20399999999998)), ('C', 573, u'THR', -0.12834632133643037, (211.79299999999998, 172.772, 174.171)), ('C', 596, u'SER', -0.12224196434650167, (214.415, 196.783, 193.92600000000002)), ('C', 613, u'GLN', -0.10227125388297947, (216.924, 189.516, 193.589)), ('C', 623, u'ALA', -0.059005016342000345, (223.089, 191.72299999999998, 182.42700000000002)), ('C', 625, u'HIS', 0.05104799421481276, (222.546, 197.369, 179.791)), ('C', 627, u'ASP', -0.09299399245759236, (226.879, 199.608, 177.546)), ('C', 636, u'TYR', 0.10992337718686591, (224.87, 201.52200000000002, 190.411)), ('C', 672, u'ALA', -0.31847168478836574, (219.236, 198.54299999999998, 205.839)), ('C', 676, u'THR', -0.287593731895707, (226.297, 208.469, 210.71299999999997)), ('C', 702, u'GLU', 0.013642974408818464, (219.26999999999998, 190.752, 226.286)), ('C', 739, u'THR', -0.020232133256847005, (175.122, 199.936, 181.053)), ('C', 740, u'MET', -0.1362402858908076, (176.394, 203.511, 181.196)), ('C', 757, u'GLY', -0.0950427783832144, (172.261, 187.91899999999998, 179.55700000000002)), ('C', 758, u'SER', -0.02520654438516568, (172.38500000000002, 188.941, 183.168)), ('C', 762, u'GLN', -0.08754554020831053, (174.44899999999998, 190.407, 189.04899999999998)), ('C', 821, u'LEU', -0.012672749012371557, (191.685, 216.605, 216.261)), ('C', 915, u'VAL', -0.3082532252655747, (195.5, 201.696, 248.167)), ('C', 919, u'ASN', -0.23739507930111736, (196.917, 207.677, 246.85500000000002)), ('C', 954, u'GLN', 0.04252087663345903, (192.809, 201.63899999999998, 198.635)), ('C', 966, u'LEU', -0.008293021539462738, (188.19299999999998, 203.10999999999999, 179.43200000000002)), ('C', 989, u'ALA', -0.015960359579727596, (181.71299999999997, 197.306, 162.90200000000002)), ('C', 1001, u'LEU', 0.12812565017604813, (182.906, 193.842, 181.24899999999997)), ('C', 1010, u'GLN', 0.021303052412473534, (188.122, 192.766, 194.85200000000003)), ('C', 1084, u'ASP', -0.3445717556569625, (203.10399999999998, 174.55700000000002, 266.66200000000003)), ('C', 1085, u'GLY', -0.3474287101894027, (203.656, 171.47, 264.575)), ('C', 1123, u'SER', -0.30422918804101673, (196.297, 172.504, 257.078)), ('C', 1140, u'PRO', -0.35582243359911786, (194.62800000000001, 188.577, 267.803)), ('C', 1303, u'NAG', 0.1733238252673568, (230.911, 169.117, 155.26))]
data['rota'] = [('A', ' 118 ', 'LEU', 0.15155965868957236, (200.32, 143.908, 148.954)), ('A', ' 166 ', 'CYS', 0.06617891292067792, (199.508, 151.08500000000006, 139.359)), ('A', ' 393 ', 'THR', 0.07210109827310882, (158.856, 176.985, 157.21200000000002)), ('B', ' 402 ', 'ILE', 0.10588200708637674, (186.708, 224.80800000000005, 122.247)), ('B', ' 493 ', 'GLN', 0.15386308853609398, (194.808, 226.25500000000005, 112.23200000000001)), ('B', ' 493 ', 'GLN', 0.21936272729718287, (194.805, 226.25200000000007, 112.233)), ('C', '  90 ', 'VAL', 0.2501415767665812, (216.834, 217.89300000000006, 166.233)), ('C', ' 233 ', 'ILE', 0.18850909767565394, (208.546, 214.981, 152.15)), ('C', ' 432 ', 'CYS', 0.012105804489692673, (199.574, 175.908, 148.972)), ('C', ' 581 ', 'THR', 0.22077217627098997, (227.215, 166.078, 164.525)), ('C', ' 622 ', 'VAL', 0.29134615644742384, (226.761, 192.44, 181.663))]
data['clusters'] = [('A', '328', 1, 'backbone clash\nDihedral angle:CD:NE:CZ:NH1', (161.46, 161.565, 160.89700000000002)), ('A', '364', 1, 'Dihedral angle:CA:CB:CG:OD1', (166.589, 168.319, 146.38200000000003)), ('A', '391', 1, 'side-chain clash\nDihedral angle:CA:C', (162.92700000000002, 172.212, 157.015)), ('A', '392', 1, 'Dihedral angle:N:CA', (162.423, 175.85100000000003, 156.23299999999998)), ('A', '393', 1, 'Rotamer', (158.856, 176.985, 157.21200000000002)), ('A', '518', 1, 'side-chain clash\ncablam Outlier', (160.042, 180.326, 165.272)), ('A', '519', 1, 'side-chain clash\nDihedral angle:CA:C\nBond angle:C\ncablam CA Geom Outlier', (159.71099999999998, 178.265, 164.499)), ('A', '520', 1, 'Dihedral angle:CA:C\nDihedral angle:N:CA\nBond angle:N:CA\ncablam Outlier', (156.55800000000002, 176.96, 162.74899999999997)), ('A', '521', 1, 'Dihedral angle:N:CA', (155.064, 173.72299999999998, 161.536)), ('A', '522', 1, 'side-chain clash', (160.202, 171.81, 157.713)), ('A', '525', 1, 'smoc Outlier', (161.623, 170.039, 153.577)), ('A', '526', 1, 'smoc Outlier', (164.495, 168.041, 152.142)), ('A', '530', 1, 'cablam Outlier', (162.1, 158.3, 157.5)), ('A', '531', 1, 'backbone clash', (159.999, 156.123, 161.493)), ('A', '533', 1, 'Dihedral angle:CA:C', (161.583, 154.691, 166.593)), ('A', '534', 1, 'Dihedral angle:CA:C\nDihedral angle:N:CA\ncablam Outlier', (163.92200000000003, 152.617, 168.72299999999998)), ('A', '535', 1, 'Dihedral angle:N:CA\ncablam Outlier', (162.453, 153.23899999999998, 172.157)), ('A', '536', 1, 'cablam Outlier', (164.8, 153.9, 175.2)), ('A', '544', 1, 'cablam Outlier', (161.4, 168.2, 161.5)), ('A', '551', 1, 'side-chain clash', (166.737, 159.73, 177.842)), ('A', '552', 1, 'side-chain clash', (161.016, 159.128, 170.101)), ('A', '553', 1, 'side-chain clash\nbackbone clash', (159.233, 160.767, 175.284)), ('A', '585', 1, 'side-chain clash', (161.016, 159.128, 170.101)), ('A', '586', 1, 'side-chain clash\nbackbone clash', (159.233, 160.767, 175.284)), ('A', '588', 1, 'side-chain clash', (166.737, 159.73, 177.842)), ('A', '590', 1, 'Dihedral angle:CA:C\nBond angle:CA:CB:SG', (172.592, 160.129, 178.52100000000002)), ('A', '591', 1, 'Dihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (176.003, 160.20399999999998, 180.036)), ('A', '592', 1, 'cablam Outlier', (175.5, 159.5, 183.8)), ('A', '594', 1, 'cablam Outlier', (177.2, 161.0, 188.8)), ('A', '612', 1, 'Dihedral angle:CA:C', (175.442, 155.863, 191.961)), ('A', '613', 1, 'Dihedral angle:N:CA', (174.121, 159.266, 192.89800000000002)), ('A', '298', 2, 'side-chain clash\nbackbone clash', (205.971, 185.237, 160.359)), ('A', '315', 2, 'side-chain clash\nbackbone clash', (205.971, 185.237, 160.359)), ('A', '384', 2, 'side-chain clash', (203.905, 185.925, 154.972)), ('A', '387', 2, 'side-chain clash', (203.905, 185.925, 154.972)), ('A', '979', 2, 'smoc Outlier', (206.197, 178.903, 166.08)), ('A', '981', 2, 'cablam Outlier', (206.1, 184.0, 164.7)), ('A', '984', 2, 'Bond angle:C', (203.10399999999998, 183.79299999999998, 159.70499999999998)), ('A', '985', 2, 'Dihedral angle:CA:C\nBond angle:N:CA', (203.36100000000002, 187.48000000000002, 158.771)), ('A', '986', 2, 'Dihedral angle:N:CA', (202.17499999999998, 190.189, 161.218)), ('A', '990', 2, 'smoc Outlier', (198.272, 188.79899999999998, 165.423)), ('A', '214', 3, 'smoc Outlier', (201.546, 128.86700000000002, 173.57399999999998)), ('A', '215', 3, 'Bond angle:C\nsmoc Outlier', (200.11499999999998, 132.178, 174.91)), ('A', '216', 3, 'Bond angle:N:CA', (200.82700000000003, 135.961, 174.696)), ('A', '31', 3, 'Bond angle:C', (195.89100000000002, 140.107, 175.45800000000003)), ('A', '32', 3, 'Bond angle:N:CA', (196.30800000000002, 141.30700000000002, 179.095)), ('A', '131', 4, 'side-chain clash', (199.094, 149.095, 140.547)), ('A', '1311', 4, 'smoc Outlier', (192.16899999999998, 151.465, 134.472)), ('A', '164', 4, 'cablam Outlier', (197.8, 146.3, 136.0)), ('A', '165', 4, 'smoc Outlier', (197.74599999999998, 150.098, 136.142)), ('A', '166', 4, 'Rotamer\nside-chain clash', (199.094, 149.095, 140.547)), ('A', '110', 5, 'side-chain clash', (192.346, 140.131, 146.113)), ('A', '134', 5, 'side-chain clash\nsmoc Outlier', (195.783, 137.593, 141.421)), ('A', '135', 5, 'side-chain clash', (192.346, 140.131, 146.113)), ('A', '160', 5, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (202.697, 135.43800000000002, 142.58800000000002)), ('A', '161', 5, 'Dihedral angle:N:CA', (201.618, 139.05100000000002, 142.189)), ('A', '452', 6, 'side-chain clash', (164.887, 202.898, 133.681)), ('A', '453', 6, 'cablam Outlier', (168.5, 200.2, 137.3)), ('A', '492', 6, 'side-chain clash', (164.887, 202.898, 133.681)), ('A', '493', 6, 'Dihedral angle:CA:C', (168.765, 204.71899999999997, 132.667)), ('A', '494', 6, 'Dihedral angle:N:CA\ncablam Outlier', (169.46200000000002, 201.36100000000002, 131.134)), ('A', '1079', 7, 'smoc Outlier', (171.863, 172.993, 250.97299999999998)), ('A', '1080', 7, 'smoc Outlier', (172.023, 174.353, 254.53)), ('A', '1087', 7, 'smoc Outlier', (170.16899999999998, 178.47, 258.699)), ('A', '1125', 7, 'Dihedral angle:CA:C', (165.67299999999997, 181.118, 260.03299999999996)), ('A', '1126', 7, 'Dihedral angle:N:CA', (164.991, 177.52, 259.17900000000003)), ('A', '403', 8, 'smoc Outlier', (176.315, 193.43, 135.654)), ('A', '404', 8, 'smoc Outlier', (178.89600000000002, 191.123, 137.21299999999997)), ('A', '405', 8, 'Dihedral angle:CA:CB:CG:OD1', (181.132, 193.79, 138.689)), ('A', '437', 8, 'side-chain clash', (175.441, 186.476, 134.399)), ('A', '508', 8, 'side-chain clash', (175.441, 186.476, 134.399)), ('A', '332', 9, 'Dihedral angle:CA:C', (154.859, 166.411, 151.842)), ('A', '333', 9, 'side-chain clash\nDihedral angle:N:CA', (153.164, 166.112, 148.48000000000002)), ('A', '334', 9, 'side-chain clash', (153.118, 168.571, 147.012)), ('A', '335', 9, 'side-chain clash\nBond angle:C', (158.531, 168.001, 143.977)), ('A', '336', 9, 'side-chain clash\nBond angle:N:CA\nsmoc Outlier', (159.366, 171.73399999999998, 144.08)), ('A', '634', 10, 'Dihedral angle:CD:NE:CZ:NH1', (179.10999999999999, 145.23499999999999, 184.369)), ('A', '635', 10, 'smoc Outlier', (180.259, 143.42000000000002, 187.539)), ('A', '638', 10, 'cablam CA Geom Outlier', (174.4, 144.3, 189.9)), ('A', '642', 10, 'side-chain clash', (174.494, 146.569, 193.526)), ('A', '651', 10, 'side-chain clash', (174.494, 146.569, 193.526)), ('A', '666', 11, 'side-chain clash\ncablam Outlier', (181.202, 153.21, 202.546)), ('A', '667', 11, 'cablam Outlier', (176.5, 160.4, 203.2)), ('A', '670', 11, 'smoc Outlier', (176.47299999999998, 155.82500000000002, 206.23999999999998)), ('A', '672', 11, 'side-chain clash', (181.202, 153.21, 202.546)), ('A', '1303', 12, 'smoc Outlier', (214.42800000000003, 152.202, 184.453)), ('A', '281', 12, 'Dihedral angle:CB:CG:CD:OE1', (213.69, 158.571, 183.35600000000002)), ('A', '45', 12, 'smoc Outlier', (210.95100000000002, 162.092, 180.48100000000002)), ('A', '46', 12, 'smoc Outlier', (209.474, 161.399, 183.953)), ('A', '128', 13, 'side-chain clash', (204.759, 149.972, 152.539)), ('A', '170', 13, 'side-chain clash', (206.696, 149.459, 148.952)), ('A', '171', 13, 'smoc Outlier', (211.503, 148.52800000000002, 148.167)), ('A', '229', 13, 'side-chain clash', (204.759, 149.972, 152.539)), ('A', '292', 14, 'smoc Outlier', (187.236, 152.708, 179.879)), ('A', '293', 14, 'cablam Outlier', (188.1, 149.6, 181.9)), ('A', '294', 14, 'cablam Outlier', (186.9, 149.1, 185.6)), ('A', '319', 14, 'Dihedral angle:CD:NE:CZ:NH1', (182.787, 155.038, 179.57399999999998)), ('A', '106', 15, 'side-chain clash', (168.757, 162.155, 236.921)), ('A', '705', 15, 'smoc Outlier', (174.038, 160.125, 235.197)), ('A', '707', 15, 'Dihedral angle:CA:C', (170.70499999999998, 162.137, 239.435)), ('A', '708', 15, 'Dihedral angle:N:CA', (168.756, 162.51, 242.648)), ('A', '618', 16, 'side-chain clash', (164.197, 150.588, 189.924)), ('A', '619', 16, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (167.45600000000002, 151.02100000000002, 187.507)), ('A', '622', 16, 'smoc Outlier', (169.32000000000002, 151.009, 182.79399999999998)), ('A', '623', 16, 'smoc Outlier', (170.759, 154.32700000000003, 184.02800000000002)), ('A', '352', 17, 'side-chain clash', (160.267, 195.548, 141.813)), ('A', '353', 17, 'smoc Outlier', (161.996, 192.266, 141.32000000000002)), ('A', '354', 17, 'smoc Outlier', (159.62800000000001, 189.32500000000002, 141.69299999999998)), ('A', '466', 17, 'side-chain clash', (160.267, 195.548, 141.813)), ('A', '743', 18, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (204.66899999999998, 186.939, 176.24899999999997)), ('A', '744', 18, 'Dihedral angle:N:CA', (207.94, 185.29899999999998, 177.184)), ('A', '748', 18, 'Dihedral angle:CB:CG:CD:OE1', (205.646, 191.27599999999998, 169.046)), ('A', '749', 18, 'side-chain clash', (205.056, 188.906, 173.941)), ('A', '476', 19, 'side-chain clash\nsmoc Outlier', (168.611, 220.463, 141.459)), ('A', '477', 19, 'cablam Outlier', (166.6, 225.2, 143.3)), ('A', '486', 19, 'cablam Outlier', (168.3, 221.9, 135.1)), ('A', '487', 19, 'side-chain clash', (168.611, 220.463, 141.459)), ('A', '1142', 20, 'Bond angle:CA:C', (183.646, 179.476, 273.694)), ('A', '1143', 20, 'Bond angle:N\ncablam Outlier', (185.496, 176.313, 275.019)), ('A', '1144', 20, 'cablam Outlier', (188.7, 178.2, 275.4)), ('A', '340', 21, 'Dihedral angle:CB:CG:CD:OE1', (160.621, 177.686, 136.813)), ('A', '341', 21, 'smoc Outlier', (162.92800000000003, 180.256, 138.38700000000003)), ('A', '342', 21, 'smoc Outlier', (166.27499999999998, 179.072, 136.99800000000002)), ('A', '379', 22, 'smoc Outlier', (175.142, 180.637, 151.664)), ('A', '380', 22, 'smoc Outlier', (174.995, 182.83100000000002, 154.71299999999997)), ('A', '381', 22, 'smoc Outlier', (173.287, 181.314, 157.737)), ('A', '310', 23, 'cablam CA Geom Outlier', (192.1, 156.2, 200.8)), ('A', '599', 23, 'Dihedral angle:CA:C', (188.69899999999998, 152.844, 197.818)), ('A', '600', 23, 'Dihedral angle:N:CA', (191.257, 152.13899999999998, 200.49800000000002)), ('A', '440', 24, 'smoc Outlier', (173.497, 185.017, 124.866)), ('A', '443', 24, 'backbone clash', (174.085, 190.696, 123.403)), ('A', '444', 24, 'backbone clash', (174.085, 190.696, 123.403)), ('A', '82', 25, 'smoc Outlier', (190.33, 133.404, 156.18800000000002)), ('A', '83', 25, 'Bond angle:C', (189.4, 136.839, 154.85000000000002)), ('A', '84', 25, 'Bond angle:N:CA', (189.092, 139.042, 157.964)), ('A', '658', 26, 'smoc Outlier', (177.333, 147.012, 214.118)), ('A', '660', 26, 'smoc Outlier', (181.71399999999997, 152.13, 214.38400000000001)), ('A', '659', 27, 'side-chain clash', (178.673, 175.27, 156.655)), ('A', '698', 27, 'side-chain clash', (178.673, 175.27, 156.655)), ('A', '448', 28, 'side-chain clash', (166.492, 192.998, 125.519)), ('A', '450', 28, 'side-chain clash\nsmoc Outlier', (166.492, 192.998, 125.519)), ('A', '287', 29, 'smoc Outlier', (203.08200000000002, 151.68200000000002, 182.171)), ('A', '288', 29, 'smoc Outlier', (199.554, 152.48600000000002, 180.999)), ('A', '719', 30, 'side-chain clash', (197.056, 162.8, 236.824)), ('A', '926', 30, 'side-chain clash', (197.056, 162.8, 236.824)), ('A', '264', 31, 'backbone clash', (198.038, 130.465, 164.477)), ('A', '65', 31, 'backbone clash', (198.038, 130.465, 164.477)), ('A', '37', 32, 'backbone clash', (195.954, 153.833, 168.068)), ('A', '54', 32, 'backbone clash', (195.954, 153.833, 168.068)), ('A', '827', 33, 'Dihedral angle:CA:C', (209.15200000000002, 167.342, 204.83)), ('A', '828', 33, 'Dihedral angle:N:CA\nsmoc Outlier', (208.0, 168.225, 201.36)), ('A', '191', 34, 'side-chain clash', (204.639, 142.492, 172.95)), ('A', '34', 34, 'side-chain clash', (204.639, 142.492, 172.95)), ('A', '193', 35, 'side-chain clash', (200.73, 183.624, 248.896)), ('A', '204', 35, 'side-chain clash', (200.73, 183.624, 248.896)), ('A', '117', 36, 'side-chain clash', (197.419, 147.605, 201.702)), ('A', '231', 36, 'side-chain clash', (197.419, 147.605, 201.702)), ('A', '790', 37, 'Bond length:C\nsmoc Outlier', (217.599, 183.77599999999998, 229.508)), ('A', '791', 37, 'Bond length:N', (217.141, 180.923, 231.874)), ('A', '102', 38, 'side-chain clash', (188.735, 160.019, 243.906)), ('A', '99', 38, 'side-chain clash', (188.735, 160.019, 243.906)), ('A', '901', 39, 'side-chain clash', (202.839, 180.109, 236.006)), ('A', '905', 39, 'side-chain clash', (202.839, 180.109, 236.006)), ('A', '457', 40, 'backbone clash\nDihedral angle:CD:NE:CZ:NH1', (167.01899999999998, 208.605, 145.206)), ('A', '459', 40, 'backbone clash', (165.658, 206.289, 149.49)), ('A', '454', 41, 'backbone clash', (161.082, 202.665, 142.952)), ('A', '467', 41, 'backbone clash', (161.082, 202.665, 142.952)), ('A', '852', 42, 'side-chain clash', (208.222, 176.899, 183.605)), ('A', '856', 42, 'side-chain clash', (208.222, 176.899, 183.605)), ('A', '849', 43, 'smoc Outlier', (209.39800000000002, 171.01899999999998, 189.547)), ('A', '850', 43, 'smoc Outlier', (211.056, 174.183, 190.83200000000002)), ('A', '1105', 44, 'smoc Outlier', (184.57, 170.29899999999998, 251.784)), ('A', '1107', 44, 'Dihedral angle:CD:NE:CZ:NH1', (184.32000000000002, 171.29299999999998, 245.453)), ('A', '1057', 45, 'smoc Outlier', (207.598, 175.436, 209.946)), ('A', '1058', 45, 'cablam Outlier', (205.1, 178.1, 208.9)), ('A', '1117', 46, 'smoc Outlier', (181.35600000000002, 179.194, 262.65700000000004)), ('A', '1118', 46, 'smoc Outlier', (184.467, 180.207, 260.666)), ('A', '940', 47, 'backbone clash', (204.528, 156.743, 214.958)), ('A', '941', 47, 'backbone clash', (204.528, 156.743, 214.958)), ('A', '357', 48, 'side-chain clash', (153.757, 178.975, 151.226)), ('A', '359', 48, 'side-chain clash', (153.757, 178.975, 151.226)), ('A', '805', 49, 'Bond length:C', (211.607, 172.098, 225.429)), ('A', '806', 49, 'Bond length:N', (214.45100000000002, 174.43800000000002, 226.291)), ('B', '402', 1, 'Rotamer\nside-chain clash', (185.244, 221.858, 120.881)), ('B', '403', 1, 'side-chain clash', (181.024, 222.704, 115.685)), ('B', '404', 1, 'cablam Outlier\nsmoc Outlier', (180.3, 224.3, 120.9)), ('B', '405', 1, 'side-chain clash', (181.024, 222.704, 115.685)), ('B', '406', 1, 'side-chain clash', (185.244, 221.858, 120.881)), ('B', '407', 1, 'cablam CA Geom Outlier', (182.6, 218.5, 123.4)), ('B', '409', 1, 'side-chain clash', (188.732, 214.525, 120.695)), ('B', '410', 1, 'cablam Outlier', (186.3, 214.8, 125.8)), ('B', '412', 1, 'cablam Outlier', (187.1, 208.5, 128.9)), ('B', '414', 1, 'Dihedral angle:CA:C', (186.105, 207.39600000000002, 122.71000000000001)), ('B', '415', 1, 'backbone clash\nDihedral angle:N:CA\nsmoc Outlier', (187.701, 210.07399999999998, 120.66799999999999)), ('B', '416', 1, 'backbone clash\nsmoc Outlier', (189.048, 211.037, 119.418)), ('B', '419', 1, 'side-chain clash', (188.732, 214.525, 120.695)), ('B', '420', 1, 'smoc Outlier', (193.268, 212.464, 119.333)), ('B', '424', 1, 'side-chain clash', (197.448, 212.626, 124.308)), ('B', '457', 1, 'backbone clash', (200.227, 212.249, 118.019)), ('B', '458', 1, 'cablam Outlier', (202.5, 212.8, 114.7)), ('B', '459', 1, 'backbone clash\ncablam CA Geom Outlier\nsmoc Outlier', (200.227, 212.249, 118.019)), ('B', '461', 1, 'side-chain clash\nDihedral angle:CA:C', (199.766, 211.157, 122.896)), ('B', '462', 1, 'Dihedral angle:N:CA', (200.353, 209.707, 126.287)), ('B', '463', 1, 'side-chain clash', (196.518, 211.765, 127.181)), ('B', '464', 1, 'cablam Outlier', (197.7, 214.2, 130.0)), ('B', '495', 1, 'side-chain clash', (186.888, 223.862, 118.161)), ('B', '505', 1, 'cablam Outlier', (179.2, 227.6, 115.1)), ('B', '507', 1, 'side-chain clash\nsmoc Outlier', (182.644, 227.188, 120.126)), ('B', '349', 2, 'cablam Outlier', (194.8, 227.8, 123.3)), ('B', '352', 2, 'side-chain clash\nsmoc Outlier', (200.563, 223.734, 125.812)), ('B', '353', 2, 'smoc Outlier', (196.465, 225.435, 127.73700000000001)), ('B', '454', 2, 'backbone clash', (201.078, 220.942, 120.919)), ('B', '456', 2, 'side-chain clash', (198.872, 220.366, 111.07)), ('B', '466', 2, 'side-chain clash', (200.563, 223.734, 125.812)), ('B', '467', 2, 'backbone clash', (201.078, 220.942, 120.919)), ('B', '469', 2, 'backbone clash', (202.07, 221.756, 117.157)), ('B', '490', 2, 'Dihedral angle:CA:C', (200.196, 222.942, 108.161)), ('B', '491', 2, 'side-chain clash\nDihedral angle:N:CA', (199.466, 221.768, 111.68299999999999)), ('B', '492', 2, 'side-chain clash', (198.424, 227.103, 114.751)), ('B', '493', 2, 'Rotamer', (194.805, 226.25200000000007, 112.233)), ('B', '132', 3, 'Dihedral angle:CA:C', (140.032, 193.617, 144.80700000000002)), ('B', '133', 3, 'side-chain clash\nDihedral angle:N:CA', (136.38700000000003, 193.863, 145.72)), ('B', '134', 3, 'side-chain clash', (131.937, 195.216, 147.292)), ('B', '136', 3, 'backbone clash', (129.227, 201.243, 149.27)), ('B', '137', 3, 'backbone clash', (129.227, 201.243, 149.27)), ('B', '160', 3, 'side-chain clash', (131.937, 195.216, 147.292)), ('B', '162', 3, 'side-chain clash\nsmoc Outlier', (133.163, 189.413, 146.156)), ('B', '163', 3, 'smoc Outlier', (135.508, 187.813, 141.63)), ('B', '164', 3, 'cablam CA Geom Outlier', (138.1, 190.5, 140.7)), ('B', '249', 3, 'cablam Outlier', (123.3, 200.3, 147.4)), ('B', '840', 4, 'cablam Outlier', (162.5, 164.5, 192.5)), ('B', '842', 4, 'Dihedral angle:CA:C\nBond angle:C\ncablam CA Geom Outlier', (157.621, 161.712, 193.20299999999997)), ('B', '843', 4, 'Dihedral angle:N:CA\nBond angle:N:CA', (157.725, 158.289, 194.95200000000003)), ('B', '844', 4, 'Ramachandran\nDihedral angle:CA:C', (156.17299999999997, 156.278, 192.108)), ('B', '845', 4, 'Dihedral angle:N:CA\ncablam Outlier', (155.07399999999998, 158.945, 189.69299999999998)), ('B', '846', 4, 'side-chain clash', (160.097, 160.008, 186.661)), ('B', '847', 4, 'Dihedral angle:CD:NE:CZ:NH1', (159.43, 154.817, 186.97299999999998)), ('B', '849', 4, 'side-chain clash', (160.097, 160.008, 186.661)), ('B', '442', 5, 'side-chain clash', (186.452, 235.662, 118.844)), ('B', '444', 5, 'side-chain clash\nsmoc Outlier', (186.832, 238.287, 116.599)), ('B', '447', 5, 'cablam Outlier', (187.9, 237.8, 112.1)), ('B', '448', 5, 'side-chain clash', (186.452, 235.662, 118.844)), ('B', '496', 5, 'smoc Outlier', (187.585, 232.08800000000002, 112.76400000000001)), ('B', '497', 5, 'side-chain clash', (186.651, 234.923, 116.174)), ('B', '1142', 6, 'Bond angle:CA:C', (181.608, 191.726, 273.77099999999996)), ('B', '1143', 6, 'Ramachandran\nBond angle:N\ncablam CA Geom Outlier', (177.759, 191.475, 274.09)), ('B', '1144', 6, 'cablam Outlier', (177.9, 189.2, 277.1)), ('B', '1145', 6, 'Dihedral angle:CA:C\ncablam Outlier', (180.653, 186.737, 275.96999999999997)), ('B', '1146', 6, 'Dihedral angle:N:CA', (183.07899999999998, 188.168, 278.464)), ('B', '281', 7, 'Dihedral angle:CA:C\nBond angle:C', (150.92700000000002, 172.21099999999998, 184.477)), ('B', '282', 7, 'Dihedral angle:N:CA\nBond angle:N:CA\ncablam Outlier', (148.785, 171.341, 181.429)), ('B', '293', 7, 'side-chain clash\ncablam Outlier', (146.076, 174.697, 186.015)), ('B', '632', 7, 'side-chain clash', (146.076, 174.697, 186.015)), ('B', '121', 8, 'side-chain clash', (133.044, 182.296, 158.691)), ('B', '123', 8, 'cablam Outlier', (127.2, 179.1, 158.8)), ('B', '124', 8, 'cablam Outlier', (128.6, 176.5, 156.3)), ('B', '126', 8, 'side-chain clash', (133.044, 182.296, 158.691)), ('B', '361', 9, 'side-chain clash\nDihedral angle:CA:C', (191.917, 226.20399999999998, 149.742)), ('B', '362', 9, 'side-chain clash\nDihedral angle:N:CA', (188.49, 225.88800000000003, 151.146)), ('B', '364', 9, 'Dihedral angle:CA:CB:CG:OD1', (182.89600000000002, 226.66899999999998, 148.102)), ('B', '524', 9, 'side-chain clash', (191.243, 224.386, 148.018)), ('B', '743', 10, 'Dihedral angle:CA:C\ncablam Outlier', (178.916, 171.067, 176.118)), ('B', '744', 10, 'Dihedral angle:N:CA\nBond angle:C', (176.106, 168.805, 177.19899999999998)), ('B', '745', 10, 'Bond angle:N:CA\ncablam Outlier', (176.112, 165.411, 175.406)), ('B', '747', 10, 'smoc Outlier', (181.084, 165.035, 171.32700000000003)), ('B', '602', 11, 'Dihedral angle:CA:C', (151.576, 193.034, 199.14399999999998)), ('B', '603', 11, 'Dihedral angle:N:CA', (150.018, 191.32600000000002, 202.166)), ('B', '605', 11, 'backbone clash', (149.13, 198.954, 199.229)), ('B', '606', 11, 'backbone clash', (149.13, 198.954, 199.229)), ('B', '474', 12, 'backbone clash', (207.149, 216.131, 103.336)), ('B', '477', 12, 'cablam Outlier', (208.9, 211.1, 102.3)), ('B', '478', 12, 'backbone clash', (207.149, 216.131, 103.336)), ('B', '486', 12, 'cablam Outlier', (203.8, 218.7, 98.7)), ('B', '217', 13, 'backbone clash', (137.713, 190.1, 181.731)), ('B', '33', 13, 'Dihedral angle:CA:C\ncablam Outlier', (142.9, 192.238, 182.08200000000002)), ('B', '34', 13, 'backbone clash\nDihedral angle:N:CA', (141.68800000000002, 191.518, 178.617)), ('B', '1007', 14, 'smoc Outlier', (179.507, 181.22, 190.27399999999997)), ('B', '332', 14, 'side-chain clash\nsmoc Outlier', (183.92, 176.857, 189.381)), ('B', '766', 14, 'smoc Outlier', (187.11399999999998, 174.148, 194.577)), ('B', '1070', 15, 'smoc Outlier', (165.099, 195.62800000000001, 239.148)), ('B', '452', 15, 'side-chain clash', (163.992, 197.496, 244.596)), ('B', '494', 15, 'side-chain clash', (163.992, 197.496, 244.596)), ('B', '1092', 16, 'cablam Outlier\nsmoc Outlier', (182.9, 192.8, 250.1)), ('B', '1106', 16, 'smoc Outlier', (176.165, 193.593, 248.925)), ('B', '1107', 16, 'Dihedral angle:CD:NE:CZ:NH1', (176.106, 195.406, 245.626)), ('B', '991', 17, 'smoc Outlier', (183.664, 179.765, 165.38600000000002)), ('B', '992', 17, 'smoc Outlier', (180.24399999999997, 179.88400000000001, 167.05700000000002)), ('B', '993', 17, 'smoc Outlier', (180.92800000000003, 176.966, 169.38700000000003)), ('B', '127', 18, 'side-chain clash', (134.966, 179.393, 151.664)), ('B', '128', 18, 'smoc Outlier', (138.417, 184.26899999999998, 152.977)), ('B', '171', 18, 'side-chain clash', (134.966, 179.393, 151.664)), ('B', '539', 19, 'Dihedral angle:CA:C', (172.804, 218.947, 174.38400000000001)), ('B', '540', 19, 'Dihedral angle:N:CA', (175.033, 217.05200000000002, 172.01899999999998)), ('B', '549', 19, 'cablam CA Geom Outlier', (177.0, 215.1, 175.4)), ('B', '386', 20, 'smoc Outlier', (177.599, 216.3, 147.752)), ('B', '389', 20, 'cablam Outlier', (182.0, 216.2, 152.3)), ('B', '391', 20, 'Bond angle:CA:CB:SG', (188.646, 216.07, 150.154)), ('B', '109', 21, 'cablam Outlier', (142.5, 202.8, 149.6)), ('B', '111', 21, 'smoc Outlier', (138.875, 202.47899999999998, 145.10899999999998)), ('B', '113', 21, 'cablam Outlier', (143.6, 200.2, 143.2)), ('B', '581', 22, 'backbone clash\nDihedral angle:CA:C', (184.819, 233.577, 170.598)), ('B', '582', 22, 'Dihedral angle:N:CA', (187.69, 232.157, 172.593)), ('B', '583', 22, 'backbone clash', (185.589, 231.723, 173.06)), ('B', '66', 23, 'side-chain clash', (123.926, 202.902, 169.476)), ('B', '68', 23, 'side-chain clash', (123.926, 202.902, 169.476)), ('B', '69', 23, 'smoc Outlier', (120.524, 205.689, 164.75)), ('B', '225', 24, 'smoc Outlier', (145.142, 180.782, 167.60999999999999)), ('B', '226', 24, 'side-chain clash\nsmoc Outlier', (141.731, 181.683, 161.822)), ('B', '227', 24, 'side-chain clash', (141.731, 181.683, 161.822)), ('B', '231', 25, 'cablam Outlier', (149.3, 187.7, 152.9)), ('B', '232', 25, 'cablam Outlier', (151.5, 190.7, 152.8)), ('B', '234', 25, 'side-chain clash', (149.552, 196.805, 152.485)), ('B', '214', 26, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (127.016, 195.162, 180.18800000000002)), ('B', '215', 26, 'Dihedral angle:N:CA\ncablam Outlier', (130.79399999999998, 194.95200000000003, 180.436)), ('B', '666', 27, 'cablam Outlier', (166.4, 206.0, 203.0)), ('B', '667', 27, 'cablam Outlier', (169.6, 207.7, 203.9)), ('B', '638', 28, 'cablam CA Geom Outlier', (155.1, 215.7, 191.0)), ('B', '640', 28, 'cablam Outlier', (152.2, 218.1, 196.9)), ('B', '210', 29, 'smoc Outlier', (129.423, 185.605, 180.39600000000002)), ('B', '211', 29, 'smoc Outlier', (126.38199999999999, 186.58, 182.45800000000003)), ('B', '659', 30, 'side-chain clash', (171.893, 202.513, 241.068)), ('B', '698', 30, 'side-chain clash', (171.893, 202.513, 241.068)), ('B', '350', 31, 'side-chain clash', (175.618, 213.422, 237.381)), ('B', '400', 31, 'side-chain clash', (175.618, 213.422, 237.381)), ('B', '37', 32, 'backbone clash', (150.506, 190.843, 170.91)), ('B', '54', 32, 'backbone clash', (150.506, 190.843, 170.91)), ('B', '367', 33, 'side-chain clash', (176.319, 229.324, 141.579)), ('B', '371', 33, 'side-chain clash', (176.319, 229.324, 141.579)), ('B', '708', 34, 'backbone clash', (176.474, 213.288, 245.379)), ('B', '709', 34, 'backbone clash', (176.474, 213.288, 245.379)), ('B', '196', 35, 'Dihedral angle:CA:C', (149.155, 191.777, 160.648)), ('B', '197', 35, 'Dihedral angle:N:CA', (152.85700000000003, 191.95600000000002, 160.159)), ('B', '310', 36, 'side-chain clash\ncablam CA Geom Outlier', (157.11, 197.779, 203.416)), ('B', '600', 36, 'side-chain clash\ncablam Outlier', (157.11, 197.779, 203.416)), ('B', '1125', 37, 'smoc Outlier', (194.105, 206.65200000000002, 260.09)), ('B', '1126', 37, 'cablam Outlier\nsmoc Outlier', (191.1, 208.9, 259.7)), ('B', '357', 38, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (197.972, 224.285, 140.82600000000002)), ('B', '394', 38, 'side-chain clash', (199.303, 220.949, 144.402)), ('B', '809', 39, 'smoc Outlier', (159.434, 160.224, 222.6)), ('B', '810', 39, 'smoc Outlier', (155.92700000000002, 160.295, 221.071)), ('B', '901', 40, 'side-chain clash', (174.706, 175.016, 236.177)), ('B', '905', 40, 'side-chain clash', (174.706, 175.016, 236.177)), ('B', '516', 41, 'Dihedral angle:CB:CG:CD:OE1', (193.865, 213.818, 143.225)), ('B', '518', 41, 'Bond angle:CA:CB:CG', (198.277, 211.417, 147.52800000000002)), ('B', '433', 42, 'side-chain clash', (187.961, 218.543, 132.385)), ('B', '512', 42, 'side-chain clash', (187.961, 218.543, 132.385)), ('B', '620', 43, 'Bond angle:CA:C', (161.934, 215.063, 187.65)), ('B', '621', 43, 'Bond angle:N', (159.202, 215.05, 184.906)), ('B', '546', 44, 'side-chain clash', (183.846, 174.929, 208.826)), ('B', '573', 44, 'side-chain clash', (183.846, 174.929, 208.826)), ('B', '96', 45, 'Dihedral angle:CB:CG:CD:OE1', (126.12199999999999, 188.186, 170.38500000000002)), ('B', '98', 45, 'cablam CA Geom Outlier', (121.4, 185.9, 167.1)), ('B', '1057', 46, 'cablam Outlier\nsmoc Outlier', (167.8, 174.0, 209.8)), ('B', '1058', 46, 'smoc Outlier', (171.45200000000003, 174.65800000000002, 208.996)), ('B', '1114', 47, 'smoc Outlier', (175.155, 195.49200000000002, 261.059)), ('B', '1115', 47, 'smoc Outlier', (178.74499999999998, 196.74899999999997, 260.7)), ('B', '1042', 48, 'smoc Outlier', (178.732, 187.42200000000003, 224.909)), ('B', '1043', 48, 'cablam Outlier', (176.0, 185.1, 226.2)), ('B', '940', 49, 'backbone clash', (152.779, 184.964, 215.004)), ('B', '941', 49, 'backbone clash', (152.779, 184.964, 215.004)), ('B', '805', 50, 'Bond length:C', (163.121, 171.642, 225.344)), ('B', '806', 50, 'Bond length:N', (163.71599999999998, 168.039, 226.17499999999998)), ('C', '108', 1, 'backbone clash\ncablam Outlier', (214.058, 214.118, 151.766)), ('C', '109', 1, 'cablam Outlier', (219.5, 214.9, 148.4)), ('C', '111', 1, 'smoc Outlier', (220.708, 217.54899999999998, 143.91899999999998)), ('C', '112', 1, 'side-chain clash', (216.99, 219.309, 140.224)), ('C', '113', 1, 'cablam Outlier', (216.2, 215.6, 141.7)), ('C', '168', 1, 'side-chain clash\nsmoc Outlier', (204.233, 220.502, 152.718)), ('C', '231', 1, 'side-chain clash\ncablam Outlier', (204.233, 220.502, 152.718)), ('C', '232', 1, 'cablam Outlier', (204.8, 215.4, 153.0)), ('C', '233', 1, 'Rotamer', (208.546, 214.981, 152.15)), ('C', '234', 1, 'backbone clash', (214.058, 214.118, 151.766)), ('C', '237', 1, 'side-chain clash', (224.633, 216.477, 152.7)), ('C', '240', 1, 'smoc Outlier', (222.23, 225.797, 158.944)), ('C', '81', 1, 'smoc Outlier', (228.824, 223.88000000000002, 158.991)), ('C', '83', 1, 'side-chain clash\nBond angle:C\ncablam Outlier', (225.531, 218.30100000000002, 156.499)), ('C', '84', 1, 'Bond angle:N:CA', (224.46800000000002, 216.766, 159.89200000000002)), ('C', '273', 2, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (211.789, 208.309, 176.035)), ('C', '290', 2, 'side-chain clash', (215.438, 209.856, 179.981)), ('C', '291', 2, 'cablam Outlier', (212.4, 208.0, 183.9)), ('C', '292', 2, 'smoc Outlier', (215.48800000000003, 206.10399999999998, 182.507)), ('C', '293', 2, 'cablam Outlier', (218.3, 208.2, 183.9)), ('C', '294', 2, 'side-chain clash', (218.065, 208.439, 186.73)), ('C', '296', 2, 'smoc Outlier', (215.835, 207.132, 191.783)), ('C', '297', 2, 'smoc Outlier', (214.06, 208.64399999999998, 188.77299999999997)), ('C', '310', 2, 'cablam CA Geom Outlier', (211.5, 205.6, 203.0)), ('C', '599', 2, 'side-chain clash', (216.82, 205.404, 196.462)), ('C', '600', 2, 'cablam Outlier', (216.1, 206.7, 202.8)), ('C', '608', 2, 'side-chain clash', (216.82, 205.404, 196.462)), ('C', '318', 3, 'side-chain clash', (219.528, 188.604, 187.943)), ('C', '320', 3, 'Bond length:C', (220.874, 188.90800000000002, 180.401)), ('C', '321', 3, 'Bond length:N', (220.934, 189.683, 176.756)), ('C', '590', 3, 'Ramachandran\ncablam Outlier', (219.528, 183.021, 180.43600000000006)), ('C', '591', 3, 'cablam Outlier', (218.9, 184.7, 183.8)), ('C', '613', 3, 'smoc Outlier', (216.924, 189.516, 193.589)), ('C', '615', 3, 'side-chain clash', (219.528, 188.604, 187.943)), ('C', '619', 3, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:CA:C', (226.242, 188.266, 186.627)), ('C', '620', 3, 'Dihedral angle:N:CA', (225.335, 191.89600000000002, 187.292)), ('C', '623', 3, 'smoc Outlier', (223.089, 191.72299999999998, 182.42700000000002)), ('C', '212', 4, 'side-chain clash', (228.927, 231.464, 179.5)), ('C', '214', 4, 'side-chain clash\nDihedral angle:CA:C', (229.585, 229.765, 177.291)), ('C', '215', 4, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (226.71099999999998, 227.85600000000002, 178.80800000000002)), ('C', '216', 4, 'Dihedral angle:N:CA', (223.37800000000001, 226.29899999999998, 178.38700000000003)), ('C', '217', 4, 'cablam Outlier', (222.0, 227.2, 181.8)), ('C', '218', 4, 'cablam Outlier', (220.7, 225.1, 184.7)), ('C', '33', 4, 'cablam Outlier', (217.6, 219.7, 181.8)), ('C', '34', 4, 'cablam CA Geom Outlier', (216.9, 221.6, 178.7)), ('C', '35', 4, 'cablam Outlier', (214.7, 221.0, 175.6)), ('C', '186', 5, 'side-chain clash', (223.197, 237.656, 174.199)), ('C', '187', 5, 'side-chain clash', (223.197, 237.656, 174.199)), ('C', '188', 5, 'side-chain clash', (218.546, 236.053, 176.582)), ('C', '209', 5, 'side-chain clash', (218.546, 236.053, 176.582)), ('C', '95', 5, 'smoc Outlier', (222.83100000000002, 232.63899999999998, 171.77299999999997)), ('C', '96', 5, 'smoc Outlier', (223.803, 235.592, 169.632)), ('C', '97', 5, 'cablam Outlier', (225.5, 239.0, 169.5)), ('C', '98', 5, 'cablam Outlier', (224.4, 240.7, 166.3)), ('C', '131', 6, 'Dihedral angle:CA:C', (210.732, 225.57299999999998, 146.3)), ('C', '132', 6, 'Dihedral angle:N:CA', (213.61599999999999, 223.805, 144.66)), ('C', '133', 6, 'side-chain clash', (215.956, 229.873, 145.036)), ('C', '134', 6, 'side-chain clash\nsmoc Outlier', (218.144, 227.986, 142.734)), ('C', '162', 6, 'side-chain clash', (218.144, 227.986, 142.734)), ('C', '163', 6, 'cablam Outlier', (213.1, 229.0, 143.1)), ('C', '165', 6, 'cablam Outlier', (208.4, 224.4, 140.3)), ('C', '349', 7, 'backbone clash', (190.008, 163.517, 133.782)), ('C', '417', 7, 'Dihedral angle:CA:C', (181.539, 167.38500000000002, 141.787)), ('C', '418', 7, 'Dihedral angle:N:CA', (185.261, 168.041, 141.66)), ('C', '422', 7, 'side-chain clash', (186.547, 162.937, 138.08)), ('C', '452', 7, 'backbone clash', (190.008, 163.517, 133.782)), ('C', '454', 7, 'side-chain clash', (186.547, 162.937, 138.08)), ('C', '827', 8, 'Dihedral angle:CA:C', (192.04399999999998, 213.58800000000002, 204.62)), ('C', '828', 8, 'Dihedral angle:N:CA', (191.836, 212.996, 200.92000000000002)), ('C', '829', 8, 'Dihedral angle:CA:C', (193.849, 216.172, 200.43)), ('C', '830', 8, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (196.51, 213.864, 199.111)), ('C', '831', 8, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (195.197, 212.823, 195.73899999999998)), ('C', '634', 9, 'Dihedral angle:CD:NE:CZ:NH1', (226.82800000000003, 203.176, 185.577)), ('C', '636', 9, 'cablam Outlier\nsmoc Outlier', (224.9, 201.5, 190.4)), ('C', '638', 9, 'cablam CA Geom Outlier', (229.9, 198.6, 189.6)), ('C', '642', 9, 'side-chain clash', (227.779, 195.39, 193.992)), ('C', '651', 9, 'side-chain clash', (227.779, 195.39, 193.992)), ('C', '739', 10, 'smoc Outlier', (175.122, 199.936, 181.053)), ('C', '740', 10, 'smoc Outlier', (176.394, 203.511, 181.196)), ('C', '743', 10, 'side-chain clash', (176.397, 200.992, 173.777)), ('C', '745', 10, 'cablam Outlier', (175.1, 207.0, 175.4)), ('C', '749', 10, 'side-chain clash', (176.397, 200.992, 173.777)), ('C', '517', 11, 'Dihedral angle:CA:C\nBond angle:C\ncablam CA Geom Outlier', (206.017, 171.212, 160.26899999999998)), ('C', '518', 11, 'side-chain clash\nDihedral angle:N:CA\nBond angle:N:CA\ncablam Outlier\nsmoc Outlier', (208.601, 170.835, 163.045)), ('C', '519', 11, 'cablam Outlier', (207.6, 167.7, 164.9)), ('C', '546', 11, 'side-chain clash', (210.326, 173.492, 167.023)), ('C', '825', 12, 'backbone clash', (199.494, 214.475, 214.454)), ('C', '936', 12, 'Dihedral angle:CA:C', (199.40200000000002, 216.60299999999998, 221.934)), ('C', '937', 12, 'Dihedral angle:N:CA', (200.86700000000002, 213.501, 220.439)), ('C', '940', 12, 'backbone clash', (199.494, 214.475, 214.454)), ('C', '985', 13, 'Dihedral angle:CA:C', (180.14899999999997, 199.295, 158.071)), ('C', '986', 13, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (178.037, 197.24899999999997, 160.499)), ('C', '987', 13, 'Dihedral angle:N:CA\ncablam Outlier', (178.80800000000002, 193.86200000000002, 159.003)), ('C', '989', 13, 'smoc Outlier', (181.71299999999997, 197.306, 162.90200000000002)), ('C', '1140', 14, 'smoc Outlier', (194.62800000000001, 188.577, 267.803)), ('C', '1142', 14, 'Dihedral angle:CA:C', (193.063, 185.859, 273.404)), ('C', '1143', 14, 'Dihedral angle:N:CA\ncablam Outlier', (196.194, 187.23499999999999, 275.119)), ('C', '659', 15, 'side-chain clash', (221.424, 193.489, 216.125)), ('C', '661', 15, 'Dihedral angle:CB:CG:CD:OE1', (216.76999999999998, 197.35200000000003, 215.252)), ('C', '698', 15, 'side-chain clash', (221.424, 193.489, 216.125)), ('C', '1084', 16, 'cablam Outlier\nsmoc Outlier', (203.1, 174.6, 266.7)), ('C', '1085', 16, 'smoc Outlier', (203.656, 171.47, 264.575)), ('C', '1126', 16, 'cablam Outlier', (205.4, 170.5, 259.2)), ('C', '757', 17, 'smoc Outlier', (172.261, 187.91899999999998, 179.55700000000002)), ('C', '758', 17, 'cablam Outlier\nsmoc Outlier', (172.4, 188.9, 183.2)), ('C', '762', 17, 'smoc Outlier', (174.44899999999998, 190.407, 189.04899999999998)), ('C', '625', 18, 'side-chain clash\nsmoc Outlier', (221.248, 199.384, 179.333)), ('C', '627', 18, 'smoc Outlier', (226.879, 199.608, 177.546)), ('C', '629', 18, 'side-chain clash', (221.248, 199.384, 179.333)), ('C', '122', 19, 'side-chain clash\nBond angle:C', (213.49200000000002, 238.16899999999998, 155.689)), ('C', '123', 19, 'Bond angle:N:CA\ncablam Outlier', (214.036, 240.698, 158.568)), ('C', '125', 19, 'side-chain clash', (211.007, 239.268, 156.093)), ('C', '790', 20, 'Bond length:C', (173.677, 213.102, 229.592)), ('C', '791', 20, 'Bond length:N', (176.181, 214.20999999999998, 232.112)), ('C', '792', 20, 'side-chain clash', (175.618, 213.422, 237.381)), ('C', '444', 21, 'side-chain clash\nsmoc Outlier', (192.065, 171.219, 121.192)), ('C', '447', 21, 'side-chain clash', (192.065, 171.219, 121.192)), ('C', '449', 21, 'side-chain clash', (188.526, 170.071, 120.119)), ('C', '581', 22, 'Rotamer\nbackbone clash\nDihedral angle:CA:C', (227.21499999999997, 166.078, 164.525)), ('C', '582', 22, 'Dihedral angle:N:CA', (224.254, 164.21599999999998, 165.89600000000002)), ('C', '583', 22, 'backbone clash', (225.286, 165.448, 167.425)), ('C', '500', 23, 'smoc Outlier', (187.10999999999999, 179.631, 121.09400000000001)), ('C', '501', 23, 'side-chain clash', (185.764, 178.07, 127.508)), ('C', '505', 23, 'side-chain clash', (185.764, 178.07, 127.508)), ('C', '136', 24, 'side-chain clash', (224.184, 227.631, 147.201)), ('C', '160', 24, 'side-chain clash', (224.184, 227.631, 147.201)), ('C', '494', 25, 'backbone clash\ncablam Outlier', (186.196, 165.374, 127.972)), ('C', '495', 25, 'backbone clash', (186.196, 165.374, 127.972)), ('C', '491', 26, 'side-chain clash', (183.69, 156.064, 135.022)), ('C', '492', 26, 'side-chain clash', (183.69, 156.064, 135.022)), ('C', '277', 27, 'side-chain clash', (206.339, 218.815, 180.028)), ('C', '285', 27, 'side-chain clash', (206.339, 218.815, 180.028)), ('C', '719', 28, 'side-chain clash', (201.943, 206.306, 237.542)), ('C', '926', 28, 'side-chain clash', (201.943, 206.306, 237.542)), ('C', '573', 29, 'smoc Outlier', (211.79299999999998, 172.772, 174.171)), ('C', '574', 29, 'side-chain clash', (213.219, 170.507, 176.343)), ('C', '902', 30, 'side-chain clash', (189.964, 204.555, 241.692)), ('C', '916', 30, 'side-chain clash', (189.964, 204.555, 241.692)), ('C', '530', 31, 'backbone clash\ncablam Outlier', (226.333, 176.663, 160.778)), ('C', '531', 31, 'backbone clash\nsmoc Outlier', (226.333, 176.663, 160.778)), ('C', '197', 32, 'Bond angle:C', (206.003, 212.647, 161.51)), ('C', '198', 32, 'Bond angle:N:CA\ncablam Outlier', (203.85600000000002, 211.24899999999997, 158.627)), ('C', '312', 33, 'smoc Outlier', (211.97, 199.459, 199.305)), ('C', '596', 33, 'smoc Outlier', (214.415, 196.783, 193.92600000000002)), ('C', '106', 34, 'side-chain clash', (213.829, 221.367, 154.484)), ('C', '117', 34, 'side-chain clash', (213.829, 221.367, 154.484)), ('C', '915', 35, 'smoc Outlier', (195.5, 201.696, 248.167)), ('C', '919', 35, 'smoc Outlier', (196.917, 207.677, 246.85500000000002)), ('C', '442', 36, 'side-chain clash', (194.763, 169.659, 128.39)), ('C', '451', 36, 'side-chain clash', (194.763, 169.659, 128.39)), ('C', '412', 37, 'cablam Outlier', (189.8, 173.3, 152.2)), ('C', '413', 37, 'cablam Outlier', (186.0, 172.7, 152.5)), ('C', '381', 38, 'side-chain clash', (200.132, 175.176, 156.921)), ('C', '430', 38, 'side-chain clash\ncablam Outlier', (200.132, 175.176, 156.921)), ('C', '383', 39, 'side-chain clash', (203.905, 185.925, 154.972)), ('C', '386', 39, 'side-chain clash', (205.971, 185.237, 160.359)), ('C', '901', 40, 'side-chain clash', (184.05, 202.091, 236.334)), ('C', '905', 40, 'side-chain clash', (184.05, 202.091, 236.334)), ('C', '432', 41, 'Rotamer', (199.574, 175.908, 148.972)), ('C', '512', 41, 'smoc Outlier', (199.196, 171.334, 145.379)), ('C', '457', 42, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (179.591, 158.694, 142.359)), ('C', '467', 42, 'side-chain clash', (185.22, 155.874, 144.967)), ('C', '854', 43, 'Dihedral angle:CA:C\ncablam Outlier', (180.627, 212.041, 187.883)), ('C', '855', 43, 'Dihedral angle:N:CA', (180.726, 210.965, 184.289)), ('C', '858', 44, 'side-chain clash', (184.488, 204.934, 190.408)), ('C', '959', 44, 'side-chain clash', (184.488, 204.934, 190.408)), ('C', '193', 45, 'smoc Outlier', (212.824, 221.708, 168.236)), ('C', '90', 45, 'Rotamer', (216.834, 217.89300000000006, 166.233)), ('C', '605', 46, 'backbone clash', (220.419, 211.092, 199.195)), ('C', '606', 46, 'backbone clash', (220.419, 211.092, 199.195)), ('C', '950', 47, 'Dihedral angle:CA:CB:CG:OD1', (194.814, 203.02, 204.09)), ('C', '954', 47, 'smoc Outlier', (192.809, 201.63899999999998, 198.635)), ('C', '1043', 48, 'cablam Outlier', (192.1, 196.1, 226.3)), ('C', '1045', 48, 'cablam Outlier', (198.9, 196.5, 227.9)), ('L', '2', 1, 'Bond angle:C2:N2:C7\nBond angle:C1:C2:N2', (151.112, 171.605, 226.592)), ('T', '1', 1, 'side-chain clash', (208.91, 194.442, 260.668))]
data['omega'] = [('B', ' 362 ', 'VAL', None, (189.814, 226.421, 150.867)), ('C', ' 216 ', 'LEU', None, (224.807, 226.52, 178.24300000000002))]
data['rama'] = [('B', ' 844 ', 'ILE', 0.097503128021529, (156.173, 156.278, 192.108)), ('B', '1143 ', 'PRO', 0.04406158085990137, (177.759, 191.4750000000001, 274.09)), ('C', ' 590 ', 'CYS', 0.04847375835098971, (219.528, 183.021, 180.43600000000006))]
data['cablam'] = [('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (207.8, 161.8, 167.9)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (189.5, 151.0, 162.1)), ('A', '98', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (210.6, 128.9, 161.0)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (187.9, 146.2, 149.2)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (213.7, 136.8, 153.0)), ('A', '164', 'ASN', 'check CA trace,carbonyls, peptide', ' \n---S-', (197.8, 146.3, 136.0)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTSSH', (188.1, 149.6, 181.9)), ('A', '294', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSSHH', (186.9, 149.1, 185.6)), ('A', '371', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nHSSS-', (174.8, 169.4, 138.6)), ('A', '453', 'TYR', ' beta sheet', ' \n-----', (168.5, 200.2, 137.3)), ('A', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (166.6, 225.2, 143.3)), ('A', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nSS--T', (162.6, 218.0, 133.2)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n--TTE', (168.3, 221.9, 135.1)), ('A', '494', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (169.5, 201.4, 131.1)), ('A', '503', 'VAL', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (184.4, 190.1, 131.7)), ('A', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (163.3, 179.4, 163.7)), ('A', '520', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (156.6, 177.0, 162.7)), ('A', '530', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (162.1, 158.3, 157.5)), ('A', '534', 'VAL', 'check CA trace,carbonyls, peptide', ' \n---SS', (163.9, 152.6, 168.7)), ('A', '535', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (162.5, 153.2, 172.2)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (164.8, 153.9, 175.2)), ('A', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (161.4, 168.2, 161.5)), ('A', '559', 'PHE', 'check CA trace,carbonyls, peptide', ' \n----S', (149.9, 169.4, 175.2)), ('A', '591', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (176.0, 160.2, 180.0)), ('A', '592', 'PHE', 'check CA trace,carbonyls, peptide', ' \n-----', (175.5, 159.5, 183.8)), ('A', '594', 'GLY', 'check CA trace,carbonyls, peptide', ' \n---EE', (177.2, 161.0, 188.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (179.4, 158.1, 202.2)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (176.5, 160.4, 203.2)), ('A', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (177.9, 159.0, 217.8)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (196.8, 197.9, 183.4)), ('A', '813', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (220.7, 176.3, 216.4)), ('A', '981', 'LEU', ' alpha helix', 'turn\nHHTTT', (206.1, 184.0, 164.7)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (193.6, 176.4, 226.1)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (205.1, 178.1, 208.9)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (169.7, 177.2, 266.7)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (183.2, 178.3, 249.9)), ('A', '1143', 'PRO', ' alpha helix', 'bend\nSSSS-', (185.5, 176.3, 275.0)), ('A', '1144', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (188.7, 178.2, 275.4)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (192.1, 156.2, 200.8)), ('A', '415', 'THR', 'check CA trace', ' \nT--SH', (177.0, 199.5, 149.6)), ('A', '519', 'HIS', 'check CA trace', 'bend\n-SSS-', (159.7, 178.3, 164.5)), ('A', '549', 'THR', 'check CA trace', ' \nE--BE', (171.2, 163.1, 171.2)), ('A', '638', 'THR', 'check CA trace', 'bend\nGTSSS', (174.4, 144.3, 189.9)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nESS--', (142.9, 192.2, 182.1)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (149.3, 197.7, 165.1)), ('B', '109', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS-S', (142.5, 202.8, 149.6)), ('B', '113', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (143.6, 200.2, 143.2)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (127.2, 179.1, 158.8)), ('B', '124', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (128.6, 176.5, 156.3)), ('B', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (130.8, 195.0, 180.4)), ('B', '231', 'ILE', ' beta sheet', ' \n-----', (149.3, 187.7, 152.9)), ('B', '232', 'GLY', ' beta sheet', ' \n-----', (151.5, 190.7, 152.8)), ('B', '249', 'LEU', 'check CA trace,carbonyls, peptide', ' \n-----', (123.3, 200.3, 147.4)), ('B', '282', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nETTTE', (148.8, 171.3, 181.4)), ('B', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSH', (151.4, 200.2, 184.3)), ('B', '349', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SS', (194.8, 227.8, 123.3)), ('B', '389', 'ASP', ' three-ten', 'bend\nTTS--', (182.0, 216.2, 152.3)), ('B', '404', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\n-BTTT', (180.3, 224.3, 120.9)), ('B', '410', 'ILE', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (186.3, 214.8, 125.8)), ('B', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (187.1, 208.5, 128.9)), ('B', '447', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nTTTB-', (187.9, 237.8, 112.1)), ('B', '458', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (202.5, 212.8, 114.7)), ('B', '464', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (197.7, 214.2, 130.0)), ('B', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (208.9, 211.1, 102.3)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nS-TT-', (203.8, 218.7, 98.7)), ('B', '505', 'TYR', 'check CA trace,carbonyls, peptide', 'turn\nTTT-B', (179.2, 227.6, 115.1)), ('B', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (182.1, 214.8, 170.3)), ('B', '590', 'CYS', 'check CA trace,carbonyls, peptide', ' \nE----', (173.4, 215.2, 182.0)), ('B', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (155.2, 198.0, 202.5)), ('B', '640', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nS-S-E', (152.2, 218.1, 196.9)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.4, 206.0, 203.0)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (169.6, 207.7, 203.9)), ('B', '743', 'CYS', 'check CA trace,carbonyls, peptide', 'helix\nHHHTT', (178.9, 171.1, 176.1)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-T', (176.1, 165.4, 175.4)), ('B', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nS-SHH', (192.3, 172.0, 183.1)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (164.6, 169.6, 239.4)), ('B', '840', 'CYS', 'check CA trace,carbonyls, peptide', ' \nHT---', (162.5, 164.5, 192.5)), ('B', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nTTS-S', (155.1, 158.9, 189.7)), ('B', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (186.2, 165.5, 232.7)), ('B', '970', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (177.2, 185.6, 173.7)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (176.0, 185.1, 226.2)), ('B', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (172.1, 190.7, 228.0)), ('B', '1057', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (167.8, 174.0, 209.8)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (189.0, 204.7, 266.9)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (182.9, 192.8, 250.1)), ('B', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (194.0, 200.1, 257.4)), ('B', '1126', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (191.1, 208.9, 259.7)), ('B', '1144', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (177.9, 189.2, 277.1)), ('B', '1145', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS---', (180.7, 186.7, 276.0)), ('B', '98', 'SER', 'check CA trace', 'bend\nESSS-', (121.4, 185.9, 167.1)), ('B', '164', 'ASN', 'check CA trace', 'bend\n--SS-', (138.1, 190.5, 140.7)), ('B', '214', 'ARG', 'check CA trace', 'bend\n-SSS-', (127.0, 195.2, 180.2)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (158.5, 195.0, 202.5)), ('B', '407', 'VAL', 'check CA trace', 'turn\nTTTSS', (182.6, 218.5, 123.4)), ('B', '459', 'SER', 'check CA trace', 'bend\n-SS--', (200.3, 210.2, 116.4)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (177.0, 215.1, 175.4)), ('B', '638', 'THR', 'check CA trace', 'bend\nGTS-S', (155.1, 215.7, 191.0)), ('B', '842', 'GLY', 'check CA trace', ' \n---TT', (157.6, 161.7, 193.2)), ('B', '1143', 'PRO', 'check CA trace', 'bend\nT-SS-', (177.8, 191.5, 274.1)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (217.6, 219.7, 181.8)), ('C', '35', 'GLY', 'check CA trace,carbonyls, peptide', ' \nS--EE', (214.7, 221.0, 175.6)), ('C', '83', 'VAL', 'check CA trace,carbonyls, peptide', ' \n----B', (225.5, 218.3, 156.5)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (214.1, 211.5, 164.1)), ('C', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (225.5, 239.0, 169.5)), ('C', '98', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (224.4, 240.7, 166.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEES--', (217.0, 214.4, 151.2)), ('C', '109', 'THR', 'check CA trace,carbonyls, peptide', ' \nES--S', (219.5, 214.9, 148.4)), ('C', '113', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (216.2, 215.6, 141.7)), ('C', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (214.0, 240.7, 158.6)), ('C', '163', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----S', (213.1, 229.0, 143.1)), ('C', '165', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (208.4, 224.4, 140.3)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (203.9, 211.2, 158.6)), ('C', '217', 'PRO', 'check CA trace,carbonyls, peptide', ' \n---SS', (222.0, 227.2, 181.8)), ('C', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (220.7, 225.1, 184.7)), ('C', '231', 'ILE', ' beta sheet', ' \nE----', (204.6, 219.1, 153.7)), ('C', '232', 'GLY', ' beta sheet', ' \n-----', (204.8, 215.4, 153.0)), ('C', '245', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (230.7, 239.4, 155.2)), ('C', '283', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nSSS-E', (198.9, 224.9, 183.3)), ('C', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (212.4, 208.0, 183.9)), ('C', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTSSH', (218.3, 208.2, 183.9)), ('C', '403', 'ARG', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (188.0, 173.4, 133.6)), ('C', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (189.8, 173.3, 152.2)), ('C', '413', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (186.0, 172.7, 152.5)), ('C', '430', 'THR', 'check CA trace,carbonyls, peptide', ' \nS--S-', (199.0, 173.1, 155.4)), ('C', '475', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (170.8, 155.1, 138.9)), ('C', '485', 'GLY', 'check CA trace,carbonyls, peptide', ' \n---SS', (170.2, 151.2, 128.8)), ('C', '494', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEE--', (185.4, 163.9, 129.2)), ('C', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (208.6, 170.8, 163.0)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (207.6, 167.7, 164.9)), ('C', '530', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (225.0, 177.2, 158.9)), ('C', '590', 'CYS', 'check CA trace,carbonyls, peptide', ' \nE---E', (219.5, 183.0, 180.4)), ('C', '591', 'SER', 'check CA trace,carbonyls, peptide', ' \n---EE', (218.9, 184.7, 183.8)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (216.1, 206.7, 202.8)), ('C', '636', 'TYR', ' alpha helix', 'helix-3\nTGGG-', (224.9, 201.5, 190.4)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (215.5, 193.3, 202.9)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nSTT-H', (175.1, 207.0, 175.4)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (172.4, 188.9, 183.2)), ('C', '784', 'GLN', 'check CA trace,carbonyls, peptide', ' \nH---S', (174.8, 199.4, 221.9)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (184.5, 213.3, 239.6)), ('C', '833', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nS-STT', (189.2, 210.1, 193.1)), ('C', '854', 'LYS', 'check CA trace,carbonyls, peptide', ' \n---SS', (180.6, 212.0, 187.9)), ('C', '987', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\n-TTTS', (178.8, 193.9, 159.0)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (192.1, 196.1, 226.3)), ('C', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (198.9, 196.5, 227.9)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (184.9, 205.5, 209.3)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (203.1, 174.6, 266.7)), ('C', '1126', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (205.4, 170.5, 259.2)), ('C', '1143', 'PRO', ' alpha helix', 'turn\nSSTT-', (196.2, 187.2, 275.1)), ('C', '34', 'ARG', 'check CA trace', ' \n-S--E', (216.9, 221.6, 178.7)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (211.5, 205.6, 203.0)), ('C', '415', 'THR', 'check CA trace', ' \nS--ST', (181.1, 171.7, 147.4)), ('C', '517', 'LEU', 'check CA trace', 'strand\nEEESS', (206.0, 171.2, 160.3)), ('C', '549', 'THR', 'check CA trace', ' \nB--BE', (217.2, 182.0, 173.3)), ('C', '638', 'THR', 'check CA trace', ' \nGG-SS', (229.9, 198.6, 189.6)), ('C', '831', 'ALA', 'check CA trace', 'bend\n-SS-S', (195.2, 212.8, 195.7))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22255/6xm4/Model_validation_1/validation_cootdata/molprobity_probe6xm4_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

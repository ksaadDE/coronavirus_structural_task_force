# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('D', ' 146 ', 'PRO', None, (124.41699999999996, 210.80900000000008, 272.087)), ('E', ' 146 ', 'PRO', None, (218.73000000000005, 140.23200000000003, 278.496)), ('F', ' 146 ', 'PRO', None, (243.25000000000006, 255.58600000000007, 275.111))]
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' B 105  ILE  HB ', ' B 239  GLN  HB2', -0.631, (169.659, 160.234, 207.754)), (' A 105  ILE  HB ', ' A 239  GLN  HB2', -0.615, (179.799, 246.219, 207.592)), (' C 105  ILE  HB ', ' C 239  GLN  HB2', -0.609, (248.731, 194.819, 209.068)), (' B 192  PHE  HA ', ' B 204  TYR  O  ', -0.582, (166.428, 168.393, 194.098)), (' E 482  ARG  NH1', ' E 608  THR  O  ', -0.577, (200.929, 151.607, 303.121)), (' B 319  ARG  NH2', ' C 740  MET  SD ', -0.576, (203.401, 177.275, 183.149)), (' B  22  THR  O  ', ' B  78  ARG  NH1', -0.571, (170.842, 143.298, 200.762)), (' A 127  VAL HG21', ' A1302  NAG  H62', -0.569, (192.393, 254.321, 211.714)), (' C 127  VAL HG21', ' C1302  NAG  H62', -0.568, (248.859, 179.204, 212.862)), (' A 169  GLU  O  ', ' C 360  ASN  ND2', -0.565, (199.099, 245.107, 211.389)), (' A 821  LEU HD11', ' A 939  SER  HB3', -0.564, (200.108, 231.511, 147.648)), (' B 821  LEU HD11', ' B 939  SER  HB3', -0.561, (173.019, 183.938, 147.743)), (' E 261  CYS  HB2', ' E 488  VAL  HB ', -0.551, (200.518, 148.585, 298.398)), (' C  22  THR  O  ', ' C  78  ARG  NH1', -0.549, (263.209, 204.584, 202.005)), (' E 152  MET  O  ', ' E 161  ARG  NH1', -0.545, (207.371, 138.498, 286.246)), (' F 482  ARG  NH1', ' F 608  THR  O  ', -0.544, (242.57, 236.438, 301.641)), (' C 821  LEU HD11', ' C 939  SER  HB3', -0.534, (227.673, 183.745, 148.423)), (' B 289  VAL HG13', ' B 297  SER  HB3', -0.533, (181.206, 170.23, 177.039)), (' F 555  PHE  HA ', ' F 558  LEU  HB2', -0.53, (228.382, 226.471, 257.777)), (' D 482  ARG  NH1', ' D 608  THR  O  ', -0.53, (139.579, 219.055, 299.81)), (' A 357  ARG  NH1', ' B 169  GLU  OE1', -0.529, (161.68, 177.029, 215.729)), (' A 125  ASN HD22', ' A 171  VAL HG13', -0.527, (196.884, 254.281, 208.352)), (' A  22  THR  O  ', ' A  78  ARG  NH1', -0.525, (163.887, 253.541, 199.887)), (' E 555  PHE  HA ', ' E 558  LEU  HB2', -0.525, (202.601, 166.571, 258.87)), (' C 128  ILE HD13', ' C 170  TYR  HD2', -0.522, (241.25, 180.716, 207.198)), (' D 261  CYS  HB2', ' D 488  VAL  HB ', -0.521, (137.782, 220.884, 295.024)), (' D 555  PHE  HA ', ' D 558  LEU  HB2', -0.52, (157.859, 211.391, 257.164)), (' B  94  SER  HB2', ' B 190  ARG  HB2', -0.519, (162.392, 161.08, 193.432)), (' A 289  VAL HG13', ' A 297  SER  HB3', -0.518, (183.482, 231.363, 176.937)), (' A1035  GLY  HA3', ' C1040  VAL HG21', -0.515, (208.017, 206.235, 135.272)), (' A  94  SER  HB2', ' A 190  ARG  HB2', -0.515, (183.471, 251.891, 193.391)), (' C  94  SER  HB2', ' C 190  ARG  HB2', -0.514, (252.112, 188.039, 195.294)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.514, (236.706, 204.141, 178.723)), (' C 599  THR  HB ', ' C 608  VAL HG12', -0.512, (234.519, 205.405, 168.686)), (' A 599  THR  HB ', ' A 608  VAL HG12', -0.511, (178.258, 227.478, 167.722)), (' A 128  ILE HD13', ' A 170  TYR  HD2', -0.51, (195.387, 246.996, 205.692)), (' C  64  TRP  HE1', ' C 264  ALA  HB1', -0.51, (257.906, 196.29, 193.535)), (' A1048  HIS  HA ', ' A1066  THR HG22', -0.51, (197.296, 213.1, 135.219)), (' F 261  CYS  HB2', ' F 488  VAL  HB ', -0.509, (245.016, 237.478, 297.127)), (' C1086  LYS  HD2', ' C1122  VAL HG11', -0.508, (200.018, 214.09, 103.783)), (' B 125  ASN HD22', ' B 171  VAL HG13', -0.508, (153.964, 171.133, 208.146)), (' B1074  ASN  OD1', ' C 895  GLN  NE2', -0.504, (202.502, 173.097, 123.831)), (' D 260  GLY  HA3', ' D 612  PRO  HD3', -0.503, (136.951, 225.631, 297.423)), (' A 294  ASP  N  ', ' A 294  ASP  OD1', -0.502, (178.026, 230.66, 177.194)), (' B1048  HIS  HA ', ' B1066  THR HG22', -0.502, (190.552, 190.777, 135.027)), (' D 152  MET  O  ', ' D 161  ARG  NH1', -0.502, (127.553, 221.009, 280.894)), (' C 289  VAL HG13', ' C 297  SER  HB3', -0.501, (234.985, 199.405, 178.099)), (' C 125  ASN HD22', ' C 171  VAL HG13', -0.501, (247.013, 176.022, 209.941)), (' F 455  MET  HG2', ' F 480  MET  HE2', -0.496, (232.912, 235.058, 292.035)), (' D 455  MET  HG2', ' D 480  MET  HE2', -0.495, (145.831, 211.848, 290.278)), (' F 297  MET  HB3', ' F 302  TRP  HB2', -0.495, (252.75, 242.33, 254.999)), (' C1048  HIS  HA ', ' C1066  THR HG22', -0.494, (213.616, 195.963, 135.565)), (' B 599  THR  HB ', ' B 608  VAL HG12', -0.494, (186.904, 167.577, 168.009)), (' D  91  LEU HD11', ' D 212  VAL HG22', -0.494, (169.324, 200.262, 268.74)), (' B  64  TRP  HE1', ' B 264  ALA  HB1', -0.493, (167.117, 152.033, 191.843)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.492, (184.042, 166.123, 177.452)), (' B1040  VAL HG21', ' C1035  GLY  HA3', -0.492, (201.873, 190.012, 135.507)), (' F 201  ASP  OD2', ' F 219  ARG  NH1', -0.492, (213.925, 231.895, 283.902)), (' F 152  MET  O  ', ' F 161  ARG  NH1', -0.491, (250.426, 247.519, 283.572)), (' F 260  GLY  HA3', ' F 612  PRO  HD3', -0.489, (249.675, 235.837, 299.498)), (' B 756  TYR  OH ', ' B 994  ASP  OD1', -0.489, (195.098, 205.761, 192.279)), (' D  20  THR HG23', ' D  23  GLU  H  ', -0.489, (170.716, 182.976, 260.54)), (' A 756  TYR  OH ', ' A 994  ASP  OD1', -0.488, (206.427, 201.747, 192.43)), (' E 455  MET  HG2', ' E 480  MET  HE2', -0.488, (205.166, 160.292, 293.444)), (' B 128  ILE HD13', ' B 170  TYR  HD2', -0.488, (160.772, 173.704, 205.587)), (' C  78  ARG  NH2', ' C  80  ASP  OD1', -0.488, (259.813, 202.466, 200.844)), (' A 895  GLN  NE2', ' C1074  ASN  OD1', -0.487, (222.772, 214.54, 123.745)), (' B1086  LYS  HD2', ' B1122  VAL HG11', -0.487, (213.813, 192.87, 104.686)), (' B 354  ASN  O  ', ' B 398  ASP  HA ', -0.487, (229.825, 177.28, 231.362)), (' E 201  ASP  OD2', ' E 219  ARG  NH1', -0.486, (212.67, 177.874, 284.835)), (' E 482  ARG  O  ', ' E 606  TRP  NE1', -0.485, (197.504, 154.409, 296.567)), (' B 195  LYS  O  ', ' B 201  PHE  HA ', -0.484, (172.832, 173.735, 201.57)), (' A 396  TYR  HB2', ' A 514  SER  HB3', -0.483, (163.412, 185.804, 224.351)), (' D 535  HIS  NE2', ' D 538  PRO  O  ', -0.482, (155.124, 232.286, 264.33)), (' A1040  VAL HG21', ' B1035  GLY  HA3', -0.482, (191.271, 202.971, 135.212)), (' A 354  ASN  O  ', ' A 398  ASP  HA ', -0.481, (156.828, 183.143, 228.426)), (' A1074  ASN  OD1', ' B 895  GLN  NE2', -0.481, (176.356, 211.297, 123.05)), (' A1086  LYS  HD2', ' A1122  VAL HG11', -0.481, (188.843, 191.523, 104.325)), (' B 518  LEU HD23', ' B 520  ALA  H  ', -0.48, (226.742, 190.646, 215.041)), (' F 535  HIS  NE2', ' F 538  PRO  O  ', -0.48, (247.536, 218.864, 265.274)), (' E 297  MET  HB3', ' E 302  TRP  HB2', -0.48, (203.868, 137.538, 257.324)), (' E  20  THR HG23', ' E  23  GLU  H  ', -0.479, (220.158, 192.732, 261.216)), (' F  20  THR HG23', ' F  23  GLU  H  ', -0.479, (196.783, 228.36, 260.807)), (' A  64  TRP  HE1', ' A 264  ALA  HB1', -0.478, (173.634, 252.698, 191.147)), (' C 724  THR HG23', ' C 934  ILE HD12', -0.476, (221.335, 190.977, 143.602)), (' D 297  MET  HB3', ' D 302  TRP  HB2', -0.476, (132.74, 225.506, 252.528)), (' C 756  TYR  OH ', ' C 994  ASP  OD1', -0.474, (197.317, 194.063, 192.429)), (' A 376  THR  O  ', ' A 434  ILE  HA ', -0.474, (156.498, 196.96, 228.581)), (' E 252  TYR  HB3', ' E 255  TYR  HD2', -0.474, (200.591, 135.528, 295.74)), (' B  78  ARG  NH2', ' B  80  ASP  OD1', -0.472, (170.307, 147.384, 199.815)), (' F 482  ARG  O  ', ' F 606  TRP  NE1', -0.471, (242.016, 231.661, 295.562)), (' B 156  GLU  OE2', ' B 158  ARG  NH1', -0.47, (157.092, 150.878, 214.571)), (' C 192  PHE  HA ', ' C 204  TYR  O  ', -0.469, (243.151, 187.707, 195.95)), (' D 156  LEU HD11', ' D 281  LEU HD21', -0.467, (127.214, 229.331, 280.822)), (' A1029  MET  HB2', ' A1029  MET  HE2', -0.466, (207.942, 211.467, 145.702)), (' A  78  ARG  NH2', ' A  80  ASP  OD1', -0.466, (167.344, 251.508, 198.953)), (' B 724  THR HG23', ' B 934  ILE HD12', -0.464, (182.118, 186.028, 143.279)), (' A 156  GLU  OE2', ' A 158  ARG  NH1', -0.464, (176.652, 261.745, 213.577)), (' A 521  PRO  HG3', ' B 200  TYR  HE1', -0.461, (172.138, 181.628, 207.028)), (' B 358  ILE  HB ', ' B 395  VAL  HB ', -0.46, (228.025, 177.501, 220.859)), (' E 156  LEU HD11', ' E 281  LEU HD21', -0.459, (200.062, 134.052, 286.027)), (' E 535  HIS  NE2', ' E 538  PRO  O  ', -0.459, (185.581, 154.435, 265.561)), (' A 192  PHE  HA ', ' A 204  TYR  O  ', -0.456, (188.698, 244.698, 194.714)), (' C 914  ASN  ND2', ' C1111  GLU  OE2', -0.455, (216.75, 195.774, 115.2)), (' C 139  PRO  HB3', ' C 159  VAL  HA ', -0.455, (253.709, 192.012, 214.458)), (' A 175  PHE  O  ', ' A 207  HIS  NE2', -0.455, (191.825, 253.185, 194.861)), (' A 724  THR HG23', ' A 934  ILE HD12', -0.454, (197.927, 222.467, 143.421)), (' F 252  TYR  HB3', ' F 255  TYR  HD2', -0.454, (256.724, 243.799, 293.766)), (' A 926  GLN  NE2', ' H   1  NAG  O6 ', -0.453, (192.349, 224.976, 127.206)), (' B  40  ASP  N  ', ' B  40  ASP  OD1', -0.453, (171.248, 180.904, 188.99)), (' B 396  TYR  HB2', ' B 514  SER  HB3', -0.453, (225.207, 181.295, 226.325)), (' D 252  TYR  HB3', ' D 255  TYR  HD2', -0.453, (127.003, 228.429, 290.615)), (' A  40  ASP  N  ', ' A  40  ASP  OD1', -0.449, (196.763, 234.091, 189.419)), (' F 156  LEU HD11', ' F 281  LEU HD21', -0.449, (257.921, 243.299, 283.582)), (' A 327  VAL HG12', ' A 542  ASN  HB3', -0.446, (164.688, 200.576, 197.975)), (' B 206  LYS  NZ ', ' B 224  GLU  OE2', -0.446, (160.398, 172.647, 186.344)), (' B  27  ALA  HB3', ' B  64  TRP  HB3', -0.446, (172.448, 150.434, 191.828)), (' B 722  VAL HG22', ' B1065  VAL HG22', -0.445, (182.741, 189.763, 135.987)), (' B 191  GLU  O  ', ' B 205  SER  HA ', -0.444, (164.463, 168.366, 192.985)), (' C 350  VAL HG22', ' C 422  ASN  HB3', -0.444, (204.899, 239.717, 240.033)), (' D 269  ASP  OD1', ' D 277  ASN  ND2', -0.441, (132.771, 218.828, 276.519)), (' A  97  LYS  HG2', ' A 186  PHE  HD1', -0.439, (178.902, 260.327, 190.903)), (' A  27  ALA  HB3', ' A  64  TRP  HB3', -0.439, (169.268, 248.459, 191.096)), (' A 411  ALA  HB3', ' A 414  GLN  HG3', -0.439, (166.151, 195.581, 236.673)), (' A 521  PRO  HG2', ' B 230  PRO  HB2', -0.438, (169.63, 180.651, 208.32)), (' C  40  ASP  N  ', ' C  40  ASP  OD1', -0.438, (229.871, 186.184, 190.433)), (' A 498  GLN  OE1', ' D  42  GLN  NE2', -0.438, (141.877, 190.174, 250.393)), (' C 411  ALA  HB3', ' C 414  GLN  HG3', -0.438, (210.884, 228.147, 237.619)), (' B 164  ASN  OD1', ' B 165  ASN  N  ', -0.438, (168.439, 169.418, 222.58)), (' B  48  LEU  HB3', ' B 276  LEU HD11', -0.436, (177.054, 179.393, 176.748)), (' A 176  LEU HD22', ' A 190  ARG  HG2', -0.436, (186.941, 253.138, 195.42)), (' B 411  ALA  HB3', ' B 414  GLN  HG3', -0.436, (214.074, 179.985, 238.243)), (' B  97  LYS  HG2', ' B 186  PHE  HD1', -0.436, (157.714, 152.764, 191.212)), (' C 498  GLN  NE2', ' F  42  GLN  OE1', -0.435, (217.016, 251.463, 253.0)), (' B 126  VAL HG23', ' B 174  PRO  HA ', -0.434, (155.697, 168.223, 202.06)), (' B 350  VAL HG22', ' B 422  ASN  HB3', -0.433, (226.872, 179.329, 241.661)), (' D  22  GLU  HG3', ' D  88  ILE HG23', -0.433, (169.719, 187.979, 263.912)), (' C 164  ASN  OD1', ' C 165  ASN  N  ', -0.433, (241.154, 189.494, 223.896)), (' C 354  ASN  O  ', ' C 398  ASP  HA ', -0.432, (204.901, 242.447, 229.663)), (' C 722  VAL  HA ', ' C1064  HIS  O  ', -0.432, (218.247, 192.296, 138.222)), (' C 518  LEU HD23', ' C 520  ALA  H  ', -0.432, (194.891, 231.207, 214.541)), (' C  14  GLN  HB3', ' C 158  ARG  HE ', -0.431, (260.726, 190.668, 220.173)), (' B 934  ILE  HA ', ' B 934  ILE HD13', -0.431, (180.259, 184.025, 142.842)), (' B 659  SER  HB3', ' B 698  SER  HB3', -0.428, (200.419, 165.943, 149.697)), (' C 934  ILE  HA ', ' C 934  ILE HD13', -0.427, (224.28, 190.413, 143.313)), (' D 482  ARG  O  ', ' D 606  TRP  NE1', -0.427, (144.417, 221.111, 294.051)), (' C 396  TYR  HB2', ' C 514  SER  HB3', -0.427, (203.816, 236.204, 225.141)), (' F  91  LEU HD11', ' F 212  VAL HG22', -0.427, (212.532, 221.475, 269.0)), (' A 907  ASN HD21', ' A 913  GLN  HG3', -0.426, (203.568, 210.336, 119.352)), (' C 126  VAL HG23', ' C 174  PRO  HA ', -0.426, (248.968, 178.534, 203.672)), (' A 164  ASN  OD1', ' A 165  ASN  N  ', -0.426, (187.602, 242.781, 222.432)), (' C 907  ASN HD21', ' C 913  GLN  HG3', -0.425, (208.189, 191.988, 119.847)), (' D 201  ASP  OD2', ' D 219  ARG  NH1', -0.425, (158.632, 196.166, 283.252)), (' E 260  GLY  HA3', ' E 612  PRO  HD3', -0.425, (197.032, 146.034, 301.13)), (' A 358  ILE  HB ', ' A 395  VAL  HB ', -0.424, (159.386, 185.599, 218.361)), (' B 376  THR  O  ', ' B 434  ILE  HA ', -0.424, (218.861, 169.871, 231.268)), (' B 278  LYS  HB2', ' B 278  LYS  HE3', -0.421, (173.093, 176.309, 175.11)), (' B 189  LEU HD12', ' B 210  ILE HD13', -0.42, (162.459, 158.88, 186.081)), (' C 203  ILE  HB ', ' C 227  VAL HG12', -0.42, (240.146, 184.724, 201.418)), (' A 722  VAL  HA ', ' A1064  HIS  O  ', -0.419, (198.105, 219.011, 137.794)), (' E 169  ARG HH22', ' E 271  TRP  HA ', -0.419, (210.975, 148.396, 289.196)), (' A 126  VAL HG23', ' A 174  PRO  HA ', -0.419, (193.241, 254.403, 202.322)), (' A 659  SER  HB3', ' A 698  SER  HB3', -0.419, (171.142, 217.086, 148.523)), (' F 360  MET  HE1', ' F 372  ALA  HA ', -0.418, (239.837, 241.823, 260.571)), (' A 669  GLY  HA2', ' A 697  MET  HE3', -0.418, (174.725, 211.884, 155.628)), (' E 528  ALA  HB2', ' E 574  VAL HG12', -0.418, (193.199, 166.665, 267.486)), (' C 189  LEU HD12', ' C 210  ILE HD13', -0.418, (254.029, 189.196, 187.844)), (' B 117  LEU HD22', ' B 231  ILE HD13', -0.417, (170.103, 171.647, 206.928)), (' A 139  PRO  HB3', ' A 159  VAL  HA ', -0.417, (179.299, 252.193, 212.373)), (' C  27  ALA  HB3', ' C  64  TRP  HB3', -0.417, (256.055, 202.224, 193.118)), (' B 566  GLY  N  ', ' B 575  ALA  O  ', -0.417, (223.871, 176.696, 187.615)), (' C 176  LEU HD22', ' C 190  ARG  HG2', -0.417, (251.351, 184.882, 197.189)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.416, (233.01, 203.303, 161.925)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.416, (186.534, 170.209, 161.056)), (' B 176  LEU HD22', ' B 190  ARG  HG2', -0.415, (159.631, 163.397, 195.702)), (' B 393  THR  HA ', ' B 522  ALA  HA ', -0.415, (225.798, 183.737, 214.086)), (' B 398  ASP  OD2', ' B 423  TYR  OH ', -0.415, (225.267, 180.532, 231.858)), (' D 307  ILE HG23', ' D 369  PHE  HD1', -0.415, (138.29, 221.168, 254.92)), (' A  93  ALA  HB3', ' A 266  TYR  HB2', -0.415, (178.454, 246.87, 191.252)), (' B 357  ARG  NH1', ' C 167  THR  O  ', -0.415, (234.671, 182.85, 218.402)), (' C 903  ALA  HB2', ' C 916  LEU HD12', -0.415, (213.067, 187.965, 121.998)), (' B 907  ASN HD21', ' B 913  GLN  HG3', -0.415, (189.999, 196.779, 119.233)), (' A 350  VAL HG22', ' A 422  ASN  HB3', -0.414, (159.081, 184.634, 239.331)), (' A 598  ILE HG23', ' A 664  ILE HG21', -0.414, (178.129, 222.072, 163.0)), (' B 384  PRO  HA ', ' B 387  LEU HD12', -0.414, (215.757, 172.855, 221.51)), (' D 610  TRP  HE3', ' D 614  ALA  HB3', -0.413, (132.222, 219.959, 302.343)), (' C 376  THR  O  ', ' C 434  ILE  HA ', -0.413, (217.369, 236.617, 229.917)), (' F 423  LEU  HA ', ' F 423  LEU HD23', -0.413, (255.001, 236.034, 254.47)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.413, (218.017, 189.448, 136.641)), (' E 269  ASP  OD1', ' E 277  ASN  ND2', -0.413, (207.229, 143.559, 281.441)), (' B1029  MET  HB2', ' B1029  MET  HE2', -0.413, (186.425, 201.042, 145.874)), (' E 183  TYR  OH ', ' E 509  ASP  OD1', -0.412, (219.862, 164.134, 284.886)), (' C 418  ILE  HA ', ' C 422  ASN  HB2', -0.411, (205.144, 237.124, 242.203)), (' B 327  VAL HG12', ' B 542  ASN  HB3', -0.411, (215.162, 171.944, 199.281)), (' B 996  LEU  HA ', ' B 996  LEU HD23', -0.411, (189.081, 198.536, 191.181)), (' E  22  GLU  HG3', ' E  88  ILE HG23', -0.411, (215.935, 189.468, 264.95)), (' A 500  THR  HG1', ' D  41  TYR  HH ', -0.411, (141.498, 195.806, 248.789)), (' F 610  TRP  HE3', ' F 614  ALA  HB3', -0.41, (246.625, 242.395, 304.908)), (' C 189  LEU  HB3', ' C 208  THR  HB ', -0.41, (251.126, 186.255, 188.445)), (' C 790  LYS  HB3', ' C 790  LYS  HE2', -0.41, (210.932, 169.665, 138.225)), (' D 528  ALA  HB2', ' D 574  VAL HG12', -0.409, (161.376, 219.274, 266.745)), (' D 442  GLN  O  ', ' D 446  ILE  HB ', -0.409, (145.429, 223.301, 274.136)), (' C 193  VAL  HB ', ' C 204  TYR  HB2', -0.409, (239.979, 188.971, 195.198)), (' B 790  LYS  HB3', ' B 790  LYS  HE2', -0.409, (169.094, 206.393, 136.874)), (' E  91  LEU HD11', ' E 212  VAL HG22', -0.409, (205.412, 183.44, 269.027)), (' B 139  PRO  HB3', ' B 159  VAL  HA ', -0.409, (164.689, 157.618, 212.542)), (' D 145  GLU  HA ', ' D 146  PRO  HA ', -0.409, (126.193, 211.613, 273.543)), (' A 722  VAL HG22', ' A1065  VAL HG22', -0.409, (200.299, 220.351, 136.206)), (' C 327  VAL HG12', ' C 542  ASN  HB3', -0.408, (216.65, 229.717, 198.615)), (' B 193  VAL  HB ', ' B 204  TYR  HB2', -0.408, (169.383, 170.716, 193.611)), (' C  97  LYS  HG2', ' C 186  PHE  HD1', -0.408, (261.68, 188.282, 193.156)), (' D 169  ARG HH22', ' D 271  TRP  HA ', -0.407, (133.733, 212.772, 284.425)), (' B 903  ALA  HB2', ' B 916  LEU HD12', -0.407, (184.119, 194.408, 121.484)), (' A 914  ASN  ND2', ' A1111  GLU  OE2', -0.407, (196.128, 215.125, 114.548)), (' A 310  LYS  HG3', ' A 600  PRO  HA ', -0.407, (180.987, 226.502, 160.888)), (' D 360  MET  HE1', ' D 372  ALA  HA ', -0.407, (138.934, 214.424, 258.387)), (' A 318  PHE  O  ', ' A 592  PHE  HA ', -0.406, (173.626, 211.681, 179.456)), (' E 237  TYR  OH ', ' E 485  VAL  O  ', -0.406, (199.094, 152.352, 290.483)), (' C  93  ALA  HB3', ' C 266  TYR  HB2', -0.406, (250.447, 195.379, 193.074)), (' E 346  PRO  HB3', ' E 360  MET  HE2', -0.406, (212.215, 149.096, 265.097)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.406, (189.151, 241.326, 193.948)), (' F 144  LEU  HA ', ' F 148  LEU  HB2', -0.405, (242.249, 254.53, 281.086)), (' A 903  ALA  HB2', ' A 916  LEU HD12', -0.405, (204.489, 216.612, 121.612)), (' D 597  ASP  HA ', ' D 600  LYS  HE3', -0.405, (149.428, 241.487, 285.763)), (' F 269  ASP  OD1', ' F 277  ASN  ND2', -0.404, (246.633, 244.171, 278.922)), (' C 330  PRO  HA ', ' C 579  PRO  HB2', -0.404, (212.705, 239.936, 198.996)), (' E 168  TRP  CD1', ' E 270  MET  HE2', -0.404, (215.887, 145.208, 289.287)), (' C 156  GLU  OE2', ' C 158  ARG  NH1', -0.404, (263.447, 189.514, 216.428)), (' A 189  LEU  HB3', ' A 208  THR  HB ', -0.403, (185.84, 252.149, 186.951)), (' A 717  ASN  ND2', ' A1071  GLN  OE1', -0.402, (187.958, 223.36, 123.769)), (' D 321  PRO  O  ', ' D 380  GLN  NE2', -0.402, (150.675, 212.874, 251.234)), (' A 330  PRO  HA ', ' A 579  PRO  HB2', -0.402, (157.874, 191.781, 197.845)), (' E 597  ASP  HA ', ' E 600  LYS  HE3', -0.402, (178.811, 147.03, 287.129)), (' A 106  PHE  HE2', ' A 119  ILE HD12', -0.401, (186.569, 244.693, 204.332)), (' D 117  ASN  O  ', ' D 121  ASN  ND2', -0.401, (135.801, 189.671, 276.314)), (' C1029  MET  HB2', ' C1029  MET  HE2', -0.4, (206.261, 187.219, 146.307)), (' A 117  LEU HD22', ' A 231  ILE HD13', -0.4, (188.999, 239.925, 207.114)), (' B 128  ILE HG21', ' B 229  LEU HD13', -0.4, (164.524, 172.304, 206.312)), (' F 307  ILE HG23', ' F 369  PHE  HD1', -0.4, (246.194, 239.478, 257.138)), (' C 278  LYS  HB2', ' C 278  LYS  HE3', -0.4, (233.589, 188.584, 176.207)), (' A 790  LYS  HB3', ' A 790  LYS  HE2', -0.4, (221.132, 224.062, 137.447)), (' D 144  LEU  HA ', ' D 148  LEU  HB2', -0.4, (125.629, 210.843, 277.674))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

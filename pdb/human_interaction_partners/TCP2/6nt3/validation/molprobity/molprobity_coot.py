# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 164 ', 'THR', 0.040684375774508244, (151.124, 164.14600000000004, 137.863)), ('A', ' 304 ', 'GLU', 0.046878029781439595, (106.008, 133.432, 176.655)), ('A', ' 338 ', 'PRO', 0.07060233614658973, (118.26800000000003, 115.19600000000003, 164.535)), ('A', '1332 ', 'ASP', 0.04417354224638578, (121.267, 110.96400000000003, 153.291)), ('A', '1482 ', 'CYS', 0.03410281536315579, (80.777, 129.075, 86.577)), ('A', '1484 ', 'ASP', 0.0, (75.648, 132.205, 84.884))]
data['omega'] = []
data['rota'] = [('A', ' 179 ', 'GLU', 0.0, (139.403, 166.83200000000005, 116.69)), ('A', ' 224 ', 'TYR', 0.09920917740450481, (133.157, 159.414, 140.521)), ('A', ' 236 ', 'ARG', 0.13713649688543245, (136.05600000000007, 153.32300000000006, 117.886)), ('A', '1268 ', 'ARG', 0.0, (94.43400000000003, 127.962, 144.989)), ('A', '1283 ', 'LYS', 0.009019940488615954, (101.122, 139.392, 116.661)), ('A', '1483 ', 'LYS', 0.243422409706522, (76.98, 129.004, 86.537))]
data['cbeta'] = []
data['probe'] = [(' A1254  ILE  O  ', ' A1255  GLU  HG2', -0.95, (87.349, 123.98, 156.621)), (' A 512  ILE  HA ', ' A 515  VAL HG12', -0.844, (168.225, 107.231, 96.776)), (' A 122  MET  HE3', ' A 123  LEU  HB2', -0.819, (127.098, 177.979, 105.155)), (' A 157  MET  HE1', ' A 231  VAL HG23', -0.747, (139.422, 152.855, 128.129)), (' A 122  MET  SD ', ' A 189  PHE  N  ', -0.745, (127.371, 176.302, 109.192)), (' A 574  SER  HB3', ' A 577  PHE  HB2', -0.731, (162.989, 121.561, 93.986)), (' A1437  TRP  H  ', ' A1440  PHE  HB3', -0.711, (83.845, 139.777, 102.347)), (' A1321  PHE  HB3', ' A1324  ILE HD11', -0.706, (127.699, 105.034, 144.667)), (' A 603  VAL HG12', ' A 604  GLN  H  ', -0.691, (175.199, 125.416, 129.947)), (' A1483  LYS  HG3', ' A1486  HIS  HB2', -0.684, (76.958, 130.512, 89.724)), (' A1448  ILE HG13', ' A1487  ILE  HB ', -0.673, (81.87, 135.329, 91.889)), (' A1060  PHE  CE1', ' A1096  ILE HD11', -0.672, (134.981, 127.615, 130.18)), (' A1207  VAL  HA ', ' A1210  ILE HG22', -0.67, (85.799, 137.792, 143.812)), (' A  64  GLN  O  ', ' A  75  ARG  N  ', -0.668, (132.234, 169.542, 95.851)), (' A 104  VAL  O  ', ' A 108  ALA  N  ', -0.664, (135.425, 153.278, 86.56)), (' A 157  MET  CE ', ' A 231  VAL HG23', -0.657, (139.889, 153.485, 128.408)), (' A1291  ALA  HB2', ' A1417  VAL HG11', -0.657, (107.385, 129.984, 113.915)), (' A 205  ASP  O  ', ' A 205  ASP  OD1', -0.654, (134.557, 163.206, 120.27)), (' A1620  L0A  H44', ' A1620  L0A  H70', -0.654, (161.244, 133.849, 142.403)), (' A 303  ASP  O  ', ' A 306  TRP  N  ', -0.653, (108.236, 131.319, 176.817)), (' A1453  LEU  O  ', ' A1456  LEU  HB3', -0.645, (86.64, 141.75, 94.782)), (' A1245  ILE  O  ', ' A1249  PHE  CD2', -0.644, (83.1, 128.384, 143.292)), (' A 243  GLY  O  ', ' A 643  ASN  ND2', -0.643, (136.561, 141.311, 109.543)), (' A 350  ASN  HB2', ' A 354  GLY  HA2', -0.632, (118.288, 135.001, 153.172)), (' A1384  ARG  NH1', ' A1617  PEE  O2P', -0.63, (143.583, 106.322, 139.613)), (' A1150  LYS  N  ', ' A1443  GLU  OE1', -0.629, (78.995, 132.439, 108.075)), (' A 234  SER  O  ', ' A 237  THR HG22', -0.624, (137.929, 150.582, 120.031)), (' A 331  SER  OG ', ' A 332  SER  N  ', -0.622, (106.857, 115.066, 153.422)), (' A1011  CYS  N  ', ' A1079  GLN  OE1', -0.613, (151.922, 121.717, 152.39)), (' A 730  LEU  O  ', ' A 734  ASN  ND2', -0.61, (123.229, 134.502, 122.13)), (' A1071  ILE HD11', ' A1089  TYR  CZ ', -0.607, (144.722, 133.192, 139.257)), (' A 632  SER  HA ', ' A 635  THR HG22', -0.605, (142.984, 125.414, 105.435)), (' A 918  PHE  O  ', ' A 924  TRP  NE1', -0.603, (123.31, 89.252, 113.884)), (' A1471  LYS  HA ', ' A1474  ILE HD12', -0.601, (88.699, 145.166, 86.804)), (' A1042  MET  HE1', ' A1052  LEU HD23', -0.601, (140.28, 113.007, 137.571)), (' A1245  ILE  O  ', ' A1249  PHE  HD2', -0.598, (83.054, 127.997, 143.739)), (' A1435  GLU  O  ', ' A1438  GLN  HB3', -0.597, (84.832, 138.153, 106.966)), (' A 277  LEU HD23', ' A 278  GLN HE21', -0.596, (102.376, 133.757, 145.672)), (' A1434  PHE  O  ', ' A1438  GLN  HB2', -0.589, (85.386, 136.621, 106.282)), (' A 967  GLY  O  ', ' A1301  ASN  ND2', -0.588, (107.896, 111.506, 117.029)), (' A1060  PHE  HE1', ' A1096  ILE HD11', -0.587, (135.137, 128.228, 130.711)), (' A 290  LYS  HG2', ' A 341  TYR  CE1', -0.584, (118.769, 121.009, 170.152)), (' A 640  ALA  HB1', ' A 739  LEU HD11', -0.583, (133.118, 134.686, 110.776)), (' A 374  LEU HD22', ' A 404  THR HG21', -0.582, (119.959, 125.386, 130.723)), (' A 178  ILE  HA ', ' A 181  VAL HG12', -0.581, (139.523, 171.297, 117.35)), (' A 192  HIS  HB3', ' A 196  TYR  HD2', -0.58, (124.727, 168.657, 108.94)), (' A 686  ASP  OD1', ' A 687  PHE  N  ', -0.58, (144.761, 145.189, 137.922)), (' A1039  ASN  OD1', ' A1040  SER  N  ', -0.576, (147.441, 116.335, 145.572)), (' A 118  LYS  HZ1', ' A 134  ILE HD12', -0.573, (134.155, 169.361, 104.309)), (' A 674  PHE  HB3', ' A 675  PRO  HD2', -0.571, (134.383, 137.581, 153.193)), (' A 568  LEU  HA ', ' A 571  ILE HG12', -0.569, (170.674, 113.655, 101.593)), (' A1493  LEU  O  ', ' A1497  VAL HG23', -0.568, (95.837, 133.046, 96.229)), (' A  54  LYS  HA ', ' A  57  ASP  HB2', -0.564, (120.803, 160.212, 93.025)), (' A1614  Y01 HAE2', ' A1614  Y01 HAO2', -0.563, (106.417, 110.823, 135.328)), (' A1225  ARG  HG3', ' A1226  HIS  H  ', -0.562, (71.713, 130.713, 120.091)), (' A 118  LYS  NZ ', ' A 134  ILE HD12', -0.562, (133.78, 169.589, 103.986)), (' A 179  GLU  HG3', ' A 180  VAL  N  ', -0.56, (137.475, 165.941, 117.489)), (' A 393  ILE HD11', ' A1614  Y01 HAQ2', -0.56, (110.473, 114.49, 138.744)), (' A 532  ASN HD21', ' A 616  ARG  NH1', -0.559, (159.971, 114.026, 118.268)), (' A1449  ARG  HB2', ' A1485  ASP  HB3', -0.556, (76.357, 137.136, 89.151)), (' A  62  PRO  HD2', ' A 121  TRP  CE3', -0.555, (123.165, 172.497, 97.483)), (' A1181  CYS  O  ', ' A1185  VAL HG23', -0.552, (98.115, 144.43, 136.692)), (' A 583  TRP  HE1', ' A 622  LYS  HD2', -0.55, (153.751, 117.541, 105.726)), (' A1483  LYS  O  ', ' A1485  ASP  N  ', -0.55, (76.551, 132.425, 86.718)), (' A 552  ARG  NH2', ' A 556  TYR  OH ', -0.549, (172.148, 112.761, 126.891)), (' A 975  LEU  HG ', ' A1405  MET  HE1', -0.541, (119.299, 112.382, 117.478)), (' A 648  MET  HE3', ' A 698  LEU HD21', -0.54, (133.533, 135.267, 125.866)), (' A 146  ILE  O  ', ' A 149  THR HG22', -0.54, (143.938, 158.813, 118.409)), (' A 128  PRO  HG2', ' A 130  ARG  HD3', -0.539, (134.485, 178.605, 105.396)), (' A 102  PHE  O  ', ' A 106  THR  N  ', -0.539, (139.474, 154.915, 87.325)), (' A 679  LEU HD23', ' A 683  ASN HD22', -0.536, (140.488, 142.222, 146.745)), (' A1235  ILE  O  ', ' A1239  VAL HG23', -0.534, (87.061, 126.197, 128.433)), (' A 318  ILE HD11', ' A 325  TYR  CZ ', -0.53, (124.169, 128.725, 162.464)), (' A 258  LEU HD23', ' A 262  VAL HG23', -0.527, (115.555, 140.355, 122.94)), (' A 134  ILE HD13', ' A 186  ALA  HB1', -0.527, (134.747, 170.423, 106.093)), (' A1620  L0A  O25', ' A1620  L0A  O77', -0.526, (155.662, 132.162, 135.544)), (' A1061  LYS  HE2', ' A1353  ALA  HA ', -0.523, (126.503, 121.526, 136.251)), (' A 841  MET  HA ', ' A 844  ASN  HB2', -0.522, (103.641, 70.716, 108.053)), (' A1484  ASP  OD1', ' A1485  ASP  N  ', -0.521, (74.938, 132.981, 86.739)), (' A 877  ASP  N  ', ' A 877  ASP  OD1', -0.52, (114.512, 98.197, 146.556)), (' A 393  ILE HG21', ' A1344  ILE HD12', -0.519, (112.859, 115.403, 141.949)), (' A 152  ILE  HA ', ' A 155  ILE HG22', -0.517, (148.159, 153.349, 124.625)), (' A1173  ASP  N  ', ' A1173  ASP  OD1', -0.517, (86.914, 144.922, 123.752)), (' A 506  GLN  HA ', ' A 509  GLN  HB2', -0.511, (172.476, 113.372, 91.099)), (' A 590  ILE HD11', ' A 616  ARG  HG3', -0.511, (159.058, 117.162, 115.743)), (' A 130  ARG  O  ', ' A 134  ILE HG12', -0.51, (136.447, 172.753, 103.968)), (' A 301  PHE  CE1', ' A 303  ASP  HB3', -0.51, (104.929, 131.873, 180.144)), (' A 303  ASP  O  ', ' A 305  ARG  N  ', -0.51, (107.532, 132.362, 177.577)), (' A 126  PHE  H  ', ' A 128  PRO  HD3', -0.509, (134.41, 179.862, 101.225)), (' A1262  THR  OG1', ' A1615  PEE  O2P', -0.507, (101.377, 118.769, 151.382)), (' A1428  ASP  OD2', ' A1432  MET  HE2', -0.507, (96.045, 138.913, 109.74)), (' A 513  GLY  HA2', ' A 516  VAL HG12', -0.507, (164.854, 111.052, 95.977)), (' A1149  VAL HG13', ' A1438  GLN HE22', -0.505, (83.048, 132.947, 110.186)), (' A  71  ARG  HE ', ' A  99  LYS  HB2', -0.503, (143.076, 164.464, 89.063)), (' A1253  LEU HD21', ' A1263  LEU HD23', -0.503, (94.384, 119.925, 150.444)), (' A 227  ARG  HG2', ' A 227  ARG  O  ', -0.503, (136.852, 158.586, 134.583)), (' A1007  LYS  O  ', ' A1008  PHE  HB2', -0.503, (150.296, 119.019, 142.661)), (' A 127  THR  HA ', ' A 131  ARG  HG2', -0.503, (138.083, 177.868, 100.685)), (' A1071  ILE HD11', ' A1089  TYR  CE1', -0.5, (144.665, 132.729, 139.137)), (' A 845  ILE  HA ', ' A 848  VAL HG12', -0.5, (104.395, 75.209, 111.349)), (' A 516  VAL HG21', ' A 569  LYS  HG3', -0.497, (164.091, 112.934, 99.966)), (' A 167  ILE  HA ', ' A 170  LEU HD12', -0.496, (146.847, 168.295, 133.212)), (' A1140  VAL  O  ', ' A1143  THR  OG1', -0.495, (96.386, 125.792, 97.798)), (' A1163  ILE HD11', ' A1223  SER  HA ', -0.495, (72.584, 138.386, 125.107)), (' A 516  VAL HG13', ' A 517  LEU HD12', -0.495, (161.882, 111.619, 97.396)), (' A 426  ALA  O  ', ' A 430  LYS  HG3', -0.495, (130.983, 139.763, 99.008)), (' A 865  VAL  O  ', ' A 869  THR HG22', -0.494, (108.074, 92.154, 130.729)), (' A 153  HIS  HD2', ' A 172  PHE  CD2', -0.494, (145.259, 160.016, 127.08)), (' A1349  LEU HD11', ' A1358  VAL HG21', -0.492, (125.315, 113.548, 140.497)), (' A 301  PHE  CD1', ' A 303  ASP  HB3', -0.492, (105.464, 131.833, 180.426)), (' A 565  GLU  HA ', ' A 568  LEU  HG ', -0.492, (167.6, 111.578, 104.735)), (' A1295  ALA  HB2', ' A1413  TYR  CG ', -0.491, (108.554, 122.227, 114.646)), (' A 167  ILE HG13', ' A 170  LEU HD12', -0.49, (147.937, 169.05, 132.882)), (' A 982  ILE HD13', ' A1110  ILE HD11', -0.489, (128.273, 114.602, 116.376)), (' A 137  MET  HE2', ' A 187  ARG  HE ', -0.489, (132.885, 165.874, 107.817)), (' A 317  TYR  HB2', ' A 341  TYR  HE2', -0.484, (120.381, 121.496, 166.156)), (' A 122  MET  O  ', ' A 123  LEU HD22', -0.484, (124.126, 178.82, 104.194)), (' A1254  ILE  O  ', ' A1255  GLU  CG ', -0.484, (86.781, 123.073, 157.47)), (' A 582  SER  O  ', ' A 582  SER  OG ', -0.483, (153.197, 126.035, 103.044)), (' A  56  ARG  NH1', ' A 119  SER  HB3', -0.48, (125.178, 164.75, 103.032)), (' A1254  ILE  HA ', ' A1259  VAL HG12', -0.48, (91.551, 122.474, 156.932)), (' A1295  ALA  HB2', ' A1413  TYR  CD2', -0.48, (108.069, 122.376, 114.194)), (' A 671  MET  HE1', ' A 678  ASP  HA ', -0.476, (141.305, 140.94, 153.585)), (' A 692  MET  HG3', ' A1089  TYR  CD2', -0.474, (143.271, 135.645, 136.304)), (' A1150  LYS  HB3', ' A1443  GLU  HB2', -0.473, (76.81, 133.151, 107.769)), (' A1402  VAL  O  ', ' A1405  MET  N  ', -0.473, (119.242, 117.572, 121.485)), (' A 504  PRO  HA ', ' A 507  LYS  HB3', -0.472, (176.946, 109.525, 89.184)), (' A 617  VAL HG11', ' A 995  VAL HG22', -0.472, (150.335, 118.313, 120.095)), (' A 718  ILE  HB ', ' A 719  PRO  HD3', -0.471, (121.298, 145.419, 139.514)), (' A 555  ASN  OD1', ' A 613  ARG  NH2', -0.471, (163.313, 114.639, 121.46)), (' A  56  ARG  NH1', ' A 117  GLU  O  ', -0.471, (126.787, 163.907, 102.835)), (' A 282  GLY  HA3', ' A1192  GLU  OE1', -0.47, (108.235, 133.232, 154.409)), (' A 561  ILE  HA ', ' A 564  VAL HG12', -0.47, (167.811, 110.138, 110.977)), (' A 624  TRP  HE3', ' A 627  LEU  HB2', -0.468, (143.255, 114.639, 111.901)), (' A 317  TYR  HB2', ' A 341  TYR  CE2', -0.468, (120.081, 121.341, 166.053)), (' A 299  GLY  HA3', ' A 305  ARG  NH2', -0.468, (112.101, 129.293, 183.729)), (' A 932  ALA  HB1', ' A 950  LEU HD22', -0.468, (123.507, 88.11, 130.842)), (' A 100  LYS  HA ', ' A 103  VAL HG23', -0.467, (139.838, 160.959, 89.137)), (' A 131  ARG  HA ', ' A 131  ARG  HD2', -0.466, (137.524, 174.239, 101.765)), (' A1212  LEU  HA ', ' A1212  LEU HD23', -0.466, (81.516, 141.23, 136.999)), (' A 405  PHE  HB3', ' A1406  TYR  CD2', -0.465, (115.287, 121.255, 125.646)), (' A 359  ASP  N  ', ' A 359  ASP  OD1', -0.465, (110.88, 135.602, 149.809)), (' A1254  ILE  C  ', ' A1255  GLU  HG2', -0.465, (88.04, 123.684, 157.596)), (' A 525  ILE  HA ', ' A 528  ILE HG22', -0.464, (158.978, 108.55, 110.353)), (' A 285  LYS  O  ', ' A 287  LYS  HG2', -0.46, (115.078, 128.603, 159.958)), (' A 130  ARG HH12', ' A 189  PHE  HE1', -0.46, (129.993, 179.596, 108.332)), (' A 880  LEU  HB3', ' A 881  PRO  HD3', -0.458, (116.317, 93.566, 149.75)), (' A1448  ILE  O  ', ' A1487  ILE  N  ', -0.457, (80.015, 133.859, 91.319)), (' A 603  VAL HG12', ' A 604  GLN  N  ', -0.456, (174.895, 125.439, 129.742)), (' A 873  LEU HD21', ' A 952  LEU HD23', -0.456, (117.414, 94.566, 136.072)), (' A1145  SER  O  ', ' A1145  SER  OG ', -0.454, (92.097, 125.951, 105.551)), (' A1440  PHE  HZ ', ' A1452  GLN  HB2', -0.454, (81.545, 143.307, 97.101)), (' A 894  ASP  OD1', ' A 895  TYR  N  ', -0.454, (112.914, 83.336, 137.301)), (' A1150  LYS  HD2', ' A1442  PRO  HA ', -0.454, (76.732, 136.6, 105.546)), (' A 595  ILE  HA ', ' A 595  ILE HD13', -0.452, (170.143, 119.149, 117.731)), (' A 177  THR  HA ', ' A 180  VAL HG12', -0.452, (137.179, 168.468, 120.58)), (' A 934  LEU  HA ', ' A 934  LEU HD23', -0.452, (118.968, 79.971, 130.465)), (' A 963  SER  O  ', ' A 963  SER  OG ', -0.451, (111.364, 102.637, 115.805)), (' A 403  GLY  O  ', ' A 407  PHE  HB3', -0.45, (113.897, 129.292, 127.785)), (' A1243  ILE HG22', ' A1270  ALA  HB1', -0.448, (91.338, 127.303, 138.956)), (' A 300  ASN  N  ', ' A 300  ASN  OD1', -0.448, (110.215, 128.708, 185.684)), (' A1259  VAL  O  ', ' A1259  VAL HG23', -0.447, (96.284, 120.674, 158.815)), (' A 191  LEU HD12', ' A 192  HIS  N  ', -0.446, (121.957, 172.453, 109.081)), (' A1176  ILE HD11', ' A1216  GLU  HG3', -0.445, (84.022, 141.686, 129.477)), (' A1331  ASP  O  ', ' A1333  VAL  N  ', -0.445, (120.538, 113.057, 152.325)), (' A 502  CYS  SG ', ' A 505  TRP  HB2', -0.445, (179.967, 114.516, 92.054)), (' A 925  LEU  O  ', ' A 929  VAL HG13', -0.444, (119.288, 90.654, 124.016)), (' A 670  ASN  O  ', ' A 672  GLU  N  ', -0.444, (135.849, 145.006, 155.643)), (' A 864  ALA  O  ', ' A 868  ILE HG22', -0.444, (104.001, 93.532, 130.158)), (' A 191  LEU  O  ', ' A 194  PHE  HB3', -0.443, (120.208, 171.44, 112.296)), (' A 692  MET  HG3', ' A1089  TYR  CE2', -0.441, (142.59, 135.733, 136.697)), (' A 122  MET  HG2', ' A 123  LEU HD23', -0.44, (124.928, 178.294, 106.396)), (' A  66  LEU HD12', ' A 115  SER  HB3', -0.44, (132.534, 160.211, 98.748)), (' A1112  ILE HD13', ' A1411  LEU HD23', -0.439, (120.785, 125.232, 114.631)), (' A 385  LEU HD11', ' A 393  ILE HG22', -0.439, (113.143, 117.649, 143.048)), (' A1028  ASN HD22', ' A1606  NAG  C7 ', -0.438, (165.843, 119.976, 154.495)), (' A 587  ASP  OD2', ' A 619  ARG  NH2', -0.437, (159.482, 116.102, 107.872)), (' A 925  LEU  HA ', ' A 925  LEU HD23', -0.434, (121.169, 92.568, 122.137)), (' A 679  LEU HD23', ' A 683  ASN  ND2', -0.434, (140.72, 141.785, 146.399)), (' A 142  PHE  O  ', ' A 146  ILE HG12', -0.433, (143.287, 161.289, 113.378)), (' A 413  ALA  HA ', ' A1411  LEU HD13', -0.432, (117.851, 129.851, 115.161)), (' A  77  ARG  HA ', ' A 121  TRP  CH2', -0.431, (124.823, 174.96, 95.483)), (' A 614  LEU  O  ', ' A 617  VAL HG12', -0.429, (153.585, 118.718, 119.083)), (' A1497  VAL  O  ', ' A1500  VAL HG12', -0.428, (100.414, 135.879, 95.634)), (' A1154  LYS  HG2', ' A1155  PRO  HD2', -0.428, (70.237, 140.293, 118.875)), (' A 845  ILE HG13', ' A 846  ARG  N  ', -0.428, (107.829, 74.743, 110.256)), (' A1012  VAL HG13', ' A1036  THR HG23', -0.427, (148.055, 116.894, 156.398)), (' A 265  LEU  HB2', ' A 407  PHE  CZ ', -0.427, (112.207, 135.529, 126.567)), (' A 926  ASP  OD2', ' A 957  ARG  NH2', -0.427, (113.459, 89.297, 122.087)), (' A1202  LEU  O  ', ' A1205  ILE HG22', -0.426, (91.961, 140.839, 147.575)), (' A 390  PRO  O  ', ' A 393  ILE HG23', -0.426, (110.47, 116.334, 143.717)), (' A1620  L0A  H37', ' A1620  L0A  H41', -0.425, (159.484, 131.527, 138.459)), (' A1617  PEE  H49', ' A1617  PEE  H8 ', -0.425, (143.49, 102.997, 134.375)), (' A1250  LEU  HA ', ' A1250  LEU HD23', -0.424, (86.201, 123.523, 148.546)), (' A 236  ARG  O  ', ' A 239  THR HG22', -0.424, (136.927, 152.377, 114.989)), (' A1338  THR  OG1', ' A1339  PHE  N  ', -0.424, (113.977, 104.072, 145.518)), (' A 521  PHE  O  ', ' A 525  ILE HG13', -0.424, (159.227, 108.385, 106.189)), (' A  64  GLN  HB3', ' A 118  LYS  CG ', -0.423, (130.901, 167.941, 101.328)), (' A1331  ASP  O  ', ' A1332  ASP  OD1', -0.423, (120.928, 113.442, 153.675)), (' A 524  PHE  HE2', ' A 561  ILE HD11', -0.423, (163.973, 106.548, 109.812)), (' A 960  ARG  HB3', ' A 961  PRO  HD3', -0.422, (111.54, 96.14, 121.497)), (' A 129  ILE HD12', ' A 185  LEU HD21', -0.422, (137.373, 177.275, 110.996)), (' A 950  LEU  HA ', ' A 950  LEU HD23', -0.422, (124.423, 90.279, 132.257)), (' A1268  ARG  HG3', ' A1268  ARG  O  ', -0.421, (95.399, 130.073, 144.188)), (' A 533  ILE HD11', ' A 617  VAL  HA ', -0.421, (153.28, 114.995, 117.396)), (' A 199  ASP  N  ', ' A 199  ASP  OD1', -0.421, (125.78, 160.713, 112.347)), (' A 171  VAL  O  ', ' A 175  ILE HG12', -0.42, (145.504, 165.791, 124.1)), (' A1620  L0A  H43', ' A1620  L0A  H51', -0.42, (161.65, 132.545, 138.337)), (' A 328  CYS  O  ', ' A 335  GLY  HA3', -0.42, (113.829, 118.002, 156.643)), (' A  63  ASP  OD1', ' A  64  GLN  N  ', -0.42, (129.525, 167.17, 97.882)), (' A 192  HIS  ND1', ' A 195  ALA  HB3', -0.418, (121.353, 168.915, 108.324)), (' A1011  CYS  SG ', ' A1024  THR HG21', -0.418, (154.226, 121.347, 156.563)), (' A 208  VAL HG11', ' A 233  ARG  HG3', -0.417, (135.227, 158.591, 125.701)), (' A1224  LEU  O  ', ' A1224  LEU HD12', -0.416, (76.082, 132.736, 121.789)), (' A 192  HIS  C  ', ' A 194  PHE  H  ', -0.416, (122.429, 170.099, 112.063)), (' A  65  ALA  C  ', ' A  66  LEU HD22', -0.415, (132.768, 164.748, 97.762)), (' A 192  HIS  C  ', ' A 194  PHE  N  ', -0.414, (122.485, 169.785, 112.685)), (' A1012  VAL HG23', ' A1017  THR  O  ', -0.414, (145.767, 121.553, 156.678)), (' A1356  ASP  OD1', ' A1357  GLY  N  ', -0.413, (131.067, 117.764, 142.0)), (' A 207  LEU  HA ', ' A 207  LEU HD23', -0.412, (128.181, 164.153, 125.329)), (' A 506  GLN  O  ', ' A 509  GLN  HB2', -0.411, (172.019, 112.734, 90.924)), (' A 133  ALA  HB1', ' A 186  ALA  HB2', -0.411, (136.485, 171.861, 108.357)), (' A1479  ILE  O  ', ' A1479  ILE HG13', -0.411, (86.84, 134.191, 86.008)), (' A1129  ASP  OD1', ' A1133  GLN  NE2', -0.411, (111.922, 122.484, 92.844)), (' A1196  GLN  O  ', ' A1199  THR HG22', -0.411, (95.113, 140.01, 157.106)), (' A1447  TYR  CZ ', ' A1488  PHE  HD1', -0.41, (81.432, 127.688, 94.3)), (' A 167  ILE  HA ', ' A 170  LEU  CD1', -0.41, (146.683, 168.205, 133.458)), (' A1183  ASN  O  ', ' A1186  THR HG22', -0.409, (95.431, 141.644, 140.882)), (' A1447  TYR  CD1', ' A1486  HIS  HB3', -0.408, (78.901, 130.363, 92.638)), (' A1013  ASP  HA ', ' A1035  TYR  HD1', -0.408, (149.523, 119.77, 160.724)), (' A 933  TYR  HA ', ' A 933  TYR  HD1', -0.408, (119.334, 85.017, 132.592)), (' A 337  CYS  SG ', ' A 338  PRO  HD3', -0.408, (116.867, 118.696, 163.096)), (' A 512  ILE HG13', ' A 572  ALA  HA ', -0.406, (169.045, 112.566, 96.624)), (' A 565  GLU  OE1', ' A 568  LEU HD21', -0.405, (167.591, 109.32, 104.901)), (' A 513  GLY  O  ', ' A 516  VAL HG12', -0.404, (164.252, 110.009, 96.31)), (' A  63  ASP  OD2', ' A 117  GLU  HA ', -0.404, (129.034, 163.937, 99.592)), (' A1187  MET  HE1', ' A1275  ILE HG21', -0.403, (96.994, 136.555, 137.657)), (' A 147  MET  SD ', ' A 240  ILE HD12', -0.403, (143.396, 151.611, 114.279)), (' A 878  ILE HG22', ' A 879  TYR  CD2', -0.403, (116.318, 100.111, 152.96)), (' A  67  GLU  HA ', ' A  71  ARG  O  ', -0.402, (138.817, 162.807, 96.664)), (' A1053  SER  OG ', ' A1066  ILE HD13', -0.402, (142.043, 119.979, 136.49)), (' A 122  MET  HG2', ' A 123  LEU  CD2', -0.402, (124.866, 178.336, 106.103)), (' A1094  PHE  CD2', ' A1620  L0A  H91', -0.401, (148.588, 131.256, 124.924)), (' A1158  LYS  O  ', ' A1162  CYS  N  ', -0.401, (68.426, 143.277, 122.35)), (' A1468  LYS  O  ', ' A1470  ASN  N  ', -0.401, (91.142, 149.218, 89.855)), (' A1363  ALA  HA ', ' A1383  SER  O  ', -0.4, (135.396, 105.412, 142.202))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

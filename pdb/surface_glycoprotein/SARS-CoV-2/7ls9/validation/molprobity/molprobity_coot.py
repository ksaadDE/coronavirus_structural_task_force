# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('F', '   8 ', 'PRO', None, (219.613, 254.536, 178.858)), ('F', '  95 ', 'PRO', None, (199.134, 249.20199999999994, 191.376)), ('G', '   8 ', 'PRO', None, (253.32000000000005, 214.34399999999994, 178.778)), ('G', '  95 ', 'PRO', None, (258.99, 234.651, 191.518)), ('L', '   8 ', 'PRO', None, (201.521, 204.89399999999995, 178.427)), ('L', '  95 ', 'PRO', None, (216.26000000000005, 190.123, 191.45))]
data['rota'] = []
data['cbeta'] = [('A', ' 140 ', 'PHE', ' ', 0.4690029869636277, (266.2389999999999, 262.489, 222.30600000000004)), ('H', '  97 ', 'ARG', ' ', 0.2829101314835604, (233.07600000000002, 202.606, 189.891)), ('H', '  99 ', 'ALA', ' ', 0.260297858594282, (227.44600000000003, 199.715, 192.857)), ('B', ' 140 ', 'PHE', ' ', 0.36950403943617754, (236.548, 169.668, 222.273)), ('B', '1019 ', 'ARG', ' ', 0.3596279572127874, (231.054, 223.70799999999994, 279.538)), ('D', '  97 ', 'ARG', ' ', 0.3109886052244274, (201.359, 228.57999999999996, 189.771)), ('D', ' 100 ', 'TYR', ' ', 0.2762049090411085, (200.3990000000001, 234.301, 198.419)), ('C', ' 140 ', 'PHE', ' ', 0.3426129350421445, (171.06500000000005, 241.876, 222.22)), ('E', '  97 ', 'ARG', ' ', 0.2724235081737738, (239.66600000000005, 242.98699999999994, 189.856))]
data['probe'] = [(' A1012  LEU HD21', ' C1013  ILE HG12', -0.674, (220.408, 227.245, 269.297)), (' B1013  ILE HG12', ' C1012  LEU HD21', -0.663, (224.456, 219.529, 269.186)), (' L  80  PRO  HA ', ' L 106  ILE HG21', -0.663, (211.704, 215.006, 166.047)), (' D  19  ARG  HE ', ' D  79  TYR  HB3', -0.655, (184.881, 237.672, 177.331)), (' B 747  THR HG22', ' B 981  LEU HD13', -0.653, (244.744, 224.879, 239.516)), (' D  99  ALA  HB1', ' D 100I ALA  H  ', -0.642, (201.981, 236.163, 192.586)), (' F  80  PRO  HA ', ' F 106  ILE HG21', -0.629, (223.502, 241.025, 166.471)), (' G  80  PRO  HA ', ' G 106  ILE HG21', -0.625, (239.55, 218.419, 166.08)), (' B 667  GLY  HA2', ' C 864  LEU  HA ', -0.625, (213.28, 204.034, 276.886)), (' A 391  CYS  HA ', ' A 525  CYS  HB3', -0.624, (248.416, 213.341, 228.05)), (' B 390  LEU HD11', ' C 983  ARG  HA ', -0.609, (210.799, 212.768, 231.21)), (' A 365  TYR  HA ', ' A 368  LEU HD13', -0.608, (246.511, 217.448, 215.241)), (' C 393  THR  HB ', ' C 520  ALA  HB3', -0.607, (231.293, 253.096, 232.24)), (' C1141  LEU  HG ', ' C1145  LEU HD12', -0.606, (222.933, 226.252, 343.655)), (' A 317  ASN  HB3', ' B 739  THR HG21', -0.603, (247.033, 229.643, 252.727)), (' C 391  CYS  HA ', ' C 525  CYS  HB3', -0.593, (222.802, 250.946, 228.164)), (' A  93  ALA  HB3', ' A 266  TYR  HB2', -0.584, (259.895, 256.243, 241.271)), (' A 758  SER  HB2', ' C 965  GLN HE22', -0.583, (211.254, 227.254, 253.82)), (' B 393  THR  HB ', ' B 520  ALA  HB3', -0.583, (196.931, 215.902, 232.441)), (' D  94  ARG  NH2', ' D 101  ASP  OD2', -0.581, (204.878, 229.946, 182.653)), (' B 391  CYS  HA ', ' B 525  CYS  HB3', -0.579, (202.908, 209.862, 228.26)), (' C 597  VAL HG22', ' C 610  VAL HG12', -0.579, (201.225, 243.65, 263.724)), (' A 983  ARG  HA ', ' C 390  LEU HD11', -0.577, (221.364, 242.382, 231.639)), (' A 763  LEU HD22', ' A1008  VAL HG21', -0.577, (219.918, 231.306, 261.902)), (' A1013  ILE HG12', ' B1012  LEU HD21', -0.57, (229.183, 227.047, 269.432)), (' C 120  VAL HG11', ' C 157  PHE  HE1', -0.57, (176.324, 232.848, 220.572)), (' B 537  LYS  HE2', ' B 628  GLN HE21', -0.57, (209.353, 191.247, 246.094)), (' A 537  LYS  HE2', ' A 628  GLN HE21', -0.569, (261.146, 228.027, 246.086)), (' B 726  ILE HG12', ' B 945  LEU  HG ', -0.566, (237.336, 206.301, 285.572)), (' C1116  THR HG22', ' C1118  ASP  H  ', -0.566, (221.443, 230.508, 332.47)), (' A 739  THR HG21', ' C 317  ASN  HB3', -0.563, (208.739, 241.766, 252.841)), (' C  93  ALA  HB3', ' C 266  TYR  HB2', -0.562, (179.654, 239.449, 241.409)), (' B 102  ARG  HG3', ' B 141  LEU HD23', -0.561, (242.572, 173.531, 225.794)), (' A 855  PHE  HB3', ' A 858  LEU  HB2', -0.561, (222.221, 244.302, 260.035)), (' A 750  SER  HB3', ' C  52  GLN  HG3', -0.555, (204.625, 235.803, 245.246)), (' B 494  SER  OG ', ' F  32  TYR  OH ', -0.554, (207.751, 238.124, 198.501)), (' C 214  ARG  NH1', ' C 215  ASP  OD2', -0.553, (173.907, 244.782, 247.035)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.551, (234.394, 178.394, 241.31)), (' A 201  PHE  HB3', ' A 229  LEU  HB2', -0.551, (246.586, 251.375, 226.808)), (' E  87  THR  HB ', ' E 111  VAL HG12', -0.55, (265.224, 239.911, 168.497)), (' B1116  THR HG22', ' B1118  ASP  H  ', -0.55, (221.591, 218.56, 332.589)), (' A 864  LEU  HA ', ' C 667  GLY  HA2', -0.549, (212.351, 244.723, 277.006)), (' A 667  GLY  HA2', ' B 864  LEU  HA ', -0.549, (248.414, 225.482, 276.456)), (' D  99  ALA  CB ', ' D 100I ALA  H  ', -0.546, (202.644, 235.64, 192.317)), (' A 862  PRO  HG2', ' C 647  ALA  HA ', -0.542, (213.874, 249.529, 271.384)), (' C 726  ILE HG12', ' C 945  LEU  HG ', -0.541, (202.594, 223.128, 286.105)), (' B 365  TYR  HA ', ' B 368  LEU HD13', -0.54, (207.451, 209.522, 215.292)), (' B1141  LEU HD21', ' C1145  LEU HD11', -0.54, (222.213, 223.464, 343.857)), (' B 575  ALA  HA ', ' B 586  ASP  HA ', -0.539, (199.073, 205.734, 246.445)), (' A 231  ILE HD12', ' A 233  ILE HG12', -0.535, (249.615, 247.749, 223.04)), (' C 575  ALA  HA ', ' C 586  ASP  HA ', -0.535, (221.566, 256.176, 246.439)), (' B 442  ASP  O  ', ' B 448  ASN  ND2', -0.533, (206.462, 226.143, 198.08)), (' A 647  ALA  HA ', ' B 862  PRO  HG2', -0.528, (251.793, 222.035, 271.238)), (' B 733  LYS  HE3', ' B 771  ALA  HB1', -0.527, (242.833, 225.41, 272.274)), (' A 822  LEU HD22', ' A 945  LEU HD21', -0.524, (232.492, 247.748, 285.9)), (' C 102  ARG  HG3', ' C 141  LEU HD23', -0.52, (171.738, 234.584, 225.406)), (' A 575  ALA  HA ', ' A 586  ASP  HA ', -0.519, (253.467, 211.671, 246.39)), (' A 393  THR  HB ', ' A 520  ALA  HB3', -0.518, (245.645, 205.112, 232.009)), (' C 574  ASP  OD1', ' C 575  ALA  N  ', -0.518, (224.701, 254.126, 247.067)), (' B 647  ALA  HA ', ' C 862  PRO  HG2', -0.515, (208.479, 202.906, 271.476)), (' G  66  GLY  HA3', ' G  71  PHE  HA ', -0.514, (247.11, 217.959, 190.399)), (' B 855  PHE  HB3', ' B 858  LEU  HB2', -0.513, (242.789, 216.806, 260.201)), (' C 494  SER  HB3', ' E 100G PHE  CD2', -0.513, (246.318, 234.281, 199.728)), (' C 442  ASP  OD2', ' C 509  ARG  NE ', -0.512, (230.859, 241.277, 203.783)), (' B 317  ASN  HB3', ' C 739  THR HG21', -0.511, (218.284, 202.324, 252.991)), (' A 747  THR  HA ', ' C 549  THR HG23', -0.509, (211.212, 245.016, 241.952)), (' B1086  LYS  HD2', ' B1122  VAL HG11', -0.507, (209.781, 223.52, 333.351)), (' F  18  ARG  NH1', ' F  77  ARG  H  ', -0.506, (229.95, 240.642, 176.278)), (' A 574  ASP  OD1', ' A 575  ALA  N  ', -0.506, (250.265, 210.354, 246.843)), (' C 804  GLN  NE2', ' V   1  NAG  O6 ', -0.505, (191.674, 216.558, 298.615)), (' D  40  ALA  HB3', ' D  43  LYS  HB2', -0.505, (201.341, 252.906, 172.335)), (' D  87  THR  HB ', ' D 111  VAL HG12', -0.504, (191.925, 252.156, 168.649)), (' B 120  VAL  CG2', ' B 141  LEU HD22', -0.498, (241.869, 176.313, 223.25)), (' H  39  GLN  HB2', ' H  45  LEU HD23', -0.498, (217.206, 195.135, 175.081)), (' A 733  LYS  HE3', ' A 771  ALA  HB1', -0.498, (214.569, 239.882, 272.465)), (' E  41  PRO  HD3', ' E  88  ALA  HA ', -0.496, (259.957, 235.509, 169.865)), (' B 965  GLN HE22', ' C 758  SER  HB2', -0.496, (229.034, 212.187, 253.997)), (' A 733  LYS  HG2', ' A 861  LEU  HB2', -0.496, (216.124, 242.74, 270.81)), (' B 574  ASP  OD1', ' B 575  ALA  N  ', -0.494, (199.41, 210.079, 247.098)), (' G  37  GLN  HG2', ' G  47  LEU HD21', -0.492, (242.07, 227.373, 176.675)), (' E  40  ALA  HB3', ' E  43  LYS  HB2', -0.492, (260.755, 231.306, 172.594)), (' C 855  PHE  HB3', ' C 858  LEU  HB2', -0.492, (208.518, 212.974, 260.009)), (' B1141  LEU  HG ', ' B1145  LEU HD22', -0.491, (224.382, 222.43, 343.693)), (' C1086  LYS  HD2', ' C1122  VAL HG11', -0.491, (230.883, 238.319, 333.676)), (' B 713  ALA  HB3', ' C 894  LEU  HA ', -0.488, (215.142, 203.633, 311.346)), (' A 787  GLN HE22', ' A 891  GLY  HA2', -0.488, (209.737, 239.277, 301.54)), (' B 420  ASP  OD2', ' B 460  ASN  ND2', -0.486, (210.797, 241.266, 221.563)), (' A1086  LYS  HD2', ' A1122  VAL HG11', -0.485, (233.205, 212.188, 333.248)), (' G  90  GLN  NE2', ' G  95  PRO  O  ', -0.484, (257.065, 231.599, 189.965)), (' H   7  SER  HG ', ' H  21  SER  HG ', -0.483, (234.835, 188.244, 171.626)), (' A 102  ARG  HB2', ' A 141  LEU HD12', -0.481, (259.8, 263.217, 225.827)), (' A 894  LEU  HA ', ' C 713  ALA  HB3', -0.481, (210.838, 243.337, 311.794)), (' C 476  GLY  HA3', ' C 487  ASN  HB3', -0.48, (262.6, 223.853, 208.892)), (' A 497  PHE  CG ', ' A 507  PRO  HG3', -0.48, (228.757, 211.729, 200.896)), (' C 120  VAL  CG2', ' C 141  LEU HD22', -0.477, (174.203, 233.981, 223.364)), (' F  37  GLN  HG3', ' F  37  GLN  O  ', -0.477, (211.577, 239.246, 174.846)), (' B1099  GLY  HA3', ' Q   1  NAG  H82', -0.476, (213.642, 198.318, 329.465)), (' B 627  ASP  O  ', ' B 634  ARG  NH2', -0.476, (213.358, 185.914, 250.122)), (' B 563  GLN  O  ', ' B 577  ARG  NH2', -0.476, (192.235, 211.675, 238.815)), (' B 699  LEU HD13', ' C 872  GLN  HG2', -0.475, (208.924, 200.963, 290.115)), (' A 563  GLN  O  ', ' A 577  ARG  NH2', -0.475, (252.163, 203.091, 238.833)), (' C 324  GLU  HG3', ' C 539  VAL HG23', -0.475, (205.535, 253.528, 240.542)), (' C 741  TYR  HE1', ' C 966  LEU HD11', -0.473, (213.149, 216.837, 255.343)), (' C 733  LYS  HE3', ' C 771  ALA  HB1', -0.471, (216.372, 208.808, 271.98)), (' C 811  LYS  HD2', ' C 812  PRO  HD2', -0.47, (192.457, 202.033, 288.937)), (' A 611  LEU HD12', ' A 650  LEU HD12', -0.469, (254.609, 229.791, 271.069)), (' A 597  VAL HG22', ' A 610  VAL HG12', -0.469, (252.688, 235.349, 263.839)), (' C 395  VAL HG22', ' C 515  PHE  HB3', -0.469, (229.195, 247.879, 224.655)), (' A 393  THR  OG1', ' A 394  ASN  N  ', -0.468, (244.014, 205.716, 229.77)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.468, (228.073, 196.056, 273.464)), (' C 769  GLY  O  ', ' C 773  GLU  HB2', -0.467, (222.34, 212.72, 274.223)), (' B 825  LYS  NZ ', ' B 942  ALA  O  ', -0.466, (238.67, 199.119, 286.113)), (' A 369  TYR  HB3', ' C 417  LYS  HE3', -0.466, (244.099, 225.465, 210.884)), (' H  52A ASN  HA ', ' H  71  ARG HH21', -0.465, (234.572, 192.086, 189.511)), (' C 733  LYS  HG2', ' C 861  LEU  HB2', -0.465, (213.252, 208.777, 271.04)), (' B1144  GLU  HG3', ' B1145  LEU HD13', -0.463, (226.459, 219.894, 344.048)), (' A 367  VAL HG23', ' A 368  LEU HD12', -0.463, (248.129, 217.224, 213.112)), (' C1099  GLY  HA3', ' W   1  NAG  H82', -0.462, (207.464, 247.171, 329.831)), (' E  68  THR  HB ', ' E  81  GLN  HB3', -0.462, (261.73, 251.647, 180.748)), (' G  38  GLN  HB2', ' G  44  PRO  HG3', -0.462, (248.542, 230.673, 174.619)), (' H  40  ALA  HB3', ' H  43  LYS  HB2', -0.461, (212.372, 190.406, 172.447)), (' A  39  PRO  HG3', ' A  51  THR HG21', -0.459, (240.349, 247.024, 245.06)), (' B 442  ASP  OD2', ' B 509  ARG  NE ', -0.459, (207.288, 222.01, 203.954)), (' C 130  VAL HG21', ' C 231  ILE HG23', -0.458, (190.764, 232.167, 221.147)), (' C 497  PHE  CG ', ' C 507  PRO  HG3', -0.458, (234.493, 234.665, 200.914)), (' B 665  PRO  HB3', ' C 864  LEU HD22', -0.457, (217.972, 204.344, 277.964)), (' A 390  LEU HD11', ' B 983  ARG  HA ', -0.457, (242.21, 218.638, 231.23)), (' A 697  MET  HE1', ' B 779  GLN HE22', -0.455, (245.539, 229.069, 285.446)), (' B 746  SER  HB2', ' B 981  LEU HD11', -0.454, (243.77, 224.673, 242.727)), (' A 774  GLN HE22', ' A1018  ILE HG21', -0.452, (223.677, 236.071, 276.979)), (' C 727  LEU HD22', ' C1025  ALA  HB2', -0.452, (213.734, 220.939, 287.047)), (' A 521  PRO  HD3', ' A 564  GLN  HB2', -0.451, (249.965, 204.672, 236.236)), (' A1099  GLY  HA3', ' b   1  NAG  H82', -0.451, (252.981, 228.435, 329.831)), (' E  60  ALA  HB3', ' E  63  VAL HG22', -0.45, (262.929, 239.703, 183.76)), (' A 740  MET  HE3', ' C 589  PRO  HG2', -0.449, (216.076, 247.856, 253.467)), (' A 437  ASN  ND2', ' A 506  GLN  OE1', -0.449, (229.64, 219.956, 203.084)), (' B1052  PHE  HB2', ' B1063  LEU  HB2', -0.449, (239.908, 210.585, 297.279)), (' B 733  LYS  HG2', ' B 861  LEU  HB2', -0.448, (244.151, 222.773, 270.96)), (' F  90  GLN  NE2', ' F  95  PRO  O  ', -0.448, (202.707, 248.676, 189.851)), (' B 921  LYS  HA ', ' B 921  LYS  HD3', -0.447, (243.207, 202.892, 314.112)), (' C 662  CYS  HB2', ' C 671  CYS  HB3', -0.447, (203.689, 242.197, 280.282)), (' B 497  PHE  CG ', ' B 507  PRO  HG3', -0.447, (211.059, 227.849, 200.906)), (' C  66  HIS  HB2', ' C  69  HIS  HB2', -0.446, (170.142, 248.609, 237.076)), (' A 310  LYS  HG3', ' A 600  PRO  HA ', -0.446, (247.687, 242.023, 273.476)), (' A 327  VAL HG23', ' A 530  SER  HA ', -0.446, (257.653, 220.009, 230.913)), (' A  21  ARG  HA ', ' A  21  ARG  HD2', -0.445, (280.253, 256.293, 229.808)), (' C 294  ASP  N  ', ' C 294  ASP  OD2', -0.444, (194.424, 240.701, 257.444)), (' C 325  SER  HA ', ' C 540  ASN  HB2', -0.444, (207.951, 250.515, 238.404)), (' A 981  LEU  HA ', ' A 981  LEU HD23', -0.444, (217.746, 238.861, 237.431)), (' C 856  ASN HD22', ' C 966  LEU HD23', -0.444, (210.42, 214.884, 253.091)), (' A 977  LEU HD12', ' A 996  LEU HD23', -0.444, (221.346, 237.792, 244.312)), (' B 406  GLU  OE1', ' B 417  LYS  NZ ', -0.443, (215.326, 236.599, 209.726)), (' A 713  ALA  HB3', ' B 894  LEU  HA ', -0.442, (247.66, 227.263, 311.33)), (' L  33  LEU  HA ', ' L  33  LEU HD23', -0.442, (214.344, 201.542, 188.984)), (' A 105  ILE HG23', ' A 241  LEU HD11', -0.442, (259.494, 256.163, 223.8)), (' A 804  GLN  NE2', ' a   1  NAG  O6 ', -0.442, (233.942, 257.168, 298.916)), (' G  54  ARG  HE ', ' G  60  ASP  HA ', -0.441, (234.024, 222.285, 184.139)), (' C 365  TYR  HB2', ' C 368  LEU HD12', -0.441, (220.602, 245.213, 216.367)), (' A 778  THR  HA ', ' A 781  VAL HG12', -0.441, (219.58, 238.538, 284.601)), (' L  14  SER  HA ', ' L 107  LYS  HB2', -0.44, (205.363, 215.813, 165.738)), (' A 324  GLU  HG3', ' A 539  VAL HG23', -0.44, (259.048, 226.921, 240.566)), (' B 294  ASP  N  ', ' B 294  ASP  OD2', -0.439, (225.457, 190.457, 257.411)), (' B  21  ARG  HA ', ' B  21  ARG  HD2', -0.439, (223.563, 160.864, 230.174)), (' B 393  THR  OG1', ' B 394  ASN  N  ', -0.439, (198.699, 217.377, 229.854)), (' A 850  ILE  HA ', ' A 853  GLN  HG3', -0.438, (218.941, 253.679, 257.719)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.438, (202.554, 244.318, 274.836)), (' H  71  ARG  HD2', ' H  78  LEU HD12', -0.438, (233.331, 190.46, 183.551)), (' H  36  TRP  CD1', ' H  80  LEU HD12', -0.438, (226.452, 186.901, 180.042)), (' H  99  ALA  HB2', ' H 100I ALA  H  ', -0.436, (226.313, 200.364, 192.061)), (' A 742  ILE HG23', ' A 997  ILE HD12', -0.435, (217.567, 235.75, 249.378)), (' C 656  VAL HG23', ' C 695  TYR  HB3', -0.435, (199.162, 249.335, 281.992)), (' B 476  GLY  HA3', ' B 487  ASN  HB3', -0.434, (206.389, 257.892, 209.404)), (' B 395  VAL HG22', ' B 515  PHE  HB3', -0.434, (202.379, 217.319, 224.981)), (' A 656  VAL HG23', ' A 695  TYR  HB3', -0.433, (258.384, 234.301, 281.913)), (' A 662  CYS  HB2', ' A 671  CYS  HB3', -0.433, (250.514, 234.134, 280.319)), (' C1019  ARG  HA ', ' C1019  ARG  HD2', -0.433, (219.465, 218.827, 280.479)), (' A1012  LEU  HA ', ' A1012  LEU HD23', -0.433, (223.181, 229.679, 270.654)), (' A 378  LYS  HB2', ' A 378  LYS  HE2', -0.433, (231.438, 221.223, 222.709)), (' B 808  ASP  N  ', ' B 808  ASP  OD1', -0.432, (255.023, 209.597, 294.226)), (' B 966  LEU  HA ', ' B 966  LEU HD23', -0.431, (235.98, 216.394, 252.481)), (' B 324  GLU  HG3', ' B 539  VAL HG23', -0.431, (209.086, 194.137, 240.751)), (' B 777  ASN  ND2', ' B1019  ARG  HG3', -0.431, (233.668, 223.862, 280.527)), (' A 395  VAL HG22', ' A 515  PHE  HB3', -0.431, (242.289, 209.222, 225.098)), (' E   6  GLU  N  ', ' E   6  GLU  OE1', -0.43, (247.413, 245.724, 171.351)), (' B 378  LYS  HB3', ' B 378  LYS  HE3', -0.43, (216.506, 222.162, 222.7)), (' C 790  LYS  HB2', ' C 790  LYS  HE2', -0.43, (206.427, 198.305, 300.933)), (' B 589  PRO  HG2', ' C 740  MET  SD ', -0.429, (209.401, 206.351, 252.176)), (' C 529  LYS  HB2', ' C 529  LYS  HE3', -0.429, (209.209, 255.057, 226.138)), (' B 656  VAL HG23', ' B 695  TYR  HB3', -0.428, (216.242, 190.737, 282.008)), (' C  39  PRO  HG3', ' C  51  THR HG21', -0.428, (197.878, 227.158, 245.289)), (' A 442  ASP  O  ', ' A 448  ASN  ND2', -0.428, (232.458, 208.207, 197.996)), (' C 105  ILE HG23', ' C 241  LEU HD11', -0.428, (180.002, 239.06, 223.85)), (' A1139  ASP  N  ', ' A1139  ASP  OD1', -0.428, (235.246, 223.398, 338.891)), (' B 105  ILE HG23', ' B 241  LEU HD11', -0.428, (234.565, 178.444, 224.074)), (' B1005  GLN HE22', ' C1005  GLN HE22', -0.428, (225.022, 224.076, 261.233)), (' A1105  THR HG22', ' A1112  PRO  HA ', -0.427, (241.272, 230.895, 324.764)), (' C1105  THR HG22', ' C1112  PRO  HA ', -0.427, (211.355, 236.149, 324.461)), (' B1141  LEU  O  ', ' B1145  LEU  HB2', -0.427, (223.894, 219.652, 344.53)), (' C1033  VAL HG13', ' C1034  LEU HD12', -0.427, (214.933, 213.672, 297.304)), (' C 537  LYS  HE2', ' C 628  GLN HE21', -0.426, (202.459, 255.649, 246.241)), (' A 627  ASP  O  ', ' A 634  ARG  NH2', -0.425, (263.873, 234.532, 250.409)), (' A1005  GLN HE22', ' C1005  GLN HE22', -0.425, (224.024, 224.148, 261.119)), (' B 521  PRO  HD3', ' B 564  GLN  HB2', -0.425, (194.661, 212.696, 236.343)), (' C 850  ILE  HA ', ' C 853  GLN  HG2', -0.425, (202.194, 205.607, 257.628)), (' C 814  LYS  HD2', ' C 868  GLU  HG3', -0.424, (203.19, 201.974, 287.319)), (' D  36  TRP  CD1', ' D  80  LEU HD12', -0.424, (191.255, 241.67, 180.126)), (' F  66  GLY  HA3', ' F  71  PHE  HA ', -0.424, (219.34, 247.782, 190.4)), (' A 779  GLN HE22', ' C 697  MET  HE1', -0.424, (210.419, 240.833, 285.402)), (' B 402  ILE  HA ', ' B 495  TYR  HE1', -0.424, (210.331, 230.667, 207.598)), (' B 666  ILE HD11', ' B 672  ALA  HB2', -0.423, (218.438, 195.818, 274.556)), (' C 393  THR  OG1', ' C 394  ASN  N  ', -0.423, (231.171, 250.813, 229.378)), (' C 773  GLU  OE2', ' C1019  ARG  HD3', -0.422, (221.169, 216.882, 278.215)), (' C 447  GLY  HA2', ' C 497  PHE  O  ', -0.422, (236.64, 234.139, 195.207)), (' E  34  MET  SD ', ' E  94  ARG  HA ', -0.421, (246.11, 243.471, 183.09)), (' D  51  THR HG21', ' D  78  LEU HD11', -0.421, (191.318, 236.334, 184.118)), (' B 826  VAL  HB ', ' B1057  PRO  HG2', -0.42, (243.171, 207.756, 280.87)), (' C1012  LEU  HA ', ' C1012  LEU HD23', -0.419, (221.098, 220.945, 270.742)), (' C 627  ASP  O  ', ' C 634  ARG  NH2', -0.419, (196.887, 253.914, 250.285)), (' C 563  GLN  O  ', ' C 577  ARG  NH2', -0.418, (229.664, 259.728, 239.416)), (' C 550  GLY  HA2', ' C 590  CYS  HB2', -0.418, (211.116, 249.596, 247.515)), (' A 826  VAL  HB ', ' A1057  PRO  HG2', -0.418, (229.952, 249.099, 280.988)), (' E   1  GLU  HA ', ' F  18  ARG  HG2', -0.418, (232.585, 243.75, 177.713)), (' C 403  ARG  HG2', ' C 497  PHE  HE1', -0.418, (235.91, 231.96, 203.955)), (' A1005  GLN  O  ', ' A1009  THR HG23', -0.417, (224.93, 228.558, 262.283)), (' A 476  GLY  HA3', ' A 487  ASN  HB3', -0.417, (205.001, 192.395, 209.425)), (' G  14  SER  HA ', ' G 107  LYS  HB2', -0.417, (241.944, 212.351, 165.786)), (' G  35  TRP  CE2', ' G  73  LEU  HB2', -0.416, (245.741, 221.006, 183.858)), (' A  34  ARG  NH2', ' A 191  GLU  OE2', -0.416, (252.804, 259.043, 245.942)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.416, (253.193, 233.728, 274.694)), (' H  68  THR  HB ', ' H  81  GLN  HB3', -0.415, (229.099, 179.151, 180.215)), (' D  71  ARG  HB3', ' D  78  LEU  HG ', -0.415, (189.126, 235.12, 182.406)), (' B 946  GLY  O  ', ' B 950  ASP  HB2', -0.415, (232.945, 206.669, 278.134)), (' A 374  PHE  HA ', ' A 436  TRP  HB3', -0.415, (236.169, 219.178, 210.253)), (' B 120  VAL HG11', ' B 157  PHE  HE1', -0.415, (241.65, 178.599, 220.686)), (' A 338  PHE  HE2', ' A 358  ILE HD13', -0.414, (245.266, 209.624, 217.8)), (' B 945  LEU HD23', ' B 948  LEU HD12', -0.414, (239.396, 207.707, 283.423)), (' C  21  ARG  HA ', ' C  21  ARG  HD2', -0.413, (169.586, 257.077, 229.852)), (' B 741  TYR  HE1', ' B 966  LEU HD11', -0.412, (238.919, 218.544, 255.47)), (' C 817  PHE  HA ', ' C 820  ASP  HB2', -0.411, (195.311, 212.014, 289.929)), (' E  53  ASN  O  ', ' E  56  THR  OG1', -0.411, (254.097, 250.025, 195.204)), (' H  60  ALA  HB3', ' H  63  VAL HG22', -0.41, (218.575, 184.262, 183.931)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.41, (198.26, 236.242, 273.485)), (' B 994  ASP  O  ', ' B 998  THR HG23', -0.41, (230.644, 225.205, 246.369)), (' E  82  MET  HE3', ' E  82C LEU HD21', -0.409, (263.93, 245.572, 174.047)), (' A 550  GLY  HA2', ' A 590  CYS  HB2', -0.409, (252.94, 224.431, 247.616)), (' A  66  HIS  HB2', ' A  69  HIS  HB2', -0.409, (272.159, 259.971, 237.022)), (' A 847  ARG HH12', ' A 855  PHE  HE2', -0.409, (222.163, 247.979, 264.804)), (' B  86  PHE  N  ', ' B 236  THR  O  ', -0.408, (224.566, 184.653, 230.317)), (' A 807  PRO  HG2', ' A 875  SER  HB2', -0.408, (219.393, 252.26, 294.504)), (' B 121  ASN  ND2', ' B 176  LEU HD13', -0.408, (243.114, 180.518, 230.043)), (' C 627  ASP  N  ', ' C 627  ASP  OD1', -0.408, (200.882, 255.011, 251.583)), (' C 714  ILE HD11', ' C1094  VAL HG21', -0.408, (214.353, 239.276, 318.605)), (' A1141  LEU HD21', ' B1145  LEU HD11', -0.408, (227.611, 222.461, 344.416)), (' B 374  PHE  HA ', ' B 436  TRP  HB3', -0.407, (214.114, 217.459, 210.304)), (' C 825  LYS  NZ ', ' C 942  ALA  O  ', -0.406, (195.598, 225.362, 286.275)), (' C 159  VAL HG13', ' C 160  TYR  HD1', -0.406, (177.807, 237.467, 217.983)), (' A1082  CYS  HB2', ' A1126  CYS  HB2', -0.406, (242.171, 210.845, 329.978)), (' B1105  THR HG22', ' B1112  PRO  HA ', -0.406, (221.438, 207.445, 324.474)), (' A1093  GLY  O  ', ' B 904  TYR  OH ', -0.406, (237.509, 221.854, 319.246)), (' G  32  TYR  HB3', ' G  91  TYR  CD2', -0.406, (248.499, 231.224, 192.05)), (' L  90  GLN HE21', ' L  96  SER  HA ', -0.406, (215.447, 194.246, 189.225)), (' A 159  VAL HG13', ' A 160  TYR  HD1', -0.405, (258.862, 258.951, 217.643)), (' E  21  SER  HA ', ' E  78  LEU  O  ', -0.405, (252.123, 251.013, 176.219)), (' L  90  GLN  NE2', ' L  95  PRO  O  ', -0.405, (215.004, 193.476, 189.973)), (' D  18  LEU HD12', ' D  19  ARG  H  ', -0.405, (184.035, 241.467, 171.073)), (' A 571  ASP  OD1', ' B 966  LEU  HB3', -0.404, (239.525, 215.01, 252.364)), (' L  66  GLY  HA3', ' L  71  PHE  HA ', -0.403, (207.342, 208.108, 190.349)), (' B 790  LYS  HB2', ' B 790  LYS  HE2', -0.403, (256.24, 222.454, 300.884)), (' B 159  VAL HG13', ' B 160  TYR  HD1', -0.403, (237.139, 177.607, 217.92)), (' C 787  GLN HE22', ' C 891  GLY  HA2', -0.402, (219.503, 203.957, 301.243)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.401, (231.47, 217.834, 213.998)), (' D  60  ALA  HB3', ' D  63  VAL HG22', -0.401, (193.232, 250.315, 183.95)), (' B1012  LEU  HA ', ' B1012  LEU HD23', -0.401, (230.339, 223.747, 270.249)), (' F  90  GLN HE21', ' F  96  SER  HA ', -0.4, (203.527, 247.459, 188.93)), (' D  32  HIS  CD2', ' D  97  ARG  HB2', -0.4, (200.513, 228.58, 187.845))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = []
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' C 129  LYS  NZ ', ' C 169  GLU  OE1', -0.811, (188.166, 186.936, 235.482)), (' A 391  CYS  SG ', ' A 523  THR  OG1', -0.752, (223.737, 255.486, 231.473)), (' B 535  LYS  NZ ', ' B 554  GLU  OE2', -0.75, (176.897, 213.275, 205.418)), (' F  19  SER  N  ', ' F  23  GLU  OE2', -0.741, (210.082, 252.071, 278.955)), (' C 328  ARG  NH2', ' C 580  GLN  OE1', -0.73, (252.18, 190.22, 217.074)), (' A 405  ASP  N  ', ' A 504  GLY  O  ', -0.715, (233.726, 266.542, 263.829)), (' E  19  SER  N  ', ' E  23  GLU  OE2', -0.707, (211.106, 201.182, 277.354)), (' C 825  LYS  NZ ', ' C 942  ALA  O  ', -0.698, (203.379, 201.029, 173.902)), (' C1129  VAL  HB ', ' C1132  ILE HD11', -0.695, (241.731, 210.977, 131.487)), (' C 535  LYS  NZ ', ' C 554  GLU  OE2', -0.693, (252.919, 187.467, 204.307)), (' B 825  LYS  NZ ', ' B 942  ALA  O  ', -0.686, (213.037, 249.187, 174.245)), (' F 511  SER  OG ', ' F 514  ARG  NH2', -0.672, (241.141, 268.471, 295.052)), (' D 261  CYS  HB2', ' D 488  VAL HG23', -0.668, (238.065, 160.544, 313.147)), (' C1082  CYS  SG ', ' C1132  ILE HG21', -0.666, (239.547, 208.807, 127.747)), (' D  67  ASP  OD1', ' D  68  LYS  N  ', -0.664, (269.22, 188.806, 285.7)), (' B1129  VAL  HB ', ' B1132  ILE HD11', -0.662, (203.31, 211.274, 131.768)), (' C 518  LEU HD12', ' C 520  ALA  H  ', -0.66, (252.708, 214.49, 235.939)), (' C 328  ARG  NH1', ' C 531  THR  O  ', -0.659, (248.618, 188.721, 215.959)), (' B1089  PHE  O  ', ' B1120  THR  OG1', -0.656, (211.03, 219.145, 129.935)), (' F 261  CYS  HB2', ' F 488  VAL HG23', -0.656, (263.688, 271.779, 314.321)), (' E 261  CYS  HB2', ' E 488  VAL HG23', -0.65, (173.604, 241.416, 315.346)), (' E  67  ASP  OD1', ' E  68  LYS  N  ', -0.646, (178.065, 200.343, 287.306)), (' A 567  ARG  NH1', ' A 571  ASP  OD1', -0.643, (220.086, 248.568, 207.315)), (' A1082  CYS  SG ', ' A1132  ILE HG21', -0.643, (225.748, 244.106, 128.084)), (' F  67  ASP  OD2', ' F  68  LYS  N  ', -0.642, (224.714, 283.514, 284.168)), (' E 152  MET  O  ', ' E 161  ARG  NH1', -0.638, (161.104, 238.437, 303.925)), (' E  47  SER  O  ', ' E  51  ASN  ND2', -0.637, (170.373, 214.818, 283.991)), (' D 511  SER  O  ', ' D 514  ARG  NH1', -0.628, (246.457, 178.877, 295.293)), (' A1129  VAL  HB ', ' A1132  ILE HD11', -0.619, (222.659, 244.895, 131.825)), (' C 802  PHE  HD1', ' C 805  ILE HD11', -0.618, (199.376, 213.192, 155.591)), (' B 355  ARG  NE ', ' B 398  ASP  OD1', -0.615, (194.222, 201.302, 248.389)), (' D 511  SER  OG ', ' D 514  ARG  NH2', -0.615, (247.143, 181.53, 294.91)), (' C 405  ASP  O  ', ' C 408  ARG  NH2', -0.613, (246.976, 192.38, 262.984)), (' D  19  SER  N  ', ' D  23  GLU  OE2', -0.612, (249.8, 216.447, 278.653)), (' B 344  ALA  HB3', ' B 347  PHE  HE1', -0.612, (180.79, 201.52, 250.297)), (' D 431  ASP  N  ', ' D 434  THR  OG1', -0.611, (222.886, 153.797, 284.088)), (' A 357  ARG  NH1', ' A 393  THR  OG1', -0.611, (217.202, 258.751, 235.544)), (' B1082  CYS  SG ', ' B1132  ILE HG21', -0.61, (202.219, 214.438, 127.74)), (' C 568  ASP  OD1', ' C 572  THR  OG1', -0.605, (244.616, 205.64, 200.177)), (' A 825  LYS  NZ ', ' A 942  ALA  O  ', -0.603, (248.899, 216.114, 174.302)), (' B1011  GLN  OE1', ' B1014  ARG  NH2', -0.603, (223.523, 233.221, 188.85)), (' A 327  VAL HG13', ' A 542  ASN  O  ', -0.594, (232.26, 255.535, 218.317)), (' F 112  LYS  NZ ', ' F 189  GLU  OE2', -0.594, (224.173, 274.627, 307.553)), (' C 353  TRP  O  ', ' C 466  ARG  NE ', -0.592, (261.762, 205.792, 253.117)), (' E  47  SER  HA ', ' E  62  MET  HE1', -0.591, (170.851, 210.867, 284.205)), (' D 474  MET  HE2', ' D 493  HIS  HB3', -0.589, (251.959, 166.019, 316.172)), (' B 458  LYS  NZ ', ' B 471  GLU  OE1', -0.585, (201.9, 193.4, 269.102)), (' B 395  VAL  O  ', ' B 395  VAL HG12', -0.584, (191.552, 203.56, 240.758)), (' A1077  THR HG22', ' A1096  VAL  HA ', -0.581, (236.528, 238.865, 135.33)), (' A 500  THR  OG1', ' F  41  TYR  OH ', -0.58, (236.555, 277.813, 269.603)), (' C  33  THR  OG1', ' C 219  GLY  O  ', -0.576, (199.424, 181.151, 199.757)), (' A 332  ILE HG23', ' A 333  THR  H  ', -0.576, (229.271, 267.746, 225.873)), (' A 395  VAL  O  ', ' A 395  VAL HG12', -0.574, (222.557, 262.24, 240.538)), (' A 518  LEU HD12', ' A 520  ALA  H  ', -0.572, (213.064, 252.705, 235.337)), (' C 763  LEU HD11', ' C1005  GLN  OE1', -0.57, (215.785, 226.416, 199.0)), (' B 130  VAL  O  ', ' B 130  VAL HG12', -0.569, (204.104, 261.04, 236.21)), (' F 501  ALA  O  ', ' F 507  SER  OG ', -0.567, (245.175, 280.771, 303.53)), (' A1118  ASP  OD1', ' A1119  ASN  N  ', -0.564, (227.507, 226.983, 126.549)), (' D 208  GLU  OE2', ' D 210  ASN  ND2', -0.562, (240.534, 197.464, 297.325)), (' B 514  SER  OG ', ' B 516  GLU  OE1', -0.561, (198.41, 206.05, 244.684)), (' B 340  GLU  O  ', ' B 344  ALA  HB2', -0.561, (179.543, 200.253, 247.274)), (' E 323  MET  SD ', ' E 324  THR  N  ', -0.558, (176.49, 225.52, 269.538)), (' A 967  SER  O  ', ' A 975  SER  OG ', -0.558, (237.524, 214.397, 210.772)), (' A 130  VAL  O  ', ' A 130  VAL HG12', -0.556, (264.067, 217.431, 236.547)), (' A 317  ASN  ND2', ' B 737  ASP  OD2', -0.556, (239.78, 235.797, 200.486)), (' E 544  ILE  O  ', ' E 547  SER  OG ', -0.554, (185.658, 242.958, 273.496)), (' D 503  LEU HD23', ' D 505  HIS  H  ', -0.554, (250.991, 172.058, 299.126)), (' F  87  GLU  N  ', ' F  87  GLU  OE1', -0.551, (216.718, 251.831, 291.19)), (' E 217  TYR  OH ', ' E 225  ASP  OD2', -0.549, (197.64, 231.666, 298.34)), (' D 311  ALA  HB1', ' D 376  MET  HE1', -0.548, (240.436, 168.287, 273.917)), (' D  87  GLU  N  ', ' D  87  GLU  OE1', -0.548, (244.691, 210.785, 290.516)), (' B1010  GLN  OE1', ' B1014  ARG  NH2', -0.548, (221.736, 232.808, 189.584)), (' B 669  GLY  HA2', ' B 697  MET  HE1', -0.547, (193.724, 228.965, 176.192)), (' F 544  ILE  O  ', ' F 547  SER  OG ', -0.545, (258.875, 254.426, 275.099)), (' B 344  ALA  HB3', ' B 347  PHE  CE1', -0.545, (180.314, 201.891, 250.546)), (' B1039  ARG  NE ', ' C1031  GLU  OE2', -0.544, (218.901, 224.688, 160.35)), (' E 215  TYR  OH ', ' E 571  GLU  OE1', -0.544, (205.226, 233.203, 286.162)), (' A 371  SER  HG ', ' A 373  SER  HG ', -0.543, (237.599, 269.462, 245.456)), (' C 405  ASP  N  ', ' C 504  GLY  O  ', -0.542, (250.672, 189.58, 263.53)), (' C 376  THR  O  ', ' C 376  THR HG22', -0.539, (246.65, 192.54, 251.712)), (' E 121  ASN  OD1', ' E 122  THR  N  ', -0.538, (170.964, 208.147, 302.487)), (' B 353  TRP  O  ', ' B 466  ARG  NH1', -0.538, (192.199, 196.06, 253.69)), (' B 973  ILE HD11', ' B 984  LEU HD21', -0.536, (224.07, 236.446, 221.853)), (' C 472  ILE HD12', ' C 488  CYS  HB3', -0.536, (264.537, 211.112, 275.771)), (' F  62  MET  HE3', ' F  62  MET  O  ', -0.535, (231.882, 284.002, 283.533)), (' F 300  GLN  O  ', ' F 306  ARG  NH2', -0.533, (268.466, 277.198, 266.975)), (' A 705  VAL HG23', ' B 883  THR HG21', -0.529, (237.836, 243.677, 150.744)), (' D 481  LYS  O  ', ' D 486  GLY  N  ', -0.529, (237.882, 166.189, 310.015)), (' A 582  LEU  O  ', ' A 582  LEU HD23', -0.528, (227.448, 269.64, 209.036)), (' C1053  PRO  O  ', ' C1054  GLN  NE2', -0.528, (200.953, 215.215, 162.457)), (' E 388  GLN  O  ', ' E 393  ARG  NH1', -0.527, (190.858, 216.215, 275.9)), (' F 503  LEU HD23', ' F 505  HIS  H  ', -0.527, (247.841, 276.375, 299.296)), (' C 395  VAL  O  ', ' C 395  VAL HG12', -0.526, (255.57, 201.655, 241.086)), (' A 317  ASN  O  ', ' A 625  HIS  ND1', -0.526, (245.746, 236.641, 200.967)), (' D 364  VAL  O  ', ' D 364  VAL HG23', -0.525, (246.774, 153.374, 277.946)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.525, (216.27, 214.416, 163.691)), (' C 327  VAL  O  ', ' C 531  THR  OG1', -0.524, (246.099, 190.408, 218.091)), (' E 364  VAL  O  ', ' E 364  VAL HG23', -0.524, (159.094, 237.728, 281.884)), (' B 376  THR  O  ', ' B 376  THR HG22', -0.521, (189.315, 216.322, 252.237)), (' C 725  GLU  OE1', ' C1064  HIS  NE2', -0.519, (212.784, 213.001, 163.099)), (' E 574  VAL HG23', ' E 576  ALA  H  ', -0.518, (198.723, 239.086, 287.558)), (' B 405  ASP  N  ', ' B 504  GLY  O  ', -0.517, (186.018, 214.804, 264.121)), (' E 455  MET  SD ', ' E 456  LEU  N  ', -0.514, (180.735, 231.252, 307.365)), (' A 973  ILE HD11', ' A 984  LEU HD21', -0.513, (233.084, 211.991, 221.502)), (' B 176  LEU HD23', ' B 207  HIS  ND1', -0.513, (205.401, 274.143, 212.063)), (' F 158  TYR  HH ', ' F 613  TYR  HH ', -0.511, (265.886, 280.996, 313.973)), (' D 117  ASN  OD1', ' D 118  THR  N  ', -0.51, (267.538, 183.466, 299.422)), (' E  45  LEU HD12', ' E  46  ALA  N  ', -0.51, (172.386, 209.202, 279.083)), (' D 206  ASP  OD1', ' D 398  GLU  N  ', -0.509, (243.698, 185.318, 291.125)), (' D 373  HIS  HA ', ' D 376  MET  HE2', -0.509, (241.214, 168.407, 277.087)), (' C 575  ALA  HB1', ' C 584  ILE HD11', -0.509, (252.886, 198.636, 203.895)), (' D 544  ILE  O  ', ' D 547  SER  OG ', -0.508, (227.959, 173.382, 273.129)), (' B 889  GLY  HA2', ' B1034  LEU HD12', -0.508, (234.154, 232.76, 157.407)), (' E 117  ASN  OD1', ' E 118  THR  N  ', -0.507, (175.245, 204.389, 302.326)), (' B 725  GLU  OE2', ' B1064  HIS  NE2', -0.507, (218.509, 234.941, 163.44)), (' D 327  PHE  HD2', ' D 331  SER  HG ', -0.506, (251.879, 173.275, 271.431)), (' C 360  ASN  HA ', ' C 524  VAL HG11', -0.506, (257.195, 203.174, 230.461)), (' B1092  GLU  N  ', ' B1092  GLU  OE1', -0.505, (214.707, 223.629, 134.568)), (' B 669  GLY  CA ', ' B 697  MET  HE1', -0.504, (193.448, 229.161, 176.706)), (' A 802  PHE  CD1', ' A 805  ILE HD11', -0.503, (241.881, 206.712, 155.523)), (' F 250  ASN  OD1', ' F 251  ALA  N  ', -0.498, (275.902, 277.717, 305.832)), (' F 364  VAL  O  ', ' F 364  VAL HG23', -0.497, (266.466, 281.21, 278.48)), (' C 973  ILE HD11', ' C 984  LEU HD21', -0.495, (208.231, 216.604, 221.565)), (' E 503  LEU HD23', ' E 505  HIS  H  ', -0.495, (174.81, 225.317, 301.682)), (' D 501  ALA  O  ', ' D 507  SER  OG ', -0.494, (255.913, 172.535, 303.165)), (' D 474  MET  HE1', ' D 499  ASP  OD2', -0.494, (251.502, 167.282, 313.047)), (' A 857  GLY  C  ', ' A 858  LEU HD22', -0.492, (232.517, 205.361, 198.198)), (' E 107  VAL HG23', ' E 108  LEU HD12', -0.491, (189.098, 205.54, 303.245)), (' A 376  THR  O  ', ' A 376  THR HG22', -0.491, (234.236, 260.049, 252.75)), (' A 535  LYS  NZ ', ' A 554  GLU  OE2', -0.49, (236.306, 265.836, 204.582)), (' A1089  PHE  O  ', ' A1120  THR  OG1', -0.488, (224.995, 233.462, 130.047)), (' C 605  SER  OG ', ' C 606  ASN  N  ', -0.488, (210.714, 182.716, 184.469)), (' F 520  LEU HD13', ' F 579  MET  HE1', -0.487, (251.167, 256.351, 298.214)), (' A 729  VAL HG22', ' A1059  GLY  HA2', -0.484, (233.23, 209.769, 173.907)), (' B 566  GLY  N  ', ' B 575  ALA  O  ', -0.484, (190.739, 206.691, 206.461)), (' A 725  GLU  OE1', ' A1064  HIS  NE2', -0.483, (234.887, 218.63, 163.465)), (' A 485  GLY  N  ', ' A 488  CYS  SG ', -0.483, (207.845, 268.698, 278.607)), (' B1040  VAL HG11', ' C1035  GLY  HA3', -0.482, (212.234, 223.914, 155.031)), (' A 310  LYS  HG2', ' A 664  ILE HD11', -0.48, (251.425, 231.397, 180.019)), (' F 117  ASN  OD1', ' F 118  THR  N  ', -0.48, (229.499, 285.274, 298.827)), (' C 568  ASP  OD1', ' C 569  ILE  N  ', -0.476, (246.146, 206.794, 199.22)), (' F  53  ASN  O  ', ' F  58  ASN  ND2', -0.475, (239.872, 290.094, 278.405)), (' A 319  ARG  O  ', ' A 624  ILE HG22', -0.474, (245.212, 242.959, 203.507)), (' A 527  PRO  O  ', ' A 529  LYS  N  ', -0.473, (234.195, 259.823, 225.236)), (' E 503  LEU  HB3', ' E 506  VAL HG12', -0.473, (175.492, 224.408, 304.801)), (' F 303  ASP  N  ', ' F 303  ASP  OD1', -0.473, (263.571, 279.012, 268.742)), (' A 605  SER  OG ', ' A 606  ASN  N  ', -0.473, (262.103, 231.816, 184.676)), (' B 485  GLY  N  ', ' B 488  CYS  SG ', -0.473, (196.933, 191.893, 280.263)), (' E 327  PHE  HD2', ' E 331  SER  HG ', -0.472, (172.166, 222.448, 274.258)), (' D 574  VAL HG23', ' D 576  ALA  H  ', -0.472, (225.192, 185.117, 288.643)), (' A 332  ILE HG23', ' A 333  THR  N  ', -0.472, (228.559, 268.056, 225.806)), (' B 902  MET  SD ', ' B1050  MET  HE1', -0.472, (223.493, 239.731, 149.979)), (' F 107  VAL HG23', ' F 108  LEU HD12', -0.471, (223.976, 273.537, 301.924)), (' A 905  ARG  NE ', ' A1050  MET  SD ', -0.471, (234.437, 211.876, 151.422)), (' F 181  GLU  OE2', ' F 470  LYS  NZ ', -0.47, (235.688, 280.149, 317.049)), (' C 607  GLN  NE2', ' C 674  TYR  OH ', -0.469, (213.077, 179.927, 181.874)), (' F 217  TYR  OH ', ' F 225  ASP  OD2', -0.468, (243.75, 253.583, 300.029)), (' C 983  ARG  C  ', ' C 984  LEU HD22', -0.468, (205.775, 218.291, 224.001)), (' F 183  TYR  OH ', ' F 187  LYS  NZ ', -0.464, (234.74, 276.017, 300.923)), (' A1116  THR  O  ', ' A1120  THR HG22', -0.462, (226.492, 231.034, 126.607)), (' E 443  ALA  O  ', ' E 447  VAL  N  ', -0.462, (178.579, 242.391, 297.188)), (' E 462  MET  SD ', ' E 463  VAL  N  ', -0.462, (186.242, 223.517, 312.598)), (' B 804  GLN  O  ', ' B 816  SER  OG ', -0.462, (226.196, 251.245, 162.537)), (' C 712  ILE HD12', ' C1077  THR HG21', -0.46, (230.14, 203.646, 138.637)), (' A 546  LEU  H  ', ' A 546  LEU HD23', -0.46, (226.535, 253.457, 215.327)), (' B 912  THR  O  ', ' B 915  VAL HG12', -0.46, (217.302, 236.096, 139.612)), (' C 567  ARG  NE ', ' C 571  ASP  OD2', -0.459, (246.387, 209.224, 206.304)), (' A 650  LEU  H  ', ' A 650  LEU HD23', -0.456, (250.071, 245.683, 187.029)), (' B 605  SER  OG ', ' B 606  ASN  N  ', -0.456, (193.584, 251.85, 184.53)), (' B1116  THR  O  ', ' B1120  THR HG22', -0.454, (212.617, 221.934, 126.339)), (' B 618  THR  OG1', ' B 619  GLU  OE1', -0.452, (182.622, 228.006, 197.643)), (' C 650  LEU  H  ', ' C 650  LEU HD23', -0.452, (228.507, 185.717, 186.333)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.452, (195.24, 248.608, 196.884)), (' C 729  VAL HG22', ' C1059  GLY  HA2', -0.45, (206.351, 217.936, 173.658)), (' D 303  ASP  N  ', ' D 303  ASP  OD1', -0.448, (247.195, 157.513, 268.247)), (' C 726  ILE  CG2', ' C 948  LEU HD23', -0.448, (208.218, 211.42, 172.668)), (' A1039  ARG  NE ', ' B1031  GLU  OE2', -0.447, (225.712, 224.028, 160.267)), (' F 574  VAL HG23', ' F 576  ALA  H  ', -0.446, (249.388, 246.898, 290.437)), (' A 864  LEU  O  ', ' A 864  LEU HD23', -0.445, (228.455, 196.981, 176.889)), (' B 983  ARG  C  ', ' B 984  LEU HD22', -0.445, (226.929, 237.619, 224.055)), (' B 857  GLY  C  ', ' B 858  LEU HD22', -0.444, (231.073, 239.406, 198.761)), (' D 503  LEU HD23', ' D 505  HIS  N  ', -0.442, (251.396, 172.825, 299.084)), (' D 183  TYR  OH ', ' D 509  ASP  OD1', -0.442, (255.631, 182.417, 300.979)), (' B 560  LEU  N  ', ' B 563  GLN  OE1', -0.442, (187.52, 198.658, 206.481)), (' A1030  SER  OG ', ' A1031  GLU  OE1', -0.442, (224.241, 214.97, 162.121)), (' B 568  ASP  OD1', ' B 572  THR  OG1', -0.441, (196.889, 210.546, 200.813)), (' A 524  VAL  O  ', ' A 524  VAL HG23', -0.44, (225.14, 259.497, 233.912)), (' C 546  LEU  H  ', ' C 546  LEU HD23', -0.44, (247.508, 201.687, 215.22)), (' B 332  ILE  O  ', ' B 333  THR  OG1', -0.439, (178.337, 205.633, 227.58)), (' C 319  ARG  O  ', ' C 624  ILE HG22', -0.438, (228.434, 190.996, 202.946)), (' C 308  VAL  N  ', ' C 602  THR  OG1', -0.438, (207.403, 191.83, 187.042)), (' E 109  SER  O  ', ' E 113  SER  N  ', -0.438, (183.996, 201.222, 304.676)), (' F 511  SER  O  ', ' F 514  ARG  NH1', -0.437, (243.73, 269.598, 295.517)), (' C 619  GLU  N  ', ' C 619  GLU  OE2', -0.437, (235.058, 185.245, 197.537)), (' F 474  MET  SD ', ' F 478  TRP  NE1', -0.436, (251.2, 278.145, 315.605)), (' A 900  MET  SD ', ' C 712  ILE HD11', -0.436, (231.923, 205.227, 140.029)), (' D 474  MET  HE2', ' D 493  HIS  CB ', -0.435, (251.714, 165.931, 316.168)), (' F 293  VAL HG23', ' F 297  MET  HE3', -0.434, (269.218, 273.203, 277.835)), (' B  40  ASP  N  ', ' B  40  ASP  OD1', -0.433, (213.616, 255.359, 209.569)), (' E  87  GLU  N  ', ' E  87  GLU  OE1', -0.432, (210.032, 207.966, 289.094)), (' C  31  SER  O  ', ' C  59  PHE  N  ', -0.43, (206.392, 179.543, 203.372)), (' B1128  VAL HG13', ' B1129  VAL HG23', -0.43, (204.796, 208.858, 133.094)), (' F 526  GLN  HG3', ' F 539  LEU HD11', -0.43, (260.595, 255.02, 286.462)), (' D 455  MET  SD ', ' D 456  LEU  N  ', -0.429, (242.513, 173.162, 306.053)), (' C 566  GLY  N  ', ' C 575  ALA  O  ', -0.428, (251.343, 202.007, 206.451)), (' C1116  THR  O  ', ' C1120  THR HG22', -0.427, (227.436, 214.313, 126.295)), (' A 323  THR  OG1', ' A 324  GLU  OE1', -0.426, (244.23, 253.416, 211.214)), (' A 414  GLN  NE2', ' A 415  THR  O  ', -0.426, (227.71, 253.411, 263.371)), (' C 137  ASN  OD1', ' C 138  ASP  N  ', -0.426, (199.779, 167.133, 233.518)), (' B 332  ILE HG22', ' B 333  THR  H  ', -0.425, (180.857, 207.703, 228.711)), (' A  28  TYR  HD2', ' A1309  NAG  HO6', -0.425, (271.938, 238.922, 210.121)), (' C 904  TYR  O  ', ' C 908  GLY  N  ', -0.424, (214.137, 217.983, 145.002)), (' A 308  VAL  N  ', ' A 602  THR  OG1', -0.424, (255.833, 224.836, 187.294)), (' D 133  CYS  HB3', ' D 141  CYS  HB3', -0.424, (263.978, 152.87, 301.513)), (' E 511  SER  OG ', ' E 514  ARG  NH2', -0.422, (184.005, 222.461, 295.759)), (' B 441  LEU  H  ', ' B 441  LEU HD23', -0.422, (174.353, 208.411, 257.612)), (' A 393  THR  HB ', ' A 523  THR HG22', -0.421, (219.622, 255.584, 233.616)), (' A  31  SER  O  ', ' A  59  PHE  N  ', -0.42, (267.008, 229.334, 203.79)), (' B 546  LEU  H  ', ' B 546  LEU HD23', -0.419, (192.856, 210.519, 215.308)), (' B 967  SER  O  ', ' B 975  SER  OG ', -0.419, (219.984, 238.77, 210.557)), (' B 405  ASP  OD1', ' B 406  GLU  N  ', -0.419, (189.054, 213.402, 264.361)), (' F  54  ILE HD12', ' F 342  ALA  HA ', -0.419, (246.08, 290.066, 282.88)), (' A 983  ARG  C  ', ' A 984  LEU HD22', -0.418, (232.713, 209.538, 223.881)), (' E  52  THR HG22', ' E 332  MET  SD ', -0.417, (165.235, 218.695, 279.902)), (' C 395  VAL HG13', ' C 515  PHE  HE2', -0.417, (252.615, 200.606, 240.423)), (' E 292  ASP  N  ', ' E 292  ASP  OD1', -0.416, (164.333, 249.127, 283.913)), (' B 332  ILE HG22', ' B 333  THR  N  ', -0.416, (180.507, 208.086, 228.427)), (' C 321  GLN  N  ', ' C 321  GLN  OE1', -0.414, (230.671, 190.636, 206.632)), (' A 654  GLU  OE2', ' A 691  SER  OG ', -0.413, (260.571, 241.892, 181.889)), (' A 172  SER  OG ', ' A 173  GLN  N  ', -0.412, (269.971, 205.088, 224.859)), (' C  40  ASP  N  ', ' C  40  ASP  OD1', -0.412, (197.906, 198.239, 209.671)), (' B 983  ARG  O  ', ' B 984  LEU HD22', -0.412, (226.4, 237.308, 224.546)), (' F  85  LEU HD13', ' F  88  ILE HD12', -0.412, (220.644, 255.59, 289.842)), (' B 811  LYS  O  ', ' B 813  SER  N  ', -0.411, (234.655, 256.488, 168.248)), (' B 902  MET  HB3', ' B 916  LEU HD11', -0.41, (221.607, 240.324, 145.098)), (' C 332  ILE HG22', ' C 334  ASN  OD1', -0.41, (261.302, 192.876, 225.654)), (' E 241  HIS  HA ', ' E 244  VAL HG12', -0.41, (174.91, 246.821, 305.807)), (' B 650  LEU  H  ', ' B 650  LEU HD23', -0.409, (187.384, 234.871, 187.076)), (' B1054  GLN  N  ', ' B1061  VAL  O  ', -0.409, (225.131, 241.779, 165.512)), (' A 712  ILE  CG1', ' A1077  THR HG21', -0.409, (235.842, 239.076, 138.258)), (' E  63  ASN  OD1', ' E  64  ASN  N  ', -0.409, (171.553, 200.675, 288.439)), (' B  96  GLU  OE1', ' B 186  PHE  N  ', -0.408, (193.908, 279.504, 205.517)), (' C 302  THR HG23', ' C 303  LEU HD12', -0.408, (213.275, 197.459, 192.635)), (' A 369  TYR  OH ', ' A 384  PRO  O  ', -0.408, (235.136, 257.363, 239.086)), (' B 319  ARG  O  ', ' B 624  ILE HG22', -0.406, (192.185, 232.229, 203.558)), (' C 724  THR  OG1', ' C 934  ILE HD11', -0.406, (206.592, 205.955, 163.062)), (' C 336  CYS  HB2', ' C 361  CYS  HB2', -0.405, (259.432, 197.639, 233.09)), (' D 388  GLN  O  ', ' D 393  ARG  NH1', -0.404, (248.338, 192.017, 275.943)), (' D 338  ASN  OD1', ' D 339  VAL  N  ', -0.404, (268.472, 159.279, 276.287)), (' B 805  ILE HG22', ' B 818  ILE HD12', -0.404, (223.665, 247.895, 161.999)), (' E 494  ASP  OD2', ' E 496  THR HG22', -0.404, (169.676, 222.283, 323.128)), (' B 805  ILE HD12', ' B 878  LEU HD22', -0.403, (227.327, 245.297, 158.806)), (' C 765  ARG  O  ', ' C 769  GLY  N  ', -0.403, (210.051, 231.433, 188.768)), (' E 499  ASP  N  ', ' E 500  PRO  HD2', -0.403, (173.141, 224.262, 313.562)), (' D 476  LYS  O  ', ' D 480  MET  HE1', -0.401, (243.116, 173.674, 314.725)), (' B 287  ASP  OD1', ' B 288  ALA  N  ', -0.4, (203.68, 257.698, 197.691)), (' B 317  ASN  O  ', ' B 625  HIS  ND1', -0.4, (197.338, 235.311, 200.759)), (' B 712  ILE  HB ', ' B1077  THR HG21', -0.4, (201.252, 226.358, 138.37)), (' A 914  ASN  OD1', ' A 915  VAL  N  ', -0.4, (237.812, 219.23, 136.495)), (' E 208  GLU  OE2', ' E 210  ASN  ND2', -0.4, (201.831, 219.415, 296.853))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

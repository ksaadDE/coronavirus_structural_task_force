
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' D 162  ALA  HB2', ' D 183  PRO  HG2', -1.111, (121.972, 94.233, 162.028)), (' D 183  PRO  O  ', ' D 184  LEU HD22', -1.097, (124.136, 91.671, 162.366)), (' D 162  ALA  HB2', ' D 183  PRO  CG ', -1.041, (121.283, 94.924, 162.291)), (' A 187  LEU HD21', ' A 286  TYR  CE1', -0.945, (121.304, 117.763, 88.006)), (' A 402  THR HG22', ' A 404  ASN  H  ', -0.943, (106.154, 119.9, 131.226)), (' A  36  ASP  HB2', ' A  45  PHE  CD1', -0.931, (115.009, 97.77, 79.263)), (' A 606  TYR  CZ ', ' A 805  LEU HD21', -0.897, (88.159, 76.538, 95.214)), (' A 168  ASN  ND2', ' A 168  ASN  O  ', -0.868, (120.639, 97.98, 108.231)), (' A 189  THR HG21', ' A 238  TYR  OH ', -0.857, (117.517, 113.688, 81.42)), (' A 183  ARG  HB2', ' A 250  ALA  HB1', -0.82, (122.03, 113.243, 92.444)), (' D 162  ALA  CB ', ' D 183  PRO  HG2', -0.813, (122.192, 95.433, 161.881)), (' A 174  VAL HG22', ' A 175  TYR  N  ', -0.806, (123.944, 101.988, 99.471)), (' A 402  THR  CG2', ' A 404  ASN  H  ', -0.789, (106.245, 118.816, 131.403)), (' A 189  THR  CG2', ' A 238  TYR  OH ', -0.772, (118.092, 114.132, 81.035)), (' A  44  GLY  HA2', ' A 708  LEU HD21', -0.768, (108.803, 96.743, 79.002)), (' A 187  LEU  CD2', ' A 286  TYR  CE1', -0.746, (121.818, 117.696, 87.596)), (' A 385  GLY  HA3', ' A 400  ALA  HB1', -0.743, (105.473, 125.792, 124.536)), (' A  36  ASP  HB2', ' A  45  PHE  HD1', -0.738, (114.226, 98.058, 79.525)), (' A 120  THR HG22', ' A 121  LYS  N  ', -0.725, (130.783, 98.493, 84.247)), (' A 729  GLU  O  ', ' A 733  ARG  HB2', -0.713, (102.531, 103.534, 74.236)), (' D 160  VAL HG12', ' D 166  ILE HG12', -0.707, (133.297, 96.135, 157.828)), (' A 441  PHE  HE1', ' A 548  ILE HG13', -0.698, (94.645, 90.225, 125.384)), (' A  44  GLY  HA2', ' A 708  LEU  CD2', -0.692, (108.359, 95.625, 78.643)), (' A 186  LEU  O  ', ' A 186  LEU HD12', -0.69, (120.324, 113.743, 84.162)), (' A 174  VAL  CG2', ' A 175  TYR  N  ', -0.689, (124.545, 102.351, 99.245)), (' A 837  ILE HG23', ' A 862  LEU HD22', -0.687, (87.583, 82.591, 121.642)), (' A 654  ARG  NH2', ' A 658  GLU  OE1', -0.682, (89.128, 115.883, 103.326)), (' A 174  VAL HG22', ' A 175  TYR  H  ', -0.676, (123.34, 102.411, 100.098)), (' A 494  ILE  O  ', ' A 573  GLN  NE2', -0.67, (78.159, 107.58, 108.324)), (' A 385  GLY  HA3', ' A 400  ALA  CB ', -0.668, (105.723, 125.24, 123.679)), (' D 160  VAL HG23', ' D 161  ASP  H  ', -0.659, (128.223, 94.63, 159.147)), (' A 402  THR HG21', ' A 404  ASN  O  ', -0.641, (105.749, 117.728, 130.741)), (' A 173  ARG  HB3', ' A 173  ARG  NH1', -0.641, (126.982, 103.933, 105.301)), (' A  36  ASP  HB2', ' A  45  PHE  CE1', -0.634, (115.612, 98.684, 80.163)), (' D 162  ALA  HB2', ' D 183  PRO  CD ', -0.63, (122.216, 94.102, 163.243)), (' D 156  ILE HD12', ' D 186  VAL HG21', -0.628, (127.321, 86.414, 154.308)), (' A 173  ARG  HG2', ' A 173  ARG HH11', -0.627, (127.708, 104.939, 105.008)), (' A 260  ASP  HB2', ' A 263  LYS  HG3', -0.623, (132.87, 122.054, 97.28)), (' A 402  THR  CG2', ' A 404  ASN  O  ', -0.618, (105.678, 118.301, 130.628)), (' B 133  PRO  HD2', ' B 137  THR HG21', -0.614, (121.312, 111.34, 125.364)), (' A 120  THR HG22', ' A 122  TYR  H  ', -0.613, (130.249, 99.014, 84.561)), (' A 699  ALA  O  ', ' A 703  ASN  ND2', -0.609, (99.08, 93.026, 89.887)), (' A 187  LEU  CD2', ' A 286  TYR  HE1', -0.608, (121.998, 117.324, 88.536)), (' A 606  TYR  CE1', ' A 805  LEU HD21', -0.606, (88.222, 77.189, 95.258)), (' A 173  ARG  CG ', ' A 173  ARG HH11', -0.605, (126.933, 105.039, 105.262)), (' A 198  ASN  O  ', ' A 228  GLY  N  ', -0.605, (120.117, 121.987, 64.985)), (' C  14  LEU HD22', ' C  36  HIS  CG ', -0.602, (105.259, 91.347, 133.944)), (' D 183  PRO  C  ', ' D 184  LEU HD22', -0.601, (124.126, 91.322, 162.145)), (' A 172  LEU HD21', ' A 460  LEU HD11', -0.601, (115.69, 103.847, 103.546)), (' A 312  ASN HD21', ' A 463  MET  HG3', -0.594, (109.002, 110.047, 91.763)), (' A 174  VAL  O  ', ' A 177  ASN  N  ', -0.594, (125.368, 106.077, 98.751)), (' A 203  GLY  HA3', ' A 222  PHE  HD2', -0.593, (117.323, 109.471, 68.472)), (' D  93  THR  OG1', ' D  96  ARG  NH2', -0.593, (97.098, 77.258, 147.974)), (' A 210  GLN HE21', ' A 214  GLY  HA2', -0.591, (125.349, 108.694, 81.924)), (' A 530  TYR  O  ', ' A 534  ASN  ND2', -0.586, (88.12, 127.665, 103.118)), (' A  36  ASP  CB ', ' A  45  PHE  HD1', -0.585, (114.637, 98.098, 78.72)), (' A 582  THR  O  ', ' A 583  ARG  NH1', -0.584, (78.253, 93.101, 99.981)), (' A 389  LEU  HB3', ' B 130  VAL HG22', -0.582, (118.103, 119.698, 124.129)), (' A 120  THR  CG2', ' A 121  LYS  N  ', -0.578, (131.242, 99.47, 84.682)), (' A 632  ILE HG23', ' A 655  LEU HD11', -0.568, (96.833, 113.914, 97.241)), (' A  43  ALA  O  ', ' A 724  GLN  NE2', -0.568, (107.239, 92.2, 76.325)), (' A 733  ARG  HA ', ' A 733  ARG  NE ', -0.567, (105.157, 106.497, 73.752)), (' B 132  ILE HG23', ' B 137  THR HG23', -0.566, (122.385, 112.637, 127.035)), (' D 160  VAL  HA ', ' D 166  ILE  HA ', -0.566, (131.998, 95.036, 159.937)), (' B 173  SER  OG ', ' B 175  ASP  OD1', -0.565, (130.751, 109.3, 138.65)), (' A 194  ASP  HB2', ' A 289  TYR  OH ', -0.564, (119.331, 120.984, 75.242)), (' A 910  ASP  HA ', ' A 913  SER  HB3', -0.563, (73.582, 74.651, 116.436)), (' C   9  THR HG21', ' D  98  LEU HD11', -0.563, (103.683, 79.827, 140.474)), (' A 876  GLU  O  ', ' A 880  VAL HG23', -0.56, (89.581, 71.433, 122.104)), (' A 211  ASP  OD2', ' A 213  ASN  ND2', -0.56, (131.786, 104.832, 81.968)), (' A 619  TYR  HD1', ' A 786  LEU HD11', -0.558, (103.579, 93.721, 100.934)), (' A 172  LEU  CD2', ' A 460  LEU HD11', -0.558, (116.309, 103.996, 103.435)), (' A 120  THR HG23', ' A 149  TYR  OH ', -0.551, (132.179, 100.752, 86.194)), (' A 601  MET  O  ', ' A 605  VAL HG23', -0.551, (85.726, 83.823, 96.544)), (' C   5  ASP  O  ', ' C   9  THR HG23', -0.551, (101.781, 80.115, 138.088)), (' A 647  SER  H  ', ' A 650  HIS  HD2', -0.55, (84.925, 122.358, 91.839)), (' A 717  ASP  OD1', ' A 718  LYS  N  ', -0.55, (98.813, 84.151, 71.769)), (' A 872  HIS  CD2', ' A 873  PRO  HD2', -0.547, (90.666, 68.938, 110.864)), (' A 647  SER  OG ', ' A 648  LEU  N  ', -0.547, (87.305, 122.463, 89.231)), (' A 225  THR HG22', ' A 226  THR  H  ', -0.547, (115.708, 118.543, 59.909)), (' A 132  ARG HH12', ' A 240  LEU HD22', -0.546, (110.918, 101.437, 84.671)), (' A 770  TYR  O  ', ' A 774  GLY  N  ', -0.544, (103.742, 82.683, 83.608)), (' A 173  ARG  CZ ', ' A 173  ARG  HB3', -0.54, (126.166, 103.665, 105.653)), (' A 409  THR HG22', ' A 445  ASP  HA ', -0.538, (105.983, 101.982, 131.67)), (' A 470  LEU  HA ', ' A 473  VAL HG12', -0.538, (97.563, 106.239, 86.716)), (' A 630  LEU HD11', ' A 789  GLN HE21', -0.538, (103.439, 101.866, 95.475)), (' A 123  THR HG23', ' A 126  ASP  H  ', -0.538, (122.153, 98.396, 83.134)), (' B 120  ILE  O  ', ' B 124  THR  HB ', -0.538, (109.994, 132.229, 118.827)), (' A 187  LEU  CD2', ' A 286  TYR  CD1', -0.537, (121.034, 117.626, 87.395)), (' A 388  LEU HD21', ' A 390  ASP  HB2', -0.535, (112.669, 116.389, 122.962)), (' A 809  PRO  HD2', ' A 817  THR HG21', -0.532, (89.822, 78.137, 102.765)), (' A 441  PHE  HE2', ' A 845  ASP  HB3', -0.531, (93.384, 93.323, 128.832)), (' A 735  ARG  HG3', ' A 735  ARG HH11', -0.527, (102.858, 113.497, 76.338)), (' A 441  PHE  CE1', ' A 548  ILE HG13', -0.527, (94.685, 90.622, 125.811)), (' A 567  THR  OG1', ' A 654  ARG  NH2', -0.524, (87.674, 116.667, 104.513)), (' A 164  ASP  OD2', ' A 165  PHE  N  ', -0.524, (115.377, 95.826, 105.463)), (' A 187  LEU HD21', ' A 286  TYR  HE1', -0.523, (122.354, 117.746, 88.744)), (' A 385  GLY  CA ', ' A 400  ALA  HB1', -0.519, (105.788, 125.861, 124.788)), (' A 367  SER  OG ', ' A 368  PHE  N  ', -0.517, (81.531, 131.064, 115.635)), (' A 454  ASP  O  ', ' A 457  ARG  HB3', -0.516, (111.881, 105.158, 113.428)), (' A 246  THR  OG1', ' A 463  MET  N  ', -0.515, (111.358, 108.936, 96.05)), (' A 348  PHE  HE1', ' A 660  ALA  HB2', -0.515, (98.917, 119.951, 103.755)), (' D 156  ILE  O  ', ' D 156  ILE HG13', -0.513, (129.528, 84.37, 153.685)), (' A 350  GLU  HG2', ' A 632  ILE HD11', -0.51, (102.542, 114.119, 98.865)), (' C  58  VAL HG22', ' D 119  ILE HG13', -0.509, (114.519, 92.931, 142.799)), (' A 173  ARG  CG ', ' A 173  ARG  NH1', -0.509, (127.137, 104.467, 105.359)), (' D  85  SER  O  ', ' D  89  THR HG23', -0.509, (94.357, 87.944, 149.891)), (' D 104  ASN  O  ', ' D 108  ASN  ND2', -0.507, (109.941, 77.459, 152.457)), (' A 515  TYR  HD1', ' A 562  ILE HG21', -0.506, (85.19, 118.654, 117.126)), (' A 516  TYR  HE1', ' A 566  MET  HE2', -0.506, (82.164, 116.599, 113.316)), (' A 778  SER  OG ', ' A 779  ILE  N  ', -0.504, (105.738, 84.663, 92.825)), (' A 497  ASN HD22', ' A 500  LYS  HE3', -0.503, (83.653, 103.387, 117.103)), (' A  43  ALA  CB ', ' A 725  HIS  HA ', -0.501, (104.748, 95.32, 73.227)), (' A 428  PHE  CE2', ' A 883  LEU HD12', -0.501, (88.965, 71.647, 127.864)), (' D 116  PRO  HA ', ' D 130  VAL  HA ', -0.499, (118.393, 89.808, 152.324)), (' A 120  THR HG22', ' A 121  LYS  H  ', -0.499, (131.699, 98.867, 84.703)), (' D 161  ASP  CG ', ' D 165  LYS  H  ', -0.499, (128.868, 97.453, 161.875)), (' A 312  ASN  OD1', ' A 463  MET  HE2', -0.498, (109.256, 111.989, 90.417)), (' A  36  ASP  CA ', ' A  45  PHE  HD1', -0.498, (114.393, 97.681, 78.581)), (' D 162  ALA  HB2', ' D 183  PRO  HD2', -0.497, (122.48, 94.409, 163.634)), (' A 272  LYS  NZ ', ' A 274  ASP  OD1', -0.497, (111.922, 132.13, 98.134)), (' A 370  GLU  N  ', ' A 370  GLU  OE1', -0.496, (84.974, 130.678, 113.491)), (' D 100  ASN  HB3', ' D 103  LEU HD13', -0.493, (109.884, 76.72, 143.318)), (' D 162  ALA  CB ', ' D 183  PRO  CG ', -0.493, (121.79, 95.444, 162.93)), (' A 224  GLN  NE2', ' A 225  THR  O  ', -0.493, (119.469, 117.264, 60.066)), (' A 192  PHE  C  ', ' A 192  PHE  CD2', -0.49, (122.414, 115.01, 74.619)), (' A 187  LEU HD21', ' A 286  TYR  CD1', -0.489, (121.14, 118.153, 87.774)), (' B 132  ILE HG21', ' B 138  TYR  HB2', -0.488, (123.536, 113.557, 129.643)), (' A 869  LEU HD22', ' A 877  TYR  HB3', -0.488, (89.252, 73.006, 116.802)), (' A 140  ASP  O  ', ' A 144  GLU  HG3', -0.485, (127.888, 91.118, 91.926)), (' A 348  PHE  HB2', ' A 351  LEU  H  ', -0.479, (103.227, 120.019, 98.824)), (' B  85  SER  O  ', ' B  89  THR HG23', -0.479, (86.998, 130.414, 128.484)), (' B 134  ASP  N  ', ' B 134  ASP  OD1', -0.479, (122.005, 108.807, 127.067)), (' A 164  ASP  OD2', ' A 166  VAL HG23', -0.478, (114.005, 94.887, 106.921)), (' A 199  ALA  O  ', ' A 227  PRO  HA ', -0.478, (120.275, 119.849, 63.565)), (' D 161  ASP  HA ', ' D 184  LEU HD13', -0.478, (126.928, 92.982, 161.464)), (' A 829  LEU HD22', ' A 916  TRP  CD1', -0.477, (80.368, 77.887, 108.006)), (' A 331  ARG  NH1', ' B 112  ASP  O  ', -0.477, (102.491, 139.171, 105.056)), (' A  45  PHE  O  ', ' A 709  SER  HA ', -0.476, (111.021, 92.954, 81.11)), (' A 207  LEU HD11', ' A 240  LEU  HB2', -0.475, (114.39, 103.492, 82.966)), (' A 811  GLU  OE2', ' A 812  PHE  N  ', -0.475, (93.475, 83.349, 107.619)), (' A  36  ASP  CB ', ' A  45  PHE  CD1', -0.475, (115.063, 98.168, 78.943)), (' A 133  HIS  HA ', ' A 784  SER  OG ', -0.474, (112.253, 93.369, 91.178)), (' A 333  ILE  O  ', ' A 340  PHE  N  ', -0.474, (96.681, 138.499, 116.417)), (' A 173  ARG  CB ', ' A 173  ARG  CZ ', -0.471, (126.115, 103.876, 105.873)), (' A 866  ALA  HB1', ' A 869  LEU HD12', -0.471, (87.077, 76.723, 118.292)), (' A 120  THR  CG2', ' A 121  LYS  H  ', -0.47, (131.592, 99.321, 85.0)), (' A 256  HIS  HD1', ' A 261  LEU  HA ', -0.47, (129.55, 118.791, 99.371)), (' A 238  TYR  O  ', ' A 242  MET  HG3', -0.469, (111.895, 108.834, 86.071)), (' C   3  MET  HE1', ' C  45  THR  HA ', -0.468, (109.806, 75.329, 132.141)), (' A  43  ALA  HB3', ' A 725  HIS  HA ', -0.468, (105.039, 94.775, 73.635)), (' A 478  LYS  HA ', ' A 478  LYS  HD2', -0.467, (87.01, 101.13, 85.772)), (' A 402  THR HG22', ' A 404  ASN  N  ', -0.465, (107.202, 119.41, 131.211)), (' A 514  LEU HD11', ' B  79  LYS  HB2', -0.465, (78.48, 120.029, 125.071)), (' A 830  PRO  HD2', ' A 916  TRP  HE1', -0.465, (82.501, 79.447, 108.902)), (' A 251  LEU  HB3', ' A 320  VAL  HB ', -0.464, (118.395, 117.762, 97.623)), (' A 465  ASP  HB3', ' A 468  GLN  HG2', -0.463, (105.974, 103.474, 87.386)), (' A  45  PHE  H  ', ' A 708  LEU  CD2', -0.461, (109.765, 96.013, 79.907)), (' D 128  LEU  O  ', ' D 187  THR  HA ', -0.461, (125.176, 89.911, 149.82)), (' A 386  ASN  ND2', ' B 127  LYS  HB3', -0.459, (110.941, 128.064, 128.49)), (' A 203  GLY  HA3', ' A 222  PHE  CD2', -0.459, (117.325, 109.49, 68.218)), (' A 563  CYS  O  ', ' A 567  THR HG23', -0.459, (86.809, 117.783, 108.602)), (' A 398  VAL  O  ', ' A 673  LEU  HB2', -0.459, (106.086, 120.261, 119.607)), (' C  12  VAL  O  ', ' C  16  VAL HG23', -0.457, (99.454, 89.682, 142.104)), (' A 913  SER  OG ', ' A 914  ARG  NH2', -0.455, (74.706, 73.348, 113.523)), (' A 132  ARG  HG3', ' A 788  TYR  CD2', -0.455, (111.315, 99.44, 91.294)), (' A 606  TYR  CE1', ' A 805  LEU HD11', -0.454, (89.057, 77.703, 94.834)), (' A 569  ARG  O  ', ' A 573  GLN  HB2', -0.453, (81.16, 110.116, 105.521)), (' A 341  VAL  H  ', ' A 380  MET  HE1', -0.453, (98.013, 134.145, 117.81)), (' D  95  LEU HD22', ' D 103  LEU HD23', -0.452, (106.385, 80.703, 144.229)), (' A 725  HIS  ND1', ' A 729  GLU  OE2', -0.451, (102.366, 97.77, 69.974)), (' A 249  ARG  C  ', ' A 251  LEU  H  ', -0.451, (119.687, 112.899, 96.751)), (' D 108  ASN  HA ', ' D 111  ARG  HG2', -0.449, (108.761, 80.906, 156.398)), (' D 121  PRO  O  ', ' D 190  ARG  NH2', -0.448, (121.867, 84.701, 140.633)), (' A 528  PHE  O  ', ' A 531  THR  OG1', -0.448, (85.404, 121.944, 103.768)), (' A 496  ASN  O  ', ' A 500  LYS  NZ ', -0.447, (81.987, 105.964, 115.736)), (' A 241  LEU  O  ', ' A 245  LEU HD23', -0.447, (115.847, 107.699, 88.99)), (' A 654  ARG  HA ', ' A 654  ARG  HD2', -0.447, (89.755, 119.357, 101.104)), (' C   2  LYS  HA ', ' C   2  LYS  HD2', -0.446, (103.279, 73.227, 136.683)), (' A 758  LEU HD12', ' A 759  SER  H  ', -0.446, (90.455, 95.012, 104.119)), (' A 194  ASP  CB ', ' A 289  TYR  OH ', -0.444, (119.38, 121.021, 75.158)), (' A 636  LEU  HA ', ' A 636  LEU HD23', -0.444, (92.666, 112.538, 94.268)), (' A 402  THR  CG2', ' A 403  ASN  N  ', -0.443, (105.81, 120.426, 131.228)), (' A  44  GLY  CA ', ' A 708  LEU  CD2', -0.442, (108.926, 95.552, 78.86)), (' A 613  HIS  CG ', ' A 768  SER  HG ', -0.442, (98.605, 76.143, 90.938)), (' A 316  LEU  O  ', ' A 319  THR HG22', -0.442, (114.112, 115.785, 96.234)), (' A 533  ARG  HA ', ' A 653  TYR  CD2', -0.441, (90.545, 125.904, 98.293)), (' A 331  ARG  HG2', ' A 332  LYS  H  ', -0.44, (101.275, 138.287, 109.994)), (' C  49  PHE  O  ', ' C  53  VAL HG13', -0.438, (112.348, 80.715, 140.898)), (' A 807  LYS  NZ ', ' A 819  LEU  H  ', -0.438, (89.105, 70.917, 104.381)), (' A 852  GLY  O  ', ' A 856  ILE HG13', -0.436, (78.208, 86.786, 131.921)), (' A 684  ASP  OD2', ' A 685  ALA  N  ', -0.436, (87.843, 106.36, 108.04)), (' A 472  VAL HG22', ' A 700  VAL HG12', -0.435, (98.91, 98.03, 87.702)), (' A 179  GLY  N  ', ' A 248  THR  HB ', -0.434, (122.562, 107.238, 95.735)), (' D 158  GLN  HG3', ' D 187  THR  O  ', -0.434, (129.974, 90.147, 150.631)), (' A 735  ARG  HG3', ' A 735  ARG  NH1', -0.434, (103.383, 113.573, 76.367)), (' C  52  MET  HE2', ' D  95  LEU HD21', -0.433, (105.068, 82.708, 142.653)), (' A 173  ARG  CB ', ' A 173  ARG  NH1', -0.433, (126.417, 104.209, 105.687)), (' A 453  TYR  HE1', ' A 667  VAL HG21', -0.432, (104.441, 111.411, 116.303)), (' A 753  PHE  HD1', ' A 776  VAL  HB ', -0.432, (98.235, 86.583, 87.902)), (' D 109  ASN  O  ', ' D 114  CYS  N  ', -0.432, (113.266, 85.304, 157.418)), (' A 858  ARG  HA ', ' A 858  ARG  HD2', -0.432, (83.43, 87.985, 123.884)), (' A 124  MET  SD ', ' A 212  LEU HD12', -0.431, (124.996, 104.085, 86.155)), (' A 820  VAL HG21', ' A 871  LYS  HG2', -0.431, (81.63, 69.641, 109.719)), (' A 914  ARG  HA ', ' A 914  ARG  NE ', -0.43, (72.872, 76.1, 112.358)), (' A 639  ALA  O  ', ' A 642  HIS  HB2', -0.43, (86.318, 113.207, 92.75)), (' A 465  ASP  OD1', ' A 466  ILE  N  ', -0.43, (106.775, 106.459, 86.669)), (' C  54  SER  O  ', ' C  58  VAL HG23', -0.43, (113.18, 89.482, 142.491)), (' D  90  MET  HA ', ' D  93  THR HG22', -0.429, (95.713, 81.908, 146.468)), (' C  22  VAL HG13', ' C  29  TRP  HE3', -0.429, (106.473, 98.55, 139.924)), (' D 147  PHE  HB2', ' D 156  ILE HG12', -0.429, (127.158, 82.279, 153.634)), (' A 611  ASN  HB2', ' A 768  SER  H  ', -0.428, (96.835, 77.132, 86.85)), (' A  36  ASP  HA ', ' A  45  PHE  HD1', -0.426, (114.275, 97.458, 78.602)), (' A  39  ASN  O  ', ' A 725  HIS  NE2', -0.426, (106.42, 96.474, 69.596)), (' A 498  LEU  HB2', ' A 513  ARG  NE ', -0.426, (78.408, 108.916, 121.168)), (' A 606  TYR  CD1', ' A 805  LEU HD11', -0.426, (89.423, 77.842, 94.209)), (' A 166  VAL HG11', ' A 621  LYS  HG3', -0.426, (109.592, 97.092, 109.051)), (' A  42  VAL HG12', ' A 721  ARG HH21', -0.425, (109.422, 89.593, 70.914)), (' A 206  THR  OG1', ' A 208  ASP  OD1', -0.425, (119.07, 102.118, 75.305)), (' B 133  PRO  HA ', ' B 183  PRO  HB3', -0.425, (117.2, 109.746, 129.128)), (' A 872  HIS  CG ', ' A 873  PRO  HD2', -0.425, (90.362, 69.311, 111.638)), (' B 105  ASN  O  ', ' B 109  ASN  ND2', -0.425, (112.737, 141.383, 112.976)), (' A 321  PHE  HB2', ' A 326  PHE  HZ ', -0.425, (112.491, 121.634, 101.474)), (' C  60  LEU  HA ', ' C  60  LEU HD23', -0.424, (108.352, 90.732, 150.715)), (' B  94  MET  O  ', ' B  98  LEU  HB2', -0.423, (100.222, 133.682, 124.447)), (' A 569  ARG  O  ', ' A 573  GLN  CB ', -0.421, (81.091, 110.094, 105.046)), (' A 257  VAL  HA ', ' A 266  ILE HG12', -0.421, (125.937, 126.333, 100.149)), (' B 103  LEU  O  ', ' B 106  ILE HG22', -0.421, (109.345, 138.036, 115.638)), (' A 489  ASN  HB2', ' A 491  ASN  OD1', -0.421, (72.419, 116.71, 103.932)), (' A 751  LYS  HE3', ' A 752  HIS  CE1', -0.421, (91.877, 82.754, 80.802)), (' A  45  PHE  H  ', ' A 708  LEU HD23', -0.421, (109.772, 95.761, 79.969)), (' A 179  GLY  CA ', ' A 248  THR  HB ', -0.42, (121.897, 107.497, 95.728)), (' A 573  GLN  OE1', ' A 577  LYS  HE2', -0.42, (78.518, 104.798, 106.692)), (' A 619  TYR  CD1', ' A 786  LEU HD11', -0.42, (103.562, 93.869, 100.69)), (' A 664  SER  O  ', ' A 664  SER  OG ', -0.419, (103.844, 116.494, 107.59)), (' A 164  ASP  OD2', ' A 166  VAL  CG2', -0.419, (113.666, 95.234, 107.127)), (' A 723  LEU HD12', ' A 741  PHE  HE1', -0.416, (96.333, 94.612, 76.337)), (' B 112  ASP  N  ', ' B 112  ASP  OD1', -0.415, (106.444, 138.493, 103.546)), (' A 628  ASN  O  ', ' A 632  ILE HG13', -0.415, (101.02, 110.524, 98.982)), (' B 130  VAL HG12', ' B 132  ILE HG13', -0.415, (119.548, 116.3, 127.536)), (' D 162  ALA  CB ', ' D 183  PRO  HD2', -0.415, (122.569, 95.161, 163.607)), (' A 154  ASP  N  ', ' A 154  ASP  OD1', -0.415, (133.768, 93.244, 101.587)), (' A  47  LYS  HD2', ' A 129  TYR  CE2', -0.414, (117.444, 91.248, 85.588)), (' A 175  TYR  HB3', ' A 248  THR HG22', -0.414, (120.721, 104.349, 97.944)), (' A 634  ALA  O  ', ' A 638  LEU  HG ', -0.413, (91.563, 107.135, 96.976)), (' A 141  THR  O  ', ' A 145  ILE HG12', -0.413, (126.006, 94.804, 90.918)), (' B 106  ILE  HA ', ' B 106  ILE HD12', -0.412, (113.03, 138.773, 112.906)), (' A 124  MET  O  ', ' A 128  VAL HG23', -0.411, (119.78, 101.736, 86.037)), (' A 731  LEU  HA ', ' A 731  LEU HD23', -0.411, (101.831, 103.077, 80.748)), (' D 161  ASP  OD1', ' D 164  SER  N  ', -0.411, (127.57, 98.28, 161.014)), (' A 127  LEU HD12', ' A 131  LEU HD13', -0.41, (121.131, 99.575, 91.534)), (' A 605  VAL HG21', ' A 756  MET  HE2', -0.409, (88.881, 84.603, 98.083)), (' A 727  LEU  HA ', ' A 741  PHE  HE2', -0.409, (98.995, 98.255, 77.644)), (' A 381  HIS  CE1', ' A 505  PRO  HG3', -0.409, (95.89, 123.108, 121.688)), (' A 151  CYS  SG ', ' A 177  ASN  HB2', -0.408, (128.169, 104.384, 97.91)), (' A 180  GLU  HG3', ' A 261  LEU HD11', -0.407, (129.012, 112.703, 96.685)), (' A 470  LEU  O  ', ' A 473  VAL HG12', -0.407, (97.15, 105.891, 86.528)), (' A 665  GLU  O  ', ' A 676  LYS  HB3', -0.407, (103.112, 114.063, 111.89)), (' A 402  THR HG22', ' A 404  ASN  O  ', -0.406, (106.245, 118.631, 130.883)), (' A 572  HIS  O  ', ' A 576  LEU  HG ', -0.406, (83.589, 105.747, 102.479)), (' A 846  ASP  HA ', ' A 849  LYS  HB2', -0.405, (87.89, 93.117, 135.395)), (' A 205  LEU  HB2', ' A 234  VAL HG12', -0.405, (116.347, 110.521, 76.238)), (' A 152  CYS  SG ', ' A 153  ASP  N  ', -0.404, (131.303, 97.88, 102.887)), (' A 754  SER  OG ', ' A 765  CYS  HB3', -0.403, (91.095, 83.395, 92.453)), (' A 837  ILE HG22', ' A 884  TYR  CZ ', -0.402, (87.553, 79.774, 124.066)), (' A 528  PHE  HZ ', ' A 571  PHE  CE1', -0.402, (83.626, 117.285, 100.45)), (' D 136  ASN  OD1', ' D 137  THR HG23', -0.401, (116.806, 82.61, 162.972)), (' A 420  TYR  O  ', ' A 424  VAL HG22', -0.4, (92.346, 74.735, 135.572))]
data['cbeta'] = [('A', ' 248 ', 'THR', ' ', 0.2717409972359243, (120.55, 106.60699999999997, 95.90699999999997))]
data['smoc'] = [('A', 32, u'TYR', 0.7274015632973193, (123.194, 88.023, 81.005)), ('A', 43, u'ALA', 0.6831108545985294, (107.728, 94.899, 74.04700000000001)), ('A', 44, u'GLY', 0.49529218042233364, (109.099, 95.15599999999999, 77.65499999999999)), ('A', 46, u'ALA', 0.6879539310085878, (113.74900000000001, 92.006, 79.837)), ('A', 126, u'ASP', 0.7073331828543575, (121.427, 97.14999999999999, 85.032)), ('A', 131, u'LEU', 0.7692828399197871, (117.49600000000001, 97.693, 92.6)), ('A', 132, u'ARG', 0.7643848445999841, (114.021, 97.195, 91.1)), ('A', 141, u'THR', 0.7566644201092028, (125.05499999999999, 91.84700000000001, 90.557)), ('A', 145, u'ILE', 0.753837083353529, (127.84400000000001, 97.074, 92.13199999999999)), ('A', 151, u'CYS', 0.7066397331783498, (130.405, 102.17199999999998, 99.06700000000001)), ('A', 157, u'PHE', 0.7604897744790617, (127.48100000000001, 91.57799999999999, 103.121)), ('A', 165, u'PHE', 0.745524412357403, (115.80499999999999, 98.082, 105.48400000000001)), ('A', 171, u'ILE', 0.699909180575059, (122.01100000000001, 100.334, 104.67799999999998)), ('A', 189, u'THR', 0.7237803074120794, (121.755, 113.887, 80.576)), ('A', 194, u'ASP', 0.7118404372704312, (120.99700000000001, 120.212, 74.44400000000002)), ('A', 205, u'LEU', 0.7109883198715832, (116.96900000000001, 107.881, 74.548)), ('A', 206, u'THR', 0.6426576316562513, (116.992, 104.513, 76.329)), ('A', 212, u'LEU', 0.7542447692560331, (127.545, 104.181, 85.15299999999999)), ('A', 223, u'ILE', 0.7334191106721607, (117.07, 109.978, 62.349999999999994)), ('A', 229, u'SER', 0.757492989924753, (115.146, 121.654, 65.273)), ('A', 230, u'GLY', 0.7725785001184328, (115.769, 118.298, 66.94600000000001)), ('A', 247, u'LEU', 0.7113373310801975, (116.05499999999999, 105.74100000000001, 97.38)), ('A', 250, u'ALA', 0.6430105108677939, (121.57499999999999, 112.549, 95.589)), ('A', 287, u'PHE', 0.7287407304940955, (114.803, 118.009, 84.119)), ('A', 308, u'LEU', 0.6526376615638978, (100.459, 113.349, 90.56400000000001)), ('A', 316, u'LEU', 0.6682744881144609, (112.071, 115.033, 94.77799999999999)), ('A', 336, u'ASP', 0.7765520547645323, (89.70400000000001, 143.56, 118.787)), ('A', 342, u'VAL', 0.7316745175452504, (97.74100000000001, 132.17299999999997, 113.283)), ('A', 346, u'TYR', 0.6785394676061208, (101.198, 125.848, 104.42)), ('A', 350, u'GLU', 0.5980775020237467, (104.256, 117.349, 98.021)), ('A', 358, u'ASP', 0.7399858212924949, (89.769, 133.525, 102.99000000000001)), ('A', 388, u'LEU', 0.5644930955940001, (112.859, 121.45400000000001, 123.29700000000001)), ('A', 401, u'LEU', 0.6586094373376057, (102.908, 122.771, 126.709)), ('A', 406, u'ALA', 0.6084099483839115, (105.15499999999999, 112.62199999999999, 131.12800000000001)), ('A', 435, u'VAL', 0.7105515196507894, (96.763, 72.93700000000001, 122.79100000000001)), ('A', 440, u'PHE', 0.6877678464478012, (99.20400000000001, 87.142, 127.002)), ('A', 448, u'ALA', 0.3972770208302792, (108.07, 101.648, 124.36999999999999)), ('A', 452, u'ASP', 0.5679271933482682, (107.17299999999999, 103.306, 118.55199999999999)), ('A', 458, u'TYR', 0.6431631639695408, (111.408, 103.765, 109.829)), ('A', 464, u'CYS', 0.591543213793238, (107.82799999999999, 106.242, 92.521)), ('A', 468, u'GLN', 0.7095468222230451, (103.197, 102.99400000000001, 85.406)), ('A', 486, u'GLY', 0.6949931619436462, (79.71300000000001, 112.269, 95.765)), ('A', 495, u'VAL', 0.7646983714799714, (78.062, 108.203, 112.222)), ('A', 502, u'ALA', 0.7673478883576464, (88.065, 113.38499999999999, 119.735)), ('A', 506, u'PHE', 0.7616626375933747, (89.92, 118.81400000000001, 121.77)), ('A', 525, u'ASP', 0.7194522147976858, (78.364, 122.57499999999999, 106.05799999999999)), ('A', 538, u'THR', 0.6555197270375083, (96.26, 119.702, 112.813)), ('A', 545, u'LYS', 0.7379422970059816, (97.086, 100.029, 122.976)), ('A', 555, u'ARG', 0.7245820245974001, (100.93700000000001, 98.398, 120.032)), ('A', 558, u'ALA', 0.6437196044057218, (96.276, 107.518, 117.113)), ('A', 571, u'PHE', 0.6550121624214955, (83.16199999999999, 112.15599999999999, 101.51)), ('A', 579, u'ILE', 0.7227063150379985, (81.365, 100.256, 98.256)), ('A', 580, u'ALA', 0.7959640690315178, (80.649, 98.02799999999999, 101.26700000000001)), ('A', 590, u'GLY', 0.8072102944845285, (81.86, 94.492, 105.51700000000001)), ('A', 593, u'LYS', 0.7787544123736454, (81.621, 85.43100000000001, 106.983)), ('A', 614, u'LEU', 0.6953599983116696, (96.095, 79.866, 96.056)), ('A', 617, u'TRP', 0.6583689603172287, (101.068, 87.705, 101.661)), ('A', 622, u'CYS', 0.680486916182491, (102.453, 98.554, 106.636)), ('A', 668, u'MET', 0.6571006358214677, (101.472, 115.242, 120.438)), ('A', 669, u'CYS', 0.6773566364945703, (103.508, 112.339, 121.826)), ('A', 678, u'GLY', 0.622244053164744, (104.65299999999999, 110.106, 106.63799999999999)), ('A', 695, u'ASN', 0.722567701556732, (97.059, 96.592, 97.933)), ('A', 696, u'ILE', 0.7095137935087412, (95.27499999999999, 96.589, 94.57199999999999)), ('A', 718, u'LYS', 0.7513014992594733, (100.483, 85.458, 70.49700000000001)), ('A', 734, u'ASN', 0.7405936269326403, (100.505, 107.932, 74.386)), ('A', 738, u'ASP', 0.7523526195404233, (92.87599999999999, 104.84, 76.17499999999998)), ('A', 749, u'LEU', 0.6845212324546749, (93.005, 90.163, 85.053)), ('A', 753, u'PHE', 0.6704223830986316, (93.762, 86.509, 88.309)), ('A', 756, u'MET', 0.6783471888303183, (89.721, 88.54, 97.31)), ('A', 777, u'ALA', 0.6969989915677994, (101.899, 87.57799999999999, 89.585)), ('A', 782, u'PHE', 0.5591254368397334, (105.729, 90.93100000000001, 94.95100000000001)), ('A', 785, u'VAL', 0.5631763649724663, (107.98700000000001, 95.36, 94.16799999999999)), ('A', 792, u'VAL', 0.6989598503779241, (110.649, 96.953, 103.479)), ('A', 817, u'THR', 0.7364952479838017, (89.3, 76.98, 106.66999999999999)), ('A', 818, u'MET', 0.6507314003947705, (88.472, 73.286, 106.263)), ('A', 827, u'VAL', 0.7453268052501469, (81.087, 73.57, 102.20700000000001)), ('A', 834, u'PRO', 0.6342054914257814, (91.821, 77.877, 119.526)), ('A', 847, u'ILE', 0.6975960113725731, (85.979, 95.784, 132.099)), ('A', 865, u'ASP', 0.6652413554800146, (83.989, 82.169, 116.56400000000001)), ('A', 879, u'ASP', 0.7454155991968184, (86.697, 69.113, 123.48700000000001)), ('A', 884, u'TYR', 0.7583535767931355, (83.224, 76.34700000000001, 126.348)), ('A', 889, u'ARG', 0.7112367514385604, (75.988, 76.423, 130.754)), ('A', 906, u'MET', 0.6797694616759941, (73.403, 80.16199999999999, 123.486)), ('B', 78, u'ASP', 0.6353060923989654, (75.001, 125.421, 127.15799999999999)), ('B', 84, u'THR', 0.7678534719875103, (83.274, 127.816, 123.596)), ('B', 103, u'LEU', 0.6901812874155308, (108.851, 138.18800000000002, 118.016)), ('B', 113, u'GLY', 0.7283083601943716, (105.197, 139.041, 107.65799999999999)), ('B', 114, u'CYS', 0.6449580808884451, (104.42, 135.5, 106.45700000000001)), ('B', 125, u'ALA', 0.6175849750456074, (110.79400000000001, 131.377, 123.67599999999999)), ('B', 129, u'MET', 0.6125226412337357, (114.381, 121.695, 127.766)), ('B', 137, u'THR', 0.7367984412995446, (125.286, 112.37799999999999, 125.49400000000001)), ('B', 138, u'TYR', 0.7479859663731788, (125.37499999999999, 114.423, 128.68)), ('B', 169, u'LEU', 0.7374059487101131, (124.81700000000001, 118.983, 139.17899999999997)), ('B', 174, u'MET', 0.8039232367376359, (131.365, 108.779, 134.864)), ('C', 11, u'VAL', 0.6956432457583573, (101.11, 87.39, 135.965)), ('C', 15, u'SER', 0.7480883036757938, (99.71100000000001, 92.54, 139.17)), ('C', 23, u'GLU', 0.7507698685073348, (106.239, 102.034, 139.34)), ('C', 26, u'SER', 0.7129656958546258, (112.157, 103.631, 137.117)), ('C', 32, u'CYS', 0.6165071547804505, (110.17999999999999, 93.824, 137.171)), ('C', 33, u'VAL', 0.7004495803612016, (108.556, 94.17899999999999, 133.753)), ('C', 52, u'MET', 0.6813349641089793, (110.1, 83.423, 139.60999999999999)), ('D', 86, u'ALA', 0.7198495061969864, (92.065, 88.225, 148.389)), ('D', 87, u'MET', 0.7235975004316108, (94.66799999999999, 88.91100000000002, 145.692)), ('D', 90, u'MET', 0.7182055621889274, (95.31400000000001, 83.71000000000001, 145.909)), ('D', 103, u'LEU', 0.6749582815932437, (110.134, 79.227, 146.572)), ('D', 111, u'ARG', 0.7153648132157189, (108.147, 84.015, 157.71099999999998)), ('D', 115, u'VAL', 0.701433514299147, (114.293, 88.54, 154.124)), ('D', 129, u'MET', 0.7146105376092424, (121.998, 91.495, 150.572)), ('D', 133, u'PRO', 0.7457689965995185, (117.143, 88.45100000000001, 162.248)), ('D', 135, u'TYR', 0.6981868154457295, (121.588, 83.922, 165.547)), ('D', 159, u'VAL', 0.595247545873033, (130.612, 90.77499999999999, 157.637)), ('D', 162, u'ALA', 0.6307713594311627, (123.887, 96.167, 161.636))]
data['rota'] = [('A', ' 166 ', 'VAL', 0.0072963790444191545, (114.026, 97.386, 108.843)), ('A', ' 167 ', 'GLU', 0.0005995128238384069, (116.41700000000002, 95.16599999999997, 110.892)), ('A', ' 168 ', 'ASN', 0.029058455638374964, (119.80499999999999, 97.013, 110.96)), ('A', ' 170 ', 'ASP', 0.1141700301712674, (122.075, 101.57, 108.335)), ('A', ' 173 ', 'ARG', 0.06990355612581822, (124.358, 105.213, 104.37599999999998)), ('A', ' 174 ', 'VAL', 0.1241845134264974, (125.74199999999999, 103.417, 101.24699999999997)), ('A', ' 187 ', 'LEU', 0.0, (123.777, 115.946, 85.175)), ('A', ' 189 ', 'THR', 0.022915065346751362, (121.755, 113.88699999999997, 80.576)), ('A', ' 190 ', 'VAL', 0.04342462011003857, (121.25700000000002, 117.689, 80.101)), ('A', ' 191 ', 'GLN', 0.14237854942985712, (124.78800000000003, 118.24799999999998, 78.654)), ('A', ' 192 ', 'PHE', 0.15143204464398785, (124.014, 115.70699999999997, 75.85599999999997)), ('A', ' 196 ', 'MET', 0.0, (122.354, 116.825, 70.183)), ('A', ' 197 ', 'ARG', 0.00018477063005980902, (119.19200000000001, 119.01199999999997, 69.926)), ('A', ' 249 ', 'ARG', 0.03863960100296872, (118.487, 110.924, 97.24399999999997)), ('A', ' 402 ', 'THR', 0.06000215722340942, (104.61300000000006, 121.583, 129.975)), ('A', ' 607 ', 'SER', 0.028029971512487498, (85.01, 81.845, 89.209))]
data['clusters'] = [('A', '123', 1, 'side-chain clash', (122.153, 98.396, 83.134)), ('A', '124', 1, 'side-chain clash', (119.78, 101.736, 86.037)), ('A', '126', 1, 'side-chain clash\nsmoc Outlier', (122.153, 98.396, 83.134)), ('A', '127', 1, 'side-chain clash', (121.131, 99.575, 91.534)), ('A', '128', 1, 'side-chain clash', (119.78, 101.736, 86.037)), ('A', '131', 1, 'side-chain clash\nsmoc Outlier', (121.131, 99.575, 91.534)), ('A', '140', 1, 'side-chain clash', (127.888, 91.118, 91.926)), ('A', '141', 1, 'side-chain clash\nsmoc Outlier', (126.006, 94.804, 90.918)), ('A', '144', 1, 'side-chain clash', (127.888, 91.118, 91.926)), ('A', '145', 1, 'side-chain clash\nsmoc Outlier', (126.006, 94.804, 90.918)), ('A', '151', 1, 'side-chain clash\ncablam CA Geom Outlier\nsmoc Outlier', (128.169, 104.384, 97.91)), ('A', '164', 1, 'backbone clash\nside-chain clash', (113.666, 95.234, 107.127)), ('A', '165', 1, 'backbone clash\nsmoc Outlier', (115.377, 95.826, 105.463)), ('A', '166', 1, 'Rotamer\nside-chain clash', (113.666, 95.234, 107.127)), ('A', '167', 1, 'Rotamer', (116.41700000000002, 95.16599999999997, 110.892)), ('A', '168', 1, 'Rotamer\nbackbone clash', (120.639, 97.98, 108.231)), ('A', '170', 1, 'Rotamer', (122.075, 101.57, 108.335)), ('A', '171', 1, 'smoc Outlier', (122.01100000000001, 100.334, 104.67799999999998)), ('A', '172', 1, 'side-chain clash', (116.309, 103.996, 103.435)), ('A', '173', 1, 'Rotamer\nside-chain clash', (126.417, 104.209, 105.687)), ('A', '174', 1, 'Rotamer\nbackbone clash\nside-chain clash', (125.368, 106.077, 98.751)), ('A', '175', 1, 'backbone clash\nside-chain clash', (120.721, 104.349, 97.944)), ('A', '177', 1, 'backbone clash\nside-chain clash', (128.169, 104.384, 97.91)), ('A', '179', 1, 'side-chain clash', (121.897, 107.497, 95.728)), ('A', '180', 1, 'side-chain clash', (129.012, 112.703, 96.685)), ('A', '183', 1, 'side-chain clash', (122.03, 113.243, 92.444)), ('A', '186', 1, 'side-chain clash', (120.324, 113.743, 84.162)), ('A', '187', 1, 'Rotamer\nside-chain clash', (121.14, 118.153, 87.774)), ('A', '189', 1, 'Rotamer\nside-chain clash\nsmoc Outlier', (118.092, 114.132, 81.035)), ('A', '190', 1, 'Rotamer', (121.25700000000002, 117.689, 80.101)), ('A', '191', 1, 'Rotamer', (124.78800000000003, 118.24799999999998, 78.654)), ('A', '192', 1, 'Rotamer\nside-chain clash', (122.414, 115.01, 74.619)), ('A', '194', 1, 'side-chain clash\nsmoc Outlier', (119.38, 121.021, 75.158)), ('A', '196', 1, 'Rotamer', (122.354, 116.825, 70.183)), ('A', '197', 1, 'Rotamer', (119.19200000000001, 119.01199999999997, 69.926)), ('A', '198', 1, 'backbone clash', (120.117, 121.987, 64.985)), ('A', '199', 1, 'side-chain clash', (120.275, 119.849, 63.565)), ('A', '205', 1, 'side-chain clash\nsmoc Outlier', (116.347, 110.521, 76.238)), ('A', '207', 1, 'side-chain clash', (114.39, 103.492, 82.966)), ('A', '210', 1, 'side-chain clash', (125.349, 108.694, 81.924)), ('A', '212', 1, 'side-chain clash\nsmoc Outlier', (124.996, 104.085, 86.155)), ('A', '214', 1, 'side-chain clash', (125.349, 108.694, 81.924)), ('A', '224', 1, 'backbone clash', (119.469, 117.264, 60.066)), ('A', '225', 1, 'side-chain clash\nbackbone clash', (119.469, 117.264, 60.066)), ('A', '226', 1, 'side-chain clash', (115.708, 118.543, 59.909)), ('A', '227', 1, 'side-chain clash', (120.275, 119.849, 63.565)), ('A', '228', 1, 'backbone clash', (120.117, 121.987, 64.985)), ('A', '229', 1, 'smoc Outlier', (115.146, 121.654, 65.273)), ('A', '230', 1, 'smoc Outlier', (115.769, 118.298, 66.94600000000001)), ('A', '234', 1, 'side-chain clash', (116.347, 110.521, 76.238)), ('A', '238', 1, 'side-chain clash', (111.895, 108.834, 86.071)), ('A', '240', 1, 'side-chain clash', (114.39, 103.492, 82.966)), ('A', '241', 1, 'side-chain clash', (115.847, 107.699, 88.99)), ('A', '242', 1, 'side-chain clash', (111.895, 108.834, 86.071)), ('A', '245', 1, 'side-chain clash\nDihedral angle:CA:C', (116.36, 109.26400000000001, 92.816)), ('A', '246', 1, 'backbone clash\nDihedral angle:N:CA', (114.95100000000001, 109.276, 96.331)), ('A', '247', 1, 'smoc Outlier', (116.05499999999999, 105.74100000000001, 97.38)), ('A', '248', 1, 'C-beta\nside-chain clash', (120.721, 104.349, 97.944)), ('A', '249', 1, 'Rotamer\nside-chain clash\nDihedral angle:CD:NE:CZ:NH1', (118.48700000000001, 110.924, 97.24400000000001)), ('A', '250', 1, 'side-chain clash\nRamachandran\nsmoc Outlier', (121.575, 112.54899999999998, 95.589)), ('A', '251', 1, 'side-chain clash', (119.687, 112.899, 96.751)), ('A', '254', 1, 'Dihedral angle:CB:CG:CD:OE1', (123.848, 118.37299999999999, 96.263)), ('A', '256', 1, 'side-chain clash', (129.55, 118.791, 99.371)), ('A', '260', 1, 'side-chain clash', (132.87, 122.054, 97.28)), ('A', '261', 1, 'side-chain clash', (129.012, 112.703, 96.685)), ('A', '263', 1, 'side-chain clash', (132.87, 122.054, 97.28)), ('A', '286', 1, 'side-chain clash', (121.14, 118.153, 87.774)), ('A', '287', 1, 'smoc Outlier', (114.803, 118.009, 84.119)), ('A', '289', 1, 'side-chain clash', (119.38, 121.021, 75.158)), ('A', '312', 1, 'side-chain clash', (109.256, 111.989, 90.417)), ('A', '316', 1, 'side-chain clash\nsmoc Outlier', (114.112, 115.785, 96.234)), ('A', '319', 1, 'side-chain clash', (114.112, 115.785, 96.234)), ('A', '320', 1, 'side-chain clash', (118.395, 117.762, 97.623)), ('A', '454', 1, 'side-chain clash', (111.881, 105.158, 113.428)), ('A', '457', 1, 'side-chain clash', (111.881, 105.158, 113.428)), ('A', '458', 1, 'smoc Outlier', (111.408, 103.765, 109.829)), ('A', '460', 1, 'side-chain clash', (116.309, 103.996, 103.435)), ('A', '462', 1, 'Dihedral angle:CA:C', (110.12499999999999, 107.909, 97.99000000000001)), ('A', '463', 1, 'side-chain clash\nbackbone clash\nDihedral angle:N:CA', (109.86999999999999, 108.862, 94.36999999999999)), ('A', '464', 1, 'smoc Outlier', (107.82799999999999, 106.242, 92.521)), ('A', '465', 1, 'side-chain clash\nbackbone clash', (106.775, 106.459, 86.669)), ('A', '466', 1, 'backbone clash', (106.775, 106.459, 86.669)), ('A', '468', 1, 'side-chain clash\nsmoc Outlier', (105.974, 103.474, 87.386)), ('A', '621', 1, 'side-chain clash', (109.592, 97.092, 109.051)), ('A', '630', 1, 'side-chain clash', (103.439, 101.866, 95.475)), ('A', '789', 1, 'side-chain clash', (103.439, 101.866, 95.475)), ('A', '791', 1, 'Dihedral angle:CA:C', (111.205, 100.143, 101.52)), ('A', '792', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (110.649, 96.953, 103.479)), ('A', '321', 2, 'side-chain clash', (112.491, 121.634, 101.474)), ('A', '326', 2, 'side-chain clash\ncablam Outlier', (112.491, 121.634, 101.474)), ('A', '346', 2, 'smoc Outlier', (101.198, 125.848, 104.42)), ('A', '348', 2, 'side-chain clash\nDihedral angle:CA:C', (104.146, 120.81, 101.766)), ('A', '349', 2, 'Dihedral angle:N:CA', (106.9, 118.661, 100.429)), ('A', '350', 2, 'side-chain clash\nsmoc Outlier', (102.542, 114.119, 98.865)), ('A', '351', 2, 'side-chain clash', (103.227, 120.019, 98.824)), ('A', '358', 2, 'smoc Outlier', (89.769, 133.525, 102.99000000000001)), ('A', '381', 2, 'side-chain clash', (95.89, 123.108, 121.688)), ('A', '398', 2, 'side-chain clash', (106.086, 120.261, 119.607)), ('A', '453', 2, 'side-chain clash', (104.441, 111.411, 116.303)), ('A', '502', 2, 'cablam Outlier\nsmoc Outlier', (88.1, 113.4, 119.7)), ('A', '504', 2, 'cablam CA Geom Outlier', (94.0, 116.9, 120.6)), ('A', '505', 2, 'side-chain clash', (95.89, 123.108, 121.688)), ('A', '506', 2, 'smoc Outlier', (89.92, 118.81400000000001, 121.77)), ('A', '509', 2, 'cablam Outlier', (86.2, 118.5, 127.4)), ('A', '515', 2, 'side-chain clash', (85.19, 118.654, 117.126)), ('A', '516', 2, 'side-chain clash', (82.164, 116.599, 113.316)), ('A', '528', 2, 'side-chain clash', (83.626, 117.285, 100.45)), ('A', '530', 2, 'side-chain clash', (88.12, 127.665, 103.118)), ('A', '531', 2, 'side-chain clash', (85.404, 121.944, 103.768)), ('A', '533', 2, 'side-chain clash', (90.545, 125.904, 98.293)), ('A', '534', 2, 'side-chain clash', (88.12, 127.665, 103.118)), ('A', '537', 2, 'Dihedral angle:CA:C', (96.988, 121.829, 109.79)), ('A', '538', 2, 'Dihedral angle:N:CA\nsmoc Outlier', (96.26, 119.702, 112.813)), ('A', '562', 2, 'side-chain clash', (85.19, 118.654, 117.126)), ('A', '563', 2, 'side-chain clash', (86.809, 117.783, 108.602)), ('A', '566', 2, 'side-chain clash', (82.164, 116.599, 113.316)), ('A', '567', 2, 'side-chain clash', (86.809, 117.783, 108.602)), ('A', '571', 2, 'side-chain clash\nsmoc Outlier', (83.626, 117.285, 100.45)), ('A', '628', 2, 'side-chain clash', (101.02, 110.524, 98.982)), ('A', '632', 2, 'side-chain clash', (101.02, 110.524, 98.982)), ('A', '634', 2, 'side-chain clash', (91.563, 107.135, 96.976)), ('A', '636', 2, 'side-chain clash', (92.666, 112.538, 94.268)), ('A', '638', 2, 'side-chain clash', (91.563, 107.135, 96.976)), ('A', '639', 2, 'side-chain clash', (86.318, 113.207, 92.75)), ('A', '642', 2, 'side-chain clash', (86.318, 113.207, 92.75)), ('A', '653', 2, 'side-chain clash', (90.545, 125.904, 98.293)), ('A', '654', 2, 'side-chain clash', (89.755, 119.357, 101.104)), ('A', '655', 2, 'side-chain clash', (96.833, 113.914, 97.241)), ('A', '658', 2, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (93.718, 115.432, 103.508)), ('A', '660', 2, 'side-chain clash', (98.917, 119.951, 103.755)), ('A', '664', 2, 'side-chain clash', (103.844, 116.494, 107.59)), ('A', '665', 2, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (101.004, 116.534, 110.41700000000002)), ('A', '667', 2, 'side-chain clash', (104.441, 111.411, 116.303)), ('A', '668', 2, 'smoc Outlier', (101.472, 115.242, 120.438)), ('A', '669', 2, 'smoc Outlier', (103.508, 112.339, 121.826)), ('A', '673', 2, 'side-chain clash', (106.086, 120.261, 119.607)), ('A', '676', 2, 'side-chain clash', (103.112, 114.063, 111.89)), ('A', '677', 2, 'cablam Outlier', (107.2, 112.3, 108.4)), ('A', '678', 2, 'cablam CA Geom Outlier\nsmoc Outlier', (104.7, 110.1, 106.6)), ('A', '679', 2, 'cablam Outlier', (102.7, 106.9, 106.8)), ('A', '428', 3, 'side-chain clash', (88.965, 71.647, 127.864)), ('A', '439', 3, 'Dihedral angle:CA:C', (98.57499999999999, 84.684, 124.192)), ('A', '440', 3, 'Dihedral angle:N:CA\nsmoc Outlier', (99.20400000000001, 87.142, 127.002)), ('A', '441', 3, 'side-chain clash', (94.685, 90.622, 125.811)), ('A', '545', 3, 'smoc Outlier', (97.086, 100.029, 122.976)), ('A', '547', 3, 'cablam CA Geom Outlier', (95.0, 94.1, 124.2)), ('A', '548', 3, 'side-chain clash', (94.685, 90.622, 125.811)), ('A', '555', 3, 'smoc Outlier', (100.93700000000001, 98.398, 120.032)), ('A', '806', 3, 'Dihedral angle:CA:C', (89.923, 71.396, 98.19)), ('A', '807', 3, 'side-chain clash\nDihedral angle:N:CA\nDihedral angle:CA:C', (91.723, 72.726, 101.239)), ('A', '808', 3, 'Dihedral angle:N:CA', (90.989, 76.41000000000001, 101.019)), ('A', '809', 3, 'side-chain clash', (89.822, 78.137, 102.765)), ('A', '817', 3, 'side-chain clash\nsmoc Outlier', (89.822, 78.137, 102.765)), ('A', '818', 3, 'smoc Outlier', (88.472, 73.286, 106.263)), ('A', '819', 3, 'side-chain clash', (89.105, 70.917, 104.381)), ('A', '832', 3, 'Dihedral angle:CA:C', (90.131, 80.07199999999999, 114.369)), ('A', '833', 3, 'Dihedral angle:N:CA', (93.284, 79.251, 116.256)), ('A', '834', 3, 'smoc Outlier', (91.821, 77.877, 119.526)), ('A', '836', 3, 'Dihedral angle:CD:NE:CZ:NH1', (93.71400000000001, 82.557, 120.995)), ('A', '837', 3, 'side-chain clash', (87.553, 79.774, 124.066)), ('A', '844', 3, 'Dihedral angle:CA:C', (90.397, 89.612, 130.569)), ('A', '845', 3, 'side-chain clash\nDihedral angle:CA:C\nDihedral angle:N:CA\ncablam Outlier', (91.131, 93.29400000000001, 131.08800000000002)), ('A', '846', 3, 'side-chain clash\nDihedral angle:N:CA\ncablam Outlier', (88.93700000000001, 94.367, 134.017)), ('A', '847', 3, 'smoc Outlier', (85.979, 95.784, 132.099)), ('A', '849', 3, 'side-chain clash', (87.89, 93.117, 135.395)), ('A', '862', 3, 'side-chain clash', (87.583, 82.591, 121.642)), ('A', '865', 3, 'smoc Outlier', (83.989, 82.169, 116.56400000000001)), ('A', '866', 3, 'side-chain clash', (87.077, 76.723, 118.292)), ('A', '869', 3, 'side-chain clash', (87.077, 76.723, 118.292)), ('A', '872', 3, 'side-chain clash', (90.362, 69.311, 111.638)), ('A', '873', 3, 'side-chain clash', (90.362, 69.311, 111.638)), ('A', '876', 3, 'side-chain clash', (89.581, 71.433, 122.104)), ('A', '877', 3, 'side-chain clash', (89.252, 73.006, 116.802)), ('A', '879', 3, 'smoc Outlier', (86.697, 69.113, 123.48700000000001)), ('A', '880', 3, 'side-chain clash', (89.581, 71.433, 122.104)), ('A', '883', 3, 'side-chain clash', (88.965, 71.647, 127.864)), ('A', '884', 3, 'side-chain clash\nsmoc Outlier', (87.553, 79.774, 124.066)), ('A', '132', 4, 'side-chain clash\nsmoc Outlier', (111.315, 99.44, 91.294)), ('A', '133', 4, 'side-chain clash', (112.253, 93.369, 91.178)), ('A', '472', 4, 'side-chain clash', (98.91, 98.03, 87.702)), ('A', '617', 4, 'Dihedral angle:CA:C\nsmoc Outlier', (101.068, 87.705, 101.661)), ('A', '618', 4, 'Dihedral angle:N:CA', (101.397, 90.368, 104.281)), ('A', '619', 4, 'side-chain clash', (103.562, 93.869, 100.69)), ('A', '695', 4, 'smoc Outlier', (97.059, 96.592, 97.933)), ('A', '696', 4, 'smoc Outlier', (95.27499999999999, 96.589, 94.57199999999999)), ('A', '699', 4, 'side-chain clash', (99.08, 93.026, 89.887)), ('A', '700', 4, 'side-chain clash', (98.91, 98.03, 87.702)), ('A', '703', 4, 'side-chain clash', (99.08, 93.026, 89.887)), ('A', '749', 4, 'smoc Outlier', (93.005, 90.163, 85.053)), ('A', '753', 4, 'side-chain clash\nsmoc Outlier', (98.235, 86.583, 87.902)), ('A', '757', 4, 'Dihedral angle:CA:C', (90.851, 91.706, 99.053)), ('A', '758', 4, 'side-chain clash\nDihedral angle:N:CA', (90.592, 93.04700000000001, 102.57)), ('A', '759', 4, 'side-chain clash', (90.455, 95.012, 104.119)), ('A', '760', 4, 'Dihedral angle:CA:CB:CG:OD1\ncablam Outlier', (96.476, 94.44700000000002, 103.99300000000001)), ('A', '770', 4, 'backbone clash', (103.742, 82.683, 83.608)), ('A', '774', 4, 'backbone clash', (103.742, 82.683, 83.608)), ('A', '775', 4, 'Dihedral angle:CA:C\ncablam Outlier', (102.036, 85.979, 82.98)), ('A', '776', 4, 'side-chain clash\nDihedral angle:N:CA', (100.334, 86.43400000000001, 86.345)), ('A', '777', 4, 'smoc Outlier', (101.899, 87.57799999999999, 89.585)), ('A', '778', 4, 'backbone clash', (105.738, 84.663, 92.825)), ('A', '779', 4, 'backbone clash', (105.738, 84.663, 92.825)), ('A', '782', 4, 'smoc Outlier', (105.729, 90.93100000000001, 94.95100000000001)), ('A', '784', 4, 'side-chain clash', (112.253, 93.369, 91.178)), ('A', '785', 4, 'smoc Outlier', (107.98700000000001, 95.36, 94.16799999999999)), ('A', '786', 4, 'side-chain clash', (103.562, 93.869, 100.69)), ('A', '788', 4, 'side-chain clash', (111.315, 99.44, 91.294)), ('A', '601', 5, 'side-chain clash', (85.726, 83.823, 96.544)), ('A', '605', 5, 'side-chain clash', (88.881, 84.603, 98.083)), ('A', '606', 5, 'side-chain clash\ncablam Outlier', (89.423, 77.842, 94.209)), ('A', '607', 5, 'Rotamer\ncablam CA Geom Outlier', (85.01, 81.845, 89.209)), ('A', '608', 5, 'cablam Outlier', (86.4, 79.9, 86.2)), ('A', '609', 5, 'Dihedral angle:CA:C', (90.2, 79.87599999999999, 86.62499999999999)), ('A', '610', 5, 'Dihedral angle:N:CA', (91.87899999999999, 76.988, 84.88199999999999)), ('A', '611', 5, 'side-chain clash', (96.835, 77.132, 86.85)), ('A', '613', 5, 'side-chain clash', (98.605, 76.143, 90.938)), ('A', '614', 5, 'smoc Outlier', (96.095, 79.866, 96.056)), ('A', '751', 5, 'side-chain clash', (91.877, 82.754, 80.802)), ('A', '752', 5, 'side-chain clash', (91.877, 82.754, 80.802)), ('A', '754', 5, 'side-chain clash', (91.095, 83.395, 92.453)), ('A', '756', 5, 'side-chain clash\nsmoc Outlier', (88.881, 84.603, 98.083)), ('A', '765', 5, 'side-chain clash', (91.095, 83.395, 92.453)), ('A', '768', 5, 'side-chain clash', (96.835, 77.132, 86.85)), ('A', '805', 5, 'side-chain clash', (89.423, 77.842, 94.209)), ('A', '129', 6, 'side-chain clash', (117.444, 91.248, 85.588)), ('A', '36', 6, 'side-chain clash', (114.275, 97.458, 78.602)), ('A', '39', 6, 'side-chain clash', (106.42, 96.474, 69.596)), ('A', '42', 6, 'side-chain clash', (109.422, 89.593, 70.914)), ('A', '43', 6, 'side-chain clash\nsmoc Outlier', (105.039, 94.775, 73.635)), ('A', '44', 6, 'side-chain clash\nsmoc Outlier', (108.926, 95.552, 78.86)), ('A', '45', 6, 'side-chain clash', (109.772, 95.761, 79.969)), ('A', '46', 6, 'smoc Outlier', (113.74900000000001, 92.006, 79.837)), ('A', '47', 6, 'side-chain clash', (117.444, 91.248, 85.588)), ('A', '708', 6, 'side-chain clash', (109.772, 95.761, 79.969)), ('A', '709', 6, 'side-chain clash', (111.021, 92.954, 81.11)), ('A', '721', 6, 'side-chain clash', (109.422, 89.593, 70.914)), ('A', '724', 6, 'side-chain clash', (107.239, 92.2, 76.325)), ('A', '725', 6, 'side-chain clash', (106.42, 96.474, 69.596)), ('A', '729', 6, 'side-chain clash', (102.366, 97.77, 69.974)), ('A', '494', 7, 'side-chain clash', (78.159, 107.58, 108.324)), ('A', '495', 7, 'smoc Outlier', (78.062, 108.203, 112.222)), ('A', '496', 7, 'side-chain clash', (81.987, 105.964, 115.736)), ('A', '497', 7, 'side-chain clash', (83.653, 103.387, 117.103)), ('A', '500', 7, 'side-chain clash', (81.987, 105.964, 115.736)), ('A', '569', 7, 'side-chain clash', (81.091, 110.094, 105.046)), ('A', '572', 7, 'side-chain clash\nDihedral angle:CA:C', (83.843, 108.579, 102.377)), ('A', '573', 7, 'side-chain clash\nDihedral angle:N:CA', (80.647, 107.925, 104.255)), ('A', '576', 7, 'side-chain clash', (83.589, 105.747, 102.479)), ('A', '577', 7, 'side-chain clash', (78.518, 104.798, 106.692)), ('A', '593', 8, 'smoc Outlier', (81.621, 85.43100000000001, 106.983)), ('A', '594', 8, 'cablam Outlier', (78.5, 83.7, 108.3)), ('A', '830', 8, 'side-chain clash', (82.501, 79.447, 108.902)), ('A', '910', 8, 'side-chain clash', (73.582, 74.651, 116.436)), ('A', '913', 8, 'side-chain clash', (74.706, 73.348, 113.523)), ('A', '914', 8, 'side-chain clash', (72.872, 76.1, 112.358)), ('A', '915', 8, 'cablam Outlier', (75.3, 80.5, 112.2)), ('A', '916', 8, 'side-chain clash', (82.501, 79.447, 108.902)), ('A', '917', 8, 'Dihedral angle:CB:CG:CD:OE1', (73.242, 77.634, 107.41300000000001)), ('A', '723', 9, 'side-chain clash', (96.333, 94.612, 76.337)), ('A', '727', 9, 'side-chain clash', (98.995, 98.255, 77.644)), ('A', '731', 9, 'side-chain clash', (101.831, 103.077, 80.748)), ('A', '732', 9, 'cablam Outlier', (105.7, 104.6, 77.7)), ('A', '733', 9, 'side-chain clash\ncablam CA Geom Outlier', (105.157, 106.497, 73.752)), ('A', '734', 9, 'cablam Outlier\nsmoc Outlier', (100.5, 107.9, 74.4)), ('A', '735', 9, 'side-chain clash', (103.383, 113.573, 76.367)), ('A', '741', 9, 'side-chain clash', (98.995, 98.255, 77.644)), ('A', '385', 10, 'side-chain clash', (105.788, 125.861, 124.788)), ('A', '400', 10, 'side-chain clash\ncablam CA Geom Outlier', (105.788, 125.861, 124.788)), ('A', '401', 10, 'smoc Outlier', (102.908, 122.771, 126.709)), ('A', '402', 10, 'Rotamer\nside-chain clash\nbackbone clash', (106.245, 118.631, 130.883)), ('A', '403', 10, 'backbone clash', (105.81, 120.426, 131.228)), ('A', '404', 10, 'side-chain clash\nbackbone clash', (106.245, 118.631, 130.883)), ('A', '406', 10, 'smoc Outlier', (105.15499999999999, 112.62199999999999, 131.12800000000001)), ('A', '120', 11, 'backbone clash\nside-chain clash', (131.592, 99.321, 85.0)), ('A', '121', 11, 'backbone clash\nside-chain clash', (131.592, 99.321, 85.0)), ('A', '122', 11, 'side-chain clash', (130.249, 99.014, 84.561)), ('A', '149', 11, 'side-chain clash', (132.179, 100.752, 86.194)), ('A', '211', 11, 'side-chain clash', (131.786, 104.832, 81.968)), ('A', '213', 11, 'side-chain clash\ncablam Outlier', (131.786, 104.832, 81.968)), ('A', '333', 12, 'backbone clash', (96.681, 138.499, 116.417)), ('A', '340', 12, 'backbone clash', (96.681, 138.499, 116.417)), ('A', '341', 12, 'side-chain clash', (98.013, 134.145, 117.81)), ('A', '342', 12, 'smoc Outlier', (97.74100000000001, 132.17299999999997, 113.283)), ('A', '380', 12, 'side-chain clash', (98.013, 134.145, 117.81)), ('A', '409', 13, 'side-chain clash', (105.983, 101.982, 131.67)), ('A', '444', 13, 'Dihedral angle:CA:C', (105.271, 98.479, 128.89000000000001)), ('A', '445', 13, 'side-chain clash\nDihedral angle:N:CA\ncablam Outlier', (107.20400000000001, 101.474, 130.13899999999998)), ('A', '448', 13, 'smoc Outlier', (108.07, 101.648, 124.36999999999999)), ('A', '452', 13, 'smoc Outlier', (107.17299999999999, 103.306, 118.55199999999999)), ('A', '388', 14, 'side-chain clash\nsmoc Outlier', (112.669, 116.389, 122.962)), ('A', '390', 14, 'side-chain clash', (112.669, 116.389, 122.962)), ('A', '582', 14, 'side-chain clash', (118.103, 119.698, 124.129)), ('A', '583', 14, 'side-chain clash', (118.103, 119.698, 124.129)), ('A', '152', 15, 'backbone clash', (131.303, 97.88, 102.887)), ('A', '153', 15, 'backbone clash', (131.303, 97.88, 102.887)), ('A', '154', 15, 'side-chain clash', (133.768, 93.244, 101.587)), ('A', '157', 15, 'smoc Outlier', (127.48100000000001, 91.57799999999999, 103.121)), ('A', '420', 16, 'side-chain clash', (92.346, 74.735, 135.572)), ('A', '421', 16, 'Dihedral angle:CA:CB:CG:OD1', (90.62799999999999, 75.86, 137.212)), ('A', '424', 16, 'side-chain clash', (92.346, 74.735, 135.572)), ('A', '579', 17, 'smoc Outlier', (81.365, 100.256, 98.256)), ('A', '580', 17, 'smoc Outlier', (80.649, 98.02799999999999, 101.26700000000001)), ('A', '590', 17, 'smoc Outlier', (81.86, 94.492, 105.51700000000001)), ('A', '272', 18, 'side-chain clash', (111.922, 132.13, 98.134)), ('A', '274', 18, 'side-chain clash', (111.922, 132.13, 98.134)), ('A', '275', 18, 'cablam Outlier', (112.0, 128.6, 97.4)), ('A', '32', 19, 'smoc Outlier', (123.194, 88.023, 81.005)), ('A', '49', 19, 'Dihedral angle:CA:C', (121.408, 87.07, 77.092)), ('A', '50', 19, 'Dihedral angle:N:CA', (123.137, 89.238, 74.535)), ('A', '647', 20, 'side-chain clash\nbackbone clash', (87.305, 122.463, 89.231)), ('A', '648', 20, 'backbone clash', (87.305, 122.463, 89.231)), ('A', '650', 20, 'side-chain clash', (84.925, 122.358, 91.839)), ('A', '331', 21, 'side-chain clash', (101.275, 138.287, 109.994)), ('A', '332', 21, 'side-chain clash', (101.275, 138.287, 109.994)), ('A', '829', 21, 'side-chain clash', (102.491, 139.171, 105.056)), ('A', '367', 22, 'backbone clash', (81.531, 131.064, 115.635)), ('A', '368', 22, 'backbone clash', (81.531, 131.064, 115.635)), ('A', '370', 22, 'side-chain clash', (84.974, 130.678, 113.491)), ('A', '203', 23, 'side-chain clash', (117.325, 109.49, 68.218)), ('A', '222', 23, 'side-chain clash', (117.325, 109.49, 68.218)), ('A', '223', 23, 'smoc Outlier', (117.07, 109.978, 62.349999999999994)), ('A', '811', 24, 'backbone clash', (93.475, 83.349, 107.619)), ('A', '812', 24, 'backbone clash', (93.475, 83.349, 107.619)), ('A', '717', 25, 'backbone clash', (98.813, 84.151, 71.769)), ('A', '718', 25, 'backbone clash\nsmoc Outlier', (98.813, 84.151, 71.769)), ('A', '522', 26, 'Dihedral angle:CB:CG:CD:OE1', (74.611, 124.30199999999999, 108.833)), ('A', '525', 26, 'smoc Outlier', (78.364, 122.57499999999999, 106.05799999999999)), ('A', '435', 27, 'smoc Outlier', (96.763, 72.93700000000001, 122.79100000000001)), ('A', '436', 27, 'Dihedral angle:CB:CG:CD:OE1', (98.289, 75.31400000000001, 125.35199999999999)), ('A', '852', 28, 'side-chain clash', (78.208, 86.786, 131.921)), ('A', '856', 28, 'side-chain clash', (78.208, 86.786, 131.921)), ('A', '684', 29, 'backbone clash', (87.843, 106.36, 108.04)), ('A', '685', 29, 'backbone clash', (87.843, 106.36, 108.04)), ('A', '498', 30, 'side-chain clash', (78.408, 108.916, 121.168)), ('A', '513', 30, 'side-chain clash', (78.408, 108.916, 121.168)), ('A', '489', 31, 'side-chain clash', (72.419, 116.71, 103.932)), ('A', '491', 31, 'side-chain clash', (72.419, 116.71, 103.932)), ('A', '820', 32, 'side-chain clash', (81.63, 69.641, 109.719)), ('A', '871', 32, 'side-chain clash', (81.63, 69.641, 109.719)), ('A', '206', 33, 'side-chain clash\nsmoc Outlier', (119.07, 102.118, 75.305)), ('A', '208', 33, 'side-chain clash', (119.07, 102.118, 75.305)), ('A', '257', 34, 'side-chain clash\ncablam Outlier', (125.937, 126.333, 100.149)), ('A', '266', 34, 'side-chain clash', (125.937, 126.333, 100.149)), ('A', '485', 35, 'cablam Outlier', (80.3, 108.6, 95.0)), ('A', '486', 35, 'smoc Outlier', (79.71300000000001, 112.269, 95.765)), ('A', '478', 36, 'side-chain clash', (87.01, 101.13, 85.772)), ('A', '481', 36, 'Dihedral angle:CA:CB:CG:OD1', (84.088, 101.346, 88.406)), ('A', '470', 37, 'side-chain clash', (97.15, 105.891, 86.528)), ('A', '473', 37, 'side-chain clash', (97.15, 105.891, 86.528)), ('B', '103', 1, 'side-chain clash\nsmoc Outlier', (109.345, 138.036, 115.638)), ('B', '105', 1, 'side-chain clash', (112.737, 141.383, 112.976)), ('B', '106', 1, 'side-chain clash', (113.03, 138.773, 112.906)), ('B', '109', 1, 'side-chain clash', (112.737, 141.383, 112.976)), ('B', '120', 1, 'side-chain clash', (109.994, 132.229, 118.827)), ('B', '124', 1, 'side-chain clash', (109.994, 132.229, 118.827)), ('B', '125', 1, 'smoc Outlier', (110.79400000000001, 131.377, 123.67599999999999)), ('B', '127', 1, 'side-chain clash', (110.941, 128.064, 128.49)), ('B', '130', 2, 'side-chain clash', (119.548, 116.3, 127.536)), ('B', '132', 2, 'side-chain clash', (119.548, 116.3, 127.536)), ('B', '133', 2, 'side-chain clash', (117.2, 109.746, 129.128)), ('B', '134', 2, 'side-chain clash', (122.005, 108.807, 127.067)), ('B', '137', 2, 'side-chain clash\nsmoc Outlier', (122.385, 112.637, 127.035)), ('B', '138', 2, 'side-chain clash\nsmoc Outlier', (123.536, 113.557, 129.643)), ('B', '183', 2, 'side-chain clash', (117.2, 109.746, 129.128)), ('B', '111', 3, 'Dihedral angle:CD:NE:CZ:NH1', (109.331, 140.166, 103.44900000000001)), ('B', '112', 3, 'backbone clash\nside-chain clash', (106.444, 138.493, 103.546)), ('B', '113', 3, 'smoc Outlier', (105.197, 139.041, 107.65799999999999)), ('B', '114', 3, 'smoc Outlier', (104.42, 135.5, 106.45700000000001)), ('B', '94', 4, 'side-chain clash', (100.222, 133.682, 124.447)), ('B', '97', 4, 'Dihedral angle:CA:C', (102.205, 134.20499999999998, 127.861)), ('B', '98', 4, 'side-chain clash\nDihedral angle:N:CA\nDihedral angle:CA:C\ncablam CA Geom Outlier', (102.728, 135.35000000000002, 124.285)), ('B', '99', 4, 'Dihedral angle:N:CA', (103.313, 138.994, 123.40700000000001)), ('B', '84', 5, 'smoc Outlier', (83.274, 127.816, 123.596)), ('B', '85', 5, 'side-chain clash', (86.998, 130.414, 128.484)), ('B', '89', 5, 'side-chain clash', (86.998, 130.414, 128.484)), ('B', '173', 6, 'side-chain clash', (130.751, 109.3, 138.65)), ('B', '174', 6, 'smoc Outlier', (131.365, 108.779, 134.864)), ('B', '175', 6, 'side-chain clash', (130.751, 109.3, 138.65)), ('B', '78', 7, 'smoc Outlier', (75.001, 125.421, 127.15799999999999)), ('B', '79', 7, 'side-chain clash', (78.48, 120.029, 125.071)), ('C', '20', 1, 'Dihedral angle:CA:C', (101.754, 98.474, 145.483)), ('C', '21', 1, 'Dihedral angle:N:CA', (102.978, 101.30799999999999, 143.253)), ('C', '22', 1, 'side-chain clash', (106.473, 98.55, 139.924)), ('C', '23', 1, 'smoc Outlier', (106.239, 102.034, 139.34)), ('C', '24', 1, 'Dihedral angle:CA:C\ncablam Outlier', (107.38499999999999, 105.1, 141.32700000000003)), ('C', '25', 1, 'Dihedral angle:N:CA', (110.935, 103.887, 140.702)), ('C', '26', 1, 'smoc Outlier', (112.157, 103.631, 137.117)), ('C', '29', 1, 'side-chain clash', (106.473, 98.55, 139.924)), ('C', '32', 1, 'smoc Outlier', (110.17999999999999, 93.824, 137.171)), ('C', '33', 1, 'smoc Outlier', (108.556, 94.17899999999999, 133.753)), ('C', '14', 2, 'side-chain clash', (103.683, 79.827, 140.474)), ('C', '36', 2, 'side-chain clash', (103.683, 79.827, 140.474)), ('C', '49', 2, 'side-chain clash', (105.068, 82.708, 142.653)), ('C', '52', 2, 'smoc Outlier', (110.1, 83.423, 139.60999999999999)), ('C', '53', 2, 'side-chain clash', (105.068, 82.708, 142.653)), ('C', '5', 3, 'side-chain clash', (114.519, 92.931, 142.799)), ('C', '54', 3, 'side-chain clash', (113.18, 89.482, 142.491)), ('C', '58', 3, 'side-chain clash', (113.18, 89.482, 142.491)), ('C', '9', 3, 'side-chain clash', (114.519, 92.931, 142.799)), ('C', '11', 4, 'smoc Outlier', (101.11, 87.39, 135.965)), ('C', '12', 4, 'side-chain clash', (99.454, 89.682, 142.104)), ('C', '15', 4, 'smoc Outlier', (99.71100000000001, 92.54, 139.17)), ('C', '16', 4, 'side-chain clash', (99.454, 89.682, 142.104)), ('C', '3', 5, 'side-chain clash', (109.806, 75.329, 132.141)), ('C', '44', 5, 'Dihedral angle:CA:CB:CG:OD1', (112.061, 75.74900000000001, 128.98800000000003)), ('C', '45', 5, 'side-chain clash', (109.806, 75.329, 132.141)), ('C', '2', 6, 'side-chain clash', (103.279, 73.227, 136.683)), ('C', '60', 6, 'side-chain clash', (108.352, 90.732, 150.715)), ('D', '104', 1, 'side-chain clash', (109.941, 77.459, 152.457)), ('D', '108', 1, 'side-chain clash', (108.761, 80.906, 156.398)), ('D', '109', 1, 'backbone clash', (113.266, 85.304, 157.418)), ('D', '111', 1, 'side-chain clash\nsmoc Outlier', (108.761, 80.906, 156.398)), ('D', '112', 1, 'Dihedral angle:CA:CB:CG:OD1', (110.94600000000001, 83.29100000000001, 160.18)), ('D', '114', 1, 'backbone clash', (113.266, 85.304, 157.418)), ('D', '115', 1, 'smoc Outlier', (114.293, 88.54, 154.124)), ('D', '116', 1, 'side-chain clash', (118.393, 89.808, 152.324)), ('D', '128', 1, 'side-chain clash', (125.176, 89.911, 149.82)), ('D', '129', 1, 'smoc Outlier', (121.998, 91.495, 150.572)), ('D', '130', 1, 'side-chain clash', (118.393, 89.808, 152.324)), ('D', '133', 1, 'smoc Outlier', (117.143, 88.45100000000001, 162.248)), ('D', '135', 1, 'smoc Outlier', (121.588, 83.922, 165.547)), ('D', '136', 1, 'side-chain clash', (116.806, 82.61, 162.972)), ('D', '137', 1, 'side-chain clash', (116.806, 82.61, 162.972)), ('D', '143', 1, 'Dihedral angle:CA:CB:CG:OD1', (128.072, 77.27799999999999, 157.96)), ('D', '147', 1, 'side-chain clash', (127.158, 82.279, 153.634)), ('D', '155', 1, 'Dihedral angle:CA:C', (129.347, 81.733, 149.324)), ('D', '156', 1, 'side-chain clash\nDihedral angle:CA:C\nDihedral angle:N:CA', (129.448, 84.67599999999999, 151.67)), ('D', '157', 1, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (132.272, 86.718, 153.053)), ('D', '158', 1, 'backbone clash\nDihedral angle:N:CA', (131.137, 90.256, 153.89700000000002)), ('D', '159', 1, 'smoc Outlier', (130.612, 90.77499999999999, 157.637)), ('D', '160', 1, 'side-chain clash\ncablam Outlier', (131.998, 95.036, 159.937)), ('D', '161', 1, 'side-chain clash\nbackbone clash\nDihedral angle:CA:C', (127.25, 94.537, 161.48800000000003)), ('D', '162', 1, 'side-chain clash\nDihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (123.887, 96.167, 161.636)), ('D', '164', 1, 'backbone clash', (127.57, 98.28, 161.014)), ('D', '165', 1, 'side-chain clash', (128.868, 97.453, 161.875)), ('D', '166', 1, 'side-chain clash', (131.998, 95.036, 159.937)), ('D', '183', 1, 'side-chain clash', (122.569, 95.161, 163.607)), ('D', '184', 1, 'side-chain clash', (126.928, 92.982, 161.464)), ('D', '186', 1, 'side-chain clash', (127.321, 86.414, 154.308)), ('D', '187', 1, 'side-chain clash\nbackbone clash', (129.974, 90.147, 150.631)), ('D', '85', 2, 'side-chain clash', (94.357, 87.944, 149.891)), ('D', '86', 2, 'smoc Outlier', (92.065, 88.225, 148.389)), ('D', '87', 2, 'smoc Outlier', (94.66799999999999, 88.91100000000002, 145.692)), ('D', '89', 2, 'side-chain clash', (94.357, 87.944, 149.891)), ('D', '103', 3, 'side-chain clash\nsmoc Outlier', (106.385, 80.703, 144.229)), ('D', '95', 3, 'side-chain clash', (105.068, 82.708, 142.653)), ('D', '98', 3, 'side-chain clash', (103.683, 79.827, 140.474)), ('D', '90', 4, 'side-chain clash\nsmoc Outlier', (95.713, 81.908, 146.468)), ('D', '93', 4, 'side-chain clash', (95.713, 81.908, 146.468)), ('D', '96', 4, 'side-chain clash', (97.098, 77.258, 147.974)), ('D', '121', 5, 'side-chain clash', (121.867, 84.701, 140.633)), ('D', '190', 5, 'side-chain clash', (121.867, 84.701, 140.633)), ('D', '100', 6, 'side-chain clash\nDihedral angle:N:CA', (109.459, 74.053, 144.23399999999998)), ('D', '99', 6, 'Dihedral angle:CA:C\ncablam Outlier', (105.91000000000001, 73.283, 145.23899999999998)), ('D', '119', 7, 'side-chain clash', (114.519, 92.931, 142.799))]
data['omega'] = [('A', ' 505 ', 'PRO', None, (94.02500000000005, 119.369, 120.72499999999998)), ('B', ' 183 ', 'PRO', None, (115.94400000000005, 108.876, 132.082))]
data['rama'] = [('A', ' 250 ', 'ALA', 0.027577059136320782, (121.575, 112.54899999999998, 95.589))]
data['cablam'] = [('A', '213', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nBSSS-', (129.8, 107.2, 84.5)), ('A', '257', 'VAL', 'check CA trace,carbonyls, peptide', 'turn\n-STTS', (127.7, 126.0, 99.1)), ('A', '275', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---HH', (112.0, 128.6, 97.4)), ('A', '326', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTSSEE', (108.0, 122.9, 105.8)), ('A', '445', 'ASP', 'check CA trace,carbonyls, peptide', ' \n-B-SH', (107.2, 101.5, 130.1)), ('A', '485', 'GLY', ' beta sheet', ' \n-----', (80.3, 108.6, 95.0)), ('A', '502', 'ALA', 'check CA trace,carbonyls, peptide', ' \nS---T', (88.1, 113.4, 119.7)), ('A', '509', 'TRP', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (86.2, 118.5, 127.4)), ('A', '594', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTT', (78.5, 83.7, 108.3)), ('A', '606', 'TYR', 'check CA trace,carbonyls, peptide', 'helix\nHHHTT', (87.2, 80.3, 92.0)), ('A', '608', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-S', (86.4, 79.9, 86.2)), ('A', '677', 'PRO', 'check CA trace,carbonyls, peptide', ' \nE--S-', (107.2, 112.3, 108.4)), ('A', '679', 'GLY', 'check CA trace,carbonyls, peptide', ' \n-S---', (102.7, 106.9, 106.8)), ('A', '732', 'TYR', ' alpha helix', 'helix\nHHHS-', (105.7, 104.6, 77.7)), ('A', '734', 'ASN', 'check CA trace,carbonyls, peptide', ' \nHS-SS', (100.5, 107.9, 74.4)), ('A', '760', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (96.5, 94.4, 104.0)), ('A', '775', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (102.0, 86.0, 83.0)), ('A', '845', 'ASP', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (91.1, 93.3, 131.1)), ('A', '846', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (88.9, 94.4, 134.0)), ('A', '915', 'TYR', ' alpha helix', 'turn\nTSTTS', (75.3, 80.5, 112.2)), ('A', '151', 'CYS', 'check CA trace', 'bend\nTTSS-', (130.4, 102.2, 99.1)), ('A', '400', 'ALA', 'check CA trace', ' \n---SS', (106.2, 122.7, 124.7)), ('A', '504', 'PHE', 'check CA trace', 'turn\n--TTT', (94.0, 116.9, 120.6)), ('A', '547', 'ALA', 'check CA trace', 'bend\n--S-B', (95.0, 94.1, 124.2)), ('A', '607', 'SER', 'check CA trace', 'turn\nHHTT-', (85.0, 81.8, 89.2)), ('A', '678', 'GLY', 'check CA trace', 'bend\n--S--', (104.7, 110.1, 106.6)), ('A', '733', 'ARG', 'check CA trace', 'bend\nHHS-S', (104.0, 106.2, 74.6)), ('B', '145', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (127.7, 125.0, 133.2)), ('B', '98', 'LEU', 'check CA trace', 'turn\nHTT--', (102.7, 135.4, 124.3)), ('C', '24', 'SER', ' three-ten', 'helix-3\nGGGSH', (107.4, 105.1, 141.3)), ('D', '99', 'ASP', 'check CA trace,carbonyls, peptide', ' \nHH--H', (105.9, 73.3, 145.2)), ('D', '160', 'VAL', 'check CA trace,carbonyls, peptide', ' \n----S', (130.3, 94.2, 159.3)), ('D', '162', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (123.9, 96.2, 161.6))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-30226/7bw4/Model_validation_1/validation_cootdata/molprobity_probe7bw4_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

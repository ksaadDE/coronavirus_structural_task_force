# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 330 ', 'ILE', 0.03394118170040427, (209.63101, 172.45901, 246.64401)), ('B', '1073 ', 'PHE', 0.049404625265991264, (234.40501, 203.8350100000001, 149.88701)), ('C', ' 142 ', 'ASP', 0.036818774504904825, (242.50601000000012, 272.92101000000025, 245.02101)), ('C', ' 322 ', 'GLU', 0.020952807040962945, (194.74801, 248.27601, 231.50900999999996)), ('C', ' 618 ', 'VAL', 0.0194906, (199.15401000000003, 249.66401, 212.35301000000004))]
data['omega'] = []
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' C  65  PHE  O  ', ' C 262  ALA  HA ', -0.931, (230.773, 271.392, 227.663)), (' A  64  TRP  HE1', ' A 262  ALA  HB1', -0.785, (151.397, 202.591, 230.25)), (' A 553  SER  HB3', ' A 584  ASP  HB2', -0.747, (206.105, 173.62, 220.69)), (' C 126  VAL HG13', ' C 172  PRO  HA ', -0.737, (245.467, 257.833, 236.991)), (' C 136  CYS  H  ', ' C 157  VAL  HB ', -0.714, (232.075, 269.11, 249.456)), (' A  65  PHE  O  ', ' A 262  ALA  HA ', -0.704, (151.409, 202.372, 233.148)), (' A 982  LEU HD13', ' A 986  GLU  HG2', -0.687, (204.754, 224.812, 239.851)), (' B  65  PHE  O  ', ' B 262  ALA  HA ', -0.686, (252.072, 171.809, 234.912)), (' B 415  LYS  NZ ', ' B 453  LEU  O  ', -0.684, (207.385, 237.932, 259.815)), (' A 390  PHE  HD1', ' A 515  LEU  HB2', -0.683, (216.306, 191.791, 254.677)), (' B 723  GLU  OE2', ' B1062  HIS  NE2', -0.683, (214.451, 197.904, 178.079)), (' B  46  SER  HA ', ' B 277  TYR  O  ', -0.659, (222.441, 177.651, 214.037)), (' B 126  VAL HG13', ' B 172  PRO  HA ', -0.657, (232.47, 165.768, 243.051)), (' C 984  PRO  O  ', ' C 987  ALA  N  ', -0.657, (225.578, 211.866, 237.711)), (' C 483  GLY  H  ', ' C 486  CYS  HB2', -0.652, (188.342, 185.431, 268.828)), (' C  64  TRP  HE1', ' C 262  ALA  HB1', -0.645, (231.913, 271.701, 225.576)), (' C 316  PHE  HZ ', ' C 613  VAL HG21', -0.644, (199.536, 243.286, 210.792)), (' A 516  LEU HD23', ' A 518  ALA  H  ', -0.641, (224.674, 190.179, 251.685)), (' A 325  VAL HG12', ' A 540  ASN  HB3', -0.639, (202.361, 182.403, 237.11)), (' A 409  ALA  HB3', ' A 412  GLN  HG3', -0.636, (208.358, 195.046, 275.358)), (' B1085  ALA  HB2', ' B1124  CYS  HB3', -0.632, (225.403, 220.859, 140.678)), (' B 476  LYS  NZ ', ' B 482  GLU  O  ', -0.628, (200.063, 253.662, 265.879)), (' A 344  ARG HH22', ' A 346  ALA  HA ', -0.622, (218.886, 175.196, 278.429)), (' A 349  TYR  OH ', ' A 450  ARG  NH1', -0.619, (223.31, 179.973, 285.328)), (' C 424  PRO  HG2', ' C 427  PHE  HB2', -0.604, (193.864, 213.952, 246.275)), (' A 410  PRO  HB3', ' A 425  ASP  HA ', -0.602, (211.981, 198.748, 270.162)), (' A 401  ARG  HB2', ' A 404  GLU  HG3', -0.602, (208.882, 185.841, 284.481)), (' A 347  SER  OG ', ' A 450  ARG  O  ', -0.601, (218.651, 181.285, 283.147)), (' A 450  ARG  HG2', ' A 492  SER  HA ', -0.601, (218.836, 179.339, 288.85)), (' C 355  ARG  NH2', ' C 394  TYR  OH ', -0.601, (180.085, 216.807, 247.911)), (' A 705  TYR  HB3', ' B 790  PRO  HG3', -0.593, (196.624, 182.762, 164.538)), (' C 415  LYS  NZ ', ' C 453  LEU  O  ', -0.588, (196.113, 197.467, 260.918)), (' B 565  ARG  HD3', ' B 569  ASP  HA ', -0.588, (233.488, 229.154, 222.202)), (' A1026  LYS  NZ ', ' A1040  PHE  O  ', -0.586, (200.78, 212.048, 178.633)), (' B 442  LYS  HG3', ' B 446  ASN HD22', -0.583, (224.324, 234.719, 276.211)), (' B 224  LEU  HG ', ' B 225  VAL HG23', -0.583, (228.929, 172.095, 238.96)), (' B  25  PRO  HD2', ' B  66  HIS  HB3', -0.582, (257.618, 172.566, 235.772)), (' A 981  ARG  HG2', ' C 380  VAL HG12', -0.58, (196.191, 226.031, 241.582)), (' B 761  LEU HD22', ' B1006  VAL HG21', -0.58, (204.282, 205.755, 211.804)), (' A 356  ILE  HB ', ' A 393  VAL  HB ', -0.58, (216.273, 181.63, 259.809)), (' B 894  ILE HD12', ' B 895  PRO  HD2', -0.578, (199.174, 191.215, 157.647)), (' A 390  PHE  HA ', ' A 515  LEU HD13', -0.574, (216.026, 189.291, 253.085)), (' B 199  PHE  HB3', ' B 227  LEU  HB2', -0.572, (229.48, 179.528, 243.998)), (' C  25  PRO  HD2', ' C  66  HIS  HB3', -0.571, (228.061, 275.895, 227.255)), (' A 894  ILE HD12', ' A 895  PRO  HD2', -0.571, (196.888, 228.018, 155.799)), (' B 424  PRO  HG2', ' B 427  PHE  HB2', -0.569, (221.627, 230.564, 244.86)), (' B 704  ALA  HB2', ' Y   2  NAG  H62', -0.567, (242.345, 206.527, 160.52)), (' B 344  ARG  NH1', ' B 449  TYR  OH ', -0.567, (226.902, 236.007, 269.447)), (' C 566  ASP  OD1', ' C 570  THR  OG1', -0.566, (187.192, 227.786, 219.233)), (' C  99  ASN  O  ', ' C 102  ARG  NH1', -0.565, (243.223, 267.84, 234.595)), (' B 351  TRP  O  ', ' B 464  ARG  NH2', -0.564, (225.553, 240.839, 256.158)), (' A 391  THR  HA ', ' A 520  ALA  HA ', -0.562, (218.439, 186.194, 251.76)), (' C1051  PRO  O  ', ' C1052  GLN  NE2', -0.562, (231.73, 219.893, 176.37)), (' A 128  ILE HG21', ' A 227  LEU HD21', -0.556, (165.95, 217.377, 246.524)), (' C 514  GLU  OE1', ' C 517  HIS  ND1', -0.556, (185.824, 221.432, 238.775)), (' K   1  NAG  H3 ', ' K   1  NAG  H83', -0.552, (200.956, 179.085, 151.839)), (' B 325  VAL HG23', ' B 540  ASN  HB3', -0.551, (245.841, 221.106, 235.722)), (' B 314  SER  OG ', ' B 315  ASN  N  ', -0.546, (236.187, 202.227, 214.483)), (' R   2  NAG  H3 ', ' R   2  NAG  H83', -0.546, (226.754, 190.127, 258.481)), (' C1123  ASN  ND2', ' C1125  ASP  OD2', -0.546, (182.669, 215.94, 139.903)), (' C 609  LEU HD12', ' C 648  LEU HD13', -0.546, (203.934, 245.636, 200.785)), (' B 455  ARG  NH1', ' B 458  ASN  O  ', -0.546, (210.464, 241.857, 250.229)), (' A 768  ILE HD11', ' A1010  LEU HD23', -0.545, (209.633, 220.738, 202.085)), (' B 705  TYR  HB3', ' C 790  PRO  HG3', -0.545, (239.399, 213.745, 161.73)), (' C 344  ARG  NH2', ' C 449  TYR  OH ', -0.545, (189.598, 214.875, 271.318)), (' A1123  ASN  ND2', ' A1125  ASP  OD2', -0.544, (214.916, 183.276, 140.317)), (' A 108  THR  O  ', ' A 235  ARG  NH1', -0.544, (165.596, 199.015, 250.266)), (' B 724  ILE HG12', ' B1059  VAL HG22', -0.541, (214.351, 191.393, 185.209)), (' B 197  GLY  HA2', ' B 230  GLY  HA2', -0.536, (229.096, 186.862, 246.993)), (' B1072  ASN  OD1', ' C 893  GLN  NE2', -0.536, (236.372, 204.709, 155.938)), (' A 903  ARG  NH1', ' A1047  LEU  O  ', -0.533, (197.546, 218.281, 166.78)), (' C 820  LEU HD22', ' C 943  LEU HD21', -0.533, (228.683, 227.242, 184.796)), (' A 483  GLY  H  ', ' A 486  CYS  HB2', -0.532, (229.795, 189.474, 298.992)), (' A 603  SER  OG ', ' A 604  ASN  N  ', -0.528, (170.831, 200.012, 202.967)), (' C 455  ARG  NH1', ' C 465  ASP  OD2', -0.528, (186.358, 199.148, 255.947)), (' A 807  PRO  O  ', ' A 812  LYS  NZ ', -0.528, (183.539, 240.338, 179.49)), (' C 342  ALA  HB3', ' C 345  PHE  HE1', -0.527, (186.528, 221.458, 265.574)), (' C 771  GLU  OE2', ' C1017  ARG  NH1', -0.526, (218.327, 207.871, 195.955)), (' B 208  ILE HG13', ' B 210  LEU  H  ', -0.521, (245.388, 164.364, 222.866)), (' C  97  LYS  HE3', ' C 185  LYS  HD2', -0.52, (241.749, 270.61, 220.767)), (' C 201  ILE  HB ', ' C 225  VAL HG12', -0.52, (237.433, 250.997, 235.316)), (' C 293  PRO  O  ', ' C 297  THR HG23', -0.518, (215.581, 245.285, 207.651)), (' C 399  VAL HG22', ' C 507  ARG  HG2', -0.518, (192.513, 217.654, 266.726)), (' C 195  ILE  HB ', ' C 200  LYS  HZ1', -0.517, (227.951, 244.178, 236.006)), (' C1048  MET  HE2', ' C1050  PHE  CE1', -0.516, (228.191, 219.677, 168.125)), (' A 727  VAL HG22', ' A1057  GLY  HA2', -0.515, (197.668, 222.94, 188.729)), (' C  31  SER  HB3', ' C  60  SER  H  ', -0.514, (223.311, 258.452, 219.269)), (' B 720  VAL HG22', ' B1063  VAL HG22', -0.511, (215.516, 190.163, 171.093)), (' B1051  PRO  O  ', ' B1052  GLN  NE2', -0.507, (206.558, 187.859, 179.29)), (' C1026  LYS  NZ ', ' C1040  PHE  O  ', -0.506, (215.453, 218.947, 177.83)), (' B 727  VAL HG22', ' B1057  GLY  HA2', -0.504, (206.825, 194.827, 189.904)), (' A 399  VAL HG22', ' A 507  ARG  HG2', -0.504, (211.001, 176.727, 277.572)), (' A 424  PRO  HG2', ' A 427  PHE  HB2', -0.502, (215.639, 195.206, 267.939)), (' A 722  THR HG23', ' A 932  ILE HD11', -0.501, (187.446, 214.908, 178.579)), (' A 984  PRO  O  ', ' A 987  ALA  N  ', -0.5, (207.185, 225.806, 237.996)), (' B 450  ARG  HA ', ' B 492  SER  HA ', -0.5, (215.777, 238.83, 268.123)), (' C 109  THR  OG1', ' C 111  ASP  OD1', -0.5, (224.104, 260.703, 251.885)), (' A 390  PHE  CD1', ' A 515  LEU  HB2', -0.498, (215.659, 191.837, 255.228)), (' A 440  ASP  O  ', ' A 446  ASN  ND2', -0.498, (211.693, 172.682, 284.524)), (' B 984  PRO  HG2', ' B 985  PRO  HD3', -0.493, (201.841, 204.907, 243.574)), (' B 292  ASP  N  ', ' B 292  ASP  OD1', -0.492, (241.916, 189.613, 214.043)), (' B 121  ASN  ND2', ' B 174  LEU  H  ', -0.492, (235.971, 165.279, 240.642)), (' C 986  GLU  N  ', ' C 986  GLU  OE1', -0.491, (223.985, 213.043, 240.739)), (' A 929  ILE  O  ', ' A 932  ILE HG22', -0.491, (182.785, 218.225, 175.03)), (' A 424  PRO  HD3', ' A 461  PRO  HB3', -0.491, (218.244, 194.665, 270.263)), (' C 401  ARG  NH1', ' C 502  GLY  O  ', -0.49, (204.474, 209.202, 267.493)), (' B  83  VAL HG11', ' B 235  ARG HH21', -0.49, (248.799, 183.739, 248.195)), (' C 714  THR  OG1', ' C1069  GLN  O  ', -0.49, (212.14, 235.767, 154.754)), (' A 565  ARG  HD3', ' A 569  ASP  HA ', -0.489, (215.8, 186.396, 222.414)), (' C 210  LEU HD23', ' C 211  VAL  N  ', -0.488, (235.269, 269.645, 215.466)), (' B 661  ASP  N  ', ' B 661  ASP  OD1', -0.488, (238.155, 196.108, 190.435)), (' B 452  ARG  HG3', ' B 489  PRO  HB2', -0.488, (210.882, 242.998, 260.637)), (' C 297  THR HG21', ' C 595  VAL HG21', -0.487, (215.073, 243.738, 205.45)), (' A 558  LEU  HG ', ' A 559  PRO  HD2', -0.487, (221.897, 169.192, 225.933)), (' C 401  ARG  HD2', ' C 503  TYR  HD1', -0.486, (202.581, 208.044, 269.718)), (' C 227  LEU  HB3', ' C 229  ILE HG12', -0.484, (234.489, 248.222, 243.09)), (' C 528  SER  OG ', ' C 529  THR  N  ', -0.484, (184.548, 244.304, 239.227)), (' C 326  ARG  NH1', ' C 578  GLN  OE1', -0.483, (180.082, 244.171, 237.048)), (' C 347  SER  OG ', ' C 450  ARG  O  ', -0.482, (189.23, 206.969, 266.022)), (' A 392  ASN  OD1', ' A 514  GLU  HB3', -0.481, (219.818, 188.351, 258.874)), (' C 316  PHE  CZ ', ' C 613  VAL HG21', -0.481, (199.947, 243.178, 211.314)), (' B 388  LEU HD11', ' C 981  ARG  HG2', -0.48, (233.384, 221.424, 239.934)), (' A 609  LEU HD12', ' A 648  LEU HD12', -0.48, (185.635, 190.561, 203.379)), (' A1041  CYS  HB2', ' A1062  HIS  CE1', -0.479, (197.605, 214.563, 175.738)), (' A  31  SER  HB3', ' A  60  SER  H  ', -0.478, (165.892, 201.558, 223.465)), (' A 794  ASP  N  ', ' A 794  ASP  OD1', -0.477, (185.891, 232.376, 160.27)), (' A 768  ILE  O  ', ' A 772  GLN  HG2', -0.475, (205.467, 225.182, 197.678)), (' A 451  TYR  CZ ', ' A 491  GLN  HB2', -0.475, (217.002, 184.413, 290.365)), (' B 317  ARG  HG2', ' B 590  PHE  HB2', -0.475, (239.52, 209.544, 216.339)), (' C 740  ILE HD11', ' C 751  LEU HD22', -0.475, (225.792, 208.349, 221.833)), (' A 892  LEU  HB3', ' C 711  ALA  HB3', -0.475, (203.031, 232.238, 158.503)), (' B  64  TRP  HE1', ' B 262  ALA  HB1', -0.473, (252.071, 170.327, 232.558)), (' C 380  VAL HG21', ' C 385  LEU HD21', -0.473, (195.076, 226.907, 246.709)), (' C 431  VAL HG23', ' C 510  VAL HG12', -0.472, (195.512, 218.053, 255.707)), (' A 389  CYS  HB2', ' A 523  CYS  HB3', -0.472, (212.033, 184.339, 253.166)), (' A 895  PRO  HG2', ' A 898  MET  SD ', -0.471, (195.205, 226.673, 154.14)), (' C 416  ILE  HA ', ' C 420  ASN HD22', -0.471, (195.268, 204.705, 259.122)), (' B 584  ASP  N  ', ' B 584  ASP  OD1', -0.471, (248.927, 227.283, 220.143)), (' C  81  ASN  HB2', ' C 237  GLN HE21', -0.47, (229.472, 269.612, 240.289)), (' A 355  ARG  HE ', ' A 392  ASN  HB2', -0.469, (221.615, 183.419, 258.26)), (' A 576  ASP  N  ', ' A 576  ASP  OD1', -0.469, (208.102, 171.642, 231.689)), (' A 876  LEU  HA ', ' A 879  THR HG22', -0.468, (195.521, 227.199, 171.635)), (' C 807  PRO  O  ', ' C 812  LYS  NZ ', -0.468, (248.72, 219.718, 178.263)), (' C 100  ILE HG22', ' C 240  LEU HD12', -0.466, (238.313, 271.788, 234.815)), (' A 784  LYS  HG3', ' A 785  GLN  HG3', -0.466, (205.527, 236.396, 171.924)), (' B1026  LYS  NZ ', ' B1040  PHE  O  ', -0.464, (213.881, 202.282, 178.564)), (' B 739  TYR  CE1', ' B 964  LEU HD21', -0.464, (207.725, 196.5, 218.814)), (' C 131  CYS  HB2', ' C 133  PHE  CZ ', -0.463, (235.847, 257.94, 251.623)), (' A 166  PHE  HE1', ' A 168  TYR  HB2', -0.463, (167.161, 221.092, 248.426)), (' B 112  SER  N  ', ' B 134  GLN  OE1', -0.463, (242.478, 182.231, 259.727)), (' B  31  SER  HB3', ' B  60  SER  H  ', -0.462, (245.265, 182.374, 223.731)), (' A 292  ASP  N  ', ' A 292  ASP  OD1', -0.461, (175.211, 199.754, 215.568)), (' A 112  SER  HA ', ' A 132  GLU  HB3', -0.46, (165.423, 207.285, 259.191)), (' C 401  ARG  HD2', ' C 503  TYR  CD1', -0.46, (203.023, 208.065, 269.42)), (' C 823  LYS  HE3', ' C 936  LEU  O  ', -0.46, (230.857, 233.94, 183.183)), (' B 536  CYS  HB2', ' B 588  CYS  HB3', -0.459, (247.289, 214.51, 219.773)), (' A 210  LEU HD23', ' A 211  VAL  N  ', -0.457, (149.712, 206.636, 220.503)), (' A 724  ILE HG12', ' A1059  VAL HG22', -0.455, (191.151, 218.124, 184.764)), (' B 740  ILE HG22', ' B 998  ARG  HB3', -0.454, (206.834, 201.512, 221.696)), (' A 375  PHE  CD1', ' A 432  ILE HG12', -0.454, (205.032, 183.089, 267.138)), (' C  97  LYS  HG3', ' C 185  LYS  N  ', -0.454, (242.948, 270.366, 223.497)), (' A  83  VAL HG11', ' A 235  ARG HH21', -0.453, (162.07, 198.631, 247.827)), (' A 454  PHE  HB3', ' A 471  TYR  CD2', -0.453, (225.014, 192.502, 291.768)), (' A 987  ALA  O  ', ' A 991  ILE HG12', -0.452, (205.962, 225.705, 233.772)), (' A 536  CYS  HB2', ' A 588  CYS  HB3', -0.451, (194.837, 182.265, 222.448)), (' A 986  GLU  O  ', ' A 990  GLN  HG2', -0.45, (205.142, 222.481, 236.615)), (' A 983  ASP  OD2', ' A 985  PRO  HD2', -0.448, (207.697, 228.361, 243.353)), (' A 904  PHE  CD2', ' A 914  LEU  HB2', -0.448, (192.104, 214.813, 157.154)), (' B 739  TYR  HD2', ' B 740  ILE HG23', -0.447, (204.398, 200.738, 220.135)), (' A 351  TRP  CZ2', ' A 464  ARG  HB2', -0.447, (223.283, 186.238, 274.254)), (' A 101  ILE HD13', ' A 240  LEU  HG ', -0.447, (151.305, 208.267, 240.096)), (' A 297  THR  OG1', ' A 595  VAL HG21', -0.447, (182.002, 200.625, 208.899)), (' A 125  ASN HD22', ' A 169  VAL HG13', -0.447, (157.743, 224.639, 248.133)), (' B 558  LEU  H  ', ' B 561  GLN  HG3', -0.445, (244.041, 240.319, 223.406)), (' A 731  LYS  HD2', ' A 769  ALA  HB1', -0.444, (204.633, 230.153, 199.252)), (' A 353  ARG  NH2', ' A 396  ASP  OD2', -0.443, (218.816, 186.485, 269.331)), (' B  81  ASN  HB3', ' B 237  GLN  NE2', -0.443, (250.047, 175.532, 245.92)), (' A 427  PHE  HE1', ' A 512  SER  HB2', -0.443, (214.69, 189.789, 265.975)), (' B 305  THR  HA ', ' B 600  THR HG21', -0.442, (233.485, 183.953, 204.382)), (' A1027  MET  HB2', ' A1060  PHE  HZ ', -0.442, (200.235, 220.617, 180.068)), (' B 121  ASN HD22', ' B 174  LEU HD12', -0.441, (236.85, 166.342, 240.568)), (' B  46  SER  CA ', ' B 277  TYR  O  ', -0.441, (221.889, 177.256, 214.587)), (' A 403  ASP  N  ', ' A 502  GLY  O  ', -0.44, (204.741, 185.139, 284.868)), (' A 168  TYR  HE1', ' A 170  SER  HB2', -0.438, (163.915, 224.302, 243.936)), (' A 764  ALA  O  ', ' A 768  ILE HG12', -0.436, (209.202, 224.529, 203.004)), (' A 984  PRO  HA ', ' A 987  ALA  HB3', -0.436, (206.681, 228.473, 238.024)), (' A 208  ILE  HA ', ' A 208  ILE HD12', -0.435, (152.411, 214.765, 220.272)), (' C 768  ILE HD11', ' C1010  LEU HD23', -0.435, (219.549, 209.993, 202.78)), (' C 794  ASP  N  ', ' C 794  ASP  OD1', -0.435, (239.704, 219.293, 158.517)), (' A 640  VAL HG13', ' A 649  ILE HG22', -0.434, (181.132, 185.271, 208.585)), (' B 102  ARG  HA ', ' B 102  ARG  HD3', -0.433, (241.598, 165.304, 243.742)), (' A 977  ASP  O  ', ' A 981  ARG  HB2', -0.433, (196.793, 227.691, 237.681)), (' C1041  CYS  HB2', ' C1062  HIS  CE1', -0.432, (219.063, 220.127, 174.48)), (' B 615  CYS  HB2', ' B 647  CYS  HB3', -0.43, (248.612, 207.568, 205.352)), (' B 527  LYS  HB3', ' B 527  LYS  HE3', -0.428, (253.444, 220.26, 243.683)), (' B 401  ARG  HD3', ' B 493  TYR  CD1', -0.428, (214.721, 232.353, 267.85)), (' C 141  LEU  O  ', ' C 142  ASP  HB2', -0.428, (242.589, 271.164, 246.146)), (' C 204  LYS  NZ ', ' C 219  SER  OG ', -0.428, (239.485, 253.567, 219.654)), (' A 864  THR HG22', ' A 867  MET  SD ', -0.427, (196.745, 237.574, 188.637)), (' A 710  ILE HD11', ' A1094  VAL HG12', -0.427, (195.432, 193.709, 152.888)), (' B1048  MET  HE2', ' B1050  PHE  CZ ', -0.427, (208.457, 190.453, 169.603)), (' B 420  ASN HD21', ' B 452  ARG  H  ', -0.427, (214.574, 239.612, 261.121)), (' B 391  THR HG22', ' B 514  GLU  OE2', -0.427, (235.608, 233.056, 239.549)), (' B 188  ARG  HB3', ' B 190  PHE  HE1', -0.427, (239.264, 169.201, 235.076)), (' C  64  TRP  CZ2', ' C  66  HIS  HB2', -0.426, (229.774, 273.897, 225.04)), (' B 920  LEU HD11', ' B 924  GLN HE21', -0.426, (222.871, 185.758, 160.695)), (' C 389  CYS  HA ', ' C 523  CYS  HA ', -0.426, (186.821, 231.879, 244.049)), (' A 737  THR  O  ', ' A 741  CYS  HB2', -0.425, (205.054, 231.481, 222.252)), (' B 168  TYR  CE1', ' B 170  SER  HB2', -0.423, (226.731, 169.267, 245.337)), (' C 984  PRO  HA ', ' C 987  ALA  HB3', -0.423, (227.673, 211.465, 237.754)), (' C 325  VAL  H  ', ' C 529  THR HG22', -0.423, (188.173, 244.316, 236.527)), (' B 784  LYS  HG3', ' B 785  GLN  HG3', -0.423, (189.492, 194.596, 174.581)), (' B 227  LEU  HB3', ' B 229  ILE HG12', -0.422, (228.47, 180.697, 246.74)), (' C 344  ARG  HE ', ' C 345  PHE  H  ', -0.421, (187.119, 216.638, 269.175)), (' C  46  SER  HA ', ' C 277  TYR  O  ', -0.42, (237.141, 238.769, 211.636)), (' B 549  VAL HG22', ' B 586  THR  O  ', -0.42, (246.192, 219.047, 218.767)), (' C 210  LEU HD22', ' C 213  ASP  O  ', -0.419, (233.597, 267.272, 217.05)), (' C 530  ASN  OD1', ' C 531  LEU  N  ', -0.419, (183.3, 248.265, 233.215)), (' C 310  ILE HG13', ' C 595  VAL  O  ', -0.419, (210.472, 241.761, 201.501)), (' C 768  ILE  O  ', ' C 772  GLN  HG2', -0.419, (225.065, 210.07, 197.646)), (' Y   1  NAG  O3 ', ' Y   2  NAG  N2 ', -0.418, (242.944, 200.449, 158.051)), (' B 416  ILE  HB ', ' B 420  ASN  HB2', -0.418, (215.143, 235.409, 258.134)), (' A 979  LEU  HA ', ' A 979  LEU HD23', -0.418, (202.584, 229.729, 235.656)), (' B1121  SER  O  ', ' B1121  SER  OG ', -0.418, (219.718, 222.663, 143.404)), (' A 359  CYS  O  ', ' A 522  VAL  HA ', -0.417, (214.774, 179.801, 252.729)), (' B 352  ASN  O  ', ' B 396  ASP  HA ', -0.417, (228.041, 236.01, 255.71)), (' C 279  GLU  H  ', ' C 279  GLU  HG2', -0.417, (241.844, 241.113, 210.14)), (' C 170  SER  OG ', ' C 171  GLN  N  ', -0.416, (247.475, 252.394, 238.232)), (' C 983  ASP  OD1', ' C 984  PRO  HD2', -0.416, (229.124, 210.459, 242.57)), (' B 764  ALA  O  ', ' B 768  ILE HG23', -0.416, (201.224, 204.958, 204.203)), (' C1114  THR HG22', ' C1116  ASP  H  ', -0.415, (205.134, 216.639, 137.467)), (' B1080  CYS  SG ', ' B1130  ILE HD12', -0.415, (230.104, 220.608, 139.61)), (' C 610  TYR  HB2', ' C 647  CYS  SG ', -0.415, (200.679, 246.38, 207.241)), (' A 790  PRO  HG3', ' C 705  TYR  HB3', -0.415, (191.84, 234.982, 162.533)), (' B 904  PHE  CE2', ' B 914  LEU HD13', -0.414, (214.09, 192.036, 159.018)), (' A 823  LYS  HB2', ' A 823  LYS  HE2', -0.414, (181.282, 220.4, 188.417)), (' A 778  GLU  O  ', ' A 782  GLN  NE2', -0.414, (205.978, 225.952, 181.76)), (' A 863  LEU  HA ', ' A 863  LEU HD23', -0.414, (199.967, 235.87, 189.235)), (' C 936  LEU  HA ', ' C 936  LEU HD23', -0.413, (228.396, 233.081, 181.618)), (' B 983  ASP  N  ', ' B 983  ASP  OD1', -0.412, (206.155, 201.731, 244.155)), (' A 121  ASN  ND2', ' A 173  PHE  H  ', -0.411, (157.174, 219.719, 240.45)), (' C 102  ARG  HG3', ' C 241  ALA  HB2', -0.411, (241.893, 269.349, 239.333)), (' C 456  LYS  HB2', ' C 456  LYS  HE2', -0.41, (187.797, 191.814, 255.735)), (' C 344  ARG  HE ', ' C 345  PHE  N  ', -0.41, (186.79, 216.311, 269.388)), (' A 454  PHE  HB2', ' A 489  PRO  HA ', -0.41, (223.927, 189.109, 290.56)), (' C 903  ARG  NH1', ' C1047  LEU  O  ', -0.41, (221.732, 216.708, 165.656)), (' A 538  ASN  HB3', ' A 547  THR HG22', -0.409, (198.341, 186.314, 230.138)), (' B 986  GLU  O  ', ' B 990  GLN  HG2', -0.409, (209.006, 204.189, 237.432)), (' B 210  LEU HD23', ' B 211  VAL  N  ', -0.409, (250.157, 166.333, 222.818)), (' B1088  PRO  HD3', ' B1093  PHE  CE2', -0.409, (223.3, 213.102, 145.953)), (' C 121  ASN HD21', ' C 174  LEU  H  ', -0.409, (244.679, 259.912, 234.222)), (' A 408  ILE HD11', ' A 416  ILE HG22', -0.408, (214.465, 189.049, 279.251)), (' C 130  VAL  O  ', ' C 164  CYS  HB2', -0.407, (235.188, 253.384, 252.213)), (' A 374  THR  HB ', ' A 433  ALA  HB3', -0.407, (204.188, 184.079, 274.517)), (' A 360  VAL HG23', ' A 523  CYS  O  ', -0.407, (210.446, 179.018, 251.443)), (' A 375  PHE  HD1', ' A 432  ILE HG12', -0.407, (204.446, 182.886, 267.262)), (' C 713  PRO  HA ', ' C1070  GLU  HA ', -0.407, (209.235, 234.126, 156.208)), (' C1140  GLN  HB2', ' C1141  PRO  HD3', -0.406, (203.702, 217.87, 127.161)), (' A 639  ASN HD21', ' A 652  GLU  HG3', -0.406, (175.288, 183.896, 200.57)), (' A 981  ARG  HD2', ' C 515  LEU HD11', -0.406, (193.39, 225.526, 239.772)), (' A  19  ARG  HG3', ' A  20  THR HG23', -0.406, (140.329, 195.781, 248.866)), (' B 804  LEU HD23', ' B 876  LEU HD23', -0.405, (203.854, 184.078, 174.592)), (' C1071  LYS  HB3', ' C1071  LYS  HE2', -0.405, (205.673, 237.025, 150.868)), (' A 610  TYR  HB2', ' A 647  CYS  SG ', -0.404, (186.74, 187.33, 210.291)), (' A1027  MET  HB2', ' A1060  PHE  CZ ', -0.403, (200.188, 220.665, 179.976)), (' C 662  ILE  H  ', ' C 662  ILE HG13', -0.403, (212.72, 242.551, 192.946)), (' B 105  ILE HD11', ' B 239  LEU HD21', -0.403, (244.243, 173.718, 249.829)), (' A 391  THR HG22', ' A 514  GLU  O  ', -0.402, (219.06, 188.94, 255.817)), (' A 342  ALA  HB3', ' A 345  PHE  HE1', -0.402, (213.612, 173.128, 272.151)), (' A 431  VAL HG22', ' A 510  VAL HG22', -0.401, (210.653, 187.247, 270.75)), (' C 297  THR  CG2', ' C 595  VAL HG21', -0.401, (214.899, 243.471, 205.878)), (' C  87  ASN  HB3', ' C  88  ASP  H  ', -0.401, (220.514, 254.462, 233.67)), (' C  40  ASP  N  ', ' C  40  ASP  OD1', -0.401, (233.504, 240.168, 225.277)), (' A 971  ILE HD12', ' A 981  ARG  NH2', -0.401, (197.094, 222.034, 238.468)), (' C 396  ASP  HB2', ' C 510  VAL HG22', -0.4, (190.053, 216.077, 255.231)), (' C 536  CYS  HB2', ' C 588  CYS  HB3', -0.4, (193.167, 244.357, 220.696)), (' A 639  ASN  N  ', ' A 639  ASN  OD1', -0.4, (175.23, 184.032, 205.128)), (' B 768  ILE  O  ', ' B 772  GLN  HG2', -0.4, (201.895, 200.686, 199.269))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

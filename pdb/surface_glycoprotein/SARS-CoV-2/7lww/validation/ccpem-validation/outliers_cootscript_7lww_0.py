
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' A1032  CYS  CB ', ' A1043  CYS  HG ', -0.642, (152.466, 165.865, 193.985)), (' A1032  CYS  HB2', ' A1043  CYS  HG ', -0.606, (152.98, 166.268, 193.948)), (' B 709  ASN  O  ', ' B 710  ASN  HB2', -0.597, (173.174, 134.537, 213.748)), (' B 603  ASN  OD1', ' B1302  NAG  O7 ', -0.579, (197.496, 160.698, 169.055)), (' B1103  PHE  HZ ', ' I   1  NAG  H62', -0.543, (182.046, 147.385, 226.441)), (' B  95  THR  HG1', ' B 263  ALA  N  ', -0.538, (219.781, 155.659, 138.196)), (' C 925  ASN  C  ', ' C 927  PHE  H  ', -0.529, (153.65, 135.117, 203.59)), (' B 710  ASN  HB2', ' B1308  NAG  O7 ', -0.491, (173.646, 133.887, 214.748)), (' B 708  SER  OG ', ' B 711  SER  HB3', -0.479, (175.68, 135.395, 210.968)), (' B1032  CYS  SG ', ' B1043  CYS  SG ', -0.478, (170.353, 164.291, 193.19)), (' B1302  NAG  C1 ', ' B1302  NAG  O7 ', -0.46, (198.146, 160.674, 170.376)), (' C 921  LYS  HA ', ' C 921  LYS  HD3', -0.46, (156.939, 133.211, 209.894)), (' C 925  ASN  C  ', ' C 927  PHE  N  ', -0.415, (153.584, 134.943, 203.419)), (' C 231  ILE HD12', ' C 233  ILE HG22', -0.413, (139.376, 130.92, 122.43)), (' C 332  ILE  H  ', ' C 332  ILE HG12', -0.408, (122.996, 177.452, 126.696)), (' A1076  THR  HB ', ' A1097  SER  HB3', -0.404, (173.265, 183.716, 220.038)), (' B 711  SER  O  ', ' C 897  PRO  HD3', -0.402, (173.106, 139.939, 210.788)), (' C 431  GLY  HA2', ' C 515  PHE  CD2', -0.401, (141.882, 173.764, 123.646)), (' C1103  PHE  HZ ', ' N   1  NAG  H62', -0.4, (142.287, 150.434, 227.992)), (' C 926  GLN  HA ', ' C 929  SER  HB3', -0.4, (150.984, 134.501, 201.539))]
data['cbeta'] = [('A', ' 122 ', 'ASN', ' ', 0.26787216104739875, (130.37200000000007, 209.99299999999994, 124.707)), ('B', ' 234 ', 'ASN', ' ', 0.2712255459031708, (194.88200000000006, 150.942, 120.74499999999998)), ('B', ' 710 ', 'ASN', ' ', 0.36927174749426567, (173.14800000000005, 135.299, 215.493)), ('B', ' 745 ', 'ASP', ' ', 0.26177203729619203, (169.389, 182.968, 145.197)), ('C', ' 198 ', 'ASP', ' ', 0.3608177816014086, (146.35, 138.363, 129.39399999999998))]
data['smoc'] = [('A', 89, u'GLY', 0.7141546391856736, (150.41299999999998, 197.94899999999998, 133.02800000000002)), ('A', 130, u'VAL', 0.7667209289758449, (141.89000000000001, 198.429, 116.84700000000001)), ('A', 211, u'ASN', 0.8113609098917566, (133.159, 212.781, 150.872)), ('A', 215, u'ASP', 0.7818843784643659, (142.251, 213.899, 146.04299999999998)), ('A', 220, u'PHE', 0.7049023561897753, (140.059, 200.282, 150.654)), ('A', 240, u'THR', 0.7295968882635372, (143.68, 209.82200000000003, 127.765)), ('A', 267, u'VAL', 0.7251728679934971, (148.075, 207.589, 136.937)), ('A', 270, u'LEU', 0.5981755498502087, (151.505, 198.191, 138.372)), ('A', 279, u'TYR', 0.7366067129263217, (137.607, 188.097, 152.067)), ('A', 288, u'ALA', 0.7190080337448087, (144.971, 193.698, 152.029)), ('A', 291, u'CYS', 0.6568681385623796, (154.178, 192.108, 151.237)), ('A', 319, u'ARG', 0.7157915709269184, (170.2, 189.524, 149.835)), ('A', 327, u'VAL', 0.6980481455540752, (180.539, 187.66299999999998, 130.19299999999998)), ('A', 332, u'ILE', 0.8271573025856568, (189.71699999999998, 183.32200000000003, 120.112)), ('A', 338, u'PHE', 0.832845766084966, (181.447, 173.895, 109.99300000000001)), ('A', 345, u'THR', 0.8569191924666922, (181.523, 166.24399999999997, 98.459)), ('A', 350, u'VAL', 0.8216813931938717, (178.849, 154.04399999999998, 108.489)), ('A', 369, u'TYR', 0.7655773445709823, (169.829, 174.907, 114.092)), ('A', 414, u'GLN', 0.8117668036840818, (170.17, 152.05700000000002, 121.109)), ('A', 415, u'THR', 0.7595175121903884, (170.621, 148.43200000000002, 119.845)), ('A', 417, u'ASN', 0.8161410711693332, (173.288, 146.324, 113.548)), ('A', 423, u'TYR', 0.8043297782899945, (178.71599999999998, 153.24499999999998, 115.406)), ('A', 427, u'ASP', 0.722991500036509, (174.555, 156.429, 127.366)), ('A', 429, u'PHE', 0.7630168331318984, (176.21499999999997, 161.37800000000001, 125.29700000000001)), ('A', 442, u'ASP', 0.8269417172250914, (174.515, 159.258, 97.283)), ('A', 443, u'SER', 0.8251133650680612, (172.129, 157.142, 95.11)), ('A', 446, u'GLY', 0.81776463456383, (171.43200000000002, 150.34, 89.23700000000001)), ('A', 449, u'TYR', 0.827582580727808, (177.642, 150.004, 96.195)), ('A', 460, u'ASN', 0.8135253056875612, (179.256, 144.60299999999998, 120.142)), ('A', 475, u'ALA', 0.8092931904043311, (178.55100000000002, 132.08200000000002, 111.16)), ('A', 477, u'SER', 0.8000046135008184, (180.23499999999999, 124.968, 112.35499999999999)), ('A', 481, u'ASN', 0.8121077465536317, (190.10899999999998, 129.181, 106.248)), ('A', 484, u'LYS', 0.7850398496928102, (183.792, 132.563, 101.424)), ('A', 500, u'THR', 0.8053778749558054, (163.748, 155.42600000000002, 93.082)), ('A', 513, u'LEU', 0.7457443866342849, (178.67399999999998, 166.777, 117.1)), ('A', 517, u'LEU', 0.7256328283384149, (183.366, 169.874, 128.757)), ('A', 524, u'VAL', 0.7862142736933264, (185.483, 176.123, 121.081)), ('A', 552, u'LEU', 0.7897994192813927, (184.38600000000002, 188.70899999999997, 142.403)), ('A', 570, u'ALA', 0.6448900987823224, (178.511, 171.64299999999997, 147.89700000000002)), ('A', 571, u'ASP', 0.6253287977852837, (180.04399999999998, 171.621, 144.286)), ('A', 576, u'VAL', 0.8098074736713105, (188.003, 181.067, 138.94)), ('A', 590, u'CYS', 0.7490801183184334, (175.15200000000002, 187.87, 147.181)), ('A', 596, u'SER', 0.6510569440834375, (163.915, 188.853, 162.018)), ('A', 669, u'GLY', 0.6938192795251995, (171.93800000000002, 188.10999999999999, 176.448)), ('A', 697, u'MET', 0.6674637193601134, (168.65, 191.032, 180.17899999999997)), ('A', 713, u'ALA', 0.6268220700789643, (168.26, 182.787, 210.738)), ('A', 725, u'GLU', 0.5335801982129315, (150.547, 173.532, 187.97299999999998)), ('A', 777, u'ASN', 0.6239618961115463, (147.14499999999998, 158.464, 178.89700000000002)), ('A', 796, u'ASP', 0.7101011270643866, (133.10999999999999, 170.007, 209.251)), ('A', 816, u'SER', 0.6395966094287373, (133.73399999999998, 172.292, 190.629)), ('A', 819, u'GLU', 0.5862130266355208, (137.008, 173.256, 186.99)), ('A', 870, u'ILE', 0.574219749345999, (136.848, 162.82200000000003, 184.181)), ('A', 901, u'GLN', 0.5316420502895891, (145.436, 165.055, 208.64499999999998)), ('A', 913, u'GLN', 0.5478258041405184, (152.19899999999998, 169.34, 215.146)), ('A', 924, u'ALA', 0.5850817912873031, (142.646, 177.70399999999998, 207.62800000000001)), ('A', 948, u'LEU', 0.6504696533402528, (146.77299999999997, 173.284, 177.178)), ('A', 959, u'LEU', 0.6940170102108073, (145.313, 169.656, 160.22899999999998)), ('A', 962, u'LEU', 0.6002075061377202, (147.461, 168.789, 155.738)), ('A', 993, u'ILE', 0.6217707637048516, (147.441, 161.54899999999998, 138.809)), ('A', 997, u'ILE', 0.519659904332703, (149.526, 160.637, 144.534)), ('A', 1008, u'VAL', 0.5857576978767314, (151.72, 161.17899999999997, 160.55700000000002)), ('A', 1015, u'ALA', 0.5323751537048973, (152.236, 162.003, 170.722)), ('A', 1018, u'ILE', 0.5124420262876315, (152.127, 164.22899999999998, 175.25)), ('A', 1019, u'ARG', 0.5109946867559142, (152.8, 160.685, 176.61299999999997)), ('A', 1022, u'ALA', 0.5185392840687054, (150.79899999999998, 162.18, 180.842)), ('A', 1029, u'MET', 0.46912633942638404, (148.738, 162.22, 190.931)), ('A', 1080, u'ALA', 0.6453276983032034, (177.075, 171.865, 221.004)), ('A', 1094, u'VAL', 0.6026448081953775, (169.118, 173.623, 216.95200000000003)), ('A', 1144, u'GLU', 0.7744272320030802, (161.344, 165.93200000000002, 242.008)), ('A', 1304, u'NAG', 0.6360281399083382, (150.063, 191.339, 172.442)), ('B', 44, u'ARG', 0.7959036751160989, (191.077, 172.444, 146.606)), ('B', 58, u'PHE', 0.8113555913450412, (200.602, 151.593, 147.635)), ('B', 66, u'HIS', 0.7983279770548548, (218.30800000000002, 149.792, 132.86)), ('B', 81, u'ASN', 0.7353989164477498, (216.74499999999998, 149.017, 127.228)), ('B', 83, u'VAL', 0.8053315412334742, (210.501, 146.785, 125.198)), ('B', 93, u'ALA', 0.7981359133310728, (210.654, 156.48200000000003, 137.598)), ('B', 97, u'LYS', 0.7749745713209477, (222.335, 162.80100000000002, 137.512)), ('B', 113, u'LYS', 0.8086603464062602, (202.32800000000003, 148.726, 109.80799999999999)), ('B', 119, u'ILE', 0.8324191758142078, (208.09, 161.29399999999998, 122.894)), ('B', 122, u'ASN', 0.7560589162626467, (216.35600000000002, 166.94899999999998, 124.886)), ('B', 123, u'ALA', 0.7682820485499637, (216.277, 169.63, 127.689)), ('B', 164, u'ASN', 0.745050902021318, (203.147, 157.88500000000002, 107.099)), ('B', 165, u'ASN', 0.7200111154903495, (199.991, 158.393, 109.289)), ('B', 186, u'PHE', 0.726722030303242, (221.622, 158.52, 141.429)), ('B', 198, u'ASP', 0.5922457242263494, (189.329, 156.516, 128.108)), ('B', 220, u'PHE', 0.8056405417105034, (205.415, 160.76299999999998, 149.285)), ('B', 223, u'LEU', 0.751133887674196, (203.08200000000002, 164.499, 140.21099999999998)), ('B', 228, u'ASP', 0.7602974718927054, (196.666, 166.295, 127.30799999999999)), ('B', 264, u'ALA', 0.8363135383150966, (218.44899999999998, 152.88200000000003, 136.36)), ('B', 267, u'VAL', 0.7882635332091591, (208.117, 150.42700000000002, 135.953)), ('B', 285, u'ILE', 0.7491578202359295, (198.318, 166.79299999999998, 147.842)), ('B', 291, u'CYS', 0.6842737311457601, (191.15800000000002, 152.54399999999998, 150.309)), ('B', 298, u'GLU', 0.6966012363603266, (189.485, 151.198, 154.434)), ('B', 308, u'VAL', 0.734924718215059, (191.025, 156.787, 163.76)), ('B', 337, u'PRO', 0.867352824057292, (157.178, 119.91400000000002, 112.137)), ('B', 340, u'GLU', 0.7690482714259763, (157.30100000000002, 117.633, 107.166)), ('B', 347, u'PHE', 0.7749779100705415, (155.453, 121.139, 96.537)), ('B', 348, u'ALA', 0.7796416970118157, (152.877, 123.18199999999999, 94.535)), ('B', 357, u'ARG', 0.8279097936005573, (150.969, 126.631, 109.669)), ('B', 363, u'ALA', 0.80504334218571, (161.702, 126.12899999999999, 116.577)), ('B', 372, u'ALA', 0.8418403317596921, (174.506, 122.66499999999999, 103.804)), ('B', 373, u'SER', 0.7905826342411391, (172.23499999999999, 120.787, 101.29400000000001)), ('B', 390, u'LEU', 0.8256919569661829, (163.132, 134.38400000000001, 119.41600000000001)), ('B', 396, u'TYR', 0.828071883405839, (154.45200000000003, 129.967, 108.333)), ('B', 410, u'ILE', 0.747481749155338, (162.037, 135.506, 95.74700000000001)), ('B', 414, u'GLN', 0.7881752559138088, (161.61899999999997, 142.068, 93.57499999999999)), ('B', 427, u'ASP', 0.7566770114486753, (159.38500000000002, 145.45100000000002, 100.633)), ('B', 428, u'ASP', 0.7764184579121246, (160.409, 145.20999999999998, 104.37299999999999)), ('B', 429, u'PHE', 0.7846142161106371, (160.13899999999998, 141.36800000000002, 104.65299999999999)), ('B', 434, u'ILE', 0.8479940146724773, (165.445, 128.562, 101.587)), ('B', 449, u'TYR', 0.7425379480219183, (155.131, 119.627, 82.508)), ('B', 452, u'LEU', 0.8336803109103648, (153.785, 125.725, 86.226)), ('B', 456, u'PHE', 0.7619391171261559, (150.79399999999998, 137.185, 82.64999999999999)), ('B', 464, u'PHE', 0.8092087077949164, (151.30800000000002, 137.342, 100.17999999999999)), ('B', 470, u'THR', 0.6497369171676928, (143.221, 129.42800000000003, 84.57799999999999)), ('B', 476, u'GLY', 0.5522168169377931, (145.27899999999997, 144.02100000000002, 74.259)), ('B', 484, u'LYS', 0.6820214402070844, (143.915, 131.206, 73.41600000000001)), ('B', 500, u'THR', 0.8463776878220667, (169.626, 117.184, 81.18799999999999)), ('B', 505, u'TYR', 0.7734642917205188, (167.238, 125.757, 84.06)), ('B', 519, u'HIS', 0.6880579410762686, (148.207, 140.018, 121.109)), ('B', 551, u'VAL', 0.7855006732332923, (172.599, 127.992, 147.493)), ('B', 562, u'PHE', 0.7886302510582399, (151.23499999999999, 121.057, 139.82000000000002)), ('B', 595, u'VAL', 0.6839625189583658, (182.465, 143.638, 157.978)), ('B', 596, u'SER', 0.6879506605592067, (183.777, 145.57, 160.969)), ('B', 666, u'ILE', 0.7055669858276595, (181.963, 142.44899999999998, 169.849)), ('B', 694, u'ALA', 0.7053922587152367, (189.52700000000002, 138.57399999999998, 172.288)), ('B', 699, u'LEU', 0.6258496214147585, (180.706, 140.941, 184.816)), ('B', 742, u'ILE', 0.6447338216491995, (166.89100000000002, 173.91899999999998, 147.576)), ('B', 781, u'VAL', 0.5468558518052508, (167.96200000000002, 173.809, 184.453)), ('B', 796, u'ASP', 0.706111809248029, (184.73399999999998, 180.789, 207.20299999999997)), ('B', 802, u'PHE', 0.6329090522355477, (185.124, 175.589, 197.65800000000002)), ('B', 822, u'LEU', 0.6128672403139745, (185.01899999999998, 171.641, 181.57399999999998)), ('B', 857, u'GLY', 0.666550300645551, (170.853, 178.718, 153.54399999999998)), ('B', 858, u'LEU', 0.6567010351378328, (172.006, 176.849, 156.708)), ('B', 861, u'LEU', 0.6293766593050366, (171.707, 180.937, 166.05100000000002)), ('B', 870, u'ILE', 0.5078613625472136, (175.032, 180.475, 182.80800000000002)), ('B', 874, u'THR', 0.48232370717838824, (175.67299999999997, 178.30800000000002, 188.721)), ('B', 890, u'ALA', 0.6320975479947308, (161.883, 176.47299999999998, 199.86)), ('B', 905, u'ARG', 0.5978477507281615, (172.90800000000002, 166.535, 206.181)), ('B', 915, u'VAL', 0.5416583841084612, (179.823, 162.055, 214.271)), ('B', 923, u'ILE', 0.6164979651723064, (185.529, 165.18200000000002, 206.93)), ('B', 930, u'ALA', 0.6251436946831059, (188.131, 164.575, 196.77499999999998)), ('B', 949, u'GLN', 0.6748583370367301, (181.166, 166.11899999999997, 172.85200000000003)), ('B', 950, u'ASP', 0.666520952011369, (178.819, 163.476, 171.314)), ('B', 962, u'LEU', 0.6098991709885941, (172.911, 168.066, 154.636)), ('B', 965, u'GLN', 0.6413455709102689, (173.689, 166.146, 149.67499999999998)), ('B', 979, u'ASP', 0.6576604956559147, (174.54899999999998, 173.89800000000002, 134.625)), ('B', 980, u'ILE', 0.6950744885503078, (170.916, 172.929, 133.92800000000003)), ('B', 1002, u'GLN', 0.6422819048068197, (163.65, 164.836, 150.736)), ('B', 1005, u'GLN', 0.6063758786733469, (162.82200000000003, 166.532, 155.38200000000003)), ('B', 1013, u'ILE', 0.5867298001965855, (163.74099999999999, 163.005, 167.21499999999997)), ('B', 1040, u'VAL', 0.5353812976998482, (168.967, 155.683, 195.85700000000003)), ('B', 1062, u'PHE', 0.5502313779681072, (176.93800000000002, 167.876, 189.112)), ('B', 1086, u'LYS', 0.7378676676646961, (159.916, 141.42700000000002, 229.15800000000002)), ('B', 1087, u'ALA', 0.5525683512589172, (161.383, 141.936, 225.659)), ('B', 1137, u'VAL', 0.6623652910515182, (169.197, 146.647, 230.871)), ('B', 1145, u'LEU', 0.8085592234821062, (166.01, 157.629, 243.347)), ('B', 1303, u'NAG', 0.7728928458126146, (178.707, 129.697, 163.54399999999998)), ('B', 1306, u'NAG', 0.8335431578005841, (166.602, 119.46900000000001, 104.77)), ('B', 1307, u'NAG', 0.6905206800369404, (196.061, 131.909, 175.062)), ('C', 27, u'ALA', 0.7770093666867915, (115.67199999999998, 126.903, 139.612)), ('C', 34, u'ARG', 0.7805086156488831, (132.44899999999998, 126.056, 147.242)), ('C', 38, u'TYR', 0.7382812316472073, (144.577, 127.05799999999999, 143.809)), ('C', 59, u'PHE', 0.8492279428452624, (126.728, 131.56, 150.162)), ('C', 81, u'ASN', 0.7387226799468223, (120.854, 122.67199999999998, 127.598)), ('C', 106, u'PHE', 0.7646045556344799, (132.69, 128.46, 124.333)), ('C', 117, u'LEU', 0.7181271101517259, (136.611, 126.4, 121.84400000000001)), ('C', 140, u'PHE', 0.7173143083403493, (122.965, 113.013, 123.05199999999999)), ('C', 165, u'ASN', 0.8204278933145887, (139.016, 126.52499999999999, 109.4)), ('C', 194, u'PHE', 0.7459306126045198, (136.635, 127.851, 133.687)), ('C', 198, u'ASP', 0.860983066454945, (145.171, 137.636, 128.708)), ('C', 214, u'ARG', 0.7301216423058094, (119.708, 117.23, 145.411)), ('C', 263, u'ALA', 0.5701601116018016, (122.702, 114.486, 133.87)), ('C', 275, u'PHE', 0.7032675082910455, (139.85700000000003, 135.767, 149.70499999999998)), ('C', 297, u'SER', 0.7075597562237919, (134.88700000000003, 138.03, 157.484)), ('C', 300, u'LYS', 0.7104474034453018, (139.316, 138.02700000000002, 159.88000000000002)), ('C', 301, u'CYS', 0.7348207043425912, (140.83, 139.45100000000002, 156.67)), ('C', 304, u'LYS', 0.7249484154510235, (144.94, 138.131, 158.40200000000002)), ('C', 340, u'GLU', 0.8465675394785308, (133.23299999999998, 179.55100000000002, 108.621)), ('C', 343, u'ASN', 0.8173011633644419, (135.517, 175.281, 104.94600000000001)), ('C', 347, u'PHE', 0.8225997366022925, (142.90800000000002, 181.48100000000002, 104.67499999999998)), ('C', 373, u'SER', 0.8519925320122435, (141.122, 164.425, 106.311)), ('C', 382, u'VAL', 0.7422352613452945, (142.94899999999998, 168.146, 126.93700000000001)), ('C', 400, u'PHE', 0.8394928861898509, (146.58700000000002, 180.546, 108.548)), ('C', 403, u'ARG', 0.8447255165874927, (154.287, 174.925, 104.098)), ('C', 415, u'THR', 0.8117392753063256, (161.33800000000002, 177.983, 117.408)), ('C', 422, u'ASN', 0.8465394743097675, (154.777, 184.997, 112.611)), ('C', 427, u'ASP', 0.821831941761373, (154.218, 177.82800000000003, 126.732)), ('C', 432, u'CYS', 0.7912485031096888, (144.017, 171.924, 119.69)), ('C', 440, u'ASN', 0.8525277252087787, (144.224, 171.33, 95.892)), ('C', 444, u'LYS', 0.8215812357712926, (148.375, 178.017, 91.60499999999999)), ('C', 445, u'VAL', 0.8144283278777122, (150.159, 177.47299999999998, 88.225)), ('C', 450, u'ASN', 0.8600710859790509, (148.966, 185.845, 98.032)), ('C', 451, u'TYR', 0.8371822502457993, (150.23499999999999, 183.787, 101.042)), ('C', 471, u'GLU', 0.8140041632708997, (158.593, 198.849, 107.634)), ('C', 472, u'ILE', 0.8235027468439393, (162.156, 197.88600000000002, 106.46700000000001)), ('C', 484, u'LYS', 0.7470741781110206, (166.66, 197.324, 100.428)), ('C', 487, u'ASN', 0.7437978877526537, (171.866, 193.05700000000002, 105.016)), ('C', 493, u'GLN', 0.8632435362883677, (158.37800000000001, 186.813, 101.71600000000001)), ('C', 500, u'THR', 0.8356360964377841, (154.066, 170.51299999999998, 91.49000000000001)), ('C', 506, u'GLN', 0.85624814126206, (153.029, 172.14899999999997, 99.54100000000001)), ('C', 511, u'VAL', 0.813755671746954, (143.533, 175.941, 112.619)), ('C', 515, u'PHE', 0.7418954319908995, (140.15, 177.05700000000002, 124.985)), ('C', 524, u'VAL', 0.7544364261749235, (130.64899999999997, 177.151, 124.47)), ('C', 542, u'ASN', 0.7441274128308353, (128.126, 167.841, 136.495)), ('C', 545, u'GLY', 0.7023334827460183, (131.847, 170.009, 133.167)), ('C', 571, u'ASP', 0.6731696971713275, (140.506, 173.859, 146.20399999999998)), ('C', 590, u'CYS', 0.6903680434782619, (128.192, 162.811, 151.161)), ('C', 595, u'VAL', 0.646578676507508, (133.411, 151.13899999999998, 160.154)), ('C', 615, u'VAL', 0.6777427977723023, (127.24100000000001, 158.72, 161.238)), ('C', 620, u'VAL', 0.7932316036747573, (122.76700000000001, 154.009, 156.82100000000003)), ('C', 648, u'GLY', 0.631973623785337, (128.161, 156.8, 165.859)), ('C', 664, u'ILE', 0.6796317386866348, (134.961, 146.629, 174.67)), ('C', 666, u'ILE', 0.6162349115399537, (132.953, 152.23299999999998, 171.98100000000002)), ('C', 670, u'ILE', 0.7084386831162875, (129.66899999999998, 153.863, 175.91)), ('C', 741, u'TYR', 0.6332781760049145, (167.623, 145.7, 150.008)), ('C', 763, u'LEU', 0.5856905109829633, (170.187, 154.93800000000002, 157.164)), ('C', 777, u'ASN', 0.5220722317382741, (169.702, 150.24599999999998, 177.90200000000002)), ('C', 781, u'VAL', 0.5542531358024623, (169.257, 148.33800000000002, 184.177)), ('C', 796, u'ASP', 0.6700717336121371, (168.418, 130.629, 207.447)), ('C', 871, u'ALA', 0.5135237504174357, (170.697, 136.036, 184.816)), ('C', 885, u'GLY', 0.5142880115967955, (169.607, 144.732, 202.516)), ('C', 896, u'ILE', 0.6172974830678823, (172.406, 141.42100000000002, 208.395)), ('C', 923, u'ILE', 0.6634653841683621, (154.753, 137.553, 207.617)), ('C', 936, u'ASP', 0.7984423202861971, (150.23, 130.166, 189.52800000000002)), ('C', 979, u'ASP', 0.6357279893589414, (162.031, 141.27399999999997, 134.46200000000002)), ('C', 985, u'ASP', 0.6236667821624553, (166.048, 148.285, 126.364)), ('C', 996, u'LEU', 0.604095925463024, (161.66899999999998, 150.935, 142.236)), ('C', 1004, u'LEU', 0.6255808212017739, (163.281, 151.86800000000002, 153.999)), ('C', 1010, u'GLN', 0.6130728513689131, (159.611, 154.282, 162.757)), ('C', 1022, u'ALA', 0.5741328406997106, (164.683, 151.33, 180.1)), ('C', 1032, u'CYS', 0.5112038709090171, (163.151, 149.759, 194.466)), ('C', 1054, u'GLN', 0.5885700032963231, (163.721, 138.74499999999998, 187.524)), ('C', 1081, u'ILE', 0.6648684562689725, (144.502, 166.041, 225.959)), ('C', 1087, u'ALA', 0.6113945395816678, (147.829, 170.447, 226.597)), ('C', 1094, u'VAL', 0.5820922343433312, (147.57899999999998, 159.316, 217.598)), ('C', 1123, u'SER', 0.6170016293127154, (152.695, 172.86800000000002, 224.58)), ('C', 1146, u'ASP', 0.7759532529819894, (157.403, 157.436, 247.01)), ('C', 1302, u'NAG', 0.7521373083741208, (114.49000000000001, 176.494, 130.26999999999998)), ('C', 1306, u'NAG', 0.8557151794809221, (141.17899999999997, 110.65799999999999, 123.36))]
data['rota'] = [('A', '  34 ', 'ARG', 0.010723317251561181, (144.06800000000007, 201.807, 146.591)), ('A', ' 332 ', 'ILE', 0.27691575240891236, (189.717, 183.322, 120.11199999999998)), ('A', ' 456 ', 'PHE', 0.06686806966469408, (177.653, 141.13, 112.03299999999999)), ('A', ' 603 ', 'ASN', 0.0, (147.18300000000005, 195.8, 169.16599999999994)), ('A', ' 604 ', 'THR', 0.09986777546952248, (149.641, 198.077, 171.03299999999996)), ('A', ' 820 ', 'ASP', 0.2780912923925858, (134.32000000000005, 175.401, 185.277)), ('B', ' 234 ', 'ASN', 0.06656286795421291, (195.767, 152.10899999999995, 121.20999999999998)), ('B', ' 273 ', 'ARG', 0.00011332247952114273, (191.28500000000005, 152.443, 142.86799999999997)), ('B', ' 281 ', 'GLU', 0.026396422516084293, (196.53000000000006, 175.018, 152.91199999999998)), ('B', ' 709 ', 'ASN', 0.026199746798395852, (171.21300000000005, 134.806, 211.47799999999998)), ('B', ' 711 ', 'SER', 0.14009913783658662, (175.39, 138.169, 212.65899999999996)), ('C', ' 233 ', 'ILE', 0.17309900663279046, (140.146, 133.93899999999994, 121.059)), ('C', ' 328 ', 'ARG', 0.17424040572167168, (123.59700000000008, 171.049, 134.439)), ('C', ' 332 ', 'ILE', 0.00013928533117522622, (122.06200000000003, 177.112, 124.32499999999997)), ('C', ' 656 ', 'VAL', 0.09191716778253861, (120.98300000000003, 148.311, 178.46799999999993)), ('C', ' 762 ', 'GLN', 5.06680592371774e-05, (172.85600000000005, 157.71299999999994, 156.78699999999998)), ('C', ' 921 ', 'LYS', 0.0, (155.71700000000007, 133.587, 211.053)), ('C', ' 926 ', 'GLN', 0.00012879657510780215, (151.495, 135.111, 203.229)), ('C', '1113 ', 'GLN', 0.14650029032258413, (149.63499999999993, 152.218, 224.9))]
data['clusters'] = [('A', '1092', 1, 'cablam Outlier', (165.9, 167.3, 217.0)), ('A', '1094', 1, 'smoc Outlier', (169.118, 173.623, 216.95200000000003)), ('A', '1105', 1, 'Dihedral angle:CA:C', (164.262, 175.45600000000002, 218.85600000000002)), ('A', '1106', 1, 'Dihedral angle:N:CA', (162.819, 173.254, 216.137)), ('A', '1107', 1, 'Dihedral angle:CD:NE:CZ:NH1', (164.559, 174.171, 212.83200000000002)), ('A', '1109', 1, 'cablam Outlier', (159.7, 177.6, 213.1)), ('A', '717', 1, 'Bond angle:CA:CB:CG', (155.997, 182.666, 211.025)), ('A', '718', 1, 'Dihedral angle:CA:C', (154.697, 180.983, 207.82500000000002)), ('A', '719', 1, 'Dihedral angle:N:CA', (152.411, 181.424, 204.82700000000003)), ('A', '924', 1, 'smoc Outlier', (142.646, 177.70399999999998, 207.62800000000001)), ('A', '926', 1, 'Bond angle:OE1:CD:NE2', (145.509, 181.475, 204.758)), ('A', '324', 2, 'Dihedral angle:CB:CG:CD:OE1', (176.38800000000003, 194.515, 136.761)), ('A', '326', 2, 'Dihedral angle:CA:C', (179.70999999999998, 189.966, 133.11499999999998)), ('A', '327', 2, 'Dihedral angle:N:CA\nsmoc Outlier', (180.539, 187.66299999999998, 130.19299999999998)), ('A', '329', 2, 'Bond angle:CA:CB:CG\nBond angle:CA:C', (185.423, 183.937, 127.12199999999999)), ('A', '330', 2, 'Bond angle:N', (189.036, 183.35500000000002, 125.801)), ('A', '332', 2, 'Rotamer\nsmoc Outlier', (189.717, 183.322, 120.11199999999998)), ('A', '544', 2, 'cablam Outlier', (183.4, 180.1, 129.5)), ('A', '1015', 3, 'smoc Outlier', (152.236, 162.003, 170.722)), ('A', '1018', 3, 'smoc Outlier', (152.127, 164.22899999999998, 175.25)), ('A', '1019', 3, 'smoc Outlier', (152.8, 160.685, 176.61299999999997)), ('A', '1022', 3, 'smoc Outlier', (150.79899999999998, 162.18, 180.842)), ('A', '777', 3, 'smoc Outlier', (147.14499999999998, 158.464, 178.89700000000002)), ('A', '780', 3, 'Dihedral angle:CB:CG:CD:OE1', (146.819, 156.42200000000003, 183.76299999999998)), ('A', '784', 3, 'Bond angle:OE1:CD:NE2', (144.061, 155.824, 189.931)), ('A', '267', 4, 'smoc Outlier', (148.075, 207.589, 136.937)), ('A', '270', 4, 'smoc Outlier', (151.505, 198.191, 138.372)), ('A', '88', 4, 'cablam Outlier', (154.1, 196.8, 133.1)), ('A', '89', 4, 'smoc Outlier', (150.41299999999998, 197.94899999999998, 133.02800000000002)), ('A', '90', 4, 'Dihedral angle:CA:C', (148.476, 200.89000000000001, 134.477)), ('A', '91', 4, 'Dihedral angle:N:CA', (146.135, 201.96800000000002, 137.232)), ('A', '1304', 5, 'smoc Outlier', (150.063, 191.339, 172.442)), ('A', '599', 5, 'Dihedral angle:CA:C', (157.29299999999998, 193.66, 167.369)), ('A', '600', 5, 'Dihedral angle:N:CA', (154.965, 194.26899999999998, 170.313)), ('A', '603', 5, 'Rotamer', (147.18300000000005, 195.8, 169.16599999999994)), ('A', '604', 5, 'Rotamer', (149.641, 198.077, 171.03299999999996)), ('A', '661', 6, 'Dihedral angle:CB:CG:CD:OE1', (163.647, 191.08100000000002, 182.88500000000002)), ('A', '666', 6, 'cablam Outlier', (166.9, 188.7, 170.7)), ('A', '667', 6, 'cablam Outlier', (169.9, 186.4, 171.6)), ('A', '669', 6, 'smoc Outlier', (171.93800000000002, 188.10999999999999, 176.448)), ('A', '697', 6, 'smoc Outlier', (168.65, 191.032, 180.17899999999997)), ('A', '442', 7, 'smoc Outlier', (174.515, 159.258, 97.283)), ('A', '443', 7, 'smoc Outlier', (172.129, 157.142, 95.11)), ('A', '446', 7, 'smoc Outlier', (171.43200000000002, 150.34, 89.23700000000001)), ('A', '447', 7, 'cablam Outlier', (172.7, 150.9, 92.9)), ('A', '449', 7, 'smoc Outlier', (177.642, 150.004, 96.195)), ('A', '191', 8, 'Dihedral angle:CB:CG:CD:OE1', (138.93200000000002, 203.681, 139.21499999999997)), ('A', '207', 8, 'Bond angle:CA:CB:CG', (132.90200000000002, 203.484, 141.075)), ('A', '208', 8, 'Dihedral angle:CA:C', (132.164, 205.23999999999998, 144.418)), ('A', '209', 8, 'Dihedral angle:N:CA', (130.864, 208.539, 145.82100000000003)), ('A', '211', 8, 'smoc Outlier', (133.159, 212.781, 150.872)), ('A', '1307', 9, 'Planar group:C2:C7:C8:N2:O7', (182.869, 178.632, 215.341)), ('A', '707', 9, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (176.817, 184.271, 206.474)), ('A', '708', 9, 'cablam Outlier', (179.0, 184.2, 209.7)), ('A', '709', 9, 'Ramachandran\nBond angle:CA:CB:CG\ncablam Outlier', (180.042, 180.95600000000002, 211.524)), ('A', '111', 10, 'Bond angle:C\ncablam CA Geom Outlier', (149.538, 206.47899999999998, 114.93100000000001)), ('A', '112', 10, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (149.65800000000002, 205.26299999999998, 111.259)), ('A', '132', 10, 'Dihedral angle:CB:CG:CD:OE1\ncablam CA Geom Outlier', (146.516, 201.89800000000002, 112.309)), ('A', '133', 10, 'cablam Outlier', (144.7, 205.0, 113.6)), ('A', '1054', 11, 'Bond angle:OE1:CD:NE2', (141.146, 169.65200000000002, 188.959)), ('A', '816', 11, 'smoc Outlier', (133.73399999999998, 172.292, 190.629)), ('A', '819', 11, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (137.008, 173.256, 186.99)), ('A', '820', 11, 'Rotamer', (134.32000000000005, 175.401, 185.277)), ('A', '319', 12, 'smoc Outlier', (170.2, 189.524, 149.835)), ('A', '549', 12, 'cablam CA Geom Outlier', (176.1, 185.6, 140.8)), ('A', '589', 12, 'Dihedral angle:CA:C', (177.531, 184.88700000000003, 146.94299999999998)), ('A', '590', 12, 'Dihedral angle:N:CA\nsmoc Outlier', (175.15200000000002, 187.87, 147.181)), ('A', '1036', 13, 'cablam Outlier', (153.1, 163.9, 200.5)), ('A', '1043', 13, 'cablam Outlier', (154.9, 169.4, 194.1)), ('A', '1048', 13, 'Bond angle:CB:CG:CD2', (154.797, 170.42700000000002, 200.228)), ('A', '1064', 13, 'Bond angle:CB:CG:CD2', (149.79299999999998, 172.41899999999998, 195.24599999999998)), ('A', '1072', 14, 'Dihedral angle:CB:CG:CD:OE1', (163.007, 185.185, 209.88100000000003)), ('A', '1308', 14, 'Planar group:C2:C7:C8:N2:O7', (165.811, 189.485, 208.83)), ('A', '713', 14, 'smoc Outlier', (168.26, 182.787, 210.738)), ('A', '121', 15, 'Dihedral angle:CA:C', (132.55800000000002, 205.89200000000002, 126.18299999999999)), ('A', '122', 15, 'C-beta\nDihedral angle:N:CA\ncablam Outlier', (130.189, 208.85700000000003, 125.724)), ('A', '123', 15, 'Ramachandran\ncablam Outlier', (127.2550000000001, 207.47, 127.80899999999997)), ('A', '291', 16, 'smoc Outlier', (154.178, 192.108, 151.237)), ('A', '293', 16, 'cablam CA Geom Outlier', (155.7, 197.7, 151.8)), ('A', '58', 16, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (150.757, 200.49800000000002, 148.569)), ('A', '363', 17, 'Dihedral angle:CA:C', (181.231, 178.666, 116.516)), ('A', '364', 17, 'Dihedral angle:N:CA', (177.792, 179.82600000000002, 115.45700000000001)), ('A', '524', 17, 'smoc Outlier', (185.483, 176.123, 121.081)), ('A', '516', 18, 'Dihedral angle:CB:CG:CD:OE1', (183.556, 167.523, 125.742)), ('A', '517', 18, 'smoc Outlier', (183.366, 169.874, 128.757)), ('A', '519', 18, 'Bond angle:CB:CG:CD2', (188.32000000000002, 170.876, 133.592)), ('A', '959', 19, 'smoc Outlier', (145.313, 169.656, 160.22899999999998)), ('A', '962', 19, 'smoc Outlier', (147.461, 168.789, 155.738)), ('A', '965', 19, 'Bond angle:OE1:CD:NE2', (148.315, 170.692, 150.765)), ('A', '552', 20, 'smoc Outlier', (184.38600000000002, 188.70899999999997, 142.403)), ('A', '553', 20, 'Dihedral angle:CA:C', (187.672, 189.72, 144.14299999999997)), ('A', '554', 20, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA', (191.446, 189.53, 143.841)), ('A', '214', 21, 'cablam CA Geom Outlier', (140.3, 217.0, 147.2)), ('A', '215', 21, 'Bond angle:CA:CB:CG\ncablam CA Geom Outlier\nsmoc Outlier', (142.251, 213.899, 146.04299999999998)), ('A', '993', 22, 'smoc Outlier', (147.441, 161.54899999999998, 138.809)), ('A', '997', 22, 'smoc Outlier', (149.526, 160.637, 144.534)), ('A', '427', 23, 'smoc Outlier', (174.555, 156.429, 127.366)), ('A', '429', 23, 'smoc Outlier', (176.21499999999997, 161.37800000000001, 125.29700000000001)), ('A', '403', 24, 'Dihedral angle:CD:NE:CZ:NH1', (170.011, 154.38100000000003, 105.307)), ('A', '506', 24, 'Bond angle:OE1:CD:NE2', (167.166, 156.316, 100.62899999999999)), ('A', '337', 25, 'cablam Outlier', (185.2, 175.0, 109.9)), ('A', '338', 25, 'Bond angle:CA:CB:CG\nsmoc Outlier', (181.447, 173.895, 109.99300000000001)), ('A', '414', 26, 'smoc Outlier', (170.17, 152.05700000000002, 121.109)), ('A', '415', 26, 'smoc Outlier', (170.621, 148.43200000000002, 119.845)), ('A', '1098', 27, 'Bond angle:CA:CB:CG', (168.86700000000002, 185.82700000000003, 222.089)), ('A', '1101', 27, 'Bond angle:CB:CG:CD2', (170.101, 183.305, 227.091)), ('A', '576', 28, 'smoc Outlier', (188.003, 181.067, 138.94)), ('A', '578', 28, 'Bond angle:CA:CB:CG', (189.787, 184.757, 134.033)), ('A', '350', 29, 'smoc Outlier', (178.849, 154.04399999999998, 108.489)), ('A', '423', 29, 'smoc Outlier', (178.71599999999998, 153.24499999999998, 115.406)), ('A', '796', 30, 'Bond angle:CA:CB:CG\nsmoc Outlier', (133.10999999999999, 170.007, 209.251)), ('A', '797', 30, 'cablam Outlier', (136.7, 170.2, 207.9)), ('A', '417', 31, 'smoc Outlier', (173.288, 146.324, 113.548)), ('A', '456', 31, 'Rotamer\nBond angle:CA:CB:CG', (177.653, 141.13, 112.033)), ('A', '220', 32, 'cablam CA Geom Outlier\nsmoc Outlier', (140.1, 200.3, 150.7)), ('A', '34', 32, 'Rotamer\ncablam CA Geom Outlier', (144.06800000000007, 201.807, 146.591)), ('A', '570', 33, 'smoc Outlier', (178.511, 171.64299999999997, 147.89700000000002)), ('A', '571', 33, 'Ramachandran\nsmoc Outlier', (180.04400000000007, 171.621, 144.286)), ('A', '95', 34, 'Dihedral angle:CA:C', (137.281, 212.45000000000002, 140.165)), ('A', '96', 34, 'Dihedral angle:N:CA', (134.406, 213.661, 138.063)), ('A', '230', 35, 'Dihedral angle:CA:C\ncablam Outlier', (141.696, 188.86700000000002, 122.739)), ('A', '231', 35, 'Dihedral angle:N:CA', (143.531, 191.342, 120.428)), ('A', '1058', 36, 'Bond angle:CB:CG:CD2\ncablam Outlier', (142.994, 167.76299999999998, 177.359)), ('A', '948', 36, 'smoc Outlier', (146.77299999999997, 173.284, 177.178)), ('A', '940', 37, 'Dihedral angle:CA:C', (141.281, 187.195, 185.125)), ('A', '941', 37, 'Dihedral angle:N:CA', (143.77499999999998, 185.648, 182.702)), ('B', '186', 1, 'smoc Outlier', (221.622, 158.52, 141.429)), ('B', '188', 1, 'Dihedral angle:CA:C', (218.045, 162.664, 141.963)), ('B', '189', 1, 'Dihedral angle:N:CA', (214.79399999999998, 160.73899999999998, 141.555)), ('B', '191', 1, 'Dihedral angle:CB:CG:CD:OE1', (209.023, 160.30700000000002, 138.365)), ('B', '207', 1, 'Bond angle:CB:CG:CD2', (211.67499999999998, 165.60299999999998, 140.309)), ('B', '208', 1, 'Dihedral angle:CA:C', (213.691, 165.694, 143.595)), ('B', '209', 1, 'Dihedral angle:N:CA', (217.231, 165.281, 144.939)), ('B', '210', 1, 'Dihedral angle:CA:C', (217.648, 162.056, 147.034)), ('B', '211', 1, 'Dihedral angle:N:CA', (220.05700000000002, 160.21699999999998, 149.306)), ('B', '212', 1, 'cablam Outlier', (222.1, 157.8, 147.0)), ('B', '267', 1, 'smoc Outlier', (208.117, 150.42700000000002, 135.953)), ('B', '61', 1, 'Dihedral angle:CA:C', (206.191, 145.83700000000002, 143.49800000000002)), ('B', '62', 1, 'Dihedral angle:N:CA', (207.697, 147.91299999999998, 140.66)), ('B', '90', 1, 'Dihedral angle:CA:C', (202.45700000000002, 153.287, 133.626)), ('B', '91', 1, 'Dihedral angle:N:CA', (204.31, 154.81, 136.52)), ('B', '93', 1, 'smoc Outlier', (210.654, 156.48200000000003, 137.598)), ('B', '97', 1, 'cablam Outlier\nsmoc Outlier', (222.3, 162.8, 137.5)), ('B', '1069', 2, 'Dihedral angle:CA:C', (180.71699999999998, 153.546, 204.85600000000002)), ('B', '1070', 2, 'Dihedral angle:N:CA', (184.287, 152.198, 204.655)), ('B', '1091', 2, 'Dihedral angle:CA:C', (164.647, 152.681, 220.131)), ('B', '1092', 2, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\ncablam Outlier', (166.80200000000002, 153.524, 217.14)), ('B', '1105', 2, 'Dihedral angle:CA:C', (174.74299999999997, 151.251, 218.17299999999997)), ('B', '1106', 2, 'Dihedral angle:N:CA', (173.39600000000002, 153.51399999999998, 215.45200000000003)), ('B', '1109', 2, 'cablam Outlier', (178.5, 154.1, 212.0)), ('B', '1113', 2, 'Bond angle:OE1:CD:NE2', (176.282, 152.67, 223.934)), ('B', '717', 2, 'Bond angle:CA:CB:CG', (184.64399999999998, 154.73899999999998, 209.585)), ('B', '718', 2, 'Dihedral angle:CA:C', (183.57399999999998, 156.58, 206.36700000000002)), ('B', '719', 2, 'Dihedral angle:N:CA', (184.86800000000002, 158.257, 203.242)), ('B', '923', 2, 'smoc Outlier', (185.529, 165.18200000000002, 206.93)), ('B', '926', 2, 'Bond angle:OE1:CD:NE2', (188.36100000000002, 164.189, 202.74899999999997)), ('B', '930', 2, 'smoc Outlier', (188.131, 164.575, 196.77499999999998)), ('B', '347', 3, 'smoc Outlier', (155.453, 121.139, 96.537)), ('B', '348', 3, 'Dihedral angle:CA:C\nsmoc Outlier', (152.877, 123.18199999999999, 94.535)), ('B', '349', 3, 'Dihedral angle:CA:C\nDihedral angle:N:CA', (153.19299999999998, 125.24700000000001, 91.332)), ('B', '350', 3, 'Dihedral angle:N:CA', (154.38000000000002, 128.725, 92.392)), ('B', '351', 3, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (151.17499999999998, 130.843, 91.861)), ('B', '452', 3, 'smoc Outlier', (153.785, 125.725, 86.226)), ('B', '461', 3, 'Dihedral angle:CA:C', (150.24699999999999, 140.73399999999998, 93.298)), ('B', '462', 3, 'Dihedral angle:N:CA', (150.05800000000002, 142.504, 96.67799999999998)), ('B', '464', 3, 'smoc Outlier', (151.30800000000002, 137.342, 100.17999999999999)), ('B', '466', 3, 'Dihedral angle:CD:NE:CZ:NH1', (147.632, 133.96, 95.843)), ('B', '1036', 4, 'cablam Outlier', (169.0, 166.4, 200.0)), ('B', '1043', 4, 'cablam Outlier', (172.8, 161.7, 193.3)), ('B', '1048', 4, 'Bond angle:CB:CG:CD2', (173.823, 161.637, 199.38100000000003)), ('B', '1054', 4, 'Bond angle:OE1:CD:NE2', (179.137, 173.512, 187.377)), ('B', '1062', 4, 'smoc Outlier', (176.93800000000002, 167.876, 189.112)), ('B', '1064', 4, 'Bond angle:CB:CG:CD2', (177.70299999999997, 164.86800000000002, 194.04299999999998)), ('B', '870', 4, 'smoc Outlier', (175.032, 180.475, 182.80800000000002)), ('B', '874', 4, 'smoc Outlier', (175.67299999999997, 178.30800000000002, 188.721)), ('B', '216', 5, 'cablam Outlier', (212.9, 154.3, 145.2)), ('B', '218', 5, 'cablam CA Geom Outlier', (210.6, 155.9, 151.0)), ('B', '291', 5, 'smoc Outlier', (191.15800000000002, 152.54399999999998, 150.309)), ('B', '293', 5, 'cablam CA Geom Outlier', (195.4, 148.6, 150.8)), ('B', '298', 5, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (189.485, 151.198, 154.434)), ('B', '32', 5, 'cablam Outlier', (205.9, 152.7, 149.2)), ('B', '58', 5, 'smoc Outlier', (200.602, 151.593, 147.635)), ('B', '196', 6, 'cablam Outlier', (195.8, 156.8, 128.1)), ('B', '197', 6, 'Bond angle:C', (192.68800000000002, 154.57, 128.37800000000001)), ('B', '198', 6, 'Bond angle:N:CA\nsmoc Outlier', (189.329, 156.516, 128.108)), ('B', '200', 6, 'cablam Outlier', (193.3, 160.3, 126.1)), ('B', '228', 6, 'smoc Outlier', (196.666, 166.295, 127.30799999999999)), ('B', '230', 6, 'cablam Outlier', (193.6, 163.7, 122.1)), ('B', '88', 6, 'cablam Outlier', (196.2, 150.4, 131.3)), ('B', '539', 7, 'Dihedral angle:CA:C', (175.252, 129.948, 142.202)), ('B', '540', 7, 'Dihedral angle:N:CA', (173.148, 132.048, 139.869)), ('B', '549', 7, 'cablam CA Geom Outlier', (171.1, 133.8, 143.2)), ('B', '551', 7, 'smoc Outlier', (172.599, 127.992, 147.493)), ('B', '589', 7, 'Dihedral angle:CA:C', (170.89200000000002, 133.072, 150.371)), ('B', '590', 7, 'Dihedral angle:N:CA', (174.523, 133.691, 149.515)), ('B', '263', 8, 'backbone clash\nside-chain clash', (173.646, 133.887, 214.748)), ('B', '707', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH\nDihedral angle:CA:C', (175.454, 135.81, 206.012)), ('B', '708', 8, 'side-chain clash\nbackbone clash\nDihedral angle:N:CA', (174.066, 134.04299999999998, 209.072)), ('B', '710', 8, 'C-beta\nside-chain clash\nBond angle:C:CA:CB\nBond angle:N:CA:CB', (172.67499999999998, 136.44, 214.60999999999999)), ('B', '711', 8, 'Rotamer\nside-chain clash\nbackbone clash', (173.106, 139.939, 210.788)), ('B', '95', 8, 'backbone clash\nside-chain clash', (173.646, 133.887, 214.748)), ('B', '1083', 9, 'Bond angle:CB:CG:CD2', (165.003, 141.601, 231.167)), ('B', '1086', 9, 'smoc Outlier', (159.916, 141.42700000000002, 229.15800000000002)), ('B', '1087', 9, 'smoc Outlier', (161.383, 141.936, 225.659)), ('B', '1122', 9, 'Dihedral angle:CA:C', (159.44899999999998, 147.297, 225.805)), ('B', '1123', 9, 'Dihedral angle:N:CA', (156.889, 145.05700000000002, 224.1)), ('B', '1137', 9, 'smoc Outlier', (169.197, 146.647, 230.871)), ('B', '736', 10, 'Dihedral angle:CA:C', (167.506, 176.933, 157.27399999999997)), ('B', '737', 10, 'Dihedral angle:N:CA', (166.306, 179.194, 154.454)), ('B', '855', 10, 'Dihedral angle:CA:C', (176.611, 179.73499999999999, 152.63299999999998)), ('B', '856', 10, 'Dihedral angle:N:CA', (173.83700000000002, 177.281, 151.538)), ('B', '857', 10, 'smoc Outlier', (170.853, 178.718, 153.54399999999998)), ('B', '858', 10, 'smoc Outlier', (172.006, 176.849, 156.708)), ('B', '1307', 11, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (196.061, 131.909, 175.062)), ('B', '654', 11, 'Dihedral angle:CB:CG:CD:OE1', (194.242, 136.336, 169.74299999999997)), ('B', '655', 11, 'Bond angle:CB:CG:CD2', (191.64399999999998, 134.33200000000002, 171.73999999999998)), ('B', '694', 11, 'smoc Outlier', (189.52700000000002, 138.57399999999998, 172.288)), ('B', '470', 12, 'smoc Outlier', (143.221, 129.42800000000003, 84.57799999999999)), ('B', '484', 12, 'smoc Outlier', (143.915, 131.206, 73.41600000000001)), ('B', '489', 12, 'Dihedral angle:CA:C', (146.83700000000002, 134.598, 76.73)), ('B', '490', 12, 'Dihedral angle:N:CA', (146.23999999999998, 131.48800000000003, 78.789)), ('B', '316', 13, 'Dihedral angle:CA:C', (182.095, 146.97899999999998, 154.155)), ('B', '317', 13, 'Dihedral angle:N:CA', (179.625, 144.146, 153.547)), ('B', '595', 13, 'smoc Outlier', (182.465, 143.638, 157.978)), ('B', '596', 13, 'smoc Outlier', (183.777, 145.57, 160.969)), ('B', '122', 14, 'smoc Outlier', (216.35600000000002, 166.94899999999998, 124.886)), ('B', '123', 14, 'smoc Outlier', (216.277, 169.63, 127.689)), ('B', '125', 14, 'Dihedral angle:CA:C', (212.414, 171.012, 123.995)), ('B', '126', 14, 'Dihedral angle:N:CA', (209.784, 168.315, 124.43100000000001)), ('B', '264', 15, 'smoc Outlier', (218.44899999999998, 152.88200000000003, 136.36)), ('B', '66', 15, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (218.30800000000002, 149.792, 132.86)), ('B', '81', 15, 'smoc Outlier', (216.74499999999998, 149.017, 127.228)), ('B', '83', 15, 'smoc Outlier', (210.501, 146.785, 125.198)), ('B', '308', 16, 'smoc Outlier', (191.025, 156.787, 163.76)), ('B', '310', 16, 'cablam CA Geom Outlier', (189.6, 153.4, 169.4)), ('B', '599', 16, 'Dihedral angle:CA:C', (191.142, 149.03, 166.32200000000003)), ('B', '600', 16, 'Dihedral angle:N:CA', (192.99, 150.696, 169.186)), ('B', '577', 17, 'Planar group:CD:NE:CZ:NH1:NH2', (161.04899999999998, 121.953, 141.60399999999998)), ('B', '581', 17, 'Dihedral angle:CA:C', (164.08200000000002, 115.86999999999999, 137.494)), ('B', '582', 17, 'Ramachandran\nDihedral angle:N:CA', (161.122, 116.80199999999999, 139.71299999999997)), ('B', '583', 17, 'Dihedral angle:CB:CG:CD:OE1', (162.955, 116.909, 143.134)), ('B', '1306', 18, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (166.602, 119.46900000000001, 104.77)), ('B', '372', 18, 'smoc Outlier', (174.506, 122.66499999999999, 103.804)), ('B', '373', 18, 'smoc Outlier', (172.23499999999999, 120.787, 101.29400000000001)), ('B', '108', 19, 'cablam Outlier', (201.0, 148.0, 119.4)), ('B', '1301', 19, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (190.854, 150.80800000000002, 120.82799999999999)), ('B', '234', 19, 'Rotamer\nC-beta', (194.88200000000006, 150.942, 120.74499999999998)), ('B', '447', 20, 'cablam Outlier', (160.3, 117.0, 80.2)), ('B', '449', 20, 'smoc Outlier', (155.131, 119.627, 82.508)), ('B', '496', 20, 'cablam Outlier', (158.9, 121.2, 81.1)), ('B', '408', 21, 'Dihedral angle:CD:NE:CZ:NH1', (166.405, 135.016, 92.65899999999999)), ('B', '410', 21, 'smoc Outlier', (162.037, 135.506, 95.74700000000001)), ('B', '414', 21, 'smoc Outlier', (161.61899999999997, 142.068, 93.57499999999999)), ('B', '337', 22, 'smoc Outlier', (157.178, 119.91400000000002, 112.137)), ('B', '338', 22, 'Bond angle:CA:CB:CG', (159.598, 121.782, 109.74900000000001)), ('B', '340', 22, 'smoc Outlier', (157.30100000000002, 117.633, 107.166)), ('B', '111', 23, 'cablam CA Geom Outlier', (207.9, 149.3, 114.1)), ('B', '112', 23, 'Bond angle:C\ncablam CA Geom Outlier', (205.918, 149.833, 110.848)), ('B', '113', 23, 'Bond angle:N:CA\nsmoc Outlier', (202.32800000000003, 148.726, 109.80799999999999)), ('B', '427', 24, 'smoc Outlier', (159.38500000000002, 145.45100000000002, 100.633)), ('B', '428', 24, 'smoc Outlier', (160.409, 145.20999999999998, 104.37299999999999)), ('B', '429', 24, 'smoc Outlier', (160.13899999999998, 141.36800000000002, 104.65299999999999)), ('B', '1058', 25, 'Bond angle:CB:CG:CD2\ncablam Outlier', (175.748, 172.43, 175.98600000000002)), ('B', '731', 25, 'Dihedral angle:CA:C', (171.65200000000002, 171.441, 171.056)), ('B', '732', 25, 'Dihedral angle:N:CA', (173.189, 173.99200000000002, 168.687)), ('B', '801', 26, 'Bond angle:CA:CB:CG', (187.373, 174.74099999999999, 200.65200000000002)), ('B', '802', 26, 'smoc Outlier', (185.124, 175.589, 197.65800000000002)), ('B', '804', 26, 'Bond angle:OE1:CD:NE2', (187.916, 175.42200000000003, 192.903)), ('B', '1302', 27, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5', (195.624, 163.056, 170.098)), ('B', '709', 27, 'Rotamer\nside-chain clash', (197.496, 160.698, 169.055)), ('B', '1303', 28, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nsmoc Outlier', (178.707, 129.697, 163.54399999999998)), ('B', '644', 28, 'Bond angle:OE1:CD:NE2', (184.694, 131.638, 165.491)), ('B', '666', 29, 'cablam Outlier\nsmoc Outlier', (182.0, 142.4, 169.8)), ('B', '667', 29, 'cablam Outlier', (178.7, 140.7, 170.9)), ('B', '164', 30, 'smoc Outlier', (203.147, 157.88500000000002, 107.099)), ('B', '165', 30, 'smoc Outlier', (199.991, 158.393, 109.289)), ('B', '403', 31, 'Dihedral angle:CD:NE:CZ:NH1', (163.873, 127.01400000000001, 87.923)), ('B', '505', 31, 'smoc Outlier', (167.238, 125.757, 84.06)), ('B', '1098', 32, 'cablam Outlier', (181.8, 142.2, 221.2)), ('B', '1101', 32, 'Bond angle:CB:CG:CD2', (179.24099999999999, 142.26999999999998, 226.185)), ('B', '531', 33, 'Dihedral angle:CA:C', (172.95000000000002, 123.32, 132.11899999999997)), ('B', '532', 33, 'Dihedral angle:N:CA', (173.785, 120.64999999999999, 134.678)), ('B', '985', 34, 'Dihedral angle:CA:C', (165.58700000000002, 175.752, 127.65299999999999)), ('B', '986', 34, 'Dihedral angle:N:CA', (162.517, 175.759, 129.97)), ('B', '357', 35, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (150.969, 126.631, 109.669)), ('B', '396', 35, 'smoc Outlier', (154.45200000000003, 129.967, 108.333)), ('B', '796', 36, 'smoc Outlier', (184.73399999999998, 180.789, 207.20299999999997)), ('B', '797', 36, 'cablam Outlier', (183.2, 177.5, 206.0)), ('B', '915', 37, 'smoc Outlier', (179.823, 162.055, 214.271)), ('B', '917', 37, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (181.496, 167.60399999999998, 214.935)), ('B', '1011', 38, 'Bond angle:OE1:CD:NE2', (166.58, 166.83100000000002, 164.536)), ('B', '1013', 38, 'smoc Outlier', (163.74099999999999, 163.005, 167.21499999999997)), ('B', '780', 39, 'Dihedral angle:CB:CG:CD:OE1', (164.541, 175.05800000000002, 183.221)), ('B', '781', 39, 'smoc Outlier', (167.96200000000002, 173.809, 184.453)), ('B', '905', 40, 'smoc Outlier', (172.90800000000002, 166.535, 206.181)), ('B', '907', 40, 'Bond angle:CA:CB:CG', (171.095, 163.441, 210.23399999999998)), ('B', '1002', 41, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (163.65, 164.836, 150.736)), ('B', '1005', 41, 'smoc Outlier', (162.82200000000003, 166.532, 155.38200000000003)), ('B', '377', 42, 'Bond angle:CA:CB:CG', (169.29899999999998, 130.164, 102.94000000000001)), ('B', '434', 42, 'smoc Outlier', (165.445, 128.562, 101.587)), ('B', '329', 43, 'Bond angle:CA:C', (163.918, 124.18599999999999, 131.61299999999997)), ('B', '330', 43, 'Bond angle:N', (161.847, 120.972, 130.82100000000003)), ('B', '745', 44, 'C-beta\nDihedral angle:CA:C', (168.548, 181.82200000000003, 144.60299999999998)), ('B', '746', 44, 'Dihedral angle:N:CA', (167.476, 180.766, 141.04299999999998)), ('B', '979', 45, 'smoc Outlier', (174.54899999999998, 173.89800000000002, 134.625)), ('B', '980', 45, 'smoc Outlier', (170.916, 172.929, 133.92800000000003)), ('B', '962', 46, 'smoc Outlier', (172.911, 168.066, 154.636)), ('B', '965', 46, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (173.689, 166.146, 149.67499999999998)), ('B', '949', 47, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (181.166, 166.11899999999997, 172.85200000000003)), ('B', '950', 47, 'smoc Outlier', (178.819, 163.476, 171.314)), ('B', '40', 48, 'Bond angle:CA:CB:CG', (191.599, 167.02800000000002, 137.95200000000003)), ('B', '41', 48, 'cablam Outlier', (192.4, 170.7, 137.1)), ('B', '890', 49, 'smoc Outlier', (161.883, 176.47299999999998, 199.86)), ('B', '891', 49, 'cablam Outlier', (161.7, 180.3, 200.6)), ('C', '471', 1, 'smoc Outlier', (158.593, 198.849, 107.634)), ('C', '472', 1, 'smoc Outlier', (162.156, 197.88600000000002, 106.46700000000001)), ('C', '474', 1, 'Bond angle:OE1:CD:NE2', (167.993, 196.534, 108.94000000000001)), ('C', '480', 1, 'cablam Outlier', (167.5, 202.5, 104.6)), ('C', '481', 1, 'Ramachandran', (164.364, 204.751, 105.35999999999997)), ('C', '482', 1, 'Ramachandran', (162.33800000000005, 202.82, 102.654)), ('C', '484', 1, 'smoc Outlier', (166.66, 197.324, 100.428)), ('C', '486', 1, 'cablam CA Geom Outlier', (173.5, 195.4, 102.4)), ('C', '487', 1, 'smoc Outlier', (171.866, 193.05700000000002, 105.016)), ('C', '488', 1, 'Dihedral angle:CA:C', (168.657, 195.226, 104.887)), ('C', '489', 1, 'Dihedral angle:N:CA', (165.344, 193.96800000000002, 103.489)), ('C', '106', 2, 'Bond angle:CA:CB:CG\nsmoc Outlier', (132.69, 128.46, 124.333)), ('C', '108', 2, 'cablam Outlier', (131.1, 134.9, 121.1)), ('C', '110', 2, 'Ramachandran', (129.77200000000005, 129.885, 119.411)), ('C', '111', 2, 'Bond angle:C\ncablam CA Geom Outlier', (129.494, 128.923, 115.66999999999999)), ('C', '112', 2, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (130.765, 129.548, 112.05)), ('C', '117', 2, 'smoc Outlier', (136.611, 126.4, 121.84400000000001)), ('C', '231', 2, 'side-chain clash', (139.376, 130.92, 122.43)), ('C', '233', 2, 'Rotamer\nside-chain clash', (139.376, 130.92, 122.43)), ('C', '1092', 3, 'Dihedral angle:CB:CG:CD:OE1', (154.738, 159.67, 217.31)), ('C', '1094', 3, 'smoc Outlier', (147.57899999999998, 159.316, 217.598)), ('C', '1105', 3, 'Dihedral angle:CA:C', (148.647, 154.096, 219.24899999999997)), ('C', '1106', 3, 'Dihedral angle:N:CA', (151.148, 154.033, 216.43200000000002)), ('C', '1109', 3, 'cablam Outlier', (148.7, 149.5, 213.1)), ('C', '1113', 3, 'Rotamer\nBond angle:OE1:CD:NE2', (149.635, 152.218, 224.9)), ('C', '921', 4, 'Rotamer\nside-chain clash', (156.939, 133.211, 209.894)), ('C', '923', 4, 'smoc Outlier', (154.753, 137.553, 207.617)), ('C', '925', 4, 'side-chain clash\nbackbone clash\ncablam Outlier', (153.584, 134.943, 203.419)), ('C', '926', 4, 'Rotamer\nside-chain clash\nBond angle:C:CA:CB\ncablam Outlier', (151.495, 135.111, 203.22899999999998)), ('C', '927', 4, 'side-chain clash\nbackbone clash', (153.584, 134.943, 203.419)), ('C', '929', 4, 'side-chain clash', (150.984, 134.501, 201.539)), ('C', '293', 5, 'cablam CA Geom Outlier', (130.8, 138.2, 152.9)), ('C', '297', 5, 'smoc Outlier', (134.88700000000003, 138.03, 157.484)), ('C', '298', 5, 'Dihedral angle:CB:CG:CD:OE1', (136.19299999999998, 141.595, 156.975)), ('C', '300', 5, 'smoc Outlier', (139.316, 138.02700000000002, 159.88000000000002)), ('C', '301', 5, 'smoc Outlier', (140.83, 139.45100000000002, 156.67)), ('C', '304', 5, 'smoc Outlier', (144.94, 138.131, 158.40200000000002)), ('C', '328', 6, 'Rotamer', (123.59700000000008, 171.049, 134.439)), ('C', '531', 6, 'Dihedral angle:CA:C', (118.67299999999999, 166.96800000000002, 133.47899999999998)), ('C', '532', 6, 'Dihedral angle:N:CA', (116.346, 168.112, 136.242)), ('C', '542', 6, 'smoc Outlier', (128.126, 167.841, 136.495)), ('C', '545', 6, 'smoc Outlier', (131.847, 170.009, 133.167)), ('C', '263', 7, 'smoc Outlier', (122.702, 114.486, 133.87)), ('C', '265', 7, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (124.163, 120.561, 136.70299999999997)), ('C', '66', 7, 'Bond angle:CB:CG:CD2', (118.157, 118.98100000000001, 134.70299999999997)), ('C', '94', 7, 'Dihedral angle:CA:C', (127.265, 118.15599999999999, 138.566)), ('C', '95', 7, 'Dihedral angle:N:CA', (126.88199999999999, 114.735, 140.099)), ('C', '1032', 8, 'smoc Outlier', (163.151, 149.759, 194.466)), ('C', '1036', 8, 'cablam Outlier', (163.2, 151.2, 199.9)), ('C', '1043', 8, 'cablam Outlier', (157.2, 150.4, 193.8)), ('C', '1048', 8, 'Bond angle:CB:CG:CD2', (156.71099999999998, 149.495, 199.935)), ('C', '1064', 8, 'Bond angle:CB:CG:CD2', (157.20899999999997, 144.39800000000002, 194.542)), ('C', '1081', 9, 'smoc Outlier', (144.502, 166.041, 225.959)), ('C', '1083', 9, 'Bond angle:CB:CG:CD2\ncablam Outlier', (146.195, 167.26, 232.17)), ('C', '1087', 9, 'smoc Outlier', (147.829, 170.447, 226.597)), ('C', '1123', 9, 'smoc Outlier', (152.695, 172.86800000000002, 224.58)), ('C', '1134', 9, 'Bond angle:CA:CB:CG', (140.314, 165.732, 229.296)), ('C', '1019', 10, 'Dihedral angle:CD:NE:CZ:NH1', (164.77399999999997, 154.048, 176.01)), ('C', '1022', 10, 'smoc Outlier', (164.683, 151.33, 180.1)), ('C', '777', 10, 'smoc Outlier', (169.702, 150.24599999999998, 177.90200000000002)), ('C', '780', 10, 'Dihedral angle:CB:CG:CD:OE1', (172.008, 150.594, 182.725)), ('C', '781', 10, 'smoc Outlier', (169.257, 148.33800000000002, 184.177)), ('C', '518', 11, 'Dihedral angle:CA:C', (138.52100000000002, 181.04, 132.809)), ('C', '519', 11, 'Dihedral angle:N:CA\ncablam Outlier', (135.93200000000002, 180.863, 135.61399999999998)), ('C', '559', 11, 'Bond angle:CA:CB:CG', (128.10299999999998, 185.592, 144.503)), ('C', '563', 11, 'Bond angle:OE1:CD:NE2', (131.57899999999998, 184.467, 139.624)), ('C', '565', 11, 'Bond angle:CA:CB:CG', (131.637, 178.92100000000002, 141.618)), ('C', '1069', 12, 'Dihedral angle:CA:C', (146.71699999999998, 147.634, 206.14899999999997)), ('C', '1070', 12, 'Dihedral angle:N:CA', (143.73, 145.236, 206.154)), ('C', '718', 12, 'Dihedral angle:CA:C', (147.959, 143.667, 207.648)), ('C', '719', 12, 'Dihedral angle:N:CA', (148.61299999999997, 141.64399999999998, 204.526)), ('C', '403', 13, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (154.287, 174.925, 104.098)), ('C', '500', 13, 'smoc Outlier', (154.066, 170.51299999999998, 91.49000000000001)), ('C', '501', 13, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (155.788, 171.161, 94.91000000000001)), ('C', '506', 13, 'smoc Outlier', (153.029, 172.14899999999997, 99.54100000000001)), ('C', '220', 14, 'cablam CA Geom Outlier', (135.2, 122.7, 151.8)), ('C', '33', 14, 'cablam Outlier', (131.7, 127.5, 150.7)), ('C', '34', 14, 'cablam CA Geom Outlier\nsmoc Outlier', (132.4, 126.1, 147.2)), ('C', '59', 14, 'smoc Outlier', (126.728, 131.56, 150.162)), ('C', '524', 15, 'smoc Outlier', (130.64899999999997, 177.151, 124.47)), ('C', '525', 15, 'Dihedral angle:CA:C', (129.35700000000003, 173.636, 125.287)), ('C', '526', 15, 'Dihedral angle:N:CA', (129.82500000000002, 170.053, 124.19)), ('C', '527', 15, 'cablam Outlier', (126.5, 168.4, 123.0)), ('C', '382', 16, 'smoc Outlier', (142.94899999999998, 168.146, 126.93700000000001)), ('C', '431', 16, 'side-chain clash', (141.882, 173.764, 123.646)), ('C', '432', 16, 'smoc Outlier', (144.017, 171.924, 119.69)), ('C', '515', 16, 'side-chain clash\nsmoc Outlier', (141.882, 173.764, 123.646)), ('C', '1144', 17, 'Dihedral angle:CB:CG:CD:OE1', (159.314, 156.165, 242.448)), ('C', '1145', 17, 'Dihedral angle:CA:C', (158.876, 159.586, 244.191)), ('C', '1146', 17, 'Dihedral angle:N:CA\nsmoc Outlier', (157.403, 157.436, 247.01)), ('C', '1302', 18, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (114.49000000000001, 176.494, 130.26999999999998)), ('C', '331', 18, 'cablam Outlier', (120.0, 176.1, 127.4)), ('C', '332', 18, 'Rotamer\nside-chain clash', (122.996, 177.452, 126.696)), ('C', '1303', 19, 'Planar group:C2:C7:C8:N2:O7', (135.99800000000002, 169.291, 217.135)), ('C', '707', 19, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (134.1, 161.151, 208.08)), ('C', '709', 19, 'Bond angle:CA:CB:CG', (135.512, 165.647, 213.253)), ('C', '664', 20, 'smoc Outlier', (134.961, 146.629, 174.67)), ('C', '666', 20, 'cablam Outlier\nsmoc Outlier', (133.0, 152.2, 172.0)), ('C', '670', 20, 'smoc Outlier', (129.66899999999998, 153.863, 175.91)), ('C', '1308', 21, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:N2:C7', (116.545, 148.575, 179.01299999999998)), ('C', '654', 21, 'Dihedral angle:CB:CG:CD:OE1', (121.229, 145.816, 172.531)), ('C', '656', 21, 'Rotamer', (120.98300000000003, 148.311, 178.46799999999993)), ('C', '347', 22, 'smoc Outlier', (142.90800000000002, 181.48100000000002, 104.67499999999998)), ('C', '400', 22, 'smoc Outlier', (146.58700000000002, 180.546, 108.548)), ('C', '511', 22, 'smoc Outlier', (143.533, 175.941, 112.619)), ('C', '194', 23, 'smoc Outlier', (136.635, 127.851, 133.687)), ('C', '90', 23, 'Dihedral angle:CA:C', (132.189, 130.038, 135.44899999999998)), ('C', '91', 23, 'Dihedral angle:N:CA', (131.945, 127.539, 138.26999999999998)), ('C', '81', 24, 'smoc Outlier', (120.854, 122.67199999999998, 127.598)), ('C', '82', 24, 'Dihedral angle:CA:C', (120.60799999999999, 126.498, 127.115)), ('C', '83', 24, 'Dihedral angle:N:CA', (123.265, 128.865, 125.76100000000001)), ('C', '38', 25, 'smoc Outlier', (144.577, 127.05799999999999, 143.809)), ('C', '40', 25, 'Bond angle:CA:CB:CG', (148.83800000000002, 130.089, 141.466)), ('C', '41', 25, 'cablam Outlier', (151.5, 127.3, 141.1)), ('C', '600', 26, 'cablam Outlier', (132.9, 138.9, 171.6)), ('C', '603', 26, 'cablam Outlier', (136.0, 131.3, 170.9)), ('C', '604', 26, 'Ramachandran\ncablam Outlier', (132.744, 132.6, 172.61199999999994)), ('C', '1305', 27, 'Planar group:C2:C7:C8:N2:O7', (115.09100000000001, 130.97, 145.23499999999999)), ('C', '27', 27, 'smoc Outlier', (115.67199999999998, 126.903, 139.612)), ('C', '122', 28, 'Bond angle:CA:CB:CG', (135.90200000000002, 111.169, 124.732)), ('C', '1306', 28, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (141.17899999999997, 110.65799999999999, 123.36)), ('C', '762', 29, 'Rotamer', (172.85600000000005, 157.71299999999994, 156.78699999999998)), ('C', '763', 29, 'smoc Outlier', (170.187, 154.93800000000002, 157.164)), ('C', '138', 30, 'cablam Outlier', (124.6, 119.1, 121.4)), ('C', '140', 30, 'smoc Outlier', (122.965, 113.013, 123.05199999999999)), ('C', '1098', 31, 'Bond angle:C:CA:CB\ncablam CA Geom Outlier', (137.441, 152.67899999999997, 223.141)), ('C', '1101', 31, 'Bond angle:CB:CG:CD2', (139.166, 154.844, 227.916)), ('C', '985', 32, 'Dihedral angle:CA:C\nsmoc Outlier', (166.048, 148.285, 126.364)), ('C', '986', 32, 'Dihedral angle:N:CA', (168.634, 150.221, 128.45200000000003)), ('C', '273', 33, 'Planar group:CD:NE:CZ:NH1:NH2', (136.85800000000003, 139.011, 145.295)), ('C', '275', 33, 'smoc Outlier', (139.85700000000003, 135.767, 149.70499999999998)), ('C', '796', 34, 'Bond angle:CA:CB:CG\nsmoc Outlier', (168.418, 130.629, 207.447)), ('C', '797', 34, 'cablam Outlier', (166.3, 133.6, 206.1)), ('C', '896', 35, 'smoc Outlier', (172.406, 141.42100000000002, 208.395)), ('C', '897', 35, 'side-chain clash', (173.106, 139.939, 210.788)), ('C', '1010', 36, 'smoc Outlier', (159.611, 154.282, 162.757)), ('C', '1011', 36, 'Bond angle:OE1:CD:NE2', (162.436, 152.33700000000002, 164.502)), ('C', '444', 37, 'smoc Outlier', (148.375, 178.017, 91.60499999999999)), ('C', '445', 37, 'smoc Outlier', (150.159, 177.47299999999998, 88.225)), ('C', '615', 38, 'smoc Outlier', (127.24100000000001, 158.72, 161.238)), ('C', '648', 38, 'smoc Outlier', (128.161, 156.8, 165.859)), ('C', '1002', 39, 'Bond angle:OE1:CD:NE2', (160.98000000000002, 155.58800000000002, 150.71399999999997)), ('C', '1004', 39, 'smoc Outlier', (163.281, 151.86800000000002, 153.999)), ('C', '450', 40, 'smoc Outlier', (148.966, 185.845, 98.032)), ('C', '451', 40, 'smoc Outlier', (150.23499999999999, 183.787, 101.042)), ('C', '885', 41, 'smoc Outlier', (169.607, 144.732, 202.516)), ('C', '886', 41, 'Planar group:CB:CG:CD1:CD2:NE1:CE2:CE3:CZ2:CZ3:CH2', (169.978, 148.224, 201.001)), ('C', '340', 42, 'smoc Outlier', (133.23299999999998, 179.55100000000002, 108.621)), ('C', '343', 42, 'smoc Outlier', (135.517, 175.281, 104.94600000000001)), ('C', '228', 43, 'Dihedral angle:CA:C', (146.373, 126.505, 130.662)), ('C', '229', 43, 'Dihedral angle:N:CA', (145.64499999999998, 126.862, 126.93700000000001)), ('C', '1118', 44, 'Dihedral angle:CA:C', (157.063, 160.061, 227.792)), ('C', '1119', 44, 'Dihedral angle:N:CA', (154.45700000000002, 158.975, 225.18)), ('E', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (131.756, 177.042, 205.04399999999998)), ('E', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (130.52800000000002, 180.627, 195.037)), ('F', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (164.117, 183.67, 233.539)), ('G', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (183.201, 179.597, 226.039)), ('G', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (188.912, 172.859, 231.184)), ('H', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (159.906, 114.062, 133.668)), ('H', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (168.446, 111.21700000000001, 135.534)), ('I', '1', 1, 'side-chain clash\nBond angle:C2:C1:O5', (186.155, 140.161, 223.95000000000002)), ('I', '2', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nBond angle:C2:N2:C7', (182.789, 144.946, 232.798)), ('J', '1', 1, 'Bond angle:C2:C1:O5\nBond angle:C6:C5:O5', (171.70499999999998, 133.431, 228.335)), ('J', '2', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (161.57399999999998, 130.444, 232.765)), ('K', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (191.284, 178.07899999999998, 202.467)), ('L', '1', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nBond angle:C3:C2:N2', (135.64, 168.683, 228.029)), ('L', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (138.608, 175.96200000000002, 237.09)), ('M', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (144.86800000000002, 140.272, 214.501)), ('M', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (148.389, 133.57, 206.83)), ('N', '1', 1, 'side-chain clash\nPlanar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (134.067, 149.864, 226.548)), ('N', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (142.039, 150.423, 232.52)), ('O', '1', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2\nBond angle:C2:C1:O5', (163.436, 126.222, 202.547)), ('O', '2', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5', (158.531, 120.369, 193.88200000000003))]
data['rama'] = [('A', ' 112 ', 'SER', 0.020386791541614675, (149.658, 205.263, 111.25899999999999)), ('A', ' 123 ', 'ALA', 0.024738387136421954, (127.2550000000001, 207.47, 127.80899999999997)), ('A', ' 571 ', 'ASP', 0.047363623284688676, (180.04400000000007, 171.621, 144.286)), ('A', ' 709 ', 'ASN', 0.0025560584331592675, (180.04200000000006, 180.95599999999993, 211.52399999999994)), ('B', ' 582 ', 'LEU', 0.04569148934990962, (161.122, 116.802, 139.71299999999997)), ('C', ' 110 ', 'LEU', 0.02675262467590398, (129.77200000000005, 129.885, 119.411)), ('C', ' 112 ', 'SER', 0.002700202822725196, (130.76500000000001, 129.548, 112.04999999999998)), ('C', ' 481 ', 'ASN', 0.03899935131061875, (164.364, 204.751, 105.35999999999997)), ('C', ' 482 ', 'GLY', 0.050568394429739455, (162.33800000000005, 202.82, 102.654)), ('C', ' 571 ', 'ASP', 0.04380950885044573, (140.506, 173.859, 146.204)), ('C', ' 604 ', 'THR', 0.025412202894621587, (132.744, 132.6, 172.61199999999994))]
data['cablam'] = [('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (136.7, 184.8, 139.1)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (154.1, 196.8, 133.1)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (153.8, 201.7, 120.4)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (149.7, 205.3, 111.3)), ('A', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (130.2, 208.9, 125.7)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (127.3, 207.5, 127.8)), ('A', '133', 'PHE', ' beta sheet', ' \nES---', (144.7, 205.0, 113.6)), ('A', '230', 'PRO', ' beta sheet', ' \nEE---', (141.7, 188.9, 122.7)), ('A', '337', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nB-THH', (185.2, 175.0, 109.9)), ('A', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-BT', (172.7, 150.9, 92.9)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (178.4, 128.1, 103.7)), ('A', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (183.4, 180.1, 129.5)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.9, 188.7, 170.7)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (169.9, 186.4, 171.6)), ('A', '708', 'SER', 'check CA trace,carbonyls, peptide', ' \n---SS', (179.0, 184.2, 209.7)), ('A', '709', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (180.0, 181.0, 211.5)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (136.7, 170.2, 207.9)), ('A', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (153.1, 163.9, 200.5)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (154.9, 169.4, 194.1)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (143.0, 167.8, 177.4)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (165.9, 167.3, 217.0)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (159.7, 177.6, 213.1)), ('A', '34', 'ARG', 'check CA trace', ' \nTT---', (144.1, 201.8, 146.6)), ('A', '111', 'ASP', 'check CA trace', 'bend\nS-SSS', (149.5, 206.5, 114.9)), ('A', '132', 'GLU', 'check CA trace', 'bend\nEES--', (146.5, 201.9, 112.3)), ('A', '214', 'ARG', 'check CA trace', 'bend\n--SSS', (140.3, 217.0, 147.2)), ('A', '215', 'ASP', 'check CA trace', 'bend\n-SSS-', (142.3, 213.9, 146.0)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (140.1, 200.3, 150.7)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (155.7, 197.7, 151.8)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (176.1, 185.6, 140.8)), ('A', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (138.7, 165.2, 152.8)), ('B', '32', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nE-TEE', (205.9, 152.7, 149.2)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (192.4, 170.7, 137.1)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (196.2, 150.4, 131.3)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (222.3, 162.8, 137.5)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (201.0, 148.0, 119.4)), ('B', '196', 'ASN', ' beta sheet', ' \nEE-TT', (195.8, 156.8, 128.1)), ('B', '200', 'TYR', 'check CA trace,carbonyls, peptide', ' \nTT-EE', (193.3, 160.3, 126.1)), ('B', '212', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (222.1, 157.8, 147.0)), ('B', '216', 'LEU', 'check CA trace,carbonyls, peptide', ' \n-S--S', (212.9, 154.3, 145.2)), ('B', '230', 'PRO', ' beta sheet', ' \nEE---', (193.6, 163.7, 122.1)), ('B', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (160.3, 117.0, 80.2)), ('B', '496', 'GLY', ' beta sheet', ' \nE--B-', (158.9, 121.2, 81.1)), ('B', '545', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (161.2, 132.1, 134.3)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (182.0, 142.4, 169.8)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (178.7, 140.7, 170.9)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (183.2, 177.5, 206.0)), ('B', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (161.7, 180.3, 200.6)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (169.0, 166.4, 200.0)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (172.8, 161.7, 193.3)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (175.7, 172.4, 176.0)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (166.8, 153.5, 217.1)), ('B', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (181.8, 142.2, 221.2)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (178.5, 154.1, 212.0)), ('B', '111', 'ASP', 'check CA trace', 'bend\nSSSSS', (207.9, 149.3, 114.1)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (205.9, 149.8, 110.8)), ('B', '218', 'GLN', 'check CA trace', 'bend\n--SSE', (210.6, 155.9, 151.0)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (195.4, 148.6, 150.8)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (189.6, 153.4, 169.4)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (171.1, 133.8, 143.2)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (131.7, 127.5, 150.7)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (151.5, 127.3, 141.1)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (134.2, 136.9, 133.9)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (131.1, 134.9, 121.1)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nSSTTS', (130.8, 129.5, 112.0)), ('C', '138', 'ASP', 'check CA trace,carbonyls, peptide', ' \n-S---', (124.6, 119.1, 121.4)), ('C', '331', 'ASN', 'check CA trace,carbonyls, peptide', ' \n-----', (120.0, 176.1, 127.4)), ('C', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \n---SS', (167.5, 202.5, 104.6)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (154.7, 181.1, 95.7)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (135.9, 180.9, 135.6)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (126.5, 168.4, 123.0)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--S', (132.9, 138.9, 171.6)), ('C', '603', 'ASN', ' alpha helix', 'bend\n-SSS-', (136.0, 131.3, 170.9)), ('C', '604', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nSSS-S', (132.7, 132.6, 172.6)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (133.0, 152.2, 172.0)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (166.3, 133.6, 206.1)), ('C', '925', 'ASN', ' alpha helix', 'turn\nHHTTH', (154.0, 132.8, 205.1)), ('C', '926', 'GLN', ' alpha helix', 'turn\nHTTHH', (151.5, 135.1, 203.2)), ('C', '942', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nH-SST', (148.2, 134.3, 178.6)), ('C', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (163.2, 151.2, 199.9)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (157.2, 150.4, 193.8)), ('C', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (146.2, 167.3, 232.2)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (148.7, 149.5, 213.1)), ('C', '34', 'ARG', 'check CA trace', ' \n-S---', (132.4, 126.1, 147.2)), ('C', '111', 'ASP', 'check CA trace', 'bend\nSSSTT', (129.5, 128.9, 115.7)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (135.2, 122.7, 151.8)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (130.8, 138.2, 152.9)), ('C', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (173.5, 195.4, 102.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (129.5, 163.9, 144.2)), ('C', '1098', 'ASN', 'check CA trace', 'bend\nEESSS', (137.4, 152.7, 223.1))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23559/7lww/Model_validation_1/validation_cootdata/molprobity_probe7lww_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

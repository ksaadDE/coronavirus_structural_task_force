
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['clusters'] = []
data['rama'] = []
data['rota'] = []
data['jpred'] = []
data['omega'] = [('F', '   8 ', 'PRO', None, (219.613, 254.53600000000006, 178.858)), ('F', '  95 ', 'PRO', None, (199.134, 249.202, 191.376)), ('G', '   8 ', 'PRO', None, (253.32, 214.34400000000005, 178.778)), ('G', '  95 ', 'PRO', None, (258.99, 234.651, 191.51799999999997)), ('L', '   8 ', 'PRO', None, (201.521, 204.894, 178.427)), ('L', '  95 ', 'PRO', None, (216.26, 190.123, 191.45))]
data['probe'] = [(' A1012  LEU HD21', ' C1013  ILE HG12', -0.674, (220.408, 227.245, 269.297)), (' B1013  ILE HG12', ' C1012  LEU HD21', -0.663, (224.456, 219.529, 269.186)), (' L  80  PRO  HA ', ' L 106  ILE HG21', -0.663, (211.704, 215.006, 166.047)), (' D  19  ARG  HE ', ' D  79  TYR  HB3', -0.655, (184.881, 237.672, 177.331)), (' B 747  THR HG22', ' B 981  LEU HD13', -0.653, (244.744, 224.879, 239.516)), (' D  99  ALA  HB1', ' D 100I ALA  H  ', -0.642, (201.981, 236.163, 192.586)), (' F  80  PRO  HA ', ' F 106  ILE HG21', -0.629, (223.502, 241.025, 166.471)), (' G  80  PRO  HA ', ' G 106  ILE HG21', -0.625, (239.55, 218.419, 166.08)), (' B 667  GLY  HA2', ' C 864  LEU  HA ', -0.625, (213.28, 204.034, 276.886)), (' A 391  CYS  HA ', ' A 525  CYS  HB3', -0.624, (248.416, 213.341, 228.05)), (' B 390  LEU HD11', ' C 983  ARG  HA ', -0.609, (210.799, 212.768, 231.21)), (' A 365  TYR  HA ', ' A 368  LEU HD13', -0.608, (246.511, 217.448, 215.241)), (' C 393  THR  HB ', ' C 520  ALA  HB3', -0.607, (231.293, 253.096, 232.24)), (' C1141  LEU  HG ', ' C1145  LEU HD12', -0.606, (222.933, 226.252, 343.655)), (' A 317  ASN  HB3', ' B 739  THR HG21', -0.603, (247.033, 229.643, 252.727)), (' C 391  CYS  HA ', ' C 525  CYS  HB3', -0.593, (222.802, 250.946, 228.164)), (' A  93  ALA  HB3', ' A 266  TYR  HB2', -0.584, (259.895, 256.243, 241.271)), (' A 758  SER  HB2', ' C 965  GLN HE22', -0.583, (211.254, 227.254, 253.82)), (' B 393  THR  HB ', ' B 520  ALA  HB3', -0.583, (196.931, 215.902, 232.441)), (' D  94  ARG  NH2', ' D 101  ASP  OD2', -0.581, (204.878, 229.946, 182.653)), (' B 391  CYS  HA ', ' B 525  CYS  HB3', -0.579, (202.908, 209.862, 228.26)), (' C 597  VAL HG22', ' C 610  VAL HG12', -0.579, (201.225, 243.65, 263.724)), (' A 983  ARG  HA ', ' C 390  LEU HD11', -0.577, (221.364, 242.382, 231.639)), (' A 763  LEU HD22', ' A1008  VAL HG21', -0.577, (219.918, 231.306, 261.902)), (' A1013  ILE HG12', ' B1012  LEU HD21', -0.57, (229.183, 227.047, 269.432)), (' C 120  VAL HG11', ' C 157  PHE  HE1', -0.57, (176.324, 232.848, 220.572)), (' B 537  LYS  HE2', ' B 628  GLN HE21', -0.57, (209.353, 191.247, 246.094)), (' A 537  LYS  HE2', ' A 628  GLN HE21', -0.569, (261.146, 228.027, 246.086)), (' B 726  ILE HG12', ' B 945  LEU  HG ', -0.566, (237.336, 206.301, 285.572)), (' C1116  THR HG22', ' C1118  ASP  H  ', -0.566, (221.443, 230.508, 332.47)), (' A 739  THR HG21', ' C 317  ASN  HB3', -0.563, (208.739, 241.766, 252.841)), (' C  93  ALA  HB3', ' C 266  TYR  HB2', -0.562, (179.654, 239.449, 241.409)), (' B 102  ARG  HG3', ' B 141  LEU HD23', -0.561, (242.572, 173.531, 225.794)), (' A 855  PHE  HB3', ' A 858  LEU  HB2', -0.561, (222.221, 244.302, 260.035)), (' A 750  SER  HB3', ' C  52  GLN  HG3', -0.555, (204.625, 235.803, 245.246)), (' B 494  SER  OG ', ' F  32  TYR  OH ', -0.554, (207.751, 238.124, 198.501)), (' C 214  ARG  NH1', ' C 215  ASP  OD2', -0.553, (173.907, 244.782, 247.035)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.551, (234.394, 178.394, 241.31)), (' A 201  PHE  HB3', ' A 229  LEU  HB2', -0.551, (246.586, 251.375, 226.808)), (' E  87  THR  HB ', ' E 111  VAL HG12', -0.55, (265.224, 239.911, 168.497)), (' B1116  THR HG22', ' B1118  ASP  H  ', -0.55, (221.591, 218.56, 332.589)), (' A 864  LEU  HA ', ' C 667  GLY  HA2', -0.549, (212.351, 244.723, 277.006)), (' A 667  GLY  HA2', ' B 864  LEU  HA ', -0.549, (248.414, 225.482, 276.456)), (' D  99  ALA  CB ', ' D 100I ALA  H  ', -0.546, (202.644, 235.64, 192.317)), (' A 862  PRO  HG2', ' C 647  ALA  HA ', -0.542, (213.874, 249.529, 271.384)), (' C 726  ILE HG12', ' C 945  LEU  HG ', -0.541, (202.594, 223.128, 286.105)), (' B 365  TYR  HA ', ' B 368  LEU HD13', -0.54, (207.451, 209.522, 215.292)), (' B1141  LEU HD21', ' C1145  LEU HD11', -0.54, (222.213, 223.464, 343.857)), (' B 575  ALA  HA ', ' B 586  ASP  HA ', -0.539, (199.073, 205.734, 246.445)), (' A 231  ILE HD12', ' A 233  ILE HG12', -0.535, (249.615, 247.749, 223.04)), (' C 575  ALA  HA ', ' C 586  ASP  HA ', -0.535, (221.566, 256.176, 246.439)), (' B 442  ASP  O  ', ' B 448  ASN  ND2', -0.533, (206.462, 226.143, 198.08)), (' A 647  ALA  HA ', ' B 862  PRO  HG2', -0.528, (251.793, 222.035, 271.238)), (' B 733  LYS  HE3', ' B 771  ALA  HB1', -0.527, (242.833, 225.41, 272.274)), (' A 822  LEU HD22', ' A 945  LEU HD21', -0.524, (232.492, 247.748, 285.9)), (' C 102  ARG  HG3', ' C 141  LEU HD23', -0.52, (171.738, 234.584, 225.406)), (' A 575  ALA  HA ', ' A 586  ASP  HA ', -0.519, (253.467, 211.671, 246.39)), (' A 393  THR  HB ', ' A 520  ALA  HB3', -0.518, (245.645, 205.112, 232.009)), (' C 574  ASP  OD1', ' C 575  ALA  N  ', -0.518, (224.701, 254.126, 247.067)), (' B 647  ALA  HA ', ' C 862  PRO  HG2', -0.515, (208.479, 202.906, 271.476)), (' G  66  GLY  HA3', ' G  71  PHE  HA ', -0.514, (247.11, 217.959, 190.399)), (' B 855  PHE  HB3', ' B 858  LEU  HB2', -0.513, (242.789, 216.806, 260.201)), (' C 494  SER  HB3', ' E 100G PHE  CD2', -0.513, (246.318, 234.281, 199.728)), (' C 442  ASP  OD2', ' C 509  ARG  NE ', -0.512, (230.859, 241.277, 203.783)), (' B 317  ASN  HB3', ' C 739  THR HG21', -0.511, (218.284, 202.324, 252.991)), (' A 747  THR  HA ', ' C 549  THR HG23', -0.509, (211.212, 245.016, 241.952)), (' B1086  LYS  HD2', ' B1122  VAL HG11', -0.507, (209.781, 223.52, 333.351)), (' F  18  ARG  NH1', ' F  77  ARG  H  ', -0.506, (229.95, 240.642, 176.278)), (' A 574  ASP  OD1', ' A 575  ALA  N  ', -0.506, (250.265, 210.354, 246.843)), (' C 804  GLN  NE2', ' V   1  NAG  O6 ', -0.505, (191.674, 216.558, 298.615)), (' D  40  ALA  HB3', ' D  43  LYS  HB2', -0.505, (201.341, 252.906, 172.335)), (' D  87  THR  HB ', ' D 111  VAL HG12', -0.504, (191.925, 252.156, 168.649)), (' B 120  VAL  CG2', ' B 141  LEU HD22', -0.498, (241.869, 176.313, 223.25)), (' H  39  GLN  HB2', ' H  45  LEU HD23', -0.498, (217.206, 195.135, 175.081)), (' A 733  LYS  HE3', ' A 771  ALA  HB1', -0.498, (214.569, 239.882, 272.465)), (' E  41  PRO  HD3', ' E  88  ALA  HA ', -0.496, (259.957, 235.509, 169.865)), (' B 965  GLN HE22', ' C 758  SER  HB2', -0.496, (229.034, 212.187, 253.997)), (' A 733  LYS  HG2', ' A 861  LEU  HB2', -0.496, (216.124, 242.74, 270.81)), (' B 574  ASP  OD1', ' B 575  ALA  N  ', -0.494, (199.41, 210.079, 247.098)), (' G  37  GLN  HG2', ' G  47  LEU HD21', -0.492, (242.07, 227.373, 176.675)), (' E  40  ALA  HB3', ' E  43  LYS  HB2', -0.492, (260.755, 231.306, 172.594)), (' C 855  PHE  HB3', ' C 858  LEU  HB2', -0.492, (208.518, 212.974, 260.009)), (' B1141  LEU  HG ', ' B1145  LEU HD22', -0.491, (224.382, 222.43, 343.693)), (' C1086  LYS  HD2', ' C1122  VAL HG11', -0.491, (230.883, 238.319, 333.676)), (' B 713  ALA  HB3', ' C 894  LEU  HA ', -0.488, (215.142, 203.633, 311.346)), (' A 787  GLN HE22', ' A 891  GLY  HA2', -0.488, (209.737, 239.277, 301.54)), (' B 420  ASP  OD2', ' B 460  ASN  ND2', -0.486, (210.797, 241.266, 221.563)), (' A1086  LYS  HD2', ' A1122  VAL HG11', -0.485, (233.205, 212.188, 333.248)), (' G  90  GLN  NE2', ' G  95  PRO  O  ', -0.484, (257.065, 231.599, 189.965)), (' H   7  SER  HG ', ' H  21  SER  HG ', -0.483, (234.835, 188.244, 171.626)), (' A 102  ARG  HB2', ' A 141  LEU HD12', -0.481, (259.8, 263.217, 225.827)), (' A 894  LEU  HA ', ' C 713  ALA  HB3', -0.481, (210.838, 243.337, 311.794)), (' C 476  GLY  HA3', ' C 487  ASN  HB3', -0.48, (262.6, 223.853, 208.892)), (' A 497  PHE  CG ', ' A 507  PRO  HG3', -0.48, (228.757, 211.729, 200.896)), (' C 120  VAL  CG2', ' C 141  LEU HD22', -0.477, (174.203, 233.981, 223.364)), (' F  37  GLN  HG3', ' F  37  GLN  O  ', -0.477, (211.577, 239.246, 174.846)), (' B1099  GLY  HA3', ' Q   1  NAG  H82', -0.476, (213.642, 198.318, 329.465)), (' B 627  ASP  O  ', ' B 634  ARG  NH2', -0.476, (213.358, 185.914, 250.122)), (' B 563  GLN  O  ', ' B 577  ARG  NH2', -0.476, (192.235, 211.675, 238.815)), (' B 699  LEU HD13', ' C 872  GLN  HG2', -0.475, (208.924, 200.963, 290.115)), (' A 563  GLN  O  ', ' A 577  ARG  NH2', -0.475, (252.163, 203.091, 238.833)), (' C 324  GLU  HG3', ' C 539  VAL HG23', -0.475, (205.535, 253.528, 240.542)), (' C 741  TYR  HE1', ' C 966  LEU HD11', -0.473, (213.149, 216.837, 255.343)), (' C 733  LYS  HE3', ' C 771  ALA  HB1', -0.471, (216.372, 208.808, 271.98)), (' C 811  LYS  HD2', ' C 812  PRO  HD2', -0.47, (192.457, 202.033, 288.937)), (' A 611  LEU HD12', ' A 650  LEU HD12', -0.469, (254.609, 229.791, 271.069)), (' A 597  VAL HG22', ' A 610  VAL HG12', -0.469, (252.688, 235.349, 263.839)), (' C 395  VAL HG22', ' C 515  PHE  HB3', -0.469, (229.195, 247.879, 224.655)), (' A 393  THR  OG1', ' A 394  ASN  N  ', -0.468, (244.014, 205.716, 229.77)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.468, (228.073, 196.056, 273.464)), (' C 769  GLY  O  ', ' C 773  GLU  HB2', -0.467, (222.34, 212.72, 274.223)), (' B 825  LYS  NZ ', ' B 942  ALA  O  ', -0.466, (238.67, 199.119, 286.113)), (' A 369  TYR  HB3', ' C 417  LYS  HE3', -0.466, (244.099, 225.465, 210.884)), (' H  52A ASN  HA ', ' H  71  ARG HH21', -0.465, (234.572, 192.086, 189.511)), (' C 733  LYS  HG2', ' C 861  LEU  HB2', -0.465, (213.252, 208.777, 271.04)), (' B1144  GLU  HG3', ' B1145  LEU HD13', -0.463, (226.459, 219.894, 344.048)), (' A 367  VAL HG23', ' A 368  LEU HD12', -0.463, (248.129, 217.224, 213.112)), (' C1099  GLY  HA3', ' W   1  NAG  H82', -0.462, (207.464, 247.171, 329.831)), (' E  68  THR  HB ', ' E  81  GLN  HB3', -0.462, (261.73, 251.647, 180.748)), (' G  38  GLN  HB2', ' G  44  PRO  HG3', -0.462, (248.542, 230.673, 174.619)), (' H  40  ALA  HB3', ' H  43  LYS  HB2', -0.461, (212.372, 190.406, 172.447)), (' A  39  PRO  HG3', ' A  51  THR HG21', -0.459, (240.349, 247.024, 245.06)), (' B 442  ASP  OD2', ' B 509  ARG  NE ', -0.459, (207.288, 222.01, 203.954)), (' C 130  VAL HG21', ' C 231  ILE HG23', -0.458, (190.764, 232.167, 221.147)), (' C 497  PHE  CG ', ' C 507  PRO  HG3', -0.458, (234.493, 234.665, 200.914)), (' B 665  PRO  HB3', ' C 864  LEU HD22', -0.457, (217.972, 204.344, 277.964)), (' A 390  LEU HD11', ' B 983  ARG  HA ', -0.457, (242.21, 218.638, 231.23)), (' A 697  MET  HE1', ' B 779  GLN HE22', -0.455, (245.539, 229.069, 285.446)), (' B 746  SER  HB2', ' B 981  LEU HD11', -0.454, (243.77, 224.673, 242.727)), (' A 774  GLN HE22', ' A1018  ILE HG21', -0.452, (223.677, 236.071, 276.979)), (' C 727  LEU HD22', ' C1025  ALA  HB2', -0.452, (213.734, 220.939, 287.047)), (' A 521  PRO  HD3', ' A 564  GLN  HB2', -0.451, (249.965, 204.672, 236.236)), (' A1099  GLY  HA3', ' B   1  NAG  H82', -0.451, (252.981, 228.435, 329.831)), (' E  60  ALA  HB3', ' E  63  VAL HG22', -0.45, (262.929, 239.703, 183.76)), (' A 740  MET  HE3', ' C 589  PRO  HG2', -0.449, (216.076, 247.856, 253.467)), (' A 437  ASN  ND2', ' A 506  GLN  OE1', -0.449, (229.64, 219.956, 203.084)), (' B1052  PHE  HB2', ' B1063  LEU  HB2', -0.449, (239.908, 210.585, 297.279)), (' B 733  LYS  HG2', ' B 861  LEU  HB2', -0.448, (244.151, 222.773, 270.96)), (' F  90  GLN  NE2', ' F  95  PRO  O  ', -0.448, (202.707, 248.676, 189.851)), (' B 921  LYS  HA ', ' B 921  LYS  HD3', -0.447, (243.207, 202.892, 314.112)), (' C 662  CYS  HB2', ' C 671  CYS  HB3', -0.447, (203.689, 242.197, 280.282)), (' B 497  PHE  CG ', ' B 507  PRO  HG3', -0.447, (211.059, 227.849, 200.906)), (' C  66  HIS  HB2', ' C  69  HIS  HB2', -0.446, (170.142, 248.609, 237.076)), (' A 310  LYS  HG3', ' A 600  PRO  HA ', -0.446, (247.687, 242.023, 273.476)), (' A 327  VAL HG23', ' A 530  SER  HA ', -0.446, (257.653, 220.009, 230.913)), (' A  21  ARG  HA ', ' A  21  ARG  HD2', -0.445, (280.253, 256.293, 229.808)), (' C 294  ASP  N  ', ' C 294  ASP  OD2', -0.444, (194.424, 240.701, 257.444)), (' C 325  SER  HA ', ' C 540  ASN  HB2', -0.444, (207.951, 250.515, 238.404)), (' A 981  LEU  HA ', ' A 981  LEU HD23', -0.444, (217.746, 238.861, 237.431)), (' C 856  ASN HD22', ' C 966  LEU HD23', -0.444, (210.42, 214.884, 253.091)), (' A 977  LEU HD12', ' A 996  LEU HD23', -0.444, (221.346, 237.792, 244.312)), (' B 406  GLU  OE1', ' B 417  LYS  NZ ', -0.443, (215.326, 236.599, 209.726)), (' A 713  ALA  HB3', ' B 894  LEU  HA ', -0.442, (247.66, 227.263, 311.33)), (' A   1  NAG  O6 ', ' A 804  GLN  NE2', -0.442, (233.942, 257.168, 298.916)), (' L  33  LEU  HA ', ' L  33  LEU HD23', -0.442, (214.344, 201.542, 188.984)), (' A 105  ILE HG23', ' A 241  LEU HD11', -0.442, (259.494, 256.163, 223.8)), (' G  54  ARG  HE ', ' G  60  ASP  HA ', -0.441, (234.024, 222.285, 184.139)), (' C 365  TYR  HB2', ' C 368  LEU HD12', -0.441, (220.602, 245.213, 216.367)), (' A 778  THR  HA ', ' A 781  VAL HG12', -0.441, (219.58, 238.538, 284.601)), (' L  14  SER  HA ', ' L 107  LYS  HB2', -0.44, (205.363, 215.813, 165.738)), (' A 324  GLU  HG3', ' A 539  VAL HG23', -0.44, (259.048, 226.921, 240.566)), (' B 294  ASP  N  ', ' B 294  ASP  OD2', -0.439, (225.457, 190.457, 257.411)), (' B  21  ARG  HA ', ' B  21  ARG  HD2', -0.439, (223.563, 160.864, 230.174)), (' B 393  THR  OG1', ' B 394  ASN  N  ', -0.439, (198.699, 217.377, 229.854)), (' A 850  ILE  HA ', ' A 853  GLN  HG3', -0.438, (218.941, 253.679, 257.719)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.438, (202.554, 244.318, 274.836)), (' H  71  ARG  HD2', ' H  78  LEU HD12', -0.438, (233.331, 190.46, 183.551)), (' H  36  TRP  CD1', ' H  80  LEU HD12', -0.438, (226.452, 186.901, 180.042)), (' H  99  ALA  HB2', ' H 100I ALA  H  ', -0.436, (226.313, 200.364, 192.061)), (' A 742  ILE HG23', ' A 997  ILE HD12', -0.435, (217.567, 235.75, 249.378)), (' C 656  VAL HG23', ' C 695  TYR  HB3', -0.435, (199.162, 249.335, 281.992)), (' B 476  GLY  HA3', ' B 487  ASN  HB3', -0.434, (206.389, 257.892, 209.404)), (' B 395  VAL HG22', ' B 515  PHE  HB3', -0.434, (202.379, 217.319, 224.981)), (' A 656  VAL HG23', ' A 695  TYR  HB3', -0.433, (258.384, 234.301, 281.913)), (' A 662  CYS  HB2', ' A 671  CYS  HB3', -0.433, (250.514, 234.134, 280.319)), (' C1019  ARG  HA ', ' C1019  ARG  HD2', -0.433, (219.465, 218.827, 280.479)), (' A1012  LEU  HA ', ' A1012  LEU HD23', -0.433, (223.181, 229.679, 270.654)), (' A 378  LYS  HB2', ' A 378  LYS  HE2', -0.433, (231.438, 221.223, 222.709)), (' B 808  ASP  N  ', ' B 808  ASP  OD1', -0.432, (255.023, 209.597, 294.226)), (' B 966  LEU  HA ', ' B 966  LEU HD23', -0.431, (235.98, 216.394, 252.481)), (' B 324  GLU  HG3', ' B 539  VAL HG23', -0.431, (209.086, 194.137, 240.751)), (' B 777  ASN  ND2', ' B1019  ARG  HG3', -0.431, (233.668, 223.862, 280.527)), (' A 395  VAL HG22', ' A 515  PHE  HB3', -0.431, (242.289, 209.222, 225.098)), (' E   6  GLU  N  ', ' E   6  GLU  OE1', -0.43, (247.413, 245.724, 171.351)), (' B 378  LYS  HB3', ' B 378  LYS  HE3', -0.43, (216.506, 222.162, 222.7)), (' C 790  LYS  HB2', ' C 790  LYS  HE2', -0.43, (206.427, 198.305, 300.933)), (' B 589  PRO  HG2', ' C 740  MET  SD ', -0.429, (209.401, 206.351, 252.176)), (' C 529  LYS  HB2', ' C 529  LYS  HE3', -0.429, (209.209, 255.057, 226.138)), (' B 656  VAL HG23', ' B 695  TYR  HB3', -0.428, (216.242, 190.737, 282.008)), (' C  39  PRO  HG3', ' C  51  THR HG21', -0.428, (197.878, 227.158, 245.289)), (' A 442  ASP  O  ', ' A 448  ASN  ND2', -0.428, (232.458, 208.207, 197.996)), (' C 105  ILE HG23', ' C 241  LEU HD11', -0.428, (180.002, 239.06, 223.85)), (' A1139  ASP  N  ', ' A1139  ASP  OD1', -0.428, (235.246, 223.398, 338.891)), (' B1005  GLN HE22', ' C1005  GLN HE22', -0.428, (225.022, 224.076, 261.233)), (' B 105  ILE HG23', ' B 241  LEU HD11', -0.428, (234.565, 178.444, 224.074)), (' A1105  THR HG22', ' A1112  PRO  HA ', -0.427, (241.272, 230.895, 324.764)), (' C1105  THR HG22', ' C1112  PRO  HA ', -0.427, (211.355, 236.149, 324.461)), (' B1141  LEU  O  ', ' B1145  LEU  HB2', -0.427, (223.894, 219.652, 344.53)), (' C1033  VAL HG13', ' C1034  LEU HD12', -0.427, (214.933, 213.672, 297.304)), (' C 537  LYS  HE2', ' C 628  GLN HE21', -0.426, (202.459, 255.649, 246.241)), (' A 627  ASP  O  ', ' A 634  ARG  NH2', -0.425, (263.873, 234.532, 250.409)), (' A1005  GLN HE22', ' C1005  GLN HE22', -0.425, (224.024, 224.148, 261.119)), (' B 521  PRO  HD3', ' B 564  GLN  HB2', -0.425, (194.661, 212.696, 236.343)), (' C 850  ILE  HA ', ' C 853  GLN  HG2', -0.425, (202.194, 205.607, 257.628)), (' C 814  LYS  HD2', ' C 868  GLU  HG3', -0.424, (203.19, 201.974, 287.319)), (' D  36  TRP  CD1', ' D  80  LEU HD12', -0.424, (191.255, 241.67, 180.126)), (' F  66  GLY  HA3', ' F  71  PHE  HA ', -0.424, (219.34, 247.782, 190.4)), (' A 779  GLN HE22', ' C 697  MET  HE1', -0.424, (210.419, 240.833, 285.402)), (' B 402  ILE  HA ', ' B 495  TYR  HE1', -0.424, (210.331, 230.667, 207.598)), (' B 666  ILE HD11', ' B 672  ALA  HB2', -0.423, (218.438, 195.818, 274.556)), (' C 393  THR  OG1', ' C 394  ASN  N  ', -0.423, (231.171, 250.813, 229.378)), (' C 773  GLU  OE2', ' C1019  ARG  HD3', -0.422, (221.169, 216.882, 278.215)), (' C 447  GLY  HA2', ' C 497  PHE  O  ', -0.422, (236.64, 234.139, 195.207)), (' E  34  MET  SD ', ' E  94  ARG  HA ', -0.421, (246.11, 243.471, 183.09)), (' D  51  THR HG21', ' D  78  LEU HD11', -0.421, (191.318, 236.334, 184.118)), (' B 826  VAL  HB ', ' B1057  PRO  HG2', -0.42, (243.171, 207.756, 280.87)), (' C1012  LEU  HA ', ' C1012  LEU HD23', -0.419, (221.098, 220.945, 270.742)), (' C 627  ASP  O  ', ' C 634  ARG  NH2', -0.419, (196.887, 253.914, 250.285)), (' C 563  GLN  O  ', ' C 577  ARG  NH2', -0.418, (229.664, 259.728, 239.416)), (' C 550  GLY  HA2', ' C 590  CYS  HB2', -0.418, (211.116, 249.596, 247.515)), (' A 826  VAL  HB ', ' A1057  PRO  HG2', -0.418, (229.952, 249.099, 280.988)), (' E   1  GLU  HA ', ' F  18  ARG  HG2', -0.418, (232.585, 243.75, 177.713)), (' C 403  ARG  HG2', ' C 497  PHE  HE1', -0.418, (235.91, 231.96, 203.955)), (' A1005  GLN  O  ', ' A1009  THR HG23', -0.417, (224.93, 228.558, 262.283)), (' A 476  GLY  HA3', ' A 487  ASN  HB3', -0.417, (205.001, 192.395, 209.425)), (' G  14  SER  HA ', ' G 107  LYS  HB2', -0.417, (241.944, 212.351, 165.786)), (' G  35  TRP  CE2', ' G  73  LEU  HB2', -0.416, (245.741, 221.006, 183.858)), (' A  34  ARG  NH2', ' A 191  GLU  OE2', -0.416, (252.804, 259.043, 245.942)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.416, (253.193, 233.728, 274.694)), (' H  68  THR  HB ', ' H  81  GLN  HB3', -0.415, (229.099, 179.151, 180.215)), (' D  71  ARG  HB3', ' D  78  LEU  HG ', -0.415, (189.126, 235.12, 182.406)), (' B 946  GLY  O  ', ' B 950  ASP  HB2', -0.415, (232.945, 206.669, 278.134)), (' A 374  PHE  HA ', ' A 436  TRP  HB3', -0.415, (236.169, 219.178, 210.253)), (' B 120  VAL HG11', ' B 157  PHE  HE1', -0.415, (241.65, 178.599, 220.686)), (' A 338  PHE  HE2', ' A 358  ILE HD13', -0.414, (245.266, 209.624, 217.8)), (' B 945  LEU HD23', ' B 948  LEU HD12', -0.414, (239.396, 207.707, 283.423)), (' C  21  ARG  HA ', ' C  21  ARG  HD2', -0.413, (169.586, 257.077, 229.852)), (' B 741  TYR  HE1', ' B 966  LEU HD11', -0.412, (238.919, 218.544, 255.47)), (' C 817  PHE  HA ', ' C 820  ASP  HB2', -0.411, (195.311, 212.014, 289.929)), (' E  53  ASN  O  ', ' E  56  THR  OG1', -0.411, (254.097, 250.025, 195.204)), (' H  60  ALA  HB3', ' H  63  VAL HG22', -0.41, (218.575, 184.262, 183.931)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.41, (198.26, 236.242, 273.485)), (' B 994  ASP  O  ', ' B 998  THR HG23', -0.41, (230.644, 225.205, 246.369)), (' E  82  MET  HE3', ' E  82C LEU HD21', -0.409, (263.93, 245.572, 174.047)), (' A 550  GLY  HA2', ' A 590  CYS  HB2', -0.409, (252.94, 224.431, 247.616)), (' A  66  HIS  HB2', ' A  69  HIS  HB2', -0.409, (272.159, 259.971, 237.022)), (' A 847  ARG HH12', ' A 855  PHE  HE2', -0.409, (222.163, 247.979, 264.804)), (' B  86  PHE  N  ', ' B 236  THR  O  ', -0.408, (224.566, 184.653, 230.317)), (' A 807  PRO  HG2', ' A 875  SER  HB2', -0.408, (219.393, 252.26, 294.504)), (' B 121  ASN  ND2', ' B 176  LEU HD13', -0.408, (243.114, 180.518, 230.043)), (' C 627  ASP  N  ', ' C 627  ASP  OD1', -0.408, (200.882, 255.011, 251.583)), (' C 714  ILE HD11', ' C1094  VAL HG21', -0.408, (214.353, 239.276, 318.605)), (' A1141  LEU HD21', ' B1145  LEU HD11', -0.408, (227.611, 222.461, 344.416)), (' B 374  PHE  HA ', ' B 436  TRP  HB3', -0.407, (214.114, 217.459, 210.304)), (' C 825  LYS  NZ ', ' C 942  ALA  O  ', -0.406, (195.598, 225.362, 286.275)), (' C 159  VAL HG13', ' C 160  TYR  HD1', -0.406, (177.807, 237.467, 217.983)), (' A1082  CYS  HB2', ' A1126  CYS  HB2', -0.406, (242.171, 210.845, 329.978)), (' B1105  THR HG22', ' B1112  PRO  HA ', -0.406, (221.438, 207.445, 324.474)), (' A1093  GLY  O  ', ' B 904  TYR  OH ', -0.406, (237.509, 221.854, 319.246)), (' G  32  TYR  HB3', ' G  91  TYR  CD2', -0.406, (248.499, 231.224, 192.05)), (' L  90  GLN HE21', ' L  96  SER  HA ', -0.406, (215.447, 194.246, 189.225)), (' A 159  VAL HG13', ' A 160  TYR  HD1', -0.405, (258.862, 258.951, 217.643)), (' E  21  SER  HA ', ' E  78  LEU  O  ', -0.405, (252.123, 251.013, 176.219)), (' L  90  GLN  NE2', ' L  95  PRO  O  ', -0.405, (215.004, 193.476, 189.973)), (' D  18  LEU HD12', ' D  19  ARG  H  ', -0.405, (184.035, 241.467, 171.073)), (' A 571  ASP  OD1', ' B 966  LEU  HB3', -0.404, (239.525, 215.01, 252.364)), (' L  66  GLY  HA3', ' L  71  PHE  HA ', -0.403, (207.342, 208.108, 190.349)), (' B 790  LYS  HB2', ' B 790  LYS  HE2', -0.403, (256.24, 222.454, 300.884)), (' B 159  VAL HG13', ' B 160  TYR  HD1', -0.403, (237.139, 177.607, 217.92)), (' C 787  GLN HE22', ' C 891  GLY  HA2', -0.402, (219.503, 203.957, 301.243)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.401, (231.47, 217.834, 213.998)), (' D  60  ALA  HB3', ' D  63  VAL HG22', -0.401, (193.232, 250.315, 183.95)), (' B1012  LEU  HA ', ' B1012  LEU HD23', -0.401, (230.339, 223.747, 270.249)), (' F  90  GLN HE21', ' F  96  SER  HA ', -0.4, (203.527, 247.459, 188.93)), (' D  32  HIS  CD2', ' D  97  ARG  HB2', -0.4, (200.513, 228.58, 187.845))]
data['cbeta'] = [('A', ' 140 ', 'PHE', ' ', 0.46900298696384446, (266.2389999999999, 262.48900000000003, 222.306)), ('H', '  97 ', 'ARG', ' ', 0.28291013148363464, (233.076, 202.606, 189.891)), ('H', '  99 ', 'ALA', ' ', 0.2602978585942543, (227.446, 199.715, 192.857)), ('B', ' 140 ', 'PHE', ' ', 0.3695040394361567, (236.548, 169.668, 222.27299999999997)), ('B', '1019 ', 'ARG', ' ', 0.35962795721288704, (231.054, 223.70800000000006, 279.53799999999995)), ('D', '  97 ', 'ARG', ' ', 0.31098860522426935, (201.359, 228.58000000000007, 189.771)), ('D', ' 100 ', 'TYR', ' ', 0.27620490904106065, (200.39900000000006, 234.301, 198.419)), ('C', ' 140 ', 'PHE', ' ', 0.34261293504226453, (171.06500000000005, 241.876, 222.21999999999997)), ('E', '  97 ', 'ARG', ' ', 0.2724235081737793, (239.66600000000005, 242.987, 189.856))]
data['cablam'] = [('A', '21', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-----', (279.1, 254.9, 230.6)), ('A', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (276.2, 250.8, 232.7)), ('A', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (254.0, 251.8, 251.0)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (253.4, 242.2, 234.9)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (258.8, 243.8, 222.6)), ('A', '141', 'LEU', ' beta sheet', ' \n----E', (262.7, 264.5, 222.5)), ('A', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (263.8, 259.7, 248.0)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (256.5, 258.1, 253.6)), ('A', '389', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nGSS-E', (248.5, 220.4, 229.3)), ('A', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (212.2, 183.6, 207.3)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (206.1, 193.1, 202.9)), ('A', '496', 'GLY', ' beta sheet', ' \nE--B-', (224.2, 207.4, 198.4)), ('A', '591', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nESS-S', (252.2, 226.5, 253.1)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (250.0, 229.9, 274.5)), ('A', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-S', (215.4, 245.8, 246.7)), ('A', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (218.6, 252.5, 272.5)), ('A', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nHTTSE', (220.7, 245.5, 255.6)), ('A', '891', 'GLY', 'check CA trace,carbonyls, peptide', ' \nHH-S-', (209.2, 238.2, 302.8)), ('A', '893', 'ALA', ' beta sheet', ' \n-S---', (209.5, 243.9, 307.2)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (232.0, 234.1, 297.2)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (225.5, 243.6, 280.2)), ('A', '172', 'SER', 'check CA trace', ' \nE--S-', (243.6, 264.6, 225.5)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (251.2, 224.2, 243.6)), ('A', '592', 'PHE', 'check CA trace', ' \nSS-S-', (251.8, 225.0, 256.6)), ('A', '593', 'GLY', 'check CA trace', 'bend\nS-S--', (253.2, 225.2, 260.3)), ('A', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (265.1, 232.8, 263.2)), ('H', '100D', 'GLY', 'check CA trace,carbonyls, peptide', ' ', ('', '', '')), ('H', '100H', 'GLY', 'check CA trace,carbonyls, peptide', ' ', ('', '', '')), ('H', '100I', 'ALA', 'check CA trace,carbonyls, peptide', ' ', ('', '', '')), ('L', '69', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (205.0, 202.4, 193.3)), ('B', '21', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-----', (223.5, 162.5, 230.7)), ('B', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (221.4, 167.1, 232.8)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (233.5, 185.7, 251.1)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (225.5, 191.0, 235.0)), ('B', '141', 'LEU', ' beta sheet', 'strand\n--EEE', (240.1, 171.7, 222.6)), ('B', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (235.4, 173.4, 248.0)), ('B', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (237.7, 180.3, 253.6)), ('B', '231', 'ILE', ' beta sheet', ' \nE----', (235.0, 194.5, 222.4)), ('B', '389', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nGSS-E', (209.1, 206.3, 229.6)), ('B', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (195.4, 255.9, 207.3)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (206.7, 256.6, 202.9)), ('B', '496', 'GLY', ' beta sheet', ' \nE--B-', (209.9, 233.7, 198.4)), ('B', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (209.2, 205.8, 237.8)), ('B', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (204.4, 217.8, 248.5)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (216.6, 200.4, 274.5)), ('B', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (251.7, 216.0, 272.4)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nHTTSE', (244.6, 217.5, 255.6)), ('B', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (244.2, 231.6, 302.8)), ('B', '893', 'ALA', ' beta sheet', ' \nSS---', (248.8, 228.2, 307.2)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (229.4, 213.7, 297.2)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (240.7, 214.5, 280.3)), ('B', '172', 'SER', 'check CA trace', ' \nE--S-', (249.7, 188.3, 225.5)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (210.8, 201.8, 243.7)), ('B', '592', 'PHE', 'check CA trace', ' \nSS-S-', (211.0, 201.2, 256.3)), ('B', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (211.4, 185.6, 263.2)), ('B', '797', 'PHE', 'check CA trace', 'bend\n--STT', (248.4, 210.9, 310.1)), ('D', '100D', 'GLY', 'check CA trace,carbonyls, peptide', ' ', ('', '', '')), ('D', '100I', 'ALA', 'check CA trace,carbonyls, peptide', ' ', ('', '', '')), ('D', '105', 'GLN', 'check CA trace,carbonyls, peptide', ' \n----E', (200.3, 236.3, 170.4)), ('C', '21', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-----', (171.3, 256.9, 230.7)), ('C', '23', 'GLN', 'check CA trace,carbonyls, peptide', ' \n-----', (176.4, 256.4, 232.8)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (186.6, 236.5, 251.1)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (195.2, 240.8, 235.0)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (191.2, 244.6, 222.7)), ('C', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (174.9, 241.1, 248.1)), ('C', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (179.7, 235.6, 253.6)), ('C', '231', 'ILE', ' beta sheet', ' \nE----', (193.3, 230.8, 222.4)), ('C', '389', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nGSS-E', (216.6, 247.4, 229.6)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', ' \n---S-', (266.4, 234.5, 207.3)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (261.3, 224.4, 202.9)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (239.9, 232.8, 198.4)), ('C', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (228.7, 245.7, 248.6)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (207.6, 243.9, 274.5)), ('C', '845', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (203.6, 205.6, 272.4)), ('C', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nHTTTE', (208.8, 211.4, 255.7)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (220.9, 204.4, 302.8)), ('C', '893', 'ALA', ' beta sheet', ' \nSS---', (215.7, 202.0, 307.2)), ('C', '987', 'PRO', 'check CA trace,carbonyls, peptide', 'helix\n-HHHH', (223.8, 214.3, 232.8)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (212.8, 226.1, 297.1)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (207.9, 216.0, 280.3)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (211.9, 247.9, 243.9)), ('C', '592', 'PHE', 'check CA trace', ' \nSS-S-', (211.3, 248.5, 256.3)), ('C', '638', 'THR', 'check CA trace', 'bend\nTTS-S', (197.5, 255.6, 263.2)), ('E', '100D', 'GLY', 'check CA trace,carbonyls, peptide', ' ', ('', '', ''))]
data['smoc'] = [('A', 15, u'CYS', 0.8024914318669429, (269.118, 259.79799999999994, 215.695)), ('A', 37, u'TYR', 0.8669450283505263, (245.435, 252.47299999999998, 243.122)), ('A', 44, u'ARG', 0.8755120158387325, (232.598, 252.69899999999998, 248.535)), ('A', 71, u'SER', 0.77713499911166, (280.269, 260.407, 236.35200000000003)), ('A', 72, u'GLY', 0.7349597207063594, (283.394, 261.405, 234.418)), ('A', 89, u'GLY', 0.7990616357323759, (253.176, 245.89000000000001, 235.59)), ('A', 90, u'VAL', 0.7820891217913383, (255.605, 248.73399999999998, 236.21599999999998)), ('A', 106, u'PHE', 0.7453245767794336, (256.47099999999995, 250.142, 225.134)), ('A', 131, u'CYS', 0.7546411515579173, (252.405, 251.936, 215.176)), ('A', 132, u'GLU', 0.7827423063374579, (255.318, 249.925, 213.782)), ('A', 136, u'CYS', 0.8178357117617648, (266.72799999999995, 254.08700000000002, 217.364)), ('A', 141, u'LEU', 0.805937733825884, (262.678, 264.507, 222.48600000000002)), ('A', 153, u'MET', 0.785687536970326, (260.241, 276.184, 223.657)), ('A', 185, u'ASN', 0.8240796749782506, (261.546, 275.382, 243.593)), ('A', 188, u'ASN', 0.8653693117949689, (256.312, 267.49199999999996, 242.54399999999998)), ('A', 199, u'GLY', 0.8170638471406051, (244.465, 243.754, 225.76399999999998)), ('A', 282, u'ASN', 0.9049371992741977, (234.313, 260.558, 251.642)), ('A', 283, u'GLY', 0.846091782804918, (235.08700000000002, 257.552, 249.42700000000002)), ('A', 290, u'ASP', 0.8173372093537454, (249.983, 244.23399999999998, 252.45800000000003)), ('A', 291, u'CYS', 0.7740418490522382, (249.02800000000002, 240.758, 253.68200000000002)), ('A', 301, u'CYS', 0.8578883405394926, (244.012, 240.531, 256.76099999999997)), ('A', 304, u'LYS', 0.8697160628583251, (239.39200000000002, 241.94299999999998, 258.14200000000005)), ('A', 309, u'GLU', 0.8545290694595713, (243.01399999999998, 242.991, 270.17400000000004)), ('A', 318, u'PHE', 0.8410021287583108, (249.17299999999997, 234.984, 252.58200000000002)), ('A', 326, u'ILE', 0.8229230050655498, (257.95099999999996, 222.978, 236.155)), ('A', 382, u'VAL', 0.8068848353132889, (237.547, 217.974, 229.288)), ('A', 383, u'SER', 0.8545516811194882, (238.14899999999997, 221.414, 227.93800000000002)), ('A', 398, u'ASP', 0.7616233183377751, (236.151, 205.60399999999998, 216.72)), ('A', 405, u'ASP', 0.726105919955804, (221.876, 215.969, 210.064)), ('A', 406, u'GLU', 0.6617194936973141, (223.406, 213.306, 212.343)), ('A', 414, u'GLN', 0.8611389607800299, (220.86100000000002, 212.35600000000002, 222.252)), ('A', 422, u'ASN', 0.8166468076486293, (224.27399999999997, 202.569, 214.941)), ('A', 424, u'LYS', 0.8384149065502458, (225.612, 205.305, 221.08100000000002)), ('A', 429, u'PHE', 0.8546743427430957, (231.597, 210.21099999999998, 228.32800000000003)), ('A', 435, u'ALA', 0.6973759488706973, (233.683, 216.131, 212.591)), ('A', 452, u'LEU', 0.822349733846383, (225.6, 202.08100000000002, 205.05200000000002)), ('A', 465, u'GLU', 0.8491034377754603, (228.292, 198.664, 221.23299999999998)), ('A', 471, u'GLU', 0.8810729235480109, (219.48700000000002, 189.227, 209.52)), ('A', 477, u'SER', 0.9057891660061841, (203.847, 189.55, 212.97299999999998)), ('A', 484, u'GLU', 0.8680511176882065, (212.49800000000002, 190.316, 201.599)), ('A', 486, u'PHE', 0.8749227411635566, (206.085, 193.078, 202.93800000000002)), ('A', 500, u'THR', 0.8815795409534044, (224.817, 217.92000000000002, 194.02700000000002)), ('A', 510, u'VAL', 0.7362119824496653, (233.51299999999998, 211.77899999999997, 212.195)), ('A', 524, u'VAL', 0.8035034210544978, (250.23, 209.42000000000002, 224.848)), ('A', 525, u'CYS', 0.7960728666628384, (250.037, 213.17, 225.51299999999998)), ('A', 532, u'ASN', 0.8303986774063176, (263.685, 219.934, 235.095)), ('A', 545, u'GLY', 0.82482319674109, (248.883, 216.406, 233.39000000000001)), ('A', 546, u'LEU', 0.8162733925209305, (248.212, 216.854, 237.12)), ('A', 571, u'ASP', 0.7532990042505392, (240.61899999999997, 214.561, 248.38200000000003)), ('A', 582, u'LEU', 0.7824753592974237, (260.53499999999997, 205.815, 238.29899999999998)), ('A', 584, u'ILE', 0.8208579371809539, (257.91099999999994, 207.955, 243.87800000000001)), ('A', 590, u'CYS', 0.8240369963194943, (253.262, 224.537, 250.039)), ('A', 606, u'ASN', 0.8522402891650317, (252.61399999999998, 246.859, 266.817)), ('A', 608, u'VAL', 0.8458611190655584, (254.17299999999997, 240.767, 267.573)), ('A', 619, u'GLU', 0.8577302998792894, (263.057, 222.954, 261.046)), ('A', 633, u'TRP', 0.8751981494124007, (259.16400000000004, 237.554, 257.53)), ('A', 636, u'TYR', 0.8395742411163619, (260.5, 235.83700000000002, 262.66200000000003)), ('A', 643, u'PHE', 0.8389541414189174, (262.079, 229.16, 272.55400000000003)), ('A', 666, u'ILE', 0.8244879083780833, (249.96200000000002, 229.917, 274.522)), ('A', 689, u'SER', 0.860779846702082, (262.464, 248.72899999999998, 276.71099999999996)), ('A', 692, u'ILE', 0.7882705629197638, (256.59499999999997, 240.52800000000002, 274.67)), ('A', 693, u'ILE', 0.8027643204531183, (257.707, 237.963, 277.259)), ('A', 694, u'ALA', 0.8341357707520082, (256.969, 234.23999999999998, 277.474)), ('A', 699, u'LEU', 0.856792128776208, (251.02200000000002, 227.667, 289.518)), ('A', 707, u'TYR', 0.8197620371188318, (252.685, 219.576, 310.47999999999996)), ('A', 712, u'ILE', 0.748467993389717, (247.618, 223.814, 316.029)), ('A', 725, u'GLU', 0.6940856342278447, (234.35800000000003, 239.85200000000003, 290.92299999999994)), ('A', 728, u'PRO', 0.801920520002011, (228.41, 238.655, 282.43799999999993)), ('A', 729, u'VAL', 0.7517257527764408, (224.61399999999998, 238.424, 282.378)), ('A', 737, u'ASP', 0.8534153957487581, (214.642, 241.288, 258.759)), ('A', 743, u'CYS', 0.8201869676400615, (214.995, 240.463, 248.668)), ('A', 755, u'GLN', 0.7909432671431388, (211.135, 229.70499999999998, 247.406)), ('A', 756, u'TYR', 0.804994367753715, (213.634, 230.68, 250.15200000000002)), ('A', 762, u'GLN', 0.8163250902870839, (213.17399999999998, 229.472, 261.073)), ('A', 770, u'ILE', 0.8588865161563672, (217.571, 233.74699999999999, 271.89)), ('A', 773, u'GLU', 0.7734481373049821, (215.85100000000003, 233.661, 276.83099999999996)), ('A', 780, u'GLU', 0.7572715491638333, (216.045, 235.55800000000002, 286.772)), ('A', 802, u'PHE', 0.8137792047289534, (227.542, 252.92000000000002, 302.38)), ('A', 814, u'LYS', 0.8085656183640761, (219.11899999999997, 256.617, 290.49799999999993)), ('A', 823, u'PHE', 0.833685989243442, (229.317, 252.668, 283.128)), ('A', 836, u'GLN', 0.8156664481422802, (232.335, 252.13299999999998, 260.628)), ('A', 845, u'ALA', 0.7384592839245371, (218.617, 252.464, 272.512)), ('A', 856, u'ASN', 0.8446262861642768, (220.725, 245.532, 255.601)), ('A', 861, u'LEU', 0.8656914596316677, (216.159, 245.17, 269.83099999999996)), ('A', 870, u'ILE', 0.80537511650331, (217.984, 247.532, 286.88)), ('A', 880, u'GLY', 0.7513535431981687, (216.671, 245.2, 301.858)), ('A', 889, u'GLY', 0.7847839721790362, (214.24499999999998, 236.816, 301.178)), ('A', 898, u'PHE', 0.7524285905771908, (223.472, 246.472, 311.29799999999994)), ('A', 904, u'TYR', 0.7392401738789902, (224.85800000000003, 237.005, 313.58799999999997)), ('A', 927, u'PHE', 0.7625784874651134, (235.51399999999998, 248.189, 305.48199999999997)), ('A', 945, u'LEU', 0.8399191280495727, (236.072, 244.722, 283.518)), ('A', 950, u'ASP', 0.8376559473972802, (234.64899999999997, 240.91899999999998, 275.707)), ('A', 962, u'LEU', 0.796591330020196, (228.27299999999997, 238.88500000000002, 258.872)), ('A', 970, u'PHE', 0.865865527496395, (229.38800000000003, 233.67, 246.164)), ('A', 977, u'LEU', 0.717023833964004, (221.24499999999998, 240.906, 243.403)), ('A', 990, u'GLU', 0.7436542490224256, (217.13299999999998, 231.88600000000002, 238.495)), ('A', 994, u'ASP', 0.7812734355309472, (219.79299999999998, 230.532, 243.791)), ('A', 1005, u'GLN', 0.698991464298107, (223.24099999999999, 230.14, 259.501)), ('A', 1031, u'GLU', 0.7653725001320832, (223.18800000000002, 232.471, 298.048)), ('A', 1052, u'PHE', 0.7594237830233014, (226.701, 243.82000000000002, 297.712)), ('A', 1080, u'ALA', 0.7685315107271942, (240.75, 215.722, 325.256)), ('A', 1094, u'VAL', 0.7180581918251208, (239.77899999999997, 223.343, 320.632)), ('A', 1105, u'THR', 0.7527403756125903, (239.454, 228.518, 322.573)), ('A', 1116, u'THR', 0.8272046961718912, (234.85100000000003, 224.89600000000002, 332.619)), ('A', 1147, u'SER', 0.7719369254840575, (231.88000000000002, 227.666, 353.019)), ('A', 1302, u'NAG', 0.8019447071098189, (263.741, 242.784, 249.42200000000003)), ('A', 1303, u'NAG', 0.8231417662371938, (239.32700000000003, 262.16900000000004, 255.429)), ('A', 1304, u'NAG', 0.8076132258751061, (265.248, 207.292, 229.83800000000002)), ('A', 1306, u'NAG', 0.8298243556873197, (267.646, 235.578, 283.878)), ('A', 1307, u'NAG', 0.7229094983182335, (260.29499999999996, 217.507, 269.078)), ('A', 1308, u'NAG', 0.8049960956100132, (247.318, 254.73899999999998, 268.853)), ('A', 1309, u'NAG', 0.7494238240124741, (277.611, 257.899, 214.029)), ('A', 1310, u'NAG', 0.8455927749752875, (246.474, 209.575, 201.153)), ('H', 1, u'GLU', 0.7805566658521004, (236.86800000000002, 206.833, 176.589)), ('H', 6, u'GLU', 0.8884141676420567, (231.721, 192.455, 171.523)), ('H', 11, u'LEU', 0.8027153138324978, (223.681, 181.768, 163.65)), ('H', 16, u'GLY', 0.7893124286741892, (224.191, 173.906, 170.295)), ('H', 34, u'MET', 0.8490665241381615, (229.531, 194.101, 184.847)), ('H', 35, u'ASP', 0.8490275803750428, (226.168, 192.893, 183.553)), ('H', 44, u'GLY', 0.841341566448547, (212.006, 194.753, 175.642)), ('H', 74, u'ALA', 0.8217706169045401, (244.83800000000002, 190.41, 182.46800000000002)), ('H', 80, u'LEU', 0.9006712946376441, (229.48800000000003, 184.137, 178.6)), ('H', 84, u'THR', 0.825688827677425, (214.44, 179.334, 170.424)), ('H', 112, u'SER', 0.8041654150836689, (216.54299999999998, 178.507, 164.568)), ('L', 20, u'THR', 0.829424492890357, (204.261, 212.297, 180.101)), ('L', 35, u'TRP', 0.8598065947676146, (215.63899999999998, 205.45700000000002, 182.854)), ('L', 40, u'PRO', 0.8375198873556827, (217.197, 202.425, 167.125)), ('L', 42, u'GLN', 0.8476159127248257, (222.812, 202.406, 168.917)), ('L', 69, u'THR', 0.8675818835110862, (205.02800000000002, 202.38100000000003, 193.292)), ('L', 99, u'GLY', 0.839899100166787, (209.77599999999998, 197.069, 181.45800000000003)), ('L', 107, u'LYS', 0.7546408748140737, (206.395, 214.034, 164.098)), ('B', 14, u'GLN', 0.8257116909685335, (235.27899999999997, 169.36100000000002, 212.98100000000002)), ('B', 15, u'CYS', 0.7618115637023187, (232.909, 168.491, 215.83700000000002)), ('B', 19, u'THR', 0.8307775078785956, (225.92000000000002, 161.38400000000001, 224.584)), ('B', 23, u'GLN', 0.8559693065826667, (221.38700000000003, 167.092, 232.78)), ('B', 24, u'LEU', 0.8364464437588279, (221.942, 165.465, 236.155)), ('B', 34, u'ARG', 0.8795204246087185, (235.21399999999997, 185.403, 247.701)), ('B', 44, u'ARG', 0.8474473971146302, (244.96800000000002, 203.766, 248.55100000000002)), ('B', 52, u'GLN', 0.875756158082067, (229.111, 200.27299999999997, 245.062)), ('B', 53, u'ASP', 0.8698708433701041, (229.942, 197.995, 242.12)), ('B', 71, u'SER', 0.7202177239778186, (227.685, 158.585, 236.45100000000002)), ('B', 72, u'GLY', 0.6455043292199416, (227.01399999999998, 155.405, 234.465)), ('B', 84, u'LEU', 0.794137831398769, (225.27599999999998, 179.061, 231.256)), ('B', 89, u'GLY', 0.7847768428838762, (228.82700000000003, 189.341, 235.48100000000002)), ('B', 90, u'VAL', 0.7980608001472536, (230.007, 185.812, 236.212)), ('B', 96, u'GLU', 0.8414391698521828, (242.42000000000002, 171.925, 238.727)), ('B', 117, u'LEU', 0.7330740979329341, (233.894, 186.165, 221.77399999999997)), ('B', 131, u'CYS', 0.7486544986413349, (234.431, 187.038, 215.272)), ('B', 132, u'GLU', 0.7981035374143993, (231.24699999999999, 185.48200000000003, 213.873)), ('B', 136, u'CYS', 0.7980531673523348, (229.04899999999998, 173.499, 217.30200000000002)), ('B', 145, u'TYR', 0.8045523425805848, (250.238, 163.805, 224.184)), ('B', 175, u'PHE', 0.8308601117513619, (246.266, 183.678, 231.623)), ('B', 191, u'GLU', 0.8201546548623927, (239.348, 182.82600000000002, 240.11499999999998)), ('B', 198, u'ASP', 0.8120498640667376, (230.02700000000002, 200.318, 228.583)), ('B', 218, u'GLN', 0.8646632843658761, (237.71599999999998, 180.333, 253.626)), ('B', 223, u'LEU', 0.8020569850725107, (241.44899999999998, 190.047, 242.455)), ('B', 266, u'TYR', 0.8120264307831676, (232.532, 176.98000000000002, 240.265)), ('B', 278, u'LYS', 0.8884621036422158, (239.76399999999998, 198.10299999999998, 253.85200000000003)), ('B', 279, u'TYR', 0.8880370144862895, (243.111, 198.977, 252.278)), ('B', 283, u'GLY', 0.8751324323045273, (247.92700000000002, 199.23499999999999, 249.409)), ('B', 291, u'CYS', 0.8487078612080173, (226.41899999999998, 195.524, 253.722)), ('B', 301, u'CYS', 0.8324804057786683, (228.778, 200.0, 256.777)), ('B', 304, u'LYS', 0.8648546734421406, (232.266, 203.30700000000002, 258.186)), ('B', 309, u'GLU', 0.8630971222376561, (231.371, 199.629, 270.21799999999996)), ('B', 310, u'LYS', 0.857135647291582, (228.781, 198.638, 272.806)), ('B', 312, u'ILE', 0.8075503709620522, (222.61399999999998, 201.018, 270.053)), ('B', 313, u'TYR', 0.8126643187402289, (223.025, 202.31, 266.49699999999996)), ('B', 314, u'GLN', 0.8762549466516457, (220.516, 203.20399999999998, 263.79499999999996)), ('B', 326, u'ILE', 0.8125949748993737, (206.467, 196.66899999999998, 236.185)), ('B', 375, u'SER', 0.8232379553003715, (218.22, 218.905, 211.509)), ('B', 382, u'VAL', 0.7611387903618155, (212.425, 216.889, 229.237)), ('B', 384, u'PRO', 0.8587756374886794, (214.90800000000002, 213.06, 224.45700000000002)), ('B', 389, u'ASP', 0.8027277427368623, (209.108, 206.305, 229.635)), ('B', 392, u'PHE', 0.7893656255535295, (201.736, 213.36200000000002, 228.815)), ('B', 398, u'ASP', 0.8100935664979637, (202.40200000000002, 224.27899999999997, 216.69899999999998)), ('B', 406, u'GLU', 0.7779643933859378, (215.798, 231.389, 211.52800000000002)), ('B', 424, u'LYS', 0.8149623155371456, (207.496, 233.618, 221.10399999999998)), ('B', 428, u'ASP', 0.902385956497893, (209.314, 227.933, 231.503)), ('B', 429, u'PHE', 0.8682852118918732, (208.66, 225.948, 228.329)), ('B', 434, u'ILE', 0.8243912660543328, (211.27899999999997, 219.60899999999998, 215.73)), ('B', 467, u'ASP', 0.8130604530548511, (198.38600000000002, 238.192, 215.71399999999997)), ('B', 484, u'GLU', 0.8616079178519036, (201.077, 252.425, 201.60999999999999)), ('B', 486, u'PHE', 0.8653415366307485, (206.655, 256.606, 202.89700000000002)), ('B', 495, u'TYR', 0.8124344609384946, (209.88700000000003, 234.66899999999998, 202.08200000000002)), ('B', 518, u'LEU', 0.8124917857931606, (202.423, 214.627, 235.148)), ('B', 524, u'VAL', 0.7652764447303805, (198.82100000000003, 210.159, 224.89100000000002)), ('B', 525, u'CYS', 0.7642172421770388, (202.242, 208.57, 225.48800000000003)), ('B', 536, u'ASN', 0.8578100942992926, (202.04, 194.54399999999998, 248.285)), ('B', 549, u'THR', 0.8482785892121202, (210.806, 201.768, 243.66)), ('B', 576, u'VAL', 0.844230009099767, (198.555, 207.208, 242.262)), ('B', 588, u'THR', 0.852448256799691, (204.93800000000002, 203.575, 250.21899999999997)), ('B', 592, u'PHE', 0.7979440045680417, (211.03, 201.184, 256.346)), ('B', 593, u'GLY', 0.8331608974776106, (210.48100000000002, 200.36100000000002, 260.005)), ('B', 606, u'ASN', 0.8470966569943994, (229.89800000000002, 189.348, 266.827)), ('B', 610, u'VAL', 0.862593085781057, (217.766, 194.016, 266.275)), ('B', 611, u'LEU', 0.8722073067505738, (214.781, 196.19299999999998, 267.15900000000005)), ('B', 619, u'GLU', 0.8631541623769318, (204.01399999999998, 192.21699999999998, 260.98199999999997)), ('B', 628, u'GLN', 0.8853843913650574, (213.316, 189.32600000000002, 249.41299999999998)), ('B', 643, u'PHE', 0.8324371945287331, (209.846, 190.093, 272.587)), ('B', 662, u'CYS', 0.7962264326960155, (221.24299999999997, 198.423, 282.57099999999997)), ('B', 671, u'CYS', 0.7877264956905133, (217.324, 197.517, 278.49199999999996)), ('B', 689, u'SER', 0.8224818575900058, (226.595, 179.925, 276.753)), ('B', 693, u'ILE', 0.8056045092043522, (219.656, 189.466, 277.287)), ('B', 699, u'LEU', 0.8530809914033536, (213.786, 200.42700000000002, 289.751)), ('B', 707, u'TYR', 0.8320225790189167, (206.22299999999998, 203.086, 310.45799999999997)), ('B', 726, u'ILE', 0.716101369119338, (234.89800000000002, 209.268, 287.282)), ('B', 737, u'ASP', 0.8200998201756743, (244.13, 225.10399999999998, 258.759)), ('B', 747, u'THR', 0.8126094587050277, (247.429, 225.83100000000002, 241.35000000000002)), ('B', 756, u'TYR', 0.8148444017897334, (235.441, 231.194, 250.124)), ('B', 763, u'LEU', 0.8094021570358793, (234.61499999999998, 228.63899999999998, 261.672)), ('B', 780, u'GLU', 0.7308078372957144, (238.44899999999998, 226.82800000000003, 286.688)), ('B', 789, u'TYR', 0.8081062567466236, (251.903, 223.472, 299.58099999999996)), ('B', 805, u'ILE', 0.8315933100556802, (247.04, 209.029, 296.888)), ('B', 830, u'ASP', 0.794220430257867, (241.918, 201.92200000000003, 271.43899999999996)), ('B', 851, u'CYS', 0.8082460803180443, (250.08200000000002, 213.35500000000002, 261.05400000000003)), ('B', 856, u'ASN', 0.7970132376094844, (244.55800000000002, 217.499, 255.60399999999998)), ('B', 878, u'LEU', 0.7357601516769482, (245.66, 216.89200000000002, 298.784)), ('B', 889, u'GLY', 0.7682311172992734, (240.875, 227.936, 300.751)), ('B', 893, u'ALA', 0.755728853879478, (248.82500000000002, 228.218, 307.17900000000003)), ('B', 923, u'ILE', 0.8127824513318581, (237.978, 203.934, 311.378)), ('B', 936, u'ASP', 0.8669452587786604, (242.218, 196.11599999999999, 293.66700000000003)), ('B', 940, u'SER', 0.8412620971703649, (242.018, 193.95600000000002, 288.184)), ('B', 941, u'THR', 0.8425405151408392, (241.347, 195.415, 284.676)), ('B', 961, u'THR', 0.8431260489928682, (233.71699999999998, 211.198, 260.048)), ('B', 962, u'LEU', 0.8362229393617661, (235.184, 214.545, 258.964)), ('B', 980, u'ILE', 0.8199766660613595, (239.21699999999998, 219.73899999999998, 238.24599999999998)), ('B', 990, u'GLU', 0.8208401623181739, (234.815, 227.39100000000002, 238.561)), ('B', 994, u'ASP', 0.8403327507349463, (232.06, 225.85700000000003, 243.76999999999998)), ('B', 995, u'ARG', 0.85348831817736, (230.186, 222.569, 244.17399999999998)), ('B', 1002, u'GLN', 0.7310117578716778, (229.076, 222.01, 254.789)), ('B', 1003, u'SER', 0.7715131604920225, (231.13899999999998, 219.056, 256.03099999999995)), ('B', 1021, u'SER', 0.7749492662089735, (230.08100000000002, 218.039, 283.371)), ('B', 1031, u'GLU', 0.7947580044104062, (232.10399999999998, 222.22, 297.88599999999997)), ('B', 1040, u'VAL', 0.7579523645286677, (222.537, 214.933, 300.41999999999996)), ('B', 1050, u'MET', 0.7686795590894403, (235.785, 214.629, 302.599)), ('B', 1051, u'SER', 0.7514196902613113, (236.72, 214.08200000000002, 298.97299999999996)), ('B', 1054, u'GLN', 0.7606369163598644, (242.906, 212.681, 291.622)), ('B', 1077, u'THR', 0.7566681161785737, (210.371, 207.284, 321.502)), ('B', 1115, u'ILE', 0.8212977973394544, (218.399, 212.76899999999998, 331.069)), ('B', 1144, u'GLU', 0.8910210150858964, (226.38700000000003, 216.42700000000002, 345.153)), ('B', 1147, u'SER', 0.8211966456747581, (223.753, 217.135, 353.027)), ('B', 1302, u'NAG', 0.783603720418764, (220.79, 181.766, 249.44299999999998)), ('B', 1303, u'NAG', 0.7768962110945844, (249.81, 193.261, 255.455)), ('B', 1304, u'NAG', 0.8098744660532897, (189.286, 198.28, 229.917)), ('B', 1305, u'NAG', 0.8405068776525881, (201.73999999999998, 209.523, 320.546)), ('B', 1307, u'NAG', 0.78064579592091, (200.65200000000002, 197.423, 269.251)), ('B', 1308, u'NAG', 0.8311116296759389, (239.36700000000002, 190.01399999999998, 268.862)), ('B', 1310, u'NAG', 0.8035668339560754, (200.722, 213.333, 201.14299999999997)), ('D', 1, u'GLU', 0.7428868131201043, (203.68, 223.436, 176.45800000000003)), ('D', 3, u'HIS', 0.8810494252153952, (199.424, 227.996, 174.88200000000003)), ('D', 11, u'LEU', 0.769411038540349, (187.83100000000002, 246.98100000000002, 163.694)), ('D', 17, u'SER', 0.8521916655083869, (180.83100000000002, 246.865, 172.0)), ('D', 19, u'ARG', 0.8758010265884303, (183.947, 240.651, 173.38800000000003)), ('D', 27, u'PHE', 0.8780251671952556, (198.39700000000002, 223.784, 182.17499999999998)), ('D', 35, u'ASP', 0.8164176773178845, (196.636, 239.49200000000002, 183.532)), ('D', 65, u'GLY', 0.8758944105966725, (184.064, 251.41299999999998, 184.961)), ('D', 71, u'ARG', 0.8561609545910484, (186.76999999999998, 233.71399999999997, 182.98100000000002)), ('D', 73, u'ASP', 0.8327245305649037, (187.571, 227.254, 184.429)), ('D', 84, u'THR', 0.8202052269246729, (190.16899999999998, 256.393, 170.593)), ('D', 85, u'GLU', 0.8592843948349168, (192.931, 255.653, 173.123)), ('D', 92, u'CYS', 0.8495157113486115, (196.474, 237.903, 178.001)), ('D', 112, u'SER', 0.7504996485751578, (188.474, 254.89000000000001, 164.534)), ('F', 7, u'SER', 0.8130941578066446, (217.66299999999998, 255.177, 180.221)), ('F', 8, u'PRO', 0.8218325242856255, (219.24599999999998, 255.406, 177.732)), ('F', 19, u'ALA', 0.8357703246815875, (225.955, 247.17899999999997, 177.253)), ('F', 20, u'THR', 0.8684268191828358, (224.207, 248.32100000000003, 180.446)), ('F', 35, u'TRP', 0.8421710363853427, (212.77899999999997, 242.123, 182.99)), ('F', 40, u'PRO', 0.8922834161793034, (209.676, 242.567, 166.748)), ('F', 42, u'GLN', 0.8573757548506666, (206.94, 237.624, 168.839)), ('F', 46, u'LEU', 0.7930741940747771, (210.20999999999998, 236.40800000000002, 181.176)), ('F', 62, u'PHE', 0.8179984333213597, (221.268, 237.7, 181.4)), ('F', 71, u'PHE', 0.8603800749459881, (218.51399999999998, 248.86700000000002, 189.289)), ('F', 91, u'TYR', 0.8561745560638421, (204.761, 243.98200000000003, 190.58100000000002)), ('F', 103, u'LYS', 0.853930751314178, (215.78, 250.0, 172.061)), ('F', 107, u'LYS', 0.7902895498807626, (225.39600000000002, 246.03, 164.411)), ('C', 14, u'GLN', 0.8041348718308154, (171.465, 243.26299999999998, 213.029)), ('C', 15, u'CYS', 0.7817270816159798, (171.946, 245.787, 215.845)), ('C', 19, u'THR', 0.7780639189997755, (169.444, 255.583, 224.35800000000003)), ('C', 40, u'ASP', 0.8861052263366505, (196.95800000000003, 223.083, 240.941)), ('C', 44, u'ARG', 0.8438997045485161, (196.493, 217.57, 248.572)), ('C', 53, u'ASP', 0.8150879579145687, (199.003, 233.578, 242.155)), ('C', 64, u'TRP', 0.8103690224083487, (178.05800000000002, 246.126, 240.879)), ('C', 72, u'GLY', 0.7115328525821735, (163.461, 257.314, 234.49800000000002)), ('C', 107, u'GLY', 0.7346556300949948, (189.072, 241.532, 222.97899999999998)), ('C', 131, u'CYS', 0.7363764053653663, (187.194, 235.084, 215.26299999999998)), ('C', 136, u'CYS', 0.7742015223571882, (178.20499999999998, 246.567, 217.312)), ('C', 141, u'LEU', 0.8516281396483983, (171.08700000000002, 237.68200000000002, 222.517)), ('C', 146, u'HIS', 0.7561598574166177, (157.82000000000002, 230.318, 221.87800000000001)), ('C', 157, u'PHE', 0.8754215428250366, (171.82200000000003, 236.291, 217.569)), ('C', 178, u'ASP', 0.6774049174532332, (168.724, 226.353, 233.495)), ('C', 198, u'ASP', 0.7955543117366676, (200.929, 232.265, 228.611)), ('C', 220, u'PHE', 0.8614881657516686, (183.975, 230.142, 251.493)), ('C', 278, u'LYS', 0.8712560851497417, (194.11399999999998, 224.937, 253.82700000000003)), ('C', 301, u'CYS', 0.8228584644250021, (201.283, 233.536, 256.745)), ('C', 318, u'PHE', 0.8235255110998994, (203.546, 240.61299999999997, 252.782)), ('C', 324, u'GLU', 0.8694575270296926, (203.79, 251.839, 238.89800000000002)), ('C', 326, u'ILE', 0.8595277873663172, (209.503, 254.525, 236.112)), ('C', 332, u'ILE', 0.8432987399428699, (220.453, 260.584, 224.2)), ('C', 338, u'PHE', 0.8575754390551464, (225.062, 250.27399999999997, 213.29)), ('C', 342, u'PHE', 0.8409505439206248, (227.16, 246.601, 209.055)), ('C', 350, u'VAL', 0.7713618482143427, (240.85800000000003, 238.415, 210.76999999999998)), ('C', 375, u'SER', 0.8441717731974041, (223.01399999999998, 233.297, 211.48600000000002)), ('C', 378, u'LYS', 0.8442653050055678, (224.592, 234.547, 221.12800000000001)), ('C', 382, u'VAL', 0.8152631076130538, (224.006, 239.268, 229.27299999999997)), ('C', 389, u'ASP', 0.7922319219714606, (216.55700000000002, 247.418, 229.601)), ('C', 395, u'VAL', 0.8472135369073327, (231.25, 249.73499999999999, 223.92100000000002)), ('C', 398, u'ASP', 0.8138587540924831, (235.499, 244.189, 216.725)), ('C', 405, u'ASP', 0.7814235462376022, (233.15, 226.36, 209.466)), ('C', 429, u'PHE', 0.8641607532730887, (233.80700000000002, 237.98100000000002, 228.38200000000003)), ('C', 467, u'ASP', 0.816398428262372, (249.425, 240.42100000000002, 215.52100000000002)), ('C', 477, u'SER', 0.8613031379732732, (265.42499999999995, 224.161, 212.96800000000002)), ('C', 480, u'CYS', 0.8732517352416901, (265.64400000000006, 230.785, 206.52700000000002)), ('C', 484, u'GLU', 0.856488397485134, (260.504, 231.324, 201.594)), ('C', 507, u'PRO', 0.7961824668221684, (232.171, 234.35700000000003, 203.79)), ('C', 508, u'TYR', 0.7820943415060856, (230.77599999999998, 235.146, 207.242)), ('C', 510, u'VAL', 0.7394906785668238, (231.43, 238.899, 212.171)), ('C', 525, u'CYS', 0.7790577371669273, (221.91, 252.21699999999998, 225.46200000000002)), ('C', 542, u'ASN', 0.8364168669126163, (215.20399999999998, 251.792, 236.336)), ('C', 549, u'THR', 0.8503409455724091, (211.88000000000002, 247.853, 243.88000000000002)), ('C', 571, u'ASP', 0.7271982079968082, (225.504, 243.635, 248.57299999999998)), ('C', 582, u'LEU', 0.8338511871014846, (223.11599999999999, 265.21599999999995, 238.346)), ('C', 590, u'CYS', 0.7954867767262845, (210.51399999999998, 249.677, 250.092)), ('C', 593, u'GLY', 0.8242663284392988, (211.04399999999998, 249.197, 260.039)), ('C', 607, u'GLN', 0.8468148894650118, (192.313, 241.49800000000002, 267.681)), ('C', 613, u'GLN', 0.8169658682061446, (210.71499999999997, 248.692, 265.719)), ('C', 636, u'TYR', 0.8359703381516965, (197.15800000000002, 250.125, 262.648)), ('C', 643, u'PHE', 0.8539878161480823, (202.21699999999998, 254.89000000000001, 272.65000000000003)), ('C', 658, u'ASN', 0.8677936144758971, (198.99200000000002, 250.978, 286.689)), ('C', 661, u'GLU', 0.7988911799881713, (203.29299999999998, 241.282, 286.335)), ('C', 662, u'CYS', 0.8342472880120374, (203.654, 240.80800000000002, 282.599)), ('C', 670, u'ILE', 0.8501024185019976, (206.918, 247.82800000000003, 278.469)), ('C', 692, u'ILE', 0.8410314077656855, (195.002, 244.43200000000002, 274.703)), ('C', 693, u'ILE', 0.8454255669849703, (196.67299999999997, 246.661, 277.301)), ('C', 726, u'ILE', 0.7350473367859559, (206.222, 223.532, 287.334)), ('C', 737, u'ASP', 0.8170464614038683, (215.363, 207.73299999999998, 258.76599999999996)), ('C', 743, u'CYS', 0.8254638498510052, (215.95100000000002, 208.518, 248.626)), ('C', 756, u'TYR', 0.8339899736032704, (225.002, 212.14399999999998, 250.16299999999998)), ('C', 764, u'ASN', 0.8221455360471833, (221.38600000000002, 210.90200000000002, 262.709)), ('C', 771, u'ALA', 0.8261021425709775, (217.96200000000002, 210.955, 272.405)), ('C', 775, u'ASP', 0.8319372210999539, (217.097, 209.464, 278.53299999999996)), ('C', 805, u'ILE', 0.8416468673285235, (199.777, 213.33100000000002, 296.90299999999996)), ('C', 813, u'SER', 0.8687036937484216, (197.363, 202.677, 288.289)), ('C', 830, u'ASP', 0.8060449595531459, (196.35100000000003, 221.17499999999998, 271.46599999999995)), ('C', 831, u'ALA', 0.7793320640255429, (196.54299999999998, 223.02, 268.148)), ('C', 850, u'ILE', 0.7564293322666662, (201.32100000000003, 205.424, 259.041)), ('C', 856, u'ASN', 0.8285635834204489, (208.785, 211.379, 255.697)), ('C', 882, u'ILE', 0.7820730069550403, (207.578, 211.07399999999998, 304.885)), ('C', 888, u'PHE', 0.7657273986936527, (216.373, 208.21099999999998, 302.969)), ('C', 893, u'ALA', 0.7457217846133796, (215.684, 202.02800000000002, 307.161)), ('C', 898, u'PHE', 0.7456632333476857, (206.418, 212.712, 311.36)), ('C', 901, u'GLN', 0.7284386468910987, (210.738, 215.10299999999998, 311.631)), ('C', 909, u'ILE', 0.7576631059817475, (215.134, 226.76399999999998, 310.15000000000003)), ('C', 913, u'GLN', 0.7891232152496427, (210.539, 222.42600000000002, 318.948)), ('C', 927, u'PHE', 0.7984325530441653, (198.997, 222.366, 305.51599999999996)), ('C', 941, u'THR', 0.8448482575253118, (191.041, 224.85800000000003, 284.741)), ('C', 945, u'LEU', 0.8020690214590375, (201.666, 224.54899999999998, 283.47799999999995)), ('C', 950, u'ASP', 0.8332603715101845, (205.634, 225.251, 275.729)), ('C', 980, u'ILE', 0.8415701060810019, (212.9, 214.92700000000002, 238.30700000000002)), ('C', 990, u'GLU', 0.7944480694441929, (221.945, 214.437, 238.68)), ('C', 993, u'ILE', 0.8433941491828139, (218.74699999999999, 215.98200000000003, 242.261)), ('C', 994, u'ASP', 0.8075202672076583, (221.953, 217.478, 243.68800000000002)), ('C', 1018, u'ILE', 0.7120690998080031, (216.287, 221.55100000000002, 278.60200000000003)), ('C', 1025, u'ALA', 0.7683731243804266, (215.584, 220.375, 288.743)), ('C', 1057, u'PRO', 0.8101869457889743, (204.30100000000002, 215.393, 281.34200000000004)), ('C', 1065, u'VAL', 0.7459786047767064, (206.34, 223.439, 302.09299999999996)), ('C', 1077, u'THR', 0.7491733658538208, (216.844, 245.77499999999998, 321.42999999999995)), ('C', 1089, u'PHE', 0.7738414393598952, (226.125, 238.281, 325.27)), ('C', 1094, u'VAL', 0.6973214502915884, (218.30100000000002, 238.436, 320.612)), ('C', 1126, u'CYS', 0.8050727598756521, (230.993, 246.54899999999998, 329.34400000000005)), ('C', 1138, u'TYR', 0.8531807360038147, (218.83800000000002, 235.864, 336.807)), ('C', 1144, u'GLU', 0.8703179235728083, (216.76899999999998, 227.315, 345.15400000000005)), ('C', 1147, u'SER', 0.7994661143856215, (218.565, 229.17899999999997, 353.039)), ('C', 1302, u'NAG', 0.7926539405208337, (189.47299999999998, 249.525, 249.48100000000002)), ('C', 1303, u'NAG', 0.8131717382417502, (184.906, 218.672, 255.47)), ('C', 1304, u'NAG', 0.8384477881586168, (219.523, 268.57599999999996, 229.931)), ('C', 1306, u'NAG', 0.8393725128163637, (193.797, 256.49799999999993, 283.957)), ('C', 1307, u'NAG', 0.7912461033072196, (213.05, 259.20599999999996, 269.272)), ('C', 1308, u'NAG', 0.7991075386443438, (187.336, 229.345, 268.89099999999996)), ('C', 1309, u'NAG', 0.724525652654501, (169.454, 254.045, 214.17899999999997)), ('C', 1310, u'NAG', 0.8222182841646473, (226.833, 251.14399999999998, 201.13899999999998)), ('E', 1, u'GLU', 0.7452675372998272, (234.101, 243.292, 177.023)), ('E', 9, u'GLY', 0.7850633119005253, (256.36, 246.948, 167.383)), ('E', 10, u'GLY', 0.7771160871339752, (258.94599999999997, 246.71599999999998, 164.651)), ('E', 11, u'LEU', 0.7521476417328818, (262.443, 245.61499999999998, 163.695)), ('E', 16, u'GLY', 0.8134841792466757, (268.9309999999999, 250.108, 170.493)), ('E', 18, u'LEU', 0.8185031549724352, (262.138, 251.26999999999998, 171.48600000000002)), ('E', 34, u'MET', 0.8380117507437719, (249.05, 244.10399999999998, 185.141)), ('E', 35, u'ASP', 0.820897032321953, (251.653, 241.761, 183.667)), ('E', 37, u'VAL', 0.8905673316463045, (254.45200000000003, 237.874, 179.383)), ('E', 40, u'ALA', 0.8689267572960439, (259.72999999999996, 233.502, 171.92000000000002)), ('E', 42, u'GLY', 0.81836910670065, (258.683, 228.36, 168.811)), ('E', 52, u'ALA', 0.8963526992518129, (247.52100000000002, 251.372, 196.66899999999998)), ('E', 62, u'SER', 0.8567808127772916, (267.072, 238.042, 183.248)), ('E', 73, u'ASP', 0.8537016730148015, (245.536, 255.523, 183.872)), ('E', 84, u'THR', 0.823924921553157, (269.404, 238.672, 170.507)), ('E', 85, u'GLU', 0.8214019713783969, (267.42599999999993, 236.74099999999999, 173.141)), ('G', 18, u'ARG', 0.8384375589620149, (240.134, 210.842, 176.781)), ('G', 28, u'VAL', 0.8580116533199914, (253.905, 225.721, 195.146)), ('G', 39, u'LYS', 0.8675144036023805, (245.185, 228.24499999999998, 169.409)), ('G', 47, u'LEU', 0.8390906651810743, (240.79899999999998, 228.08700000000002, 181.786)), ('G', 62, u'PHE', 0.8079143657910024, (237.572, 221.58800000000002, 181.189)), ('G', 77, u'ARG', 0.8493284553224202, (234.953, 214.67399999999998, 174.68200000000002)), ('G', 91, u'TYR', 0.8599151314613512, (251.559, 232.373, 190.72899999999998)), ('G', 107, u'LYS', 0.7508493857426077, (243.006, 214.13899999999998, 164.147))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23506/7ls9/Model_validation_1/validation_cootdata/molprobity_probe7ls9_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' A 709  ASN  O  ', ' B 897  PRO  HG3', -0.703, (171.909, 136.507, 208.733)), (' B 538  CYS  HG ', ' B 590  CYS  HG ', -0.521, (127.119, 162.042, 146.307)), (' B 708  SER  HB3', ' B 711  SER  HB3', -0.506, (134.236, 160.379, 210.311)), (' A 709  ASN  O  ', ' A 711  SER  N  ', -0.476, (173.08, 136.095, 209.77)), (' A 382  VAL HG11', ' A 387  LEU HD23', -0.459, (160.066, 141.055, 121.402)), (' A 280  ASN HD22', ' A1306  NAG  H83', -0.458, (201.765, 170.064, 151.575)), (' C 580  GLN  O  ', ' C1308  NAG  H4 ', -0.449, (196.612, 187.414, 127.81)), (' C 600  PRO  HB3', ' C 674  TYR  HB2', -0.417, (157.422, 197.835, 171.028)), (' A 327  VAL  H  ', ' A 531  THR HG22', -0.41, (171.676, 126.813, 127.709)), (' A 342  PHE  HB2', ' A1305  NAG  H82', -0.409, (156.721, 137.329, 105.645)), (' A1304  NAG  H2 ', ' A1304  NAG  H82', -0.409, (175.856, 124.401, 157.802))]
data['cbeta'] = [('A', ' 709 ', 'ASN', ' ', 0.2623334409817296, (169.821, 132.664, 209.66700000000003)), ('A', '1074 ', 'ASN', ' ', 0.38266014314468316, (181.3, 139.327, 209.18300000000002)), ('B', ' 603 ', 'ASN', ' ', 0.37167926181325567, (137.591, 130.674, 168.838)), ('B', '1074 ', 'ASN', ' ', 0.3450835295629172, (134.66, 153.438, 211.51900000000003)), ('C', ' 198 ', 'ASP', ' ', 0.31139999063492446, (145.682, 184.246, 127.802))]
data['smoc'] = [('A', 36, u'VAL', 0.7394282550722056, (199.242, 157.43200000000002, 140.271)), ('A', 115, u'GLN', 0.7400735176330968, (199.467, 152.185, 111.41300000000001)), ('A', 119, u'ILE', 0.7298183604235425, (207.461, 159.271, 119.781)), ('A', 193, u'VAL', 0.6713050463356817, (201.622, 156.599, 131.571)), ('A', 197, u'ILE', 0.7364649393262904, (189.80100000000002, 155.541, 125.336)), ('A', 220, u'PHE', 0.8062463183986639, (205.004, 158.155, 146.056)), ('A', 223, u'LEU', 0.6274053235756756, (202.359, 161.98200000000003, 137.33200000000002)), ('A', 267, u'VAL', 0.6871527335163107, (206.29899999999998, 147.829, 132.341)), ('A', 279, u'TYR', 0.763007868820897, (195.46800000000002, 166.70499999999998, 147.959)), ('A', 285, u'ILE', 0.7453720260538814, (198.39800000000002, 164.92600000000002, 145.153)), ('A', 291, u'CYS', 0.6871244042198927, (190.349, 150.93800000000002, 147.24399999999997)), ('A', 308, u'VAL', 0.7555758475394705, (190.638, 154.395, 160.848)), ('A', 309, u'GLU', 0.7844207430997486, (189.4, 154.278, 164.48200000000003)), ('A', 319, u'ARG', 0.7777398180051748, (178.429, 137.39200000000002, 146.383)), ('A', 326, u'ILE', 0.7779899396768314, (172.316, 127.86999999999999, 130.231)), ('A', 333, u'THR', 0.8296717276588124, (161.946, 120.972, 115.36999999999999)), ('A', 346, u'ARG', 0.7925187303591125, (145.162, 138.757, 99.408)), ('A', 350, u'VAL', 0.8167680549634108, (140.2, 146.672, 107.81)), ('A', 354, u'ASN', 0.8159996477559742, (142.138, 138.236, 109.189)), ('A', 387, u'LEU', 0.7276370733273819, (162.781, 138.84, 119.96900000000001)), ('A', 396, u'TYR', 0.7867793961979543, (148.72899999999998, 135.991, 116.627)), ('A', 403, u'ARG', 0.8156824038839364, (145.26299999999998, 154.12, 103.37499999999999)), ('A', 406, u'GLU', 0.7900538638822562, (145.784, 156.002, 108.70400000000001)), ('A', 417, u'LYS', 0.7449513624800513, (137.765, 155.98000000000002, 112.412)), ('A', 437, u'ASN', 0.8441605344192945, (153.29899999999998, 150.568, 100.78)), ('A', 450, u'ASN', 0.8189888905764711, (137.444, 145.792, 96.67099999999999)), ('A', 458, u'LYS', 0.8248757479821915, (126.95100000000001, 153.752, 117.218)), ('A', 468, u'ILE', 0.8356723964801362, (131.14399999999998, 142.459, 109.99400000000001)), ('A', 471, u'GLU', 0.8065392124373705, (122.821, 147.407, 109.361)), ('A', 485, u'GLY', 0.7248533281213727, (118.17099999999999, 156.99, 102.418)), ('A', 493, u'GLN', 0.8234983347665285, (132.874, 152.608, 102.395)), ('A', 512, u'VAL', 0.7711426731219845, (150.237, 143.07899999999998, 113.604)), ('A', 524, u'VAL', 0.7428181138000397, (156.563, 129.636, 120.199)), ('A', 552, u'LEU', 0.7268377167839094, (169.923, 124.786, 140.046)), ('A', 567, u'ARG', 0.6956630211215854, (156.691, 130.698, 143.63)), ('A', 571, u'ASP', 0.47794005972673315, (158.20499999999998, 137.38400000000001, 142.69299999999998)), ('A', 587, u'ILE', 0.7225962592476927, (166.354, 127.426, 141.86200000000002)), ('A', 595, u'VAL', 0.686129575631371, (181.32700000000003, 141.946, 154.765)), ('A', 597, u'VAL', 0.6788963446414089, (186.08700000000002, 144.518, 158.687)), ('A', 671, u'CYS', 0.6712407190072043, (183.88000000000002, 139.89200000000002, 170.849)), ('A', 672, u'ALA', 0.6593000297477751, (187.354, 140.665, 169.441)), ('A', 713, u'ALA', 0.6820474185781225, (178.123, 143.102, 207.298)), ('A', 729, u'VAL', 0.5517170913075495, (170.977, 169.864, 175.69)), ('A', 746, u'SER', 0.7403480690068848, (167.74299999999997, 180.876, 139.162)), ('A', 755, u'GLN', 0.6748368564280428, (154.026, 174.497, 140.873)), ('A', 759, u'PHE', 0.621078475043034, (156.363, 172.155, 150.35600000000002)), ('A', 767, u'LEU', 0.6253309708751746, (163.48800000000003, 173.92600000000002, 160.61399999999998)), ('A', 780, u'GLU', 0.5772232019062592, (164.677, 174.70299999999997, 180.791)), ('A', 781, u'VAL', 0.5268526661911873, (168.101, 173.483, 182.069)), ('A', 804, u'GLN', 0.6374509492321603, (188.164, 174.312, 190.418)), ('A', 819, u'GLU', 0.6571627245059767, (184.415, 174.454, 182.495)), ('A', 822, u'LEU', 0.6209069167662782, (185.11399999999998, 170.936, 179.059)), ('A', 870, u'ILE', 0.5875644197367887, (175.35200000000003, 180.02800000000002, 180.47899999999998)), ('A', 874, u'THR', 0.5874000029037519, (175.972, 177.736, 186.33200000000002)), ('A', 890, u'ALA', 0.6766098392967007, (161.983, 176.13, 197.583)), ('A', 898, u'PHE', 0.6481152892680521, (178.64399999999998, 174.597, 204.58200000000002)), ('A', 905, u'ARG', 0.586098504435361, (172.98000000000002, 165.806, 203.636)), ('A', 950, u'ASP', 0.6944443109687817, (178.64299999999997, 162.77299999999997, 168.79299999999998)), ('A', 962, u'LEU', 0.6136863955329793, (172.677, 167.41899999999998, 152.10399999999998)), ('A', 965, u'GLN', 0.6487129359432303, (173.445, 165.685, 147.041)), ('A', 968, u'SER', 0.6663003425622033, (173.925, 164.298, 141.91)), ('A', 980, u'ILE', 0.7104484198362689, (171.26899999999998, 173.226, 131.563)), ('A', 996, u'LEU', 0.6970713993922194, (166.792, 168.341, 139.60999999999999)), ('A', 997, u'ILE', 0.641183949425298, (163.791, 169.92700000000002, 141.433)), ('A', 1009, u'THR', 0.6049383244653921, (162.69299999999998, 164.686, 158.60299999999998)), ('A', 1013, u'ILE', 0.6280903060937812, (163.607, 162.92800000000003, 164.76)), ('A', 1030, u'SER', 0.5544004601671907, (165.853, 170.42000000000002, 189.781)), ('A', 1040, u'VAL', 0.5999037426349395, (168.712, 155.108, 193.315)), ('A', 1051, u'SER', 0.5216937603819988, (175.79899999999998, 167.702, 192.89000000000001)), ('A', 1062, u'PHE', 0.5950184944538915, (176.989, 167.257, 186.66)), ('A', 1087, u'ALA', 0.6539713584971506, (160.834, 141.509, 223.23399999999998)), ('A', 1089, u'PHE', 0.5999416210930445, (163.3, 145.997, 218.817)), ('A', 1105, u'THR', 0.6352261405050549, (174.30100000000002, 150.46, 215.523)), ('A', 1115, u'ILE', 0.7046529759326239, (171.38600000000002, 148.624, 224.38000000000002)), ('A', 1121, u'PHE', 0.6594539887910535, (160.933, 149.761, 221.901)), ('A', 1305, u'NAG', 0.7940076204153987, (158.155, 136.393, 105.518)), ('A', 1306, u'NAG', 0.8325449738113478, (202.425, 170.736, 152.996)), ('A', 1310, u'NAG', 0.717148359880081, (160.441, 115.392, 122.019)), ('B', 27, u'ALA', 0.6547969958698446, (114.086, 123.07799999999999, 141.48600000000002)), ('B', 66, u'HIS', 0.7423085512237825, (116.44100000000002, 115.61999999999999, 135.55)), ('B', 91, u'TYR', 0.6519108934004553, (129.877, 125.287, 136.89800000000002)), ('B', 117, u'LEU', 0.7263033799821125, (131.439, 123.786, 119.87899999999999)), ('B', 124, u'THR', 0.7943827320643387, (137.532, 105.53, 126.929)), ('B', 125, u'ASN', 0.845686137216728, (137.93800000000002, 108.684, 124.753)), ('B', 164, u'ASN', 0.7081858308578372, (130.16, 121.965, 107.80499999999999)), ('B', 165, u'ASN', 0.8174577281318864, (132.721, 124.864, 107.708)), ('B', 212, u'LEU', 0.7623721940280745, (123.377, 108.724, 149.167)), ('B', 220, u'PHE', 0.7870898862557482, (135.76399999999998, 120.99400000000001, 150.085)), ('B', 240, u'THR', 0.755368466052929, (123.834, 118.74900000000001, 127.90400000000001)), ('B', 263, u'ALA', 0.7194959528065928, (119.868, 110.958, 135.418)), ('B', 297, u'SER', 0.6452034022221623, (134.789, 136.67899999999997, 155.195)), ('B', 298, u'GLU', 0.6770143964035814, (135.76299999999998, 140.24399999999997, 154.21699999999998)), ('B', 300, u'LYS', 0.7139998593360978, (139.42000000000002, 137.147, 157.055)), ('B', 301, u'CYS', 0.6198406138365099, (140.57399999999998, 138.36800000000002, 153.621)), ('B', 315, u'THR', 0.6676819042547669, (137.577, 146.038, 156.271)), ('B', 332, u'ILE', 0.8463628652802906, (120.74900000000001, 179.29, 125.253)), ('B', 340, u'GLU', 0.8530123009551366, (121.05799999999999, 184.778, 106.034)), ('B', 346, u'ARG', 0.7986919908392585, (118.989, 185.80100000000002, 96.66799999999999)), ('B', 358, u'ILE', 0.8243483060757688, (130.39000000000001, 183.64399999999998, 111.90100000000001)), ('B', 375, u'SER', 0.8245663623451965, (119.568, 167.14899999999997, 98.369)), ('B', 376, u'THR', 0.8255388502958771, (123.089, 166.40200000000002, 99.80799999999999)), ('B', 384, u'PRO', 0.85640879915822, (128.035, 165.507, 111.891)), ('B', 391, u'CYS', 0.8149540964135146, (134.07899999999998, 175.208, 119.52799999999999)), ('B', 395, u'VAL', 0.8118067091311899, (133.26299999999998, 179.608, 111.18199999999999)), ('B', 398, u'ASP', 0.8290794937849969, (130.80700000000002, 179.954, 101.59700000000001)), ('B', 427, u'ASP', 0.7340062091516603, (143.092, 167.511, 100.364)), ('B', 428, u'ASP', 0.762365907744566, (142.56, 167.373, 104.21600000000001)), ('B', 432, u'CYS', 0.8028774161311832, (130.76899999999998, 170.496, 105.91100000000002)), ('B', 439, u'ASN', 0.8054625683186845, (115.508, 175.038, 89.722)), ('B', 445, u'VAL', 0.6915846502379391, (111.87299999999999, 180.934, 81.027)), ('B', 453, u'TYR', 0.7883915784923421, (130.977, 180.82700000000003, 86.55)), ('B', 458, u'LYS', 0.7085724866961731, (145.732, 181.184, 83.415)), ('B', 464, u'PHE', 0.7571471633250525, (140.006, 178.694, 99.41000000000001)), ('B', 468, u'ILE', 0.7366945994314577, (136.65, 187.99, 90.536)), ('B', 470, u'THR', 0.6595650212721667, (137.51299999999998, 190.015, 84.26100000000001)), ('B', 477, u'SER', 0.5244390065797716, (148.069, 182.518, 68.689)), ('B', 478, u'THR', 0.5996648900837613, (147.86200000000002, 186.336, 69.245)), ('B', 481, u'ASN', 0.6201038379831998, (144.71499999999997, 193.585, 73.36)), ('B', 500, u'THR', 0.7023613421002336, (112.777, 172.71399999999997, 81.539)), ('B', 510, u'VAL', 0.8142776381409216, (125.519, 175.092, 97.588)), ('B', 519, u'HIS', 0.7489530625481446, (144.996, 181.084, 120.343)), ('B', 550, u'GLY', 0.7578913325538097, (127.606, 166.141, 146.304)), ('B', 559, u'PHE', 0.7268456775848785, (126.647, 186.32800000000003, 146.525)), ('B', 574, u'ASP', 0.6721106043154359, (131.017, 174.905, 148.84)), ('B', 587, u'ILE', 0.7067656075142483, (127.235, 171.848, 148.091)), ('B', 590, u'CYS', 0.7206390725592028, (128.18200000000002, 162.57, 149.765)), ('B', 595, u'VAL', 0.6528738894692561, (133.469, 150.29399999999998, 157.575)), ('B', 597, u'VAL', 0.6862352692883072, (133.71599999999998, 144.71499999999997, 161.62)), ('B', 602, u'THR', 0.7318612631471567, (136.135, 133.268, 165.093)), ('B', 641, u'ASN', 0.7219179989909439, (119.166, 145.184, 164.35100000000003)), ('B', 645, u'THR', 0.7389289294748822, (125.812, 155.503, 167.92000000000002)), ('B', 664, u'ILE', 0.7127359327732291, (135.63, 146.132, 172.22299999999998)), ('B', 666, u'ILE', 0.6988098057780566, (133.591, 151.754, 169.48800000000003)), ('B', 689, u'SER', 0.7837410410600492, (121.897, 131.771, 172.185)), ('B', 697, u'MET', 0.7365488507261526, (130.903, 151.937, 179.121)), ('B', 713, u'ALA', 0.6143730250697953, (139.41, 154.395, 209.10999999999999)), ('B', 753, u'LEU', 0.6000977652164641, (170.95700000000002, 154.029, 141.183)), ('B', 763, u'LEU', 0.5455296208461973, (169.411, 154.60999999999999, 154.39700000000002)), ('B', 767, u'LEU', 0.587274323889613, (169.334, 151.166, 159.88500000000002)), ('B', 856, u'ASN', 0.6829104189341212, (166.24599999999998, 140.98600000000002, 148.76999999999998)), ('B', 859, u'THR', 0.700925949311464, (169.232, 140.55700000000002, 156.859)), ('B', 874, u'THR', 0.5604225249303797, (168.76999999999998, 138.718, 185.9)), ('B', 895, u'GLN', 0.6546419675212407, (174.88400000000001, 140.38500000000002, 203.592)), ('B', 906, u'PHE', 0.5746543043514706, (158.369, 147.464, 206.189)), ('B', 979, u'ASP', 0.6778907239850552, (161.756, 140.864, 132.312)), ('B', 996, u'LEU', 0.5892159136790673, (161.198, 150.819, 139.461)), ('B', 1004, u'LEU', 0.633442187182426, (162.566, 151.94899999999998, 151.375)), ('B', 1022, u'ALA', 0.5584436751782994, (164.258, 150.94, 177.494)), ('B', 1037, u'SER', 0.5037582786339643, (160.88500000000002, 153.61299999999997, 195.583)), ('B', 1051, u'SER', 0.5862325476665714, (160.781, 143.914, 193.091)), ('B', 1077, u'THR', 0.6120949979241035, (139.809, 160.562, 216.268)), ('B', 1081, u'ILE', 0.6122385189688574, (144.505, 165.901, 223.67899999999997)), ('B', 1087, u'ALA', 0.570101061736817, (147.936, 170.278, 224.186)), ('B', 1094, u'VAL', 0.5630889084767952, (147.101, 159.05700000000002, 215.10899999999998)), ('B', 1096, u'VAL', 0.6523491880497054, (141.972, 157.002, 218.11299999999997)), ('B', 1115, u'ILE', 0.6526801742446594, (149.015, 157.553, 225.542)), ('B', 1123, u'SER', 0.6438538861032842, (152.767, 172.60399999999998, 222.184)), ('B', 1137, u'VAL', 0.7635352353007887, (148.624, 161.191, 229.598)), ('B', 1147, u'SER', 0.8308156764431613, (158.35600000000002, 154.314, 245.68200000000002)), ('B', 1306, u'NAG', 0.8431109097730343, (118.71400000000001, 177.146, 108.768)), ('C', 81, u'ASN', 0.5990534470315874, (144.785, 214.251, 124.962)), ('C', 86, u'PHE', 0.7199516435213872, (149.425, 200.484, 128.025)), ('C', 119, u'ILE', 0.7517640255734078, (134.92800000000003, 202.231, 123.44200000000001)), ('C', 122, u'ASN', 0.8000615419383339, (126.915, 207.224, 123.10499999999999)), ('C', 142, u'GLY', 0.5324902276801134, (131.27499999999998, 217.52200000000002, 121.35199999999999)), ('C', 186, u'PHE', 0.8082671883105603, (132.77899999999997, 217.554, 140.177)), ('C', 193, u'VAL', 0.7181036580670068, (140.812, 199.107, 135.39000000000001)), ('C', 194, u'PHE', 0.7311034047273091, (141.816, 197.77899999999997, 131.947)), ('C', 213, u'VAL', 0.8027721581017647, (138.87, 218.14899999999997, 143.98700000000002)), ('C', 216, u'LEU', 0.7860173371507951, (142.477, 210.847, 144.534)), ('C', 223, u'LEU', 0.6715751649916244, (136.30100000000002, 197.835, 141.621)), ('C', 233, u'ILE', 0.7643120910854011, (143.712, 191.89600000000002, 119.86)), ('C', 263, u'ALA', 0.7848142845351697, (137.60299999999998, 217.311, 132.74599999999998)), ('C', 267, u'VAL', 0.6984352336704184, (146.556, 207.3, 134.907)), ('C', 291, u'CYS', 0.6962813043371918, (153.015, 192.637, 150.379)), ('C', 327, u'VAL', 0.7636049170643056, (181.873, 188.095, 129.63)), ('C', 340, u'GLU', 0.8295879467824138, (186.416, 173.007, 104.166)), ('C', 346, u'ARG', 0.7353553913918768, (184.35500000000002, 166.11299999999997, 97.17799999999998)), ('C', 354, u'ASN', 0.8545990251906413, (186.41899999999998, 161.95200000000003, 107.223)), ('C', 362, u'VAL', 0.7938699787422474, (185.586, 181.758, 116.63199999999999)), ('C', 383, u'SER', 0.825688326183997, (169.73899999999998, 173.737, 121.331)), ('C', 387, u'LEU', 0.7746172544340674, (175.61399999999998, 177.57, 120.17799999999998)), ('C', 406, u'GLU', 0.8353568832944027, (169.198, 156.11299999999997, 106.026)), ('C', 414, u'GLN', 0.8175131215858683, (169.985, 153.726, 116.512)), ('C', 415, u'THR', 0.7630176012982866, (170.648, 150.212, 115.059)), ('C', 423, u'TYR', 0.8119116007138569, (179.33800000000002, 155.168, 111.58)), ('C', 449, u'TYR', 0.8212236546880638, (179.61399999999998, 153.92600000000002, 92.256)), ('C', 470, u'THR', 0.7397245191057128, (189.22899999999998, 145.226, 102.537)), ('C', 471, u'GLU', 0.8115519775709861, (189.303, 141.515, 103.621)), ('C', 476, u'GLY', 0.8034556968049912, (180.29899999999998, 130.376, 106.598)), ('C', 477, u'SER', 0.7440950613804416, (182.512, 127.26, 107.092)), ('C', 481, u'ASN', 0.7976180152401819, (191.766, 132.546, 100.577)), ('C', 484, u'GLU', 0.7620410472788939, (185.10399999999998, 135.789, 96.409)), ('C', 486, u'PHE', 0.7194223974978057, (179.737, 131.129, 97.792)), ('C', 500, u'THR', 0.8328805087713357, (166.091, 159.81, 88.533)), ('C', 503, u'VAL', 0.7861108890139967, (163.756, 161.509, 96.96600000000001)), ('C', 509, u'ARG', 0.8595946263955788, (175.52100000000002, 165.08700000000002, 102.265)), ('C', 524, u'VAL', 0.737117073143921, (186.23, 176.87, 119.516)), ('C', 538, u'CYS', 0.8114016356444538, (179.065, 191.27299999999997, 143.30100000000002)), ('C', 547, u'THR', 0.7718790379116948, (177.865, 181.376, 133.526)), ('C', 551, u'VAL', 0.7612929114496408, (182.478, 188.222, 143.941)), ('C', 562, u'PHE', 0.7439155128724514, (197.11499999999998, 171.948, 132.85600000000002)), ('C', 565, u'PHE', 0.7686429637477984, (189.251, 175.847, 137.27399999999997)), ('C', 570, u'ASP', 0.5525748276176448, (178.993, 171.161, 146.455)), ('C', 571, u'ASP', 0.5875696248980118, (180.224, 170.425, 142.79899999999998)), ('C', 576, u'VAL', 0.7653401685148006, (189.025, 180.159, 137.71499999999997)), ('C', 587, u'ILE', 0.7493987417929925, (184.924, 183.14, 143.404)), ('C', 597, u'VAL', 0.6347257797041522, (160.925, 191.82000000000002, 161.271)), ('C', 668, u'ALA', 0.601122648595105, (173.80200000000002, 186.14299999999997, 170.809)), ('C', 705, u'VAL', 0.6497555936217629, (174.01, 185.57899999999998, 200.047)), ('C', 711, u'SER', 0.6896453855610465, (175.127, 182.467, 210.671)), ('C', 768, u'THR', 0.6330053165428415, (144.948, 154.26899999999998, 162.70399999999998)), ('C', 778, u'THR', 0.6201342270068003, (143.65200000000002, 159.656, 177.823)), ('C', 796, u'ASP', 0.6653216569183854, (133.226, 170.003, 207.053)), ('C', 822, u'LEU', 0.612893076057896, (139.32600000000002, 175.96, 180.969)), ('C', 870, u'ILE', 0.5816834173957917, (136.706, 162.783, 181.73899999999998)), ('C', 876, u'ALA', 0.5481231417740006, (136.471, 160.782, 191.435)), ('C', 901, u'GLN', 0.559753827412662, (145.23999999999998, 164.997, 206.329)), ('C', 905, u'ARG', 0.5824535158733315, (151.11499999999998, 166.536, 204.605)), ('C', 913, u'GLN', 0.6204098446274412, (152.137, 168.953, 212.787)), ('C', 934, u'ILE', 0.6614542852352984, (143.415, 181.01899999999998, 189.83700000000002)), ('C', 948, u'LEU', 0.6529401534567584, (146.697, 173.314, 174.585)), ('C', 962, u'LEU', 0.625386821437852, (147.097, 168.94, 153.318)), ('C', 974, u'SER', 0.6963799009627489, (146.18, 171.32500000000002, 135.20899999999997)), ('C', 1000, u'ARG', 0.6000876765549045, (149.366, 164.08, 146.038)), ('C', 1015, u'ALA', 0.5870771527972537, (152.055, 162.135, 168.181)), ('C', 1019, u'ARG', 0.6164491809751224, (152.74299999999997, 160.66899999999998, 174.05700000000002)), ('C', 1022, u'ALA', 0.5506028818769017, (150.727, 162.14, 178.30200000000002)), ('C', 1025, u'ALA', 0.5445280107065555, (150.736, 163.863, 182.942)), ('C', 1077, u'THR', 0.6803338591343674, (174.277, 178.937, 215.105)), ('C', 1105, u'THR', 0.6554122526285666, (164.35700000000003, 174.755, 216.36200000000002)), ('C', 1137, u'VAL', 0.7879908819194664, (171.414, 171.107, 228.759)), ('C', 1306, u'NAG', 0.6902251983045307, (146.448, 200.11299999999997, 174.238)), ('C', 1308, u'NAG', 0.8266166324299989, (194.52100000000002, 192.258, 124.07799999999999)), ('C', 1310, u'NAG', 0.7804120511894448, (152.26999999999998, 192.936, 118.26700000000001))]
data['rota'] = [('A', ' 331 ', 'ASN', 0.0, (162.29800000000006, 120.13200000000003, 121.663)), ('A', ' 602 ', 'THR', 0.0012550823172782421, (195.408, 152.265, 162.601)), ('A', ' 603 ', 'ASN', 0.018000188724593594, (198.512, 153.702, 164.355)), ('A', ' 615 ', 'VAL', 0.1526671960680933, (177.684, 132.686, 155.691)), ('A', ' 710 ', 'ASN', 0.20015296426670628, (172.584, 135.348, 211.819)), ('A', '1073 ', 'LYS', 0.10015579768179361, (183.11500000000007, 143.753, 208.656)), ('B', '  81 ', 'ASN', 0.1622865151029027, (116.94800000000002, 118.40700000000002, 129.577)), ('B', ' 403 ', 'ARG', 0.11243312275881215, (124.45, 173.223, 87.691)), ('B', ' 599 ', 'THR', 0.0013479450899467338, (134.059, 140.256, 166.108)), ('B', ' 604 ', 'THR', 0.19436218266867825, (133.908, 131.677, 170.134)), ('C', '  62 ', 'VAL', 0.029365827265492937, (149.462, 208.48100000000005, 139.158)), ('C', ' 331 ', 'ASN', 0.01055251736130056, (191.54000000000005, 186.461, 122.631)), ('C', ' 347 ', 'PHE', 0.1554769178160295, (182.61, 164.105, 99.92700000000002)), ('C', ' 565 ', 'PHE', 0.2297527760588379, (189.25100000000006, 175.847, 137.274)), ('C', ' 570 ', 'ASP', 0.009828871916552592, (178.993, 171.161, 146.455)), ('C', ' 599 ', 'THR', 0.16561203174891465, (157.339, 194.24600000000007, 165.925)), ('C', ' 602 ', 'THR', 0.05948541718988909, (150.25700000000006, 196.316, 165.631)), ('C', ' 619 ', 'GLU', 0.015086225842640138, (176.541, 194.954, 152.49)), ('C', ' 656 ', 'VAL', 0.14104106652141743, (170.71000000000006, 201.07200000000006, 174.749)), ('C', ' 716 ', 'ILE', 0.2405558540487438, (159.446, 182.93, 210.92))]
data['clusters'] = [('A', '1071', 1, 'Bond angle:OE1:CD:NE2', (185.752, 148.439, 204.90800000000002)), ('A', '1072', 1, 'Dihedral angle:CB:CG:CD:OE1', (182.70299999999997, 146.292, 205.80100000000002)), ('A', '1073', 1, 'Rotamer', (183.11500000000007, 143.753, 208.656)), ('A', '1074', 1, 'C-beta\nbackbone clash\nBond angle:C:CA:CB', (180.871, 140.756, 209.404)), ('A', '1092', 1, 'cablam Outlier', (166.8, 153.5, 214.5)), ('A', '1105', 1, 'Dihedral angle:CA:C\nsmoc Outlier', (174.30100000000002, 150.46, 215.523)), ('A', '1106', 1, 'Dihedral angle:N:CA', (173.047, 152.69, 212.73499999999999)), ('A', '1107', 1, 'Dihedral angle:CD:NE:CZ:NH1', (172.985, 150.646, 209.472)), ('A', '1109', 1, 'cablam Outlier', (178.4, 153.2, 209.5)), ('A', '1111', 1, 'Dihedral angle:CB:CG:CD:OE1', (178.792, 152.98200000000003, 215.668)), ('A', '1301', 1, 'Planar group:C2:C7:C8:N2:O7', (185.22, 141.256, 205.81)), ('A', '1303', 1, 'Planar group:C2:C7:C8:N2:O7', (168.59, 131.978, 213.95000000000002)), ('A', '708', 1, 'Dihedral angle:CA:C', (173.71299999999997, 133.27399999999997, 206.64399999999998)), ('A', '709', 1, 'C-beta\nbackbone clash\nRamachandran\nBond angle:C:CA:CB\nDihedral angle:N:CA\ncablam Outlier', (170.72899999999998, 133.627, 208.89700000000002)), ('A', '710', 1, 'Rotamer\nRamachandran\nDihedral angle:CA:C\ncablam Outlier', (172.584, 135.348, 211.819)), ('A', '711', 1, 'backbone clash\nDihedral angle:N:CA', (175.202, 137.309, 209.829)), ('A', '713', 1, 'smoc Outlier', (178.123, 143.102, 207.298)), ('A', '717', 1, 'Bond angle:CA:CB:CG', (184.445, 153.60899999999998, 206.901)), ('A', '108', 2, 'cablam Outlier', (198.2, 146.9, 115.9)), ('A', '109', 2, 'Bond angle:C\ncablam CA Geom Outlier', (200.726, 145.19299999999998, 113.52499999999999)), ('A', '110', 2, 'Bond angle:N:CA', (202.607, 148.597, 113.669)), ('A', '111', 2, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (204.005, 148.491, 110.087)), ('A', '112', 2, 'Ramachandran\nDihedral angle:N:CA\ncablam Outlier', (203.19, 148.818, 106.345)), ('A', '115', 2, 'Dihedral angle:CA:C\nsmoc Outlier', (199.467, 152.185, 111.41300000000001)), ('A', '116', 2, 'Dihedral angle:N:CA', (201.806, 153.094, 114.24000000000001)), ('A', '1307', 2, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (189.611, 147.53, 119.52499999999999)), ('A', '234', 2, 'Bond angle:CA:CB:CG', (193.21899999999997, 151.071, 117.49600000000001)), ('A', '1030', 3, 'smoc Outlier', (165.853, 170.42000000000002, 189.781)), ('A', '1032', 3, 'Dihedral angle:CA:C', (169.706, 166.82000000000002, 192.504)), ('A', '1033', 3, 'Dihedral angle:N:CA', (171.39100000000002, 170.26, 192.231)), ('A', '1043', 3, 'cablam Outlier', (172.8, 160.8, 190.7)), ('A', '1048', 3, 'Bond angle:CB:CG:CD2', (173.501, 161.039, 197.011)), ('A', '1051', 3, 'smoc Outlier', (175.79899999999998, 167.702, 192.89000000000001)), ('A', '1062', 3, 'smoc Outlier', (176.989, 167.257, 186.66)), ('A', '1064', 3, 'Bond angle:CB:CG:CD2', (177.63, 164.066, 191.55800000000002)), ('A', '1083', 4, 'Bond angle:CB:CG:CD2\ncablam Outlier', (164.68, 141.085, 228.76399999999998)), ('A', '1084', 4, 'cablam Outlier', (161.9, 140.8, 231.5)), ('A', '1087', 4, 'smoc Outlier', (160.834, 141.509, 223.23399999999998)), ('A', '1088', 4, 'Bond angle:CB:CG:CD2', (162.797, 144.72, 222.41)), ('A', '1089', 4, 'smoc Outlier', (163.3, 145.997, 218.817)), ('A', '1121', 4, 'smoc Outlier', (160.933, 149.761, 221.901)), ('A', '1122', 4, 'Dihedral angle:CA:C', (158.965, 146.82700000000003, 223.424)), ('A', '1123', 4, 'Dihedral angle:N:CA\ncablam Outlier', (156.349, 144.721, 221.667)), ('A', '346', 5, 'smoc Outlier', (145.162, 138.757, 99.408)), ('A', '348', 5, 'Dihedral angle:CA:C', (141.453, 141.691, 104.479)), ('A', '349', 5, 'Dihedral angle:N:CA', (139.437, 144.914, 104.482)), ('A', '350', 5, 'smoc Outlier', (140.2, 146.672, 107.81)), ('A', '353', 5, 'cablam Outlier', (140.7, 141.8, 109.5)), ('A', '354', 5, 'Bond angle:CA:CB:CG\nsmoc Outlier', (142.138, 138.236, 109.189)), ('A', '220', 6, 'cablam CA Geom Outlier\nsmoc Outlier', (205.0, 158.2, 146.1)), ('A', '221', 6, 'cablam Outlier', (205.0, 161.0, 143.5)), ('A', '223', 6, 'smoc Outlier', (202.359, 161.98200000000003, 137.33200000000002)), ('A', '34', 6, 'Planar group:CD:NE:CZ:NH1:NH2\ncablam CA Geom Outlier', (203.95800000000003, 154.162, 142.041)), ('A', '36', 6, 'smoc Outlier', (199.242, 157.43200000000002, 140.271)), ('A', '324', 7, 'Dihedral angle:CB:CG:CD:OE1', (178.15200000000002, 128.93200000000002, 133.227)), ('A', '326', 7, 'smoc Outlier', (172.316, 127.86999999999999, 130.231)), ('A', '539', 7, 'Dihedral angle:CA:C', (174.80800000000002, 129.42000000000002, 136.835)), ('A', '540', 7, 'Dihedral angle:N:CA', (173.075, 132.001, 134.696)), ('A', '549', 7, 'cablam CA Geom Outlier', (171.0, 133.5, 138.1)), ('A', '403', 8, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (145.26299999999998, 154.12, 103.37499999999999)), ('A', '406', 8, 'smoc Outlier', (145.784, 156.002, 108.70400000000001)), ('A', '408', 8, 'Dihedral angle:CD:NE:CZ:NH1', (149.23499999999999, 156.399, 112.785)), ('A', '501', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (147.24299999999997, 158.737, 94.4)), ('A', '505', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (146.578, 158.292, 100.02)), ('A', '1310', 9, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (160.441, 115.392, 122.019)), ('A', '329', 9, 'Bond angle:CA:C\nBond angle:CA:CB:CG', (163.631, 125.456, 125.409)), ('A', '330', 9, 'Bond angle:N', (161.24699999999999, 122.502, 124.49100000000001)), ('A', '331', 9, 'Rotamer\nBond angle:CA:CB:CG', (162.298, 120.13199999999999, 121.663)), ('A', '333', 9, 'smoc Outlier', (161.946, 120.972, 115.36999999999999)), ('A', '308', 10, 'smoc Outlier', (190.638, 154.395, 160.848)), ('A', '309', 10, 'smoc Outlier', (189.4, 154.278, 164.48200000000003)), ('A', '600', 10, 'Ramachandran', (192.098, 148.003, 166.205)), ('A', '602', 10, 'Rotamer', (195.408, 152.265, 162.601)), ('A', '603', 10, 'Rotamer', (198.512, 153.702, 164.355)), ('A', '666', 11, 'cablam Outlier', (180.8, 140.8, 167.0)), ('A', '667', 11, 'cablam Outlier', (177.4, 139.3, 168.1)), ('A', '671', 11, 'smoc Outlier', (183.88000000000002, 139.89200000000002, 170.849)), ('A', '672', 11, 'smoc Outlier', (187.354, 140.665, 169.441)), ('A', '193', 12, 'smoc Outlier', (201.622, 156.599, 131.571)), ('A', '267', 12, 'smoc Outlier', (206.29899999999998, 147.829, 132.341)), ('A', '90', 12, 'Dihedral angle:CA:C', (200.664, 151.08200000000002, 130.01399999999998)), ('A', '91', 12, 'Dihedral angle:N:CA', (202.58800000000002, 152.45200000000003, 132.942)), ('A', '265', 13, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (213.06, 149.82600000000002, 132.41299999999998)), ('A', '66', 13, 'Bond angle:CB:CG:CD2', (217.833, 145.731, 131.329)), ('A', '95', 13, 'Dihedral angle:CA:C', (216.12800000000001, 154.061, 135.985)), ('A', '96', 13, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (218.964, 155.974, 134.442)), ('A', '291', 14, 'cablam Outlier\nsmoc Outlier', (190.3, 150.9, 147.2)), ('A', '293', 14, 'cablam CA Geom Outlier', (193.9, 146.2, 147.5)), ('A', '294', 14, 'Bond angle:CA:CB:CG', (192.83, 144.661, 150.871)), ('A', '58', 14, 'Bond angle:CA:CB:CG', (199.212, 149.084, 144.22)), ('A', '567', 15, 'smoc Outlier', (156.691, 130.698, 143.63)), ('A', '568', 15, 'Dihedral angle:CA:C', (157.168, 132.92200000000003, 146.72299999999998)), ('A', '569', 15, 'Dihedral angle:N:CA', (155.975, 136.44, 147.79399999999998)), ('A', '571', 15, 'smoc Outlier', (158.20499999999998, 137.38400000000001, 142.69299999999998)), ('A', '1304', 16, 'Planar group:C2:C7:C8:N2:O7', (175.46800000000002, 125.63199999999999, 159.083)), ('A', '615', 16, 'Rotamer', (177.684, 132.686, 155.691)), ('A', '616', 16, 'Bond angle:CA:CB:CG', (179.151, 129.251, 156.58700000000002)), ('A', '1305', 17, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (158.155, 136.393, 105.518)), ('A', '327', 17, 'side-chain clash', (156.721, 137.329, 105.645)), ('A', '531', 17, 'side-chain clash', (156.721, 137.329, 105.645)), ('A', '1306', 18, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nsmoc Outlier', (202.425, 170.736, 152.996)), ('A', '382', 18, 'side-chain clash', (201.765, 170.064, 151.575)), ('A', '387', 18, 'side-chain clash\nsmoc Outlier', (201.765, 170.064, 151.575)), ('A', '363', 19, 'Dihedral angle:CA:C', (160.668, 131.625, 114.932)), ('A', '364', 19, 'Dihedral angle:N:CA', (163.48100000000002, 133.864, 113.66)), ('A', '524', 19, 'smoc Outlier', (156.563, 129.636, 120.199)), ('A', '536', 20, 'Ramachandran\ncablam Outlier', (174.84200000000007, 122.402, 142.222)), ('A', '552', 20, 'smoc Outlier', (169.923, 124.786, 140.046)), ('A', '587', 20, 'smoc Outlier', (166.354, 127.426, 141.86200000000002)), ('A', '319', 21, 'smoc Outlier', (178.429, 137.39200000000002, 146.383)), ('A', '590', 21, 'Dihedral angle:CA:C', (173.758, 132.255, 145.46200000000002)), ('A', '591', 21, 'Dihedral angle:N:CA', (175.78, 132.697, 148.66)), ('A', '796', 22, 'Bond angle:CA:CB:CG', (185.107, 179.696, 205.063)), ('A', '797', 22, 'cablam Outlier', (183.4, 176.5, 203.7)), ('A', '898', 22, 'smoc Outlier', (178.64399999999998, 174.597, 204.58200000000002)), ('A', '962', 23, 'smoc Outlier', (172.677, 167.41899999999998, 152.10399999999998)), ('A', '965', 23, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (173.445, 165.685, 147.041)), ('A', '968', 23, 'smoc Outlier', (173.925, 164.298, 141.91)), ('A', '485', 24, 'smoc Outlier', (118.17099999999999, 156.99, 102.418)), ('A', '488', 24, 'Dihedral angle:CA:C', (120.157, 156.43, 106.862)), ('A', '489', 24, 'Dihedral angle:N:CA', (123.57, 155.30800000000002, 105.551)), ('A', '1309', 25, 'Bond angle:C2:C1:O5\nBond angle:C1:C2:C3', (192.319, 128.297, 171.97299999999998)), ('A', '655', 25, 'Bond angle:CB:CG:CD2', (189.88800000000003, 131.991, 168.796)), ('A', '870', 26, 'smoc Outlier', (175.35200000000003, 180.02800000000002, 180.47899999999998)), ('A', '874', 26, 'smoc Outlier', (175.972, 177.736, 186.33200000000002)), ('A', '819', 27, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (184.415, 174.454, 182.495)), ('A', '822', 27, 'smoc Outlier', (185.11399999999998, 170.936, 179.059)), ('A', '595', 28, 'smoc Outlier', (181.32700000000003, 141.946, 154.765)), ('A', '597', 28, 'smoc Outlier', (186.08700000000002, 144.518, 158.687)), ('A', '996', 29, 'smoc Outlier', (166.792, 168.341, 139.60999999999999)), ('A', '997', 29, 'smoc Outlier', (163.791, 169.92700000000002, 141.433)), ('A', '758', 30, 'cablam Outlier', (153.3, 174.5, 150.0)), ('A', '759', 30, 'smoc Outlier', (156.363, 172.155, 150.35600000000002)), ('A', '125', 31, 'Dihedral angle:CA:C', (213.107, 168.648, 120.657)), ('A', '126', 31, 'Dihedral angle:N:CA', (210.38500000000002, 166.122, 121.46300000000001)), ('A', '357', 32, 'Dihedral angle:CD:NE:CZ:NH1', (147.287, 131.683, 115.0)), ('A', '396', 32, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH\nsmoc Outlier', (148.72899999999998, 135.991, 116.627)), ('A', '279', 33, 'smoc Outlier', (195.46800000000002, 166.70499999999998, 147.959)), ('A', '285', 33, 'smoc Outlier', (198.39800000000002, 164.92600000000002, 145.153)), ('A', '1009', 34, 'smoc Outlier', (162.69299999999998, 164.686, 158.60299999999998)), ('A', '1013', 34, 'smoc Outlier', (163.607, 162.92800000000003, 164.76)), ('A', '1058', 35, 'Bond angle:CB:CG:CD2\ncablam Outlier', (175.85700000000003, 172.17, 173.70299999999997)), ('A', '729', 35, 'smoc Outlier', (170.977, 169.864, 175.69)), ('A', '780', 36, 'smoc Outlier', (164.677, 174.70299999999997, 180.791)), ('A', '781', 36, 'smoc Outlier', (168.101, 173.483, 182.069)), ('A', '904', 37, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (171.976, 167.49, 206.94899999999998)), ('A', '905', 37, 'smoc Outlier', (172.98000000000002, 165.806, 203.636)), ('A', '466', 38, 'Dihedral angle:CD:NE:CZ:NH1', (135.632, 142.471, 115.197)), ('A', '468', 38, 'smoc Outlier', (131.14399999999998, 142.459, 109.99400000000001)), ('A', '166', 39, 'Dihedral angle:CA:C', (200.592, 159.931, 107.49600000000001)), ('A', '167', 39, 'Dihedral angle:N:CA', (197.755, 161.376, 109.62299999999999)), ('A', '40', 40, 'Bond angle:CA:CB:CG', (191.282, 165.416, 135.664)), ('A', '41', 40, 'cablam Outlier', (192.2, 169.1, 134.8)), ('A', '208', 41, 'Dihedral angle:CA:C', (212.98000000000002, 162.29399999999998, 140.108)), ('A', '209', 41, 'Dihedral angle:N:CA', (216.54, 161.83200000000002, 141.437)), ('B', '1069', 1, 'Dihedral angle:CA:C', (146.10399999999998, 147.47, 203.68200000000002)), ('B', '1070', 1, 'Dihedral angle:N:CA', (143.125, 145.08, 203.755)), ('B', '1077', 1, 'smoc Outlier', (139.809, 160.562, 216.268)), ('B', '1081', 1, 'smoc Outlier', (144.505, 165.901, 223.67899999999997)), ('B', '1082', 1, 'Dihedral angle:CA:C', (144.453, 168.22899999999998, 226.73)), ('B', '1083', 1, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA', (146.24299999999997, 167.30100000000002, 229.965)), ('B', '1087', 1, 'smoc Outlier', (147.936, 170.278, 224.186)), ('B', '1091', 1, 'Dihedral angle:CA:C', (154.918, 161.92800000000003, 217.95200000000003)), ('B', '1092', 1, 'Dihedral angle:N:CA\ncablam Outlier', (154.407, 159.63299999999998, 214.95700000000002)), ('B', '1094', 1, 'smoc Outlier', (147.101, 159.05700000000002, 215.10899999999998)), ('B', '1096', 1, 'smoc Outlier', (141.972, 157.002, 218.11299999999997)), ('B', '1105', 1, 'Dihedral angle:CA:C', (148.493, 154.036, 216.77399999999997)), ('B', '1106', 1, 'Bond angle:OE1:CD:NE2\nDihedral angle:N:CA', (150.80800000000002, 153.93800000000002, 213.789)), ('B', '1109', 1, 'cablam Outlier', (148.2, 149.1, 210.7)), ('B', '1115', 1, 'smoc Outlier', (149.015, 157.553, 225.542)), ('B', '1118', 1, 'Bond angle:CB:CG:CD2', (157.069, 159.56, 225.19299999999998)), ('B', '1119', 1, 'Bond angle:OD1:CG:ND2', (154.42700000000002, 158.681, 222.524)), ('B', '1122', 1, 'Dihedral angle:CA:C', (153.454, 169.24699999999999, 223.819)), ('B', '1123', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (152.767, 172.60399999999998, 222.184)), ('B', '1137', 1, 'smoc Outlier', (148.624, 161.191, 229.598)), ('B', '717', 1, 'Bond angle:CA:CB:CG', (145.33800000000002, 143.608, 208.62)), ('B', '718', 1, 'Dihedral angle:CA:C', (147.36100000000002, 143.55100000000002, 205.33200000000002)), ('B', '719', 1, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (147.916, 141.601, 202.132)), ('B', '720', 1, 'Dihedral angle:N:CA', (151.297, 141.26899999999998, 200.446)), ('B', '926', 1, 'Bond angle:OE1:CD:NE2', (151.029, 135.464, 201.411)), ('B', '293', 2, 'cablam CA Geom Outlier', (130.2, 136.5, 151.1)), ('B', '297', 2, 'smoc Outlier', (134.789, 136.67899999999997, 155.195)), ('B', '298', 2, 'smoc Outlier', (135.76299999999998, 140.24399999999997, 154.21699999999998)), ('B', '300', 2, 'smoc Outlier', (139.42000000000002, 137.147, 157.055)), ('B', '301', 2, 'smoc Outlier', (140.57399999999998, 138.36800000000002, 153.621)), ('B', '315', 2, 'smoc Outlier', (137.577, 146.038, 156.271)), ('B', '595', 2, 'smoc Outlier', (133.469, 150.29399999999998, 157.575)), ('B', '597', 2, 'smoc Outlier', (133.71599999999998, 144.71499999999997, 161.62)), ('B', '599', 2, 'Rotamer', (134.059, 140.256, 166.108)), ('B', '600', 2, 'cablam CA Geom Outlier', (134.4, 138.4, 169.5)), ('B', '602', 2, 'smoc Outlier', (136.135, 133.268, 165.093)), ('B', '603', 2, 'C-beta\nBond angle:C:CA:CB', (136.601, 130.45800000000003, 167.695)), ('B', '604', 2, 'Rotamer', (133.908, 131.677, 170.134)), ('B', '197', 3, 'Ramachandran\ncablam CA Geom Outlier', (136.79000000000005, 134.841, 129.478)), ('B', '198', 3, 'Ramachandran\ncablam Outlier', (137.912, 135.80600000000007, 125.87900000000002)), ('B', '199', 3, 'cablam CA Geom Outlier', (141.3, 134.2, 126.9)), ('B', '200', 3, 'cablam CA Geom Outlier', (140.1, 131.0, 125.1)), ('B', '230', 3, 'Dihedral angle:CA:C\ncablam Outlier', (142.418, 128.18, 121.38499999999999)), ('B', '231', 3, 'Dihedral angle:N:CA', (139.142, 128.354, 119.406)), ('B', '88', 3, 'cablam Outlier', (130.4, 134.5, 131.9)), ('B', '108', 4, 'cablam Outlier', (125.0, 131.3, 120.0)), ('B', '110', 4, 'cablam Outlier', (123.5, 126.2, 117.9)), ('B', '111', 4, 'cablam Outlier', (121.9, 126.0, 114.3)), ('B', '112', 4, 'cablam CA Geom Outlier', (124.4, 127.1, 111.5)), ('B', '134', 4, 'Dihedral angle:CA:C', (122.657, 122.66999999999999, 112.016)), ('B', '135', 4, 'Dihedral angle:N:CA', (121.197, 119.863, 114.18299999999999)), ('B', '137', 4, 'cablam Outlier', (120.5, 118.6, 120.8)), ('B', '321', 5, 'Bond angle:OE1:CD:NE2', (127.212, 156.916, 145.07)), ('B', '538', 5, 'side-chain clash', (127.119, 162.042, 146.307)), ('B', '549', 5, 'cablam CA Geom Outlier', (129.6, 165.4, 143.1)), ('B', '550', 5, 'smoc Outlier', (127.606, 166.141, 146.304)), ('B', '574', 5, 'Bond angle:CA:CB:CG\nsmoc Outlier', (131.017, 174.905, 148.84)), ('B', '587', 5, 'smoc Outlier', (127.235, 171.848, 148.091)), ('B', '590', 5, 'side-chain clash\nsmoc Outlier', (127.119, 162.042, 146.307)), ('B', '1036', 6, 'cablam Outlier', (162.8, 150.9, 197.5)), ('B', '1037', 6, 'smoc Outlier', (160.88500000000002, 153.61299999999997, 195.583)), ('B', '1043', 6, 'cablam Outlier', (156.2, 150.0, 191.4)), ('B', '1048', 6, 'Bond angle:CB:CG:CD2', (156.38000000000002, 149.265, 197.526)), ('B', '1051', 6, 'smoc Outlier', (160.781, 143.914, 193.091)), ('B', '1064', 6, 'Bond angle:CB:CG:CD2', (156.625, 144.181, 192.04399999999998)), ('B', '1303', 7, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5\nBond angle:C1:C2:C3', (137.591, 167.453, 214.909)), ('B', '708', 7, 'side-chain clash\nDihedral angle:CA:C', (133.491, 162.784, 209.047)), ('B', '709', 7, 'Ramachandran\nDihedral angle:N:CA', (134.846, 165.702, 210.989)), ('B', '711', 7, 'side-chain clash', (134.236, 160.379, 210.311)), ('B', '263', 8, 'smoc Outlier', (119.868, 110.958, 135.418)), ('B', '265', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (122.601, 117.289, 137.268)), ('B', '66', 8, 'smoc Outlier', (116.44100000000002, 115.61999999999999, 135.55)), ('B', '81', 8, 'Rotamer\nBond angle:CA:CB:CG', (116.94800000000001, 118.40700000000001, 129.577)), ('B', '577', 9, 'Planar group:CD:NE:CZ:NH1:NH2', (124.76700000000001, 180.046, 141.621)), ('B', '581', 9, 'Dihedral angle:CA:C', (117.346, 180.635, 137.89600000000002)), ('B', '582', 9, 'Dihedral angle:N:CA', (119.898, 182.58200000000002, 139.96200000000002)), ('B', '583', 9, 'Dihedral angle:CB:CG:CD:OE1', (119.43400000000001, 180.768, 143.364)), ('B', '743', 10, 'Dihedral angle:CA:C', (168.589, 146.72, 141.978)), ('B', '744', 10, 'Dihedral angle:N:CA', (168.82800000000003, 143.009, 142.98600000000002)), ('B', '745', 10, 'cablam Outlier', (171.8, 141.3, 141.2)), ('B', '856', 10, 'smoc Outlier', (166.24599999999998, 140.98600000000002, 148.76999999999998)), ('B', '464', 11, 'smoc Outlier', (140.006, 178.694, 99.41000000000001)), ('B', '466', 11, 'Dihedral angle:CD:NE:CZ:NH1', (138.933, 183.844, 95.586)), ('B', '468', 11, 'smoc Outlier', (136.65, 187.99, 90.536)), ('B', '470', 11, 'smoc Outlier', (137.51299999999998, 190.015, 84.26100000000001)), ('B', '1074', 12, 'C-beta\nBond angle:C:CA:CB', (136.14399999999998, 153.166, 211.63299999999998)), ('B', '1301', 12, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (133.002, 149.966, 208.72299999999998)), ('B', '713', 12, 'smoc Outlier', (139.41, 154.395, 209.10999999999999)), ('B', '664', 13, 'smoc Outlier', (135.63, 146.132, 172.22299999999998)), ('B', '666', 13, 'cablam Outlier\nsmoc Outlier', (133.6, 151.8, 169.5)), ('B', '667', 13, 'cablam Outlier', (133.8, 155.5, 170.4)), ('B', '403', 14, 'Rotamer\nDihedral angle:CD:NE:CZ:NH1', (124.45, 173.22299999999998, 87.691)), ('B', '439', 14, 'smoc Outlier', (115.508, 175.038, 89.722)), ('B', '506', 14, 'Bond angle:OE1:CD:NE2', (119.20400000000001, 172.57399999999998, 86.56)), ('B', '123', 15, 'Ramachandran\ncablam Outlier', (134.00700000000006, 104.283, 125.883)), ('B', '124', 15, 'smoc Outlier', (137.532, 105.53, 126.929)), ('B', '125', 15, 'smoc Outlier', (137.93800000000002, 108.684, 124.753)), ('B', '329', 16, 'Bond angle:CA:C', (124.277, 176.24299999999997, 131.64299999999997)), ('B', '330', 16, 'Bond angle:N', (122.415, 179.61899999999997, 131.009)), ('B', '332', 16, 'smoc Outlier', (120.74900000000001, 179.29, 125.253)), ('B', '357', 17, 'Dihedral angle:CD:NE:CZ:NH1', (131.994, 185.01, 108.699)), ('B', '358', 17, 'smoc Outlier', (130.39000000000001, 183.64399999999998, 111.90100000000001)), ('B', '395', 17, 'smoc Outlier', (133.26299999999998, 179.608, 111.18199999999999)), ('B', '391', 18, 'smoc Outlier', (134.07899999999998, 175.208, 119.52799999999999)), ('B', '525', 18, 'Dihedral angle:CA:C', (130.35000000000002, 177.24099999999999, 120.195)), ('B', '526', 18, 'Dihedral angle:N:CA', (127.853, 174.48000000000002, 119.438)), ('B', '519', 19, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (144.996, 181.084, 120.343)), ('B', '520', 19, 'Dihedral angle:CA:C', (142.504, 183.92800000000003, 119.65499999999999)), ('B', '521', 19, 'Dihedral angle:N:CA', (139.42700000000002, 182.834, 121.68599999999999)), ('B', '486', 20, 'cablam CA Geom Outlier', (139.8, 184.5, 67.8)), ('B', '488', 20, 'Dihedral angle:CA:C', (140.484, 185.05100000000002, 73.093)), ('B', '489', 20, 'Dihedral angle:N:CA', (137.629, 184.997, 75.63199999999999)), ('B', '1305', 21, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (123.66799999999999, 161.433, 165.32700000000003)), ('B', '645', 21, 'smoc Outlier', (125.812, 155.503, 167.92000000000002)), ('B', '164', 22, 'smoc Outlier', (130.16, 121.965, 107.80499999999999)), ('B', '165', 22, 'smoc Outlier', (132.721, 124.864, 107.708)), ('B', '40', 23, 'Bond angle:CA:CB:CG', (147.033, 129.39800000000002, 137.354)), ('B', '41', 23, 'cablam Outlier', (149.7, 126.8, 136.4)), ('B', '427', 24, 'smoc Outlier', (143.092, 167.511, 100.364)), ('B', '428', 24, 'smoc Outlier', (142.56, 167.373, 104.21600000000001)), ('B', '763', 25, 'smoc Outlier', (169.411, 154.60999999999999, 154.39700000000002)), ('B', '767', 25, 'smoc Outlier', (169.334, 151.166, 159.88500000000002)), ('B', '531', 26, 'Dihedral angle:CA:C', (119.038, 169.001, 132.681)), ('B', '532', 26, 'Dihedral angle:N:CA', (116.49300000000001, 169.82600000000002, 135.353)), ('B', '375', 27, 'smoc Outlier', (119.568, 167.14899999999997, 98.369)), ('B', '376', 27, 'smoc Outlier', (123.089, 166.40200000000002, 99.80799999999999)), ('B', '191', 28, 'Dihedral angle:CB:CG:CD:OE1', (132.21499999999997, 118.349, 138.728)), ('B', '207', 28, 'Bond angle:CB:CG:CD2', (135.752, 113.296, 140.545)), ('B', '445', 29, 'smoc Outlier', (111.87299999999999, 180.934, 81.027)), ('B', '447', 29, 'cablam Outlier', (117.1, 181.7, 80.2)), ('B', '1002', 30, 'Bond angle:OE1:CD:NE2', (160.469, 155.759, 148.036)), ('B', '1004', 30, 'smoc Outlier', (162.566, 151.94899999999998, 151.375)), ('B', '570', 31, 'cablam Outlier', (140.7, 175.4, 152.1)), ('B', '571', 31, 'Ramachandran', (139.90700000000007, 176.48600000000005, 148.461)), ('B', '90', 32, 'Dihedral angle:CA:C', (129.348, 127.574, 133.944)), ('B', '91', 32, 'Dihedral angle:N:CA\nsmoc Outlier', (129.877, 125.287, 136.89800000000002)), ('B', '354', 33, 'Bond angle:CA:CB:CG', (129.712, 184.859, 98.95100000000001)), ('B', '398', 33, 'smoc Outlier', (130.80700000000002, 179.954, 101.59700000000001)), ('B', '1054', 34, 'Bond angle:OE1:CD:NE2', (162.71899999999997, 138.23899999999998, 185.06)), ('B', '874', 34, 'smoc Outlier', (168.76999999999998, 138.718, 185.9)), ('B', '559', 35, 'Bond angle:CA:CB:CG\nsmoc Outlier', (126.647, 186.32800000000003, 146.525)), ('B', '563', 35, 'Bond angle:OE1:CD:NE2', (129.953, 186.066, 141.656)), ('B', '477', 36, 'smoc Outlier', (148.069, 182.518, 68.689)), ('B', '478', 36, 'smoc Outlier', (147.86200000000002, 186.336, 69.245)), ('C', '536', 1, 'Ramachandran\ncablam Outlier', (185.423, 192.86, 144.985)), ('C', '537', 1, 'Dihedral angle:CA:C', (181.874, 193.811, 143.721)), ('C', '538', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (179.065, 191.27299999999997, 143.30100000000002)), ('C', '539', 1, 'Dihedral angle:CA:C', (178.83, 190.57299999999998, 139.508)), ('C', '540', 1, 'Dihedral angle:N:CA', (177.474, 188.168, 136.92800000000003)), ('C', '549', 1, 'cablam CA Geom Outlier', (177.2, 185.1, 139.9)), ('C', '551', 1, 'smoc Outlier', (182.478, 188.222, 143.941)), ('C', '587', 1, 'smoc Outlier', (184.924, 183.14, 143.404)), ('C', '193', 2, 'smoc Outlier', (140.812, 199.107, 135.39000000000001)), ('C', '194', 2, 'smoc Outlier', (141.816, 197.77899999999997, 131.947)), ('C', '267', 2, 'smoc Outlier', (146.556, 207.3, 134.907)), ('C', '62', 2, 'Rotamer', (149.462, 208.48100000000005, 139.158)), ('C', '86', 2, 'cablam Outlier\nsmoc Outlier', (149.4, 200.5, 128.0)), ('C', '88', 2, 'cablam Outlier', (150.7, 195.2, 131.5)), ('C', '90', 2, 'Dihedral angle:CA:C', (146.02100000000002, 200.52100000000002, 133.236)), ('C', '91', 2, 'Dihedral angle:N:CA', (144.208, 202.02100000000002, 136.185)), ('C', '1092', 3, 'Dihedral angle:CB:CG:CD:OE1', (165.583, 167.092, 214.876)), ('C', '1105', 3, 'Dihedral angle:CA:C\nsmoc Outlier', (164.35700000000003, 174.755, 216.36200000000002)), ('C', '1106', 3, 'Dihedral angle:N:CA', (162.925, 172.718, 213.504)), ('C', '1109', 3, 'cablam Outlier', (159.7, 177.2, 210.7)), ('C', '1111', 3, 'Dihedral angle:CB:CG:CD:OE1', (159.61899999999997, 177.45000000000002, 216.86200000000002)), ('C', '1113', 3, 'Bond angle:OE1:CD:NE2', (162.491, 175.168, 222.374)), ('C', '716', 3, 'Rotamer', (159.446, 182.93, 210.92)), ('C', '362', 4, 'smoc Outlier', (185.586, 181.758, 116.63199999999999)), ('C', '363', 4, 'Dihedral angle:CA:C', (182.446, 180.19899999999998, 115.087)), ('C', '364', 4, 'Dihedral angle:N:CA', (179.11499999999998, 181.599, 113.988)), ('C', '387', 4, 'smoc Outlier', (175.61399999999998, 177.57, 120.17799999999998)), ('C', '524', 4, 'smoc Outlier', (186.23, 176.87, 119.516)), ('C', '525', 4, 'Dihedral angle:CA:C', (184.161, 179.88500000000002, 120.51700000000001)), ('C', '526', 4, 'Dihedral angle:N:CA', (180.73499999999999, 181.464, 120.265)), ('C', '119', 5, 'smoc Outlier', (134.92800000000003, 202.231, 123.44200000000001)), ('C', '120', 5, 'Dihedral angle:CA:C', (132.354, 205.09, 123.55799999999999)), ('C', '121', 5, 'Dihedral angle:N:CA', (129.47299999999998, 206.14, 125.80199999999999)), ('C', '122', 5, 'cablam Outlier\nsmoc Outlier', (126.9, 207.2, 123.1)), ('C', '124', 5, 'cablam Outlier', (122.6, 206.4, 126.2)), ('C', '125', 5, 'cablam CA Geom Outlier', (125.0, 203.5, 127.0)), ('C', '186', 6, 'smoc Outlier', (132.77899999999997, 217.554, 140.177)), ('C', '188', 6, 'Dihedral angle:CA:C', (131.74099999999999, 211.863, 141.226)), ('C', '189', 6, 'Dihedral angle:N:CA', (135.006, 209.966, 140.995)), ('C', '207', 6, 'Bond angle:CB:CG:CD2', (131.65, 205.14899999999997, 141.037)), ('C', '97', 6, 'Dihedral angle:CA:C', (129.698, 215.364, 136.71699999999998)), ('C', '98', 6, 'Dihedral angle:N:CA', (129.30200000000002, 216.76, 133.156)), ('C', '1077', 7, 'smoc Outlier', (174.277, 178.937, 215.105)), ('C', '705', 7, 'smoc Outlier', (174.01, 185.57899999999998, 200.047)), ('C', '707', 7, 'Dihedral angle:CA:C', (177.127, 183.566, 204.30700000000002)), ('C', '708', 7, 'Dihedral angle:N:CA', (179.291, 183.196, 207.42100000000002)), ('C', '711', 7, 'smoc Outlier', (175.127, 182.467, 210.671)), ('C', '346', 8, 'smoc Outlier', (184.35500000000002, 166.11299999999997, 97.17799999999998)), ('C', '347', 8, 'Rotamer', (182.61, 164.105, 99.92700000000002)), ('C', '348', 8, 'Dihedral angle:CA:C', (183.531, 160.795, 101.646)), ('C', '349', 8, 'Dihedral angle:N:CA', (182.122, 157.27899999999997, 101.262)), ('C', '354', 8, 'smoc Outlier', (186.41899999999998, 161.95200000000003, 107.223)), ('C', '310', 9, 'cablam CA Geom Outlier', (154.7, 191.1, 169.3)), ('C', '597', 9, 'smoc Outlier', (160.925, 191.82000000000002, 161.271)), ('C', '599', 9, 'Rotamer', (157.339, 194.24600000000007, 165.925)), ('C', '600', 9, 'side-chain clash\ncablam CA Geom Outlier', (157.422, 197.835, 171.028)), ('C', '674', 9, 'side-chain clash', (157.422, 197.835, 171.028)), ('C', '1032', 10, 'Dihedral angle:CA:C', (151.444, 164.107, 193.162)), ('C', '1033', 10, 'Dihedral angle:N:CA', (147.624, 163.771, 192.983)), ('C', '1043', 10, 'cablam Outlier', (155.0, 169.9, 191.6)), ('C', '1048', 10, 'Bond angle:CB:CG:CD2', (154.787, 170.032, 197.999)), ('C', '1064', 10, 'Bond angle:CB:CG:CD2', (149.79399999999998, 172.281, 192.796)), ('C', '1069', 11, 'Dihedral angle:CA:C', (158.78, 179.976, 203.561)), ('C', '1070', 11, 'Dihedral angle:N:CA', (158.141, 183.74399999999997, 203.363)), ('C', '718', 11, 'Dihedral angle:CA:C', (155.01399999999998, 180.90800000000002, 205.45200000000003)), ('C', '719', 11, 'Dihedral angle:N:CA', (152.7, 181.334, 202.46200000000002)), ('C', '1015', 12, 'smoc Outlier', (152.055, 162.135, 168.181)), ('C', '1019', 12, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (152.74299999999997, 160.66899999999998, 174.05700000000002)), ('C', '1022', 12, 'smoc Outlier', (150.727, 162.14, 178.30200000000002)), ('C', '1025', 12, 'smoc Outlier', (150.736, 163.863, 182.942)), ('C', '901', 13, 'smoc Outlier', (145.23999999999998, 164.997, 206.329)), ('C', '904', 13, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (150.32700000000003, 164.73999999999998, 207.933)), ('C', '905', 13, 'smoc Outlier', (151.11499999999998, 166.536, 204.605)), ('C', '913', 13, 'smoc Outlier', (152.137, 168.953, 212.787)), ('C', '562', 14, 'smoc Outlier', (197.11499999999998, 171.948, 132.85600000000002)), ('C', '563', 14, 'Bond angle:OE1:CD:NE2', (194.346, 173.366, 135.18200000000002)), ('C', '565', 14, 'Rotamer\nBond angle:CA:CB:CG\nsmoc Outlier', (189.251, 175.847, 137.27399999999997)), ('C', '576', 14, 'smoc Outlier', (189.025, 180.159, 137.71499999999997)), ('C', '1058', 15, 'Bond angle:CB:CG:CD2', (142.88200000000003, 167.811, 174.97)), ('C', '731', 15, 'Dihedral angle:CA:C', (145.491, 165.05200000000002, 169.51)), ('C', '732', 15, 'Dihedral angle:N:CA', (142.38800000000003, 165.15800000000002, 167.30200000000002)), ('C', '948', 15, 'smoc Outlier', (146.697, 173.314, 174.585)), ('C', '228', 16, 'Dihedral angle:CA:C', (135.266, 190.20499999999998, 129.535)), ('C', '229', 16, 'Dihedral angle:N:CA', (135.631, 190.57, 125.73700000000001)), ('C', '231', 16, 'cablam Outlier', (138.8, 189.5, 120.9)), ('C', '233', 16, 'smoc Outlier', (143.712, 191.89600000000002, 119.86)), ('C', '1305', 17, 'Planar group:C2:C7:C8:N2:O7', (181.14899999999997, 192.16299999999998, 161.98100000000002)), ('C', '616', 17, 'Bond angle:CA:CB:CG', (177.399, 192.816, 157.778)), ('C', '619', 17, 'Rotamer', (176.541, 194.954, 152.49)), ('C', '403', 18, 'Dihedral angle:CD:NE:CZ:NH1', (170.71099999999998, 157.676, 100.78)), ('C', '406', 18, 'smoc Outlier', (169.198, 156.11299999999997, 106.026)), ('C', '408', 18, 'Dihedral angle:CD:NE:CZ:NH1', (167.55100000000002, 158.641, 110.462)), ('C', '291', 19, 'smoc Outlier', (153.015, 192.637, 150.379)), ('C', '293', 19, 'cablam CA Geom Outlier', (155.2, 198.0, 150.3)), ('C', '298', 19, 'Dihedral angle:CB:CG:CD:OE1', (155.39800000000002, 191.48100000000002, 154.435)), ('C', '81', 20, 'smoc Outlier', (144.785, 214.251, 124.962)), ('C', '82', 20, 'Dihedral angle:CA:C', (148.16899999999998, 212.453, 124.427)), ('C', '83', 20, 'Dihedral angle:N:CA', (148.653, 208.853, 123.292)), ('C', '1302', 21, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C1:C2:C3', (132.58700000000002, 176.207, 202.578)), ('C', '801', 21, 'Bond angle:CA:CB:CG', (136.783, 175.61399999999998, 200.389)), ('C', '1308', 22, 'Bond angle:C2:C1:O5\nsmoc Outlier', (194.52100000000002, 192.258, 124.07799999999999)), ('C', '331', 22, 'Rotamer', (191.54000000000005, 186.461, 122.631)), ('C', '449', 23, 'smoc Outlier', (179.61399999999998, 153.92600000000002, 92.256)), ('C', '496', 23, 'cablam Outlier', (175.1, 153.7, 92.7)), ('C', '1083', 24, 'Bond angle:CB:CG:CD2', (177.71599999999998, 170.164, 228.657)), ('C', '1137', 24, 'smoc Outlier', (171.414, 171.107, 228.759)), ('C', '197', 25, 'Bond angle:C', (145.252, 188.591, 129.26399999999998)), ('C', '198', 25, 'C-beta\nbackbone clash\nRamachandran\nBond angle:N:CA\nBond angle:CA:CB:CG\ncablam Outlier', (145.641, 185.516, 126.932)), ('C', '111', 26, 'Bond angle:C\nDihedral angle:CA:C\ncablam Outlier', (146.023, 204.01899999999998, 113.33)), ('C', '112', 26, 'Ramachandran\nBond angle:N:CA\nDihedral angle:N:CA\ncablam Outlier', (144.55800000000002, 202.284, 110.181)), ('C', '796', 27, 'Bond angle:CA:CB:CG\nsmoc Outlier', (133.226, 170.003, 207.053)), ('C', '797', 27, 'cablam Outlier', (136.7, 170.3, 205.5)), ('C', '414', 28, 'smoc Outlier', (169.985, 153.726, 116.512)), ('C', '415', 28, 'smoc Outlier', (170.648, 150.212, 115.059)), ('C', '581', 29, 'Dihedral angle:CA:C', (195.69299999999998, 187.526, 131.629)), ('C', '582', 29, 'Dihedral angle:N:CA', (196.255, 184.14399999999998, 133.242)), ('C', '108', 30, 'cablam Outlier', (149.3, 198.8, 118.7)), ('C', '1310', 30, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (152.26999999999998, 192.936, 118.26700000000001)), ('C', '1000', 31, 'smoc Outlier', (149.366, 164.08, 146.038)), ('C', '1002', 31, 'Bond angle:OE1:CD:NE2', (154.08, 162.73899999999998, 148.414)), ('C', '570', 32, 'Rotamer\nBond angle:CA:CB:CG\nBond angle:C\nsmoc Outlier', (178.993, 171.161, 146.455)), ('C', '571', 32, 'Bond angle:N:CA\nsmoc Outlier', (180.224, 170.425, 142.79899999999998)), ('C', '263', 33, 'smoc Outlier', (137.60299999999998, 217.311, 132.74599999999998)), ('C', '66', 33, 'Bond angle:CB:CG:CD2', (143.49, 218.339, 132.804)), ('C', '855', 34, 'Dihedral angle:CA:C', (136.375, 166.54, 153.371)), ('C', '856', 34, 'Dihedral angle:N:CA', (138.42100000000002, 165.47899999999998, 150.318)), ('C', '962', 35, 'smoc Outlier', (147.097, 168.94, 153.318)), ('C', '965', 35, 'Bond angle:OE1:CD:NE2', (148.045, 170.945, 148.27899999999997)), ('C', '470', 36, 'smoc Outlier', (189.22899999999998, 145.226, 102.537)), ('C', '471', 36, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (189.303, 141.515, 103.621)), ('C', '40', 37, 'Bond angle:CA:CB:CG', (137.895, 186.429, 140.38500000000002)), ('C', '41', 37, 'cablam Outlier', (134.1, 185.7, 140.3)), ('C', '476', 38, 'smoc Outlier', (180.29899999999998, 130.376, 106.598)), ('C', '477', 38, 'smoc Outlier', (182.512, 127.26, 107.092)), ('D', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (169.446, 132.261, 223.86800000000002)), ('E', '1', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C4:C5:C6', (186.135, 140.261, 223.45800000000003)), ('E', '2', 1, 'Bond angle:C6:C5:O5\nBond angle:C3:C2:N2', (188.042, 147.539, 226.736)), ('G', '1', 1, 'Planar group:C2:C7:C8:N2:O7', (135.344, 171.29399999999998, 225.718)), ('H', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (141.57399999999998, 150.009, 230.899)), ('J', '1', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C3:C2:N2', (119.348, 183.94299999999998, 133.314)), ('J', '2', 1, 'Planar group:C2:C7:C8:N2:O7\nBond angle:C2:C1:O5', (112.11999999999999, 186.918, 135.97899999999998)), ('K', '1', 1, 'Bond angle:C1:C2:C3', (184.766, 178.726, 224.065)), ('K', '2', 1, 'Bond angle:C3:C2:N2', (188.562, 178.994, 228.183))]
data['omega'] = [('A', ' 709 ', 'ASN', None, (171.656, 132.953, 207.954)), ('B', ' 709 ', 'ASN', None, (134.482, 164.88500000000005, 209.79700000000003))]
data['rama'] = [('A', ' 112 ', 'SER', 0.004441677755211549, (203.19, 148.818, 106.345)), ('A', ' 536 ', 'ASN', 0.04814426926602193, (174.84200000000007, 122.402, 142.222)), ('A', ' 582 ', 'LEU', 0.017702592055730968, (160.496, 116.828, 132.514)), ('A', ' 600 ', 'PRO', 0.039799903967645635, (192.098, 148.003, 166.205)), ('A', ' 709 ', 'ASN', 0.000584402801566375, (170.72900000000007, 133.627, 208.89700000000002)), ('A', ' 710 ', 'ASN', 0.009135093679175907, (172.584, 135.348, 211.819)), ('B', '  97 ', 'LYS', 0.04611186586939321, (125.932, 106.069, 138.897)), ('B', ' 123 ', 'ALA', 0.008932875029368544, (134.00700000000006, 104.283, 125.883)), ('B', ' 197 ', 'ILE', 0.011801302833170628, (136.79000000000005, 134.841, 129.478)), ('B', ' 198 ', 'ASP', 0.030004986493095583, (137.912, 135.80600000000007, 125.87900000000002)), ('B', ' 571 ', 'ASP', 0.019387185153585063, (139.90700000000007, 176.48600000000005, 148.461)), ('B', ' 709 ', 'ASN', 1.0163690950361251e-05, (134.84600000000006, 165.702, 210.98900000000003)), ('C', ' 112 ', 'SER', 0.0004993149661639112, (144.558, 202.284, 110.181)), ('C', ' 198 ', 'ASP', 0.01086539012912123, (145.641, 185.516, 126.932)), ('C', ' 536 ', 'ASN', 0.03233745974634581, (185.423, 192.86, 144.985))]
data['cablam'] = [('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (192.2, 169.1, 134.8)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (193.9, 148.8, 128.4)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (198.2, 146.9, 115.9)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'turn\n-STTS', (203.2, 148.8, 106.3)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (209.2, 152.3, 147.5)), ('A', '221', 'SER', 'check CA trace,carbonyls, peptide', ' \n----B', (205.0, 161.0, 143.5)), ('A', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (190.3, 150.9, 147.2)), ('A', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (140.7, 141.8, 109.5)), ('A', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (139.8, 152.8, 91.2)), ('A', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (152.0, 132.0, 133.7)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (174.8, 122.4, 142.2)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (180.8, 140.8, 167.0)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (177.4, 139.3, 168.1)), ('A', '709', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (170.7, 133.6, 208.9)), ('A', '710', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (172.6, 135.3, 211.8)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nGTTHH', (153.3, 174.5, 150.0)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (183.4, 176.5, 203.7)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (172.8, 160.8, 190.7)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (175.9, 172.2, 173.7)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (164.7, 141.1, 228.8)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (161.9, 140.8, 231.5)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (166.8, 153.5, 214.5)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (178.4, 153.2, 209.5)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (156.3, 144.7, 221.7)), ('A', '34', 'ARG', 'check CA trace', ' \nTT---', (204.0, 154.2, 142.0)), ('A', '96', 'GLU', 'check CA trace', 'strand\nEEESS', (219.0, 156.0, 134.4)), ('A', '109', 'THR', 'check CA trace', 'bend\nESS-S', (200.7, 145.2, 113.5)), ('A', '111', 'ASP', 'check CA trace', 'bend\nS-STT', (204.0, 148.5, 110.1)), ('A', '215', 'ASP', 'check CA trace', 'bend\n-SS--', (214.6, 148.4, 141.3)), ('A', '220', 'PHE', 'check CA trace', ' \nS----', (205.0, 158.2, 146.1)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (193.9, 146.2, 147.5)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (171.0, 133.5, 138.1)), ('A', '856', 'ASN', 'check CA trace', 'turn\n-TTTE', (174.3, 176.8, 148.7)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (149.7, 126.8, 136.4)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (130.4, 134.5, 131.9)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (125.9, 106.1, 138.9)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (125.0, 131.3, 120.0)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (123.5, 126.2, 117.9)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (121.9, 126.0, 114.3)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (134.0, 104.3, 125.9)), ('B', '137', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S-G', (120.5, 118.6, 120.8)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (137.9, 135.8, 125.9)), ('B', '212', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--S-S', (123.4, 108.7, 149.2)), ('B', '230', 'PRO', ' beta sheet', ' \nEE---', (142.4, 128.2, 121.4)), ('B', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-BT', (117.1, 181.7, 80.2)), ('B', '570', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (140.7, 175.4, 152.1)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (133.6, 151.8, 169.5)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (133.8, 155.5, 170.4)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nTTT-H', (171.8, 141.3, 141.2)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (165.4, 133.1, 203.6)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (162.8, 150.9, 197.5)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (156.2, 150.0, 191.4)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (162.8, 141.6, 173.6)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (154.4, 159.6, 215.0)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (148.2, 149.1, 210.7)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (124.4, 127.1, 111.5)), ('B', '197', 'ILE', 'check CA trace', 'bend\nE-SSS', (136.8, 134.8, 129.5)), ('B', '199', 'GLY', 'check CA trace', 'bend\nSSS-E', (141.3, 134.2, 126.9)), ('B', '200', 'TYR', 'check CA trace', ' \nSS-EE', (140.1, 131.0, 125.1)), ('B', '220', 'PHE', 'check CA trace', ' \nSS---', (135.8, 121.0, 150.1)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (130.2, 136.5, 151.1)), ('B', '415', 'THR', 'check CA trace', ' \nT--SH', (139.4, 169.0, 90.0)), ('B', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (139.8, 184.5, 67.8)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (129.6, 165.4, 143.1)), ('B', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (134.4, 138.4, 169.5)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (134.1, 185.7, 140.3)), ('C', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (149.4, 200.5, 128.0)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (150.7, 195.2, 131.5)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (149.3, 198.8, 118.7)), ('C', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (146.0, 204.0, 113.3)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (144.6, 202.3, 110.2)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (126.9, 207.2, 123.1)), ('C', '124', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SSSE', (122.6, 206.4, 126.2)), ('C', '135', 'PHE', 'check CA trace,carbonyls, peptide', ' \n----S', (140.1, 208.4, 112.4)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (145.6, 185.5, 126.9)), ('C', '231', 'ILE', ' beta sheet', ' \nEE---', (138.8, 189.5, 120.9)), ('C', '496', 'GLY', ' beta sheet', ' \nE--B-', (175.1, 153.7, 92.7)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (185.4, 192.9, 145.0)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (136.7, 170.3, 205.5)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (144.1, 150.3, 198.3)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (155.0, 169.9, 191.6)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (159.7, 177.2, 210.7)), ('C', '125', 'ASN', 'check CA trace', 'bend\nSSSEE', (125.0, 203.5, 127.0)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (139.4, 202.1, 150.1)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (155.2, 198.0, 150.3)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (154.7, 191.1, 169.3)), ('C', '456', 'PHE', 'check CA trace', ' \nE---S', (179.9, 142.9, 106.2)), ('C', '484', 'GLU', 'check CA trace', ' \nTS-BT', (185.1, 135.8, 96.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (177.2, 185.1, 139.9)), ('C', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (156.0, 195.7, 169.3))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23556/7lwt/Model_validation_1/validation_cootdata/molprobity_probe7lwt_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

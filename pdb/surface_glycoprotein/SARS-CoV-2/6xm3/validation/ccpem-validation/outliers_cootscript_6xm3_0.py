
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' B1100  THR  HG1', ' B1101  HIS  HD1', -0.773, (169.055, 205.23, 262.42)), (' A 350  VAL HG11', ' A 402  ILE HG23', -0.727, (170.339, 194.467, 138.333)), (' C 318  PHE  HZ ', ' C 615  VAL HG21', -0.653, (219.917, 187.967, 188.403)), (' A 350  VAL HG12', ' A 400  PHE  HB2', -0.634, (167.774, 192.611, 138.488)), (' B 323  THR  OG1', ' B 537  LYS  NZ ', -0.625, (167.892, 221.447, 174.173)), (' B 391  CYS  HA ', ' B 525  CYS  HB3', -0.622, (187.785, 216.244, 150.872)), (' B 374  PHE  HA ', ' B 436  TRP  HB3', -0.616, (176.502, 224.647, 130.357)), (' A 106  PHE  HB2', ' A 117  LEU  HB3', -0.615, (196.037, 146.792, 150.943)), (' B 448  ASN  HB2', ' B 497  PHE  HB2', -0.594, (184.284, 227.819, 114.431)), (' B 188  ASN  HA ', ' B 209  PRO  HA ', -0.589, (129.697, 183.382, 177.306)), (' A  99  ASN  O  ', ' A 102  ARG  NH2', -0.589, (209.12, 133.143, 155.458)), (' A  88  ASP  N  ', ' A  88  ASP  OD1', -0.587, (188.145, 149.998, 162.448)), (' B 689  SER  OG ', ' B 690  GLN  N  ', -0.582, (144.601, 204.48, 206.725)), (' B  83  VAL HG11', ' B 237  ARG HH11', -0.582, (138.373, 203.166, 156.282)), (' A 328  ARG  NH2', ' A 531  THR  O  ', -0.579, (160.139, 156.138, 160.753)), (' A 516  GLU  OE2', ' A 519  HIS  NE2', -0.576, (161.604, 182.342, 161.75)), (' C  88  ASP  N  ', ' C  88  ASP  OD1', -0.572, (215.767, 209.989, 164.318)), (' B 675  GLN  O  ', ' B 690  GLN  NE2', -0.567, (147.983, 203.098, 209.609)), (' C 366  SER  O  ', ' C 370  ASN  ND2', -0.565, (210.237, 185.16, 144.017)), (' C 440  ASN  N  ', ' C 440  ASN  OD1', -0.565, (197.317, 177.783, 125.731)), (' A 100  ILE HG22', ' A 242  LEU HD22', -0.563, (203.242, 130.821, 156.813)), (' B 353  TRP  O  ', ' B 466  ARG  NH1', -0.562, (197.042, 219.969, 128.173)), (' B 448  ASN  ND2', ' B 497  PHE  O  ', -0.56, (183.47, 230.572, 113.439)), (' C  65  PHE  O  ', ' C 264  ALA  N  ', -0.56, (228.353, 227.2, 165.641)), (' B  96  GLU  O  ', ' B 186  PHE  N  ', -0.552, (124.82, 188.111, 172.947)), (' A 134  GLN  O  ', ' A 160  TYR  OH ', -0.548, (195.623, 138.075, 141.017)), (' B 438  SER  HB3', ' B 442  ASP  HB2', -0.544, (182.792, 228.968, 122.416)), (' A  34  ARG  NH2', ' A 191  GLU  OE1', -0.544, (204.145, 142.52, 171.931)), (' B1141  LEU HD12', ' B1142  GLN  HG3', -0.541, (185.365, 189.915, 273.239)), (' A 393  THR HG21', ' A 519  HIS  HB2', -0.541, (158.816, 178.728, 160.974)), (' A 792  PRO  O  ', ' A 795  LYS  NZ ', -0.539, (219.89, 177.309, 233.097)), (' A 162  SER  OG ', ' A 163  ALA  N  ', -0.537, (198.636, 142.112, 137.431)), (' C 516  GLU  OE2', ' C 519  HIS  ND1', -0.536, (203.807, 168.523, 162.948)), (' B 379  CYS  HB3', ' B 432  CYS  HA ', -0.535, (181.436, 212.718, 137.495)), (' A 796  ASP  N  ', ' A 796  ASP  OD1', -0.533, (216.973, 175.512, 239.73)), (' B 316  SER  OG ', ' B 317  ASN  N  ', -0.532, (165.791, 203.077, 185.661)), (' B 293  LEU  O  ', ' B 632  THR  OG1', -0.53, (150.768, 202.889, 185.565)), (' C 605  SER  OG ', ' C 606  ASN  N  ', -0.528, (220.548, 211.076, 198.863)), (' B 466  ARG  HE ', ' B 468  ILE HD11', -0.526, (200.098, 217.655, 125.969)), (' B 605  SER  OG ', ' B 606  ASN  N  ', -0.526, (149.124, 198.886, 199.559)), (' C 127  VAL HG12', ' C 171  VAL HG22', -0.524, (207.011, 232.862, 151.95)), (' C 328  ARG  NH2', ' C 580  GLN  OE1', -0.524, (226.804, 171.982, 161.561)), (' B 478  THR  HB ', ' B 487  ASN HD21', -0.524, (203.272, 206.149, 98.501)), (' B 462  LYS  HD2', ' B 465  GLU  HG3', -0.523, (199.967, 208.349, 126.955)), (' A 334  ASN  N  ', ' A 334  ASN  OD1', -0.521, (154.681, 167.342, 147.507)), (' B 626  ALA  O  ', ' B 634  ARG  NH2', -0.518, (153.106, 211.602, 181.396)), (' B 287  ASP  N  ', ' B 287  ASP  OD1', -0.517, (148.913, 184.073, 185.982)), (' A 102  ARG  HD2', ' A 141  LEU HD11', -0.517, (207.167, 133.854, 150.947)), (' B 401  VAL HG22', ' B 509  ARG HH12', -0.516, (187.068, 224.6, 124.716)), (' B 280  ASN  ND2', ' B 281  GLU  O  ', -0.516, (148.495, 173.89, 184.576)), (' C 501  ASN  O  ', ' C 506  GLN  NE2', -0.515, (187.793, 180.866, 126.102)), (' A1091  ARG  NH1', ' A1118  ASP  O  ', -0.515, (184.141, 181.466, 257.927)), (' B 301  CYS  O  ', ' B 304  LYS  NZ ', -0.514, (161.853, 190.554, 185.731)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.512, (156.507, 197.396, 203.264)), (' A 448  ASN  OD1', ' A 450  ASN  ND2', -0.51, (165.736, 195.225, 125.831)), (' A 642  VAL HG22', ' A 651  ILE HG12', -0.51, (174.48, 146.764, 193.596)), (' B 707  TYR  HB3', ' C 792  PRO  HG2', -0.51, (175.651, 213.318, 237.599)), (' B 248  TYR  HB3', ' B 250  THR HG23', -0.509, (120.145, 200.898, 150.498)), (' B  40  ASP  N  ', ' B  40  ASP  OD1', -0.509, (154.584, 181.701, 172.147)), (' C 494  SER  OG ', ' C 495  TYR  N  ', -0.508, (185.827, 166.743, 127.77)), (' B 825  LYS  NZ ', ' B 938  LEU  O  ', -0.507, (157.116, 181.47, 215.104)), (' B 472  ILE HD11', ' B 484  GLU  HB3', -0.501, (202.723, 214.668, 105.741)), (' C 574  ASP  N  ', ' C 574  ASP  OD1', -0.501, (213.25, 170.587, 176.227)), (' C 827  THR  OG1', ' C 828  LEU  N  ', -0.501, (192.752, 214.471, 202.567)), (' B 421  TYR  O  ', ' B 457  ARG  NH1', -0.5, (195.672, 208.908, 120.698)), (' B 142  GLY  H  ', ' B 159  VAL HG11', -0.5, (122.694, 190.798, 152.769)), (' A 777  ASN  OD1', ' A1019  ARG  NH1', -0.499, (198.571, 189.107, 209.647)), (' A 172  SER  OG ', ' A 173  GLN  N  ', -0.497, (214.222, 148.902, 152.61)), (' C 832  GLY  HA3', ' C 956  ALA  HB1', -0.497, (191.08, 207.894, 194.908)), (' B 491  PRO  HB2', ' B 492  LEU HD12', -0.496, (196.568, 213.542, 114.286)), (' B 642  VAL HG22', ' B 651  ILE HG12', -0.491, (157.302, 214.733, 194.749)), (' C 214  ARG  NH1', ' C 266  TYR  OH ', -0.491, (228.141, 226.157, 173.211)), (' C 206  LYS  HE2', ' C 221  SER  HB2', -0.49, (210.828, 228.304, 178.482)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.49, (177.018, 184.683, 141.508)), (' C1084  ASP  N  ', ' C1084  ASP  OD1', -0.488, (202.031, 174.996, 265.837)), (' B  81  ASN HD21', ' B 242  LEU  HB2', -0.487, (127.169, 195.916, 160.94)), (' B 102  ARG  HD2', ' B 121  ASN  HB3', -0.486, (128.775, 184.867, 158.826)), (' B 160  TYR  OH ', ' B 248  TYR  O  ', -0.483, (122.829, 196.826, 149.962)), (' B 758  SER  O  ', ' B 758  SER  OG ', -0.482, (193.157, 173.048, 184.424)), (' C 393  THR HG21', ' C 520  ALA  HB3', -0.482, (208.835, 165.712, 160.013)), (' B 128  ILE  HB ', ' B 170  TYR  HB3', -0.481, (140.281, 182.23, 153.601)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.48, (152.008, 199.633, 187.214)), (' B 328  ARG  NH1', ' B 531  THR  O  ', -0.48, (178.043, 228.222, 165.888)), (' A 408  ARG  NH1', ' A 414  GLN  OE1', -0.479, (180.052, 195.677, 148.925)), (' C 112  SER  OG ', ' C 133  PHE  O  ', -0.479, (217.667, 220.901, 142.532)), (' B 189  LEU  HG ', ' B 210  ILE HG12', -0.474, (131.134, 187.577, 177.711)), (' C  31  SER  HB3', ' C  34  ARG  HB3', -0.474, (219.39, 219.586, 176.885)), (' B 162  SER  OG ', ' B 163  ALA  N  ', -0.473, (134.315, 190.96, 142.274)), (' A 326  ILE HD11', ' A 534  VAL HG22', -0.47, (165.6, 154.619, 166.238)), (' B 493 BGLN  OE1', ' B 494  SER  N  ', -0.466, (191.694, 221.0, 110.967)), (' B 422  ASN HD21', ' B 454  ARG  HD2', -0.466, (193.161, 211.599, 118.283)), (' C 747  THR  O  ', ' C 751  ASN  ND2', -0.465, (170.717, 199.42, 170.694)), (' A 743  CYS  HB3', ' A 749  CYS  HB3', -0.462, (205.124, 189.064, 173.96)), (' A 105  ILE HD11', ' A 241  LEU HD21', -0.462, (198.027, 137.548, 149.694)), (' A 131  CYS  HA ', ' A 166  CYS  HA ', -0.459, (198.946, 149.737, 140.145)), (' C 417  LYS  NZ ', ' C 455  LEU  O  ', -0.458, (178.383, 164.543, 138.656)), (' A 498  GLN  O  ', ' A 501  ASN  ND2', -0.457, (178.95, 194.184, 125.376)), (' B 986  PRO  O  ', ' B 990  GLU  HG2', -0.457, (184.659, 174.006, 162.539)), (' B 357  ARG  NH1', ' C 167  THR  O  ', -0.455, (201.675, 222.72, 143.824)), (' B 452  LEU  HA ', ' B 494  SER  HA ', -0.455, (191.817, 221.627, 114.801)), (' B1103  PHE  HZ ', ' O   1  NAG  H62', -0.455, (168.615, 199.67, 260.675)), (' B 128  ILE HD13', ' B 170  TYR  HD2', -0.453, (139.763, 180.59, 155.792)), (' C 422  ASN HD21', ' C 454  ARG  H  ', -0.452, (185.306, 163.527, 137.863)), (' A 391  CYS  HB3', ' A 522  ALA  HB1', -0.452, (160.151, 171.308, 158.029)), (' B 462  LYS  HB2', ' B 465  GLU  HB2', -0.451, (198.064, 207.947, 127.529)), (' B 101  ILE HG22', ' B 242  LEU HD12', -0.45, (127.391, 193.116, 163.52)), (' C1116  THR  OG1', ' C1118  ASP  OD1', -0.449, (195.405, 187.96, 261.787)), (' C1114  ILE  O  ', ' C1119  ASN  ND2', -0.447, (199.314, 189.465, 259.758)), (' C1118  ASP  N  ', ' C1118  ASP  OD1', -0.447, (193.915, 186.305, 261.973)), (' B 716  THR  OG1', ' B1071  GLN  O  ', -0.447, (164.531, 197.051, 244.436)), (' B  83  VAL HG22', ' B 239  GLN  HB2', -0.445, (135.436, 200.662, 157.368)), (' A 319  ARG  NH1', ' A 592  PHE  O  ', -0.444, (178.067, 158.093, 184.319)), (' C 406  GLU  HB3', ' C 418  ILE HG13', -0.442, (186.444, 172.238, 139.446)), (' C 964  LYS  HB3', ' C 964  LYS  HE2', -0.442, (193.933, 204.556, 183.06)), (' A 787  GLN  NE2', ' C 703  ASN HD22', -0.441, (215.726, 193.5, 230.555)), (' C 328  ARG HH21', ' C 580  GLN  HB2', -0.441, (226.005, 171.024, 161.673)), (' C 318  PHE  CD2', ' C 623  ALA  HB1', -0.44, (221.04, 190.593, 185.187)), (' B 452  LEU HD21', ' B 492  LEU  HB3', -0.439, (195.804, 218.352, 115.025)), (' B 659  SER  HB3', ' B 698  SER  HB3', -0.439, (162.91, 209.889, 216.625)), (' B 314  GLN  NE2', ' B 316  SER  O  ', -0.437, (167.838, 202.386, 189.442)), (' C 833  PHE  HD2', ' C 959  LEU HD13', -0.436, (184.635, 207.2, 192.808)), (' B 627  ASP  N  ', ' B 627  ASP  OD1', -0.434, (156.04, 212.942, 179.787)), (' C 443  SER  HB2', ' C 497  PHE  HB3', -0.434, (190.804, 173.489, 125.758)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.433, (218.017, 207.969, 186.704)), (' B 401  VAL HG22', ' B 509  ARG HH22', -0.432, (187.314, 225.769, 123.943)), (' B 332  ILE HD13', ' B 527  PRO  HB3', -0.431, (182.814, 226.182, 154.404)), (' C 828  LEU HD23', ' C 835  LYS  HB2', -0.43, (188.928, 213.026, 197.7)), (' B 607  GLN  H  ', ' B 607  GLN  HG2', -0.429, (149.625, 200.859, 199.781)), (' C1048  HIS  HA ', ' C1066  THR HG22', -0.428, (193.994, 198.001, 231.873)), (' C 808  ASP  N  ', ' C 808  ASP  OD1', -0.428, (182.193, 220.174, 223.59)), (' B  97  LYS  HB2', ' B 100  ILE HD11', -0.428, (122.349, 189.387, 168.635)), (' C 102  ARG  HA ', ' C 102  ARG  HD3', -0.427, (218.416, 233.504, 159.882)), (' B 345  THR  OG1', ' B 346  ARG  N  ', -0.424, (191.627, 232.879, 127.878)), (' C 501  ASN  HB3', ' C 505  TYR  HB2', -0.423, (185.243, 178.045, 127.402)), (' B 129  LYS  HE3', ' B 133  PHE  HZ ', -0.422, (135.672, 187.197, 148.245)), (' B 438  SER  HB2', ' B 507  PRO  HB2', -0.421, (182.434, 226.318, 121.621)), (' A 112  SER  O  ', ' A 112  SER  OG ', -0.42, (190.683, 144.747, 137.818)), (' C 776  LYS  HB3', ' C 776  LYS  HE2', -0.42, (176.125, 194.436, 208.474)), (' A 413  GLY  HA3', ' C 987  PRO  HG2', -0.42, (176.622, 194.75, 155.95)), (' B 377  PHE  HE2', ' B 384  PRO  HG3', -0.419, (176.855, 215.944, 140.425)), (' B 119  ILE HG23', ' B 128  ILE HG13', -0.418, (138.203, 184.873, 156.258)), (' C 743  CYS  HB3', ' C 749  CYS  HB3', -0.418, (176.897, 201.489, 174.087)), (' C 363  ALA  O  ', ' C 527  PRO  HD3', -0.418, (214.787, 177.144, 149.482)), (' B 498  GLN  HB2', ' B 501  ASN HD21', -0.418, (178.347, 228.21, 110.331)), (' B 131  CYS  HA ', ' B 166  CYS  HB3', -0.417, (140.941, 189.417, 144.988)), (' A 294  ASP  N  ', ' A 294  ASP  OD1', -0.416, (189.004, 149.784, 184.964)), (' C 630  THR HG23', ' C 633  TRP  HB2', -0.415, (221.875, 204.015, 183.324)), (' C 172  SER  O  ', ' C 172  SER  OG ', -0.415, (204.124, 234.639, 159.316)), (' A  83  VAL HG11', ' A 237  ARG HH21', -0.415, (187.792, 139.098, 150.941)), (' C 703  ASN  OD1', ' C 704  SER  N  ', -0.414, (217.741, 189.79, 232.115)), (' A 394  ASN  N  ', ' A 394  ASN  OD1', -0.413, (159.532, 180.086, 155.987)), (' C 804  GLN  OE1', ' C 935  GLN  NE2', -0.413, (192.499, 218.19, 225.898)), (' B 443  SER  HB2', ' B 497  PHE  HB3', -0.412, (181.964, 229.017, 115.879)), (' B 402  ILE HG13', ' B 508  TYR  HB2', -0.412, (182.465, 219.989, 123.23)), (' A 326  ILE  HA ', ' A 326  ILE HD13', -0.41, (166.388, 156.989, 163.194)), (' B 900  MET  HB3', ' B 900  MET  HE2', -0.408, (174.819, 172.22, 245.643)), (' A 945  LEU HD23', ' A 948  LEU HD12', -0.408, (203.524, 171.797, 211.971)), (' A 808  ASP  HA ', ' A 809  PRO  HD3', -0.408, (221.124, 173.464, 225.513)), (' B 404  GLY  HA3', ' B 504  GLY  HA2', -0.407, (176.427, 219.29, 118.508)), (' B 713  ALA  HB3', ' C 894  LEU  HB3', -0.406, (171.915, 202.666, 241.748)), (' B 429  PHE  HE1', ' B 464  PHE  HZ ', -0.406, (189.871, 209.97, 135.122)), (' A 384  PRO  HA ', ' A 387  LEU HD12', -0.405, (173.241, 174.4, 151.131)), (' A 713  ALA  HB3', ' B 894  LEU  HB3', -0.404, (180.461, 164.179, 240.78)), (' B 404  GLY  HA2', ' B 508  TYR  CE1', -0.402, (177.725, 220.317, 121.61)), (' C 130  VAL HG13', ' C 233  ILE HD11', -0.402, (208.886, 219.229, 150.256)), (' C 134  GLN  O  ', ' C 160  TYR  OH ', -0.401, (220.956, 225.506, 145.142)), (' A 568  ASP  N  ', ' A 568  ASP  OD2', -0.4, (163.022, 173.648, 178.973)), (' B 198  ASP  N  ', ' B 198  ASP  OD1', -0.4, (155.409, 189.193, 160.16))]
data['cbeta'] = [('B', ' 616 ', 'ASN', ' ', 0.3977542028803941, (167.778, 219.654, 192.587)), ('B', ' 620 ', 'VAL', ' ', 0.25406927598349727, (161.303, 214.462, 189.51)), ('C', ' 361 ', 'CYS', ' ', 0.2906043748866182, (215.243, 169.705, 148.038))]
data['smoc'] = [('A', 45, u'SER', -0.21253868503038598, (210.863, 162.032, 180.259)), ('A', 46, u'SER', -0.01786899757443062, (209.52800000000002, 161.623, 183.82800000000003)), ('A', 57, u'PRO', 0.060801009579962866, (191.824, 147.92600000000002, 174.632)), ('A', 69, u'HIS', -0.17935783954054016, (196.82600000000002, 120.982, 160.071)), ('A', 138, u'ASP', -0.2710234164815259, (194.32700000000003, 130.953, 147.97299999999998)), ('A', 141, u'LEU', -0.23315822289107363, (204.24899999999997, 131.59, 147.76999999999998)), ('A', 163, u'ALA', -0.1047114690287945, (200.372, 144.35100000000003, 137.38500000000002)), ('A', 173, u'GLN', -0.23141779632971893, (215.44299999999998, 146.879, 153.055)), ('A', 205, u'SER', -0.15832270422407643, (206.38200000000003, 147.707, 164.74699999999999)), ('A', 224, u'GLU', -0.1783995592083272, (207.9, 152.459, 167.46200000000002)), ('A', 272, u'PRO', 0.00824124673363727, (188.732, 154.92700000000002, 170.10399999999998)), ('A', 287, u'ASP', -0.036110417278843454, (203.24499999999998, 151.77599999999998, 181.88000000000002)), ('A', 288, u'ALA', -0.11156035573445737, (199.74299999999997, 152.85600000000002, 180.872)), ('A', 292, u'ALA', -0.03436160220119647, (187.455, 152.899, 180.17299999999997)), ('A', 303, u'LEU', -0.01158672125903541, (193.502, 162.38600000000002, 189.18200000000002)), ('A', 337, u'PRO', -0.2194812658862746, (159.875, 173.511, 140.72899999999998)), ('A', 353, u'TRP', 0.04003929447709393, (162.539, 192.423, 141.21699999999998)), ('A', 380, u'TYR', 0.03327171735331423, (175.0, 182.87800000000001, 154.877)), ('A', 403, u'ARG', 0.0774380099678976, (176.162, 193.796, 135.517)), ('A', 410, u'ILE', -0.04886903929068695, (174.11499999999998, 191.441, 147.032)), ('A', 428, u'ASP', -0.22875263662232612, (170.80700000000002, 189.518, 159.55)), ('A', 450, u'ASN', 0.23282949775145875, (164.95700000000002, 196.67499999999998, 128.8)), ('A', 463, u'PRO', 0.009196256139604595, (165.48000000000002, 195.68, 153.71699999999998)), ('A', 478, u'THR', -0.3135444961458478, (163.222, 224.36, 141.497)), ('A', 497, u'PHE', 0.3484964449914002, (174.90800000000002, 194.529, 126.798)), ('A', 637, u'SER', 0.014935822541519586, (176.297, 147.11399999999998, 187.993)), ('A', 658, u'ASN', -0.06114208077764541, (177.591, 147.261, 214.011)), ('A', 743, u'CYS', -0.2512411952706166, (204.71599999999998, 187.20299999999997, 176.36)), ('A', 776, u'LYS', -0.009513687970497588, (203.186, 191.13, 209.736)), ('A', 794, u'ILE', -0.17705568643793448, (221.012, 176.151, 237.409)), ('A', 799, u'GLY', -0.24554860015583688, (211.572, 168.93, 240.45100000000002)), ('A', 849, u'LEU', -0.13569556813794034, (209.889, 170.853, 189.983)), ('A', 861, u'LEU', -0.03670082468448585, (210.978, 185.61299999999997, 198.2)), ('A', 862, u'PRO', 0.06005779374175821, (212.596, 184.712, 201.536)), ('A', 876, u'ALA', -0.3399459393019172, (212.712, 184.26899999999998, 225.53)), ('A', 918, u'GLU', -0.2418268985483228, (201.512, 168.21399999999997, 249.996)), ('A', 919, u'ASN', -0.3008312434231608, (201.67899999999997, 166.493, 246.605)), ('A', 936, u'ASP', -0.2730729902919283, (207.06, 159.676, 221.48600000000002)), ('A', 950, u'ASP', 0.1103607782221067, (198.033, 171.518, 203.83800000000002)), ('A', 962, u'LEU', -0.08709642761541975, (199.813, 177.82700000000003, 186.407)), ('A', 968, u'SER', 0.03181443619012077, (197.16299999999998, 175.2, 175.869)), ('A', 974, u'SER', -0.16937361388974492, (199.86, 176.555, 168.389)), ('A', 989, u'ALA', -0.17135700793525294, (199.83200000000002, 186.77499999999998, 163.252)), ('A', 990, u'GLU', -0.2021415298179841, (198.06, 189.25, 165.532)), ('A', 1004, u'LEU', 0.03978715945526972, (196.86800000000002, 184.681, 185.96800000000002)), ('A', 1010, u'GLN', 0.019461923185964503, (192.33800000000002, 182.484, 194.77299999999997)), ('A', 1057, u'PRO', 0.015185021854182692, (207.751, 175.564, 209.954)), ('A', 1099, u'GLY', -0.3410714119203066, (176.83800000000002, 158.231, 256.20599999999996)), ('A', 1104, u'VAL', -0.2989101130994737, (182.404, 170.797, 254.767)), ('A', 1111, u'GLU', -0.33618767923945597, (189.305, 167.17399999999998, 251.917)), ('A', 1117, u'THR', -0.29867819865762013, (181.564, 179.13899999999998, 262.587)), ('A', 1118, u'ASP', -0.3039935927121045, (184.771, 180.094, 260.802)), ('A', 1133, u'VAL', -0.25812019512366047, (169.45600000000002, 169.342, 257.95)), ('B', 36, u'VAL', -0.00938340252225731, (146.23999999999998, 188.01, 176.403)), ('B', 37, u'TYR', 0.13969795674653082, (147.232, 185.477, 173.761)), ('B', 59, u'PHE', -0.08192799678631446, (143.17399999999998, 199.172, 182.35100000000003)), ('B', 68, u'ILE', -0.016807080839353648, (121.54400000000001, 202.056, 166.33100000000002)), ('B', 69, u'HIS', -0.00831045717799777, (120.402, 205.681, 166.135)), ('B', 82, u'PRO', 0.052195668126345594, (132.21499999999997, 203.399, 160.642)), ('B', 83, u'VAL', 0.08778150272683151, (135.74699999999999, 202.84, 159.393)), ('B', 94, u'SER', 0.2714993092617288, (131.58800000000002, 191.185, 170.95800000000003)), ('B', 112, u'SER', 0.31107121951449335, (138.42600000000002, 198.706, 144.24099999999999)), ('B', 143, u'VAL', -0.040629964599115984, (118.73, 188.477, 155.629)), ('B', 159, u'VAL', 0.07962264290784658, (124.423, 188.30800000000002, 149.61299999999997)), ('B', 161, u'SER', 0.2261595938660796, (130.27899999999997, 189.61899999999997, 146.586)), ('B', 169, u'GLU', -0.1629453814945542, (140.54299999999998, 181.538, 148.905)), ('B', 209, u'PRO', 0.12472021651223537, (130.063, 182.9, 178.846)), ('B', 225, u'PRO', -0.05874958623818319, (145.503, 180.771, 168.033)), ('B', 226, u'LEU', -0.08795997876682496, (142.869, 180.226, 165.374)), ('B', 227, u'VAL', 0.013585842729016577, (144.45100000000002, 180.45000000000002, 161.91)), ('B', 268, u'GLY', -0.010488369026082953, (140.98200000000003, 198.329, 171.51399999999998)), ('B', 349, u'SER', -0.29411281679550627, (192.006, 222.016, 121.94300000000001)), ('B', 357, u'ARG', -0.0032357760910765587, (196.57, 220.47899999999998, 139.997)), ('B', 384, u'PRO', 0.04467628807764433, (176.64, 215.79399999999998, 144.24899999999997)), ('B', 385, u'THR', -0.007456732538909633, (175.43, 215.727, 147.869)), ('B', 409, u'GLN', -0.47647845460999994, (181.85200000000003, 209.016, 124.699)), ('B', 419, u'ALA', -0.37488189825515983, (187.69299999999998, 208.706, 122.978)), ('B', 476, u'GLY', -0.2607932594682583, (200.33100000000002, 204.667, 101.99900000000001)), ('B', 493, u'GLN', -0.19196328865071474, (193.04, 219.02700000000002, 111.614)), ('B', 504, u'GLY', -0.2711802921189253, (175.559, 219.533, 117.12199999999999)), ('B', 507, u'PRO', -0.2719467212984235, (181.52200000000002, 224.36200000000002, 120.265)), ('B', 516, u'GLU', 0.05249795830304501, (193.095, 210.65200000000002, 144.286)), ('B', 530, u'SER', -0.07084800199327382, (178.27399999999997, 225.23399999999998, 161.971)), ('B', 536, u'ASN', 0.053019708715795914, (172.846, 225.625, 180.32200000000003)), ('B', 570, u'ALA', 0.37344924985707967, (191.323, 210.268, 185.23)), ('B', 585, u'LEU', 0.0730692304738944, (183.33200000000002, 226.317, 178.354)), ('B', 589, u'PRO', -0.030672805897432567, (177.047, 215.494, 182.561)), ('B', 601, u'GLY', -0.373413370665049, (154.738, 194.393, 201.265)), ('B', 630, u'THR', -0.4854900454727436, (151.016, 205.76, 182.032)), ('B', 662, u'CYS', -0.49982948522337844, (163.777, 203.06, 211.73299999999998)), ('B', 665, u'PRO', -0.4280386160610217, (165.994, 203.19299999999998, 205.766)), ('B', 728, u'PRO', -0.06312372264577659, (174.164, 180.042, 210.786)), ('B', 734, u'THR', -0.0760573737040107, (176.313, 171.70399999999998, 195.476)), ('B', 737, u'ASP', -0.14807350961905363, (179.409, 168.56, 186.231)), ('B', 746, u'SER', 0.03510117145630061, (177.964, 166.88200000000003, 172.124)), ('B', 781, u'VAL', 0.11435002562512855, (179.736, 173.035, 216.82700000000003)), ('B', 809, u'PRO', -0.08778728943169407, (160.076, 160.48000000000002, 223.187)), ('B', 810, u'SER', -0.24030965506009905, (156.707, 159.58200000000002, 221.61899999999997)), ('B', 897, u'PRO', -0.16314279658548578, (171.292, 168.577, 242.668)), ('B', 909, u'ILE', -0.3547946330172575, (177.92200000000003, 186.88400000000001, 239.635)), ('B', 910, u'GLY', -0.3680803381153244, (178.37, 188.32500000000002, 243.10299999999998)), ('B', 916, u'LEU', -0.27613382115756724, (168.499, 181.691, 245.967)), ('B', 944, u'ALA', -0.008593582184444563, (162.344, 185.523, 213.73499999999999)), ('B', 967, u'SER', 0.06567662474657977, (169.953, 180.909, 177.202)), ('B', 983, u'ARG', 0.15325160996833398, (173.316, 174.20399999999998, 160.32100000000003)), ('B', 992, u'GLN', -0.012340214127125363, (180.41, 179.85800000000003, 166.889)), ('B', 1007, u'TYR', -0.027732115761028166, (179.621, 181.39200000000002, 190.39100000000002)), ('B', 1053, u'PRO', 0.17147405895927031, (171.38600000000002, 174.653, 222.86700000000002)), ('B', 1057, u'PRO', 0.08641280372485155, (167.91299999999998, 173.985, 209.974)), ('B', 1058, u'HIS', -0.04242128400167865, (171.526, 174.82200000000003, 209.012)), ('B', 1082, u'CYS', -0.25572812605369905, (186.474, 206.13899999999998, 261.43699999999995)), ('B', 1085, u'GLY', -0.25910310326558933, (191.62800000000001, 206.812, 264.97599999999994)), ('B', 1111, u'GLU', -0.2752482694833423, (170.463, 193.05, 252.383)), ('B', 1120, u'THR', -0.20972258207316902, (185.35200000000003, 195.026, 257.70799999999997)), ('B', 1127, u'ASP', -0.27119419725339206, (192.86800000000002, 211.93, 258.257)), ('B', 1128, u'VAL', -0.20280893882861728, (193.883, 210.43200000000002, 254.906)), ('B', 1147, u'SER', -0.27438292555555943, (184.405, 185.62, 281.637)), ('B', 1305, u'NAG', -0.08899433043958253, (153.64399999999998, 221.001, 211.33800000000002)), ('C', 60, u'SER', -3.2574786270003455e-05, (223.564, 213.79899999999998, 176.71299999999997)), ('C', 93, u'ALA', -0.21440170568573022, (219.82100000000003, 225.586, 169.447)), ('C', 167, u'THR', -0.12892703603399144, (203.83800000000002, 221.36800000000002, 144.90800000000002)), ('C', 192, u'PHE', -0.1602044383146243, (213.98200000000003, 224.28, 167.875)), ('C', 199, u'GLY', -0.10872737026667621, (203.077, 212.631, 156.836)), ('C', 246, u'ARG', -0.21474721522765078, (231.506, 237.476, 150.429)), ('C', 251, u'PRO', -0.22583199448329597, (231.47, 224.52700000000002, 142.795)), ('C', 274, u'THR', -0.020525350639753116, (209.287, 207.97, 178.696)), ('C', 296, u'LEU', 0.03280245370373766, (216.256, 206.877, 191.59)), ('C', 297, u'SER', -0.03961848992935076, (214.238, 208.255, 188.696)), ('C', 304, u'LYS', 0.0830251849485586, (203.98800000000003, 208.696, 189.976)), ('C', 312, u'ILE', -0.17247932694240894, (212.22899999999998, 199.58, 199.255)), ('C', 320, u'VAL', -0.020645962673616867, (220.923, 188.95700000000002, 180.27499999999998)), ('C', 340, u'GLU', -0.23003220542155295, (209.542, 168.545, 136.417)), ('C', 375, u'SER', -0.17691655691757374, (197.475, 183.83700000000002, 138.899)), ('C', 425, u'LEU', -0.007960290330397909, (191.22899999999998, 168.66899999999998, 150.52)), ('C', 435, u'ALA', -0.14006371184070074, (197.017, 177.68800000000002, 139.46)), ('C', 512, u'VAL', -0.12427767242286657, (198.96800000000002, 171.605, 145.13)), ('C', 547, u'THR', -0.2518790775221548, (214.16, 179.563, 167.02100000000002)), ('C', 550, u'GLY', -0.06529097211851317, (219.289, 180.42800000000003, 175.71399999999997)), ('C', 573, u'THR', -0.10326578993672363, (211.959, 172.859, 173.92200000000003)), ('C', 611, u'LEU', -0.08138951145015146, (219.10899999999998, 194.768, 195.17899999999997)), ('C', 613, u'GLN', -0.07588435795326084, (216.92700000000002, 189.478, 193.689)), ('C', 630, u'THR', -0.032904490522532595, (222.947, 205.589, 180.71899999999997)), ('C', 636, u'TYR', 0.08124627966085712, (225.494, 200.963, 189.92000000000002)), ('C', 672, u'ALA', -0.3765125037445741, (219.365, 198.634, 205.953)), ('C', 717, u'ASN', -0.05527296185149802, (204.836, 202.045, 243.423)), ('C', 726, u'ILE', -0.008659649802563505, (192.333, 202.722, 216.228)), ('C', 730, u'SER', -0.27870494813039726, (183.04299999999998, 201.093, 207.62)), ('C', 739, u'THR', 0.023259174229992442, (175.002, 200.395, 180.931)), ('C', 740, u'MET', -0.10823257081051997, (176.42700000000002, 203.87, 181.347)), ('C', 757, u'GLY', -0.08250639064277492, (172.511, 187.817, 179.532)), ('C', 758, u'SER', -0.09937375721109229, (172.303, 189.161, 183.054)), ('C', 762, u'GLN', -0.0836114522147852, (174.323, 190.548, 188.978)), ('C', 787, u'GLN', -0.22361275872714143, (168.95700000000002, 205.34, 226.596)), ('C', 860, u'VAL', -0.3301595352112486, (178.40200000000002, 207.651, 196.236)), ('C', 861, u'LEU', -0.20700840597197195, (175.577, 206.871, 198.55800000000002)), ('C', 890, u'ALA', -0.07918712208332171, (173.405, 195.108, 232.24899999999997)), ('C', 912, u'THR', -0.21144122852259442, (193.02800000000002, 196.33200000000002, 248.026)), ('C', 913, u'GLN', -0.27936823964226903, (190.765, 199.359, 248.039)), ('C', 919, u'ASN', -0.3143812320600711, (196.806, 207.756, 247.121)), ('C', 925, u'ASN', -0.12406265520853443, (197.251, 213.629, 238.903)), ('C', 989, u'ALA', -0.2852026099467844, (181.681, 197.201, 163.251)), ('C', 990, u'GLU', -0.33767708646089944, (179.964, 194.597, 165.417)), ('C', 993, u'ILE', -0.11078363556289138, (182.436, 196.806, 169.424)), ('C', 1001, u'LEU', 0.10569456499041681, (182.985, 193.82800000000003, 181.417)), ('C', 1087, u'ALA', -0.2854727868847481, (201.859, 174.483, 258.739)), ('C', 1088, u'HIS', -0.2643362739694131, (200.371, 177.905, 258.02799999999996)), ('C', 1093, u'GLY', -0.15423062168159618, (199.42000000000002, 186.931, 249.89800000000002)), ('C', 1100, u'THR', -0.19632730870241716, (215.11499999999998, 189.778, 260.397)), ('C', 1113, u'GLN', -0.23939080641435112, (201.568, 193.21299999999997, 258.03299999999996)), ('C', 1144, u'GLU', -0.25873487082187835, (195.112, 191.724, 276.013)), ('C', 1302, u'NAG', 0.039637511090746785, (201.816, 230.71099999999998, 189.342)), ('C', 1303, u'NAG', 0.21592256517292402, (230.02100000000002, 169.306, 158.536))]
data['rota'] = [('A', ' 402 ', 'ILE', 0.015873788023361587, (172.721, 193.055, 136.941)), ('A', ' 563 ', 'GLN', 0.1802064007951516, (152.71899999999994, 172.419, 169.576)), ('A', '1141 ', 'LEU', 0.0866643472870101, (186.208, 179.128, 271.544)), ('B', ' 210 ', 'ILE', 0.0, (129.25099999999995, 186.06, 180.86400000000003)), ('B', ' 493 ', 'GLN', 0.19369014264375092, (193.064, 219.04, 111.626)), ('B', ' 493 ', 'GLN', 0.07577430941670447, (193.04, 219.027, 111.614)), ('B', ' 617 ', 'CYS', 0.11980386017911042, (163.263, 217.425, 192.447)), ('B', ' 878 ', 'LEU', 0.019630869018222565, (171.238, 169.254, 227.895)), ('B', ' 988 ', 'GLU', 0.005530534734954977, (182.339, 177.704, 160.384)), ('B', ' 991 ', 'VAL', 0.1311625607324596, (183.953, 180.03, 165.441)), ('C', '  33 ', 'THR', 0.08238887053363242, (217.62399999999994, 219.582, 181.133)), ('C', ' 244 ', 'LEU', 0.1819439757257637, (227.87700000000007, 235.832, 155.07)), ('C', ' 336 ', 'CYS', 0.18097185559862675, (214.922, 170.666, 144.107)), ('C', ' 362 ', 'VAL', 0.0072963790444191545, (217.352, 173.076, 149.322)), ('C', ' 440 ', 'ASN', 0.2358852841331455, (197.044, 177.325, 124.101)), ('C', ' 581 ', 'THR', 0.24117095215148862, (226.964, 166.603, 164.017)), ('C', ' 630 ', 'THR', 0.2486267886367371, (222.94699999999995, 205.58899999999997, 180.719)), ('C', ' 738 ', 'CYS', 0.08555784967908547, (176.515, 198.993, 184.085))]
data['clusters'] = [('A', '974', 1, 'smoc Outlier', (199.86, 176.555, 168.389)), ('A', '979', 1, 'Dihedral angle:CA:C', (206.495, 179.41, 165.73499999999999)), ('A', '980', 1, 'Dihedral angle:N:CA', (203.349, 181.437, 165.38600000000002)), ('A', '982', 1, 'cablam Outlier', (208.0, 182.3, 162.4)), ('A', '985', 1, 'Dihedral angle:CA:C', (203.248, 187.751, 158.79299999999998)), ('A', '986', 1, 'Dihedral angle:N:CA', (202.011, 190.425, 161.24899999999997)), ('A', '987', 1, 'cablam Outlier', (198.6, 191.1, 159.7)), ('A', '988', 1, 'Dihedral angle:CB:CG:CD:OE1', (197.29, 187.64, 160.578)), ('A', '989', 1, 'smoc Outlier', (199.83200000000002, 186.77499999999998, 163.252)), ('A', '990', 1, 'smoc Outlier', (198.06, 189.25, 165.532)), ('A', '391', 2, 'side-chain clash\nDihedral angle:CA:C', (163.096, 172.36200000000002, 157.099)), ('A', '392', 2, 'Dihedral angle:N:CA', (162.539, 175.983, 156.25)), ('A', '393', 2, 'side-chain clash', (158.816, 178.728, 160.974)), ('A', '394', 2, 'side-chain clash', (159.532, 180.086, 155.987)), ('A', '516', 2, 'side-chain clash', (161.604, 182.342, 161.75)), ('A', '518', 2, 'cablam Outlier', (162.6, 177.1, 163.2)), ('A', '519', 2, 'side-chain clash\ncablam CA Geom Outlier', (158.816, 178.728, 160.974)), ('A', '520', 2, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (155.38000000000002, 177.008, 163.31)), ('A', '521', 2, 'Ramachandran\nDihedral angle:CA:C\nDihedral angle:N:CA\nBond angle:N:CA:C\ncablam Outlier', (155.393, 173.772, 161.21699999999998)), ('A', '522', 2, 'side-chain clash\nDihedral angle:N:CA\ncablam Outlier', (157.976, 172.753, 158.725)), ('A', '790', 3, 'Bond length:C', (217.923, 184.154, 229.316)), ('A', '791', 3, 'Bond length:N', (217.476, 181.22299999999998, 231.512)), ('A', '792', 3, 'side-chain clash', (219.89, 177.309, 233.097)), ('A', '794', 3, 'smoc Outlier', (221.012, 176.151, 237.409)), ('A', '795', 3, 'side-chain clash', (219.89, 177.309, 233.097)), ('A', '796', 3, 'side-chain clash', (216.973, 175.512, 239.73)), ('A', '797', 3, 'cablam Outlier', (212.7, 174.3, 239.4)), ('A', '799', 3, 'smoc Outlier', (211.572, 168.93, 240.45100000000002)), ('A', '876', 3, 'smoc Outlier', (212.712, 184.26899999999998, 225.53)), ('A', '131', 4, 'side-chain clash', (198.946, 149.737, 140.145)), ('A', '132', 4, 'cablam Outlier', (194.9, 146.8, 140.3)), ('A', '134', 4, 'side-chain clash', (195.623, 138.075, 141.017)), ('A', '160', 4, 'side-chain clash', (195.623, 138.075, 141.017)), ('A', '162', 4, 'backbone clash', (198.636, 142.112, 137.431)), ('A', '163', 4, 'backbone clash\nsmoc Outlier', (198.636, 142.112, 137.431)), ('A', '166', 4, 'side-chain clash', (198.946, 149.737, 140.145)), ('A', '350', 5, 'side-chain clash', (167.774, 192.611, 138.488)), ('A', '353', 5, 'smoc Outlier', (162.539, 192.423, 141.21699999999998)), ('A', '400', 5, 'side-chain clash', (167.774, 192.611, 138.488)), ('A', '402', 5, 'Rotamer\nside-chain clash', (170.339, 194.467, 138.333)), ('A', '403', 5, 'smoc Outlier', (176.162, 193.796, 135.517)), ('A', '405', 5, 'Dihedral angle:CA:CB:CG:OD1', (180.99800000000002, 193.736, 139.009)), ('A', '100', 6, 'side-chain clash', (203.242, 130.821, 156.813)), ('A', '102', 6, 'side-chain clash', (207.167, 133.854, 150.947)), ('A', '141', 6, 'side-chain clash\nsmoc Outlier', (207.167, 133.854, 150.947)), ('A', '242', 6, 'side-chain clash', (203.242, 130.821, 156.813)), ('A', '244', 6, 'cablam Outlier', (203.8, 127.1, 151.7)), ('A', '99', 6, 'side-chain clash', (209.12, 133.143, 155.458)), ('A', '326', 7, 'side-chain clash', (166.388, 156.989, 163.194)), ('A', '328', 7, 'backbone clash\nDihedral angle:CD:NE:CZ:NH1', (161.517, 161.63299999999998, 161.041)), ('A', '530', 7, 'cablam Outlier', (161.8, 158.7, 157.8)), ('A', '531', 7, 'backbone clash', (160.139, 156.138, 160.753)), ('A', '534', 7, 'side-chain clash', (165.6, 154.619, 166.238)), ('A', '218', 8, 'cablam Outlier', (202.0, 139.7, 180.4)), ('A', '31', 8, 'Dihedral angle:CA:C', (195.455, 140.38700000000003, 175.035)), ('A', '32', 8, 'Dihedral angle:N:CA', (196.556, 141.354, 178.55100000000002)), ('A', '33', 8, 'cablam Outlier', (198.3, 144.7, 178.0)), ('A', '496', 9, 'cablam Outlier', (174.0, 198.2, 127.3)), ('A', '497', 9, 'smoc Outlier', (174.90800000000002, 194.529, 126.798)), ('A', '498', 9, 'side-chain clash', (178.95, 194.184, 125.376)), ('A', '501', 9, 'side-chain clash', (178.95, 194.184, 125.376)), ('A', '292', 10, 'smoc Outlier', (187.455, 152.899, 180.17299999999997)), ('A', '293', 10, 'cablam Outlier', (188.4, 149.6, 181.8)), ('A', '294', 10, 'side-chain clash', (189.004, 149.784, 184.964)), ('A', '319', 10, 'backbone clash\nside-chain clash\nDihedral angle:CD:NE:CZ:NH1', (183.238, 155.02700000000002, 179.51399999999998)), ('A', '805', 11, 'Bond length:C', (211.656, 172.25, 225.57)), ('A', '806', 11, 'Bond length:N', (214.472, 174.536, 226.491)), ('A', '808', 11, 'side-chain clash', (221.124, 173.464, 225.513)), ('A', '809', 11, 'side-chain clash', (221.124, 173.464, 225.513)), ('A', '310', 12, 'cablam CA Geom Outlier', (192.3, 156.4, 200.8)), ('A', '599', 12, 'Dihedral angle:CA:C', (188.788, 153.085, 197.753)), ('A', '600', 12, 'Dihedral angle:N:CA', (191.459, 152.27899999999997, 200.277)), ('A', '642', 13, 'side-chain clash', (198.571, 189.107, 209.647)), ('A', '651', 13, 'side-chain clash', (198.571, 189.107, 209.647)), ('A', '776', 13, 'smoc Outlier', (203.186, 191.13, 209.736)), ('A', '237', 14, 'side-chain clash', (187.792, 139.098, 150.941)), ('A', '83', 14, 'side-chain clash\nBond angle:C', (189.454, 137.17899999999997, 154.599)), ('A', '84', 14, 'Bond angle:N:CA', (189.015, 139.315, 157.77499999999998)), ('A', '334', 15, 'side-chain clash', (154.681, 167.342, 147.507)), ('A', '361', 15, 'Dihedral angle:CA:C', (157.345, 170.93200000000002, 148.584)), ('A', '362', 15, 'Dihedral angle:N:CA', (160.08200000000002, 168.38600000000002, 148.88800000000003)), ('A', '1057', 16, 'smoc Outlier', (207.751, 175.564, 209.954)), ('A', '945', 16, 'side-chain clash', (203.524, 171.797, 211.971)), ('A', '948', 16, 'side-chain clash', (203.524, 171.797, 211.971)), ('A', '634', 17, 'Dihedral angle:CD:NE:CZ:NH1', (179.255, 145.35500000000002, 184.465)), ('A', '637', 17, 'smoc Outlier', (176.297, 147.11399999999998, 187.993)), ('A', '638', 17, 'cablam CA Geom Outlier', (174.5, 144.3, 189.9)), ('A', '559', 18, 'cablam Outlier', (150.0, 169.4, 175.2)), ('A', '562', 18, 'Bond length:CA:CB', (149.316, 173.564, 168.374)), ('A', '563', 18, 'Rotamer', (152.71899999999994, 172.419, 169.576)), ('A', '1141', 19, 'Rotamer', (186.208, 179.128, 271.544)), ('A', '1143', 19, 'cablam Outlier', (185.7, 176.4, 276.6)), ('A', '666', 20, 'cablam Outlier', (179.6, 158.4, 202.2)), ('A', '667', 20, 'cablam Outlier', (176.7, 160.5, 203.3)), ('A', '287', 21, 'smoc Outlier', (203.24499999999998, 151.77599999999998, 181.88000000000002)), ('A', '288', 21, 'smoc Outlier', (199.74299999999997, 152.85600000000002, 180.872)), ('A', '337', 22, 'smoc Outlier', (159.875, 173.511, 140.72899999999998)), ('A', '340', 22, 'Dihedral angle:CB:CG:CD:OE1', (160.21699999999998, 178.154, 136.912)), ('A', '918', 23, 'smoc Outlier', (201.512, 168.21399999999997, 249.996)), ('A', '919', 23, 'smoc Outlier', (201.67899999999997, 166.493, 246.605)), ('A', '408', 24, 'side-chain clash', (180.052, 195.677, 148.925)), ('A', '414', 24, 'side-chain clash', (180.052, 195.677, 148.925)), ('A', '1098', 25, 'cablam Outlier', (180.0, 160.0, 255.0)), ('A', '1099', 25, 'smoc Outlier', (176.83800000000002, 158.231, 256.20599999999996)), ('A', '820', 26, 'Dihedral angle:CA:C', (213.461, 169.79899999999998, 215.64)), ('A', '821', 26, 'Dihedral angle:N:CA', (211.344, 166.71099999999998, 215.873)), ('A', '376', 27, 'side-chain clash', (177.018, 184.683, 141.508)), ('A', '435', 27, 'side-chain clash', (177.018, 184.683, 141.508)), ('A', '590', 28, 'Dihedral angle:CA:C', (172.477, 159.98200000000003, 178.447)), ('A', '591', 28, 'Dihedral angle:N:CA\ncablam Outlier', (175.791, 160.257, 180.191)), ('A', '191', 29, 'side-chain clash', (204.145, 142.52, 171.931)), ('A', '34', 29, 'side-chain clash', (204.145, 142.52, 171.931)), ('A', '448', 30, 'side-chain clash', (165.736, 195.225, 125.831)), ('A', '450', 30, 'side-chain clash\nsmoc Outlier', (165.736, 195.225, 125.831)), ('A', '105', 31, 'side-chain clash', (198.027, 137.548, 149.694)), ('A', '241', 31, 'side-chain clash', (198.027, 137.548, 149.694)), ('A', '384', 32, 'side-chain clash', (180.461, 164.179, 240.78)), ('A', '387', 32, 'side-chain clash', (180.461, 164.179, 240.78)), ('A', '106', 33, 'side-chain clash', (196.037, 146.792, 150.943)), ('A', '117', 33, 'side-chain clash', (196.037, 146.792, 150.943)), ('A', '172', 34, 'backbone clash', (214.222, 148.902, 152.61)), ('A', '173', 34, 'backbone clash\nsmoc Outlier', (214.222, 148.902, 152.61)), ('A', '205', 35, 'smoc Outlier', (206.38200000000003, 147.707, 164.74699999999999)), ('A', '224', 35, 'smoc Outlier', (207.9, 152.459, 167.46200000000002)), ('A', '861', 36, 'smoc Outlier', (210.978, 185.61299999999997, 198.2)), ('A', '862', 36, 'smoc Outlier', (212.596, 184.712, 201.536)), ('A', '743', 37, 'side-chain clash\nsmoc Outlier', (205.124, 189.064, 173.96)), ('A', '749', 37, 'side-chain clash', (205.124, 189.064, 173.96)), ('A', '45', 38, 'smoc Outlier', (210.863, 162.032, 180.259)), ('A', '46', 38, 'smoc Outlier', (209.52800000000002, 161.623, 183.82800000000003)), ('A', '1117', 39, 'smoc Outlier', (181.564, 179.13899999999998, 262.587)), ('A', '1118', 39, 'smoc Outlier', (184.771, 180.094, 260.802)), ('A', '477', 40, 'cablam Outlier', (165.5, 224.1, 144.5)), ('A', '478', 40, 'smoc Outlier', (163.222, 224.36, 141.497)), ('B', '349', 1, 'smoc Outlier', (192.006, 222.016, 121.94300000000001)), ('B', '401', 1, 'side-chain clash', (187.314, 225.769, 123.943)), ('B', '402', 1, 'side-chain clash', (182.465, 219.989, 123.23)), ('B', '404', 1, 'side-chain clash', (177.725, 220.317, 121.61)), ('B', '406', 1, 'cablam Outlier', (181.4, 214.6, 120.5)), ('B', '409', 1, 'smoc Outlier', (181.85200000000003, 209.016, 124.699)), ('B', '410', 1, 'cablam Outlier', (183.4, 210.7, 127.7)), ('B', '417', 1, 'cablam CA Geom Outlier', (186.9, 209.8, 117.1)), ('B', '419', 1, 'smoc Outlier', (187.69299999999998, 208.706, 122.978)), ('B', '421', 1, 'side-chain clash', (195.672, 208.908, 120.698)), ('B', '422', 1, 'side-chain clash', (193.161, 211.599, 118.283)), ('B', '438', 1, 'side-chain clash', (182.434, 226.318, 121.621)), ('B', '442', 1, 'side-chain clash\ncablam Outlier', (182.792, 228.968, 122.416)), ('B', '443', 1, 'side-chain clash', (181.964, 229.017, 115.879)), ('B', '448', 1, 'side-chain clash\nbackbone clash', (183.47, 230.572, 113.439)), ('B', '451', 1, 'Dihedral angle:CA:C', (191.131, 224.83200000000002, 117.66499999999999)), ('B', '452', 1, 'side-chain clash\nDihedral angle:N:CA', (192.318, 221.509, 116.361)), ('B', '454', 1, 'side-chain clash', (193.161, 211.599, 118.283)), ('B', '457', 1, 'side-chain clash', (195.672, 208.908, 120.698)), ('B', '491', 1, 'side-chain clash', (196.568, 213.542, 114.286)), ('B', '492', 1, 'side-chain clash', (195.804, 218.352, 115.025)), ('B', '493', 1, 'Rotamer\nbackbone clash\nsmoc Outlier', (191.694, 221.0, 110.967)), ('B', '494', 1, 'backbone clash\nside-chain clash', (191.817, 221.627, 114.801)), ('B', '497', 1, 'side-chain clash\nbackbone clash', (181.964, 229.017, 115.879)), ('B', '498', 1, 'side-chain clash', (178.347, 228.21, 110.331)), ('B', '501', 1, 'side-chain clash', (178.347, 228.21, 110.331)), ('B', '507', 1, 'side-chain clash\nsmoc Outlier', (182.434, 226.318, 121.621)), ('B', '508', 1, 'side-chain clash', (177.725, 220.317, 121.61)), ('B', '509', 1, 'side-chain clash', (187.314, 225.769, 123.943)), ('B', '293', 2, 'side-chain clash\ncablam Outlier', (150.768, 202.889, 185.565)), ('B', '294', 2, 'side-chain clash', (152.008, 199.633, 187.214)), ('B', '615', 2, 'cablam Outlier', (167.8, 215.2, 191.3)), ('B', '616', 2, 'C-beta\nBond angle:C:CA:CB\ncablam Outlier', (166.899, 218.537, 193.148)), ('B', '617', 2, 'Rotamer', (163.263, 217.425, 192.447)), ('B', '620', 2, 'C-beta\nBond angle:CA:C', (161.788, 214.92700000000002, 188.127)), ('B', '621', 2, 'Bond angle:N', (158.841, 215.20999999999998, 185.58100000000002)), ('B', '626', 2, 'side-chain clash', (153.106, 211.602, 181.396)), ('B', '627', 2, 'side-chain clash', (156.04, 212.942, 179.787)), ('B', '630', 2, 'smoc Outlier', (151.016, 205.76, 182.032)), ('B', '632', 2, 'side-chain clash', (150.768, 202.889, 185.565)), ('B', '634', 2, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (152.257, 210.197, 186.363)), ('B', '638', 2, 'cablam CA Geom Outlier', (154.0, 215.7, 190.8)), ('B', '640', 2, 'cablam Outlier', (151.6, 217.6, 197.4)), ('B', '642', 2, 'side-chain clash', (157.302, 214.733, 194.749)), ('B', '651', 2, 'side-chain clash', (157.302, 214.733, 194.749)), ('B', '129', 3, 'side-chain clash', (135.672, 187.197, 148.245)), ('B', '131', 3, 'side-chain clash', (140.941, 189.417, 144.988)), ('B', '133', 3, 'side-chain clash', (135.672, 187.197, 148.245)), ('B', '161', 3, 'smoc Outlier', (130.27899999999997, 189.61899999999997, 146.586)), ('B', '162', 3, 'backbone clash', (134.315, 190.96, 142.274)), ('B', '163', 3, 'backbone clash', (134.315, 190.96, 142.274)), ('B', '164', 3, 'cablam CA Geom Outlier', (138.3, 190.8, 140.4)), ('B', '166', 3, 'side-chain clash\nDihedral angle:CA:C\nBond angle:CA:CB:SG', (142.383, 187.966, 143.257)), ('B', '167', 3, 'Dihedral angle:N:CA', (144.738, 185.261, 144.282)), ('B', '472', 4, 'side-chain clash', (202.723, 214.668, 105.741)), ('B', '476', 4, 'smoc Outlier', (200.33100000000002, 204.667, 101.99900000000001)), ('B', '478', 4, 'side-chain clash', (203.272, 206.149, 98.501)), ('B', '480', 4, 'cablam Outlier', (206.7, 210.2, 101.8)), ('B', '481', 4, 'cablam Outlier', (208.7, 211.1, 104.9)), ('B', '484', 4, 'side-chain clash\nDihedral angle:CA:C', (202.22299999999998, 214.955, 103.342)), ('B', '485', 4, 'Dihedral angle:N:CA\ncablam Outlier', (199.623, 215.38200000000003, 100.681)), ('B', '486', 4, 'Bond angle:C\ncablam CA Geom Outlier', (200.842, 212.48600000000002, 98.52)), ('B', '487', 4, 'side-chain clash\nRamachandran\nBond angle:N:CA', (199.266, 209.38400000000001, 100.203)), ('B', '108', 5, 'cablam Outlier', (143.7, 200.3, 152.9)), ('B', '110', 5, 'cablam Outlier', (138.7, 200.1, 150.3)), ('B', '111', 5, 'cablam Outlier', (137.6, 201.4, 146.8)), ('B', '112', 5, 'cablam Outlier\nsmoc Outlier', (138.4, 198.7, 144.2)), ('B', '237', 5, 'side-chain clash', (138.373, 203.166, 156.282)), ('B', '239', 5, 'side-chain clash', (135.436, 200.662, 157.368)), ('B', '82', 5, 'smoc Outlier', (132.21499999999997, 203.399, 160.642)), ('B', '83', 5, 'side-chain clash\nsmoc Outlier', (135.436, 200.662, 157.368)), ('B', '1142', 6, 'Dihedral angle:CA:C', (182.29399999999998, 190.722, 273.768)), ('B', '1143', 6, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (178.622, 191.586, 273.93299999999994)), ('B', '1144', 6, 'cablam Outlier', (178.4, 189.0, 276.7)), ('B', '1145', 6, 'Dihedral angle:CA:C\ncablam Outlier', (181.467, 186.68200000000002, 276.362)), ('B', '1146', 6, 'Dihedral angle:N:CA', (183.44899999999998, 188.304, 279.137)), ('B', '1147', 6, 'smoc Outlier', (184.405, 185.62, 281.637)), ('B', '100', 7, 'side-chain clash', (122.349, 189.387, 168.635)), ('B', '186', 7, 'backbone clash', (124.82, 188.111, 172.947)), ('B', '96', 7, 'backbone clash', (124.82, 188.111, 172.947)), ('B', '97', 7, 'side-chain clash', (122.349, 189.387, 168.635)), ('B', '98', 7, 'cablam CA Geom Outlier', (121.8, 185.7, 167.8)), ('B', '99', 7, 'cablam Outlier', (124.8, 185.5, 165.4)), ('B', '328', 8, 'backbone clash', (178.043, 228.222, 165.888)), ('B', '332', 8, 'side-chain clash', (182.814, 226.182, 154.404)), ('B', '527', 8, 'side-chain clash', (182.814, 226.182, 154.404)), ('B', '529', 8, 'cablam Outlier', (179.1, 223.9, 158.5)), ('B', '530', 8, 'smoc Outlier', (178.27399999999997, 225.23399999999998, 161.971)), ('B', '531', 8, 'backbone clash', (178.043, 228.222, 165.888)), ('B', '377', 9, 'side-chain clash', (176.855, 215.944, 140.425)), ('B', '379', 9, 'side-chain clash\nDihedral angle:CA:C', (179.58800000000002, 210.98100000000002, 137.64399999999998)), ('B', '380', 9, 'Dihedral angle:N:CA', (180.36, 207.62, 139.066)), ('B', '384', 9, 'side-chain clash\nsmoc Outlier', (176.855, 215.944, 140.425)), ('B', '430', 9, 'cablam Outlier', (185.4, 208.9, 140.5)), ('B', '432', 9, 'side-chain clash', (181.436, 212.718, 137.495)), ('B', '142', 10, 'side-chain clash', (122.694, 190.798, 152.769)), ('B', '143', 10, 'smoc Outlier', (118.73, 188.477, 155.629)), ('B', '159', 10, 'side-chain clash\nsmoc Outlier', (122.694, 190.798, 152.769)), ('B', '160', 10, 'backbone clash', (122.829, 196.826, 149.962)), ('B', '248', 10, 'side-chain clash\nbackbone clash', (122.829, 196.826, 149.962)), ('B', '250', 10, 'side-chain clash', (120.145, 200.898, 150.498)), ('B', '986', 11, 'side-chain clash\nBond angle:CA:C', (182.92700000000002, 172.036, 160.77399999999997)), ('B', '987', 11, 'Bond angle:N', (185.176, 175.10399999999998, 159.937)), ('B', '988', 11, 'Rotamer\nDihedral angle:CB:CG:CD:OE1', (182.339, 177.70399999999998, 160.38400000000001)), ('B', '991', 11, 'Rotamer', (183.953, 180.03, 165.441)), ('B', '992', 11, 'smoc Outlier', (180.41, 179.85800000000003, 166.889)), ('B', '102', 12, 'side-chain clash', (128.775, 184.867, 158.826)), ('B', '121', 12, 'side-chain clash', (128.775, 184.867, 158.826)), ('B', '122', 12, 'Bond angle:C', (128.286, 181.467, 155.74899999999997)), ('B', '123', 12, 'Dihedral angle:CA:C\nBond angle:N:CA\ncablam Outlier', (126.804, 180.172, 159.07399999999998)), ('B', '124', 12, 'Dihedral angle:N:CA', (128.251, 176.783, 158.171)), ('B', '188', 13, 'side-chain clash', (129.697, 183.382, 177.306)), ('B', '189', 13, 'side-chain clash', (131.134, 187.577, 177.711)), ('B', '209', 13, 'side-chain clash\nsmoc Outlier', (129.697, 183.382, 177.306)), ('B', '210', 13, 'Rotamer\nside-chain clash\nRamachandran', (129.25099999999995, 186.06, 180.86400000000003)), ('B', '662', 14, 'smoc Outlier', (163.777, 203.06, 211.73299999999998)), ('B', '665', 14, 'smoc Outlier', (165.994, 203.19299999999998, 205.766)), ('B', '666', 14, 'cablam Outlier', (166.4, 206.0, 203.2)), ('B', '667', 14, 'cablam Outlier', (169.6, 207.7, 204.2)), ('B', '101', 15, 'side-chain clash', (164.531, 197.051, 244.436)), ('B', '1070', 15, 'Dihedral angle:CA:C', (164.88500000000002, 195.15800000000002, 239.252)), ('B', '1071', 15, 'Dihedral angle:N:CA\ncablam Outlier', (163.593, 198.12800000000001, 241.30100000000002)), ('B', '242', 15, 'side-chain clash', (164.531, 197.051, 244.436)), ('B', '119', 16, 'side-chain clash', (138.203, 184.873, 156.258)), ('B', '128', 16, 'side-chain clash', (138.203, 184.873, 156.258)), ('B', '169', 16, 'smoc Outlier', (140.54299999999998, 181.538, 148.905)), ('B', '170', 16, 'side-chain clash', (139.763, 180.59, 155.792)), ('B', '904', 17, 'Dihedral angle:CA:C', (176.657, 178.7, 242.955)), ('B', '905', 17, 'Dihedral angle:N:CA', (175.98100000000002, 180.194, 239.61299999999997)), ('B', '909', 17, 'smoc Outlier', (177.92200000000003, 186.88400000000001, 239.635)), ('B', '910', 17, 'smoc Outlier', (178.37, 188.32500000000002, 243.10299999999998)), ('B', '391', 18, 'side-chain clash', (187.785, 216.244, 150.872)), ('B', '524', 18, 'cablam CA Geom Outlier', (191.4, 219.4, 149.9)), ('B', '525', 18, 'side-chain clash', (187.785, 216.244, 150.872)), ('B', '675', 19, 'side-chain clash', (147.983, 203.098, 209.609)), ('B', '689', 19, 'backbone clash', (144.601, 204.48, 206.725)), ('B', '690', 19, 'backbone clash\nside-chain clash', (147.983, 203.098, 209.609)), ('B', '659', 20, 'side-chain clash', (162.91, 209.889, 216.625)), ('B', '698', 20, 'side-chain clash', (162.91, 209.889, 216.625)), ('B', '699', 20, 'cablam Outlier', (168.2, 207.1, 218.9)), ('B', '825', 21, 'backbone clash', (157.116, 181.47, 215.104)), ('B', '938', 21, 'backbone clash', (157.116, 181.47, 215.104)), ('B', '944', 21, 'smoc Outlier', (162.344, 185.523, 213.73499999999999)), ('B', '280', 22, 'backbone clash', (148.495, 173.89, 184.576)), ('B', '281', 22, 'backbone clash\nBond angle:C', (150.98800000000003, 172.496, 184.97899999999998)), ('B', '282', 22, 'Bond angle:N:CA\ncablam Outlier', (149.23499999999999, 171.365, 181.754)), ('B', '1082', 23, 'smoc Outlier', (186.474, 206.13899999999998, 261.43699999999995)), ('B', '1084', 23, 'cablam Outlier', (189.2, 204.9, 267.1)), ('B', '1085', 23, 'smoc Outlier', (191.62800000000001, 206.812, 264.97599999999994)), ('B', '314', 24, 'backbone clash', (167.838, 202.386, 189.442)), ('B', '316', 24, 'backbone clash', (167.838, 202.386, 189.442)), ('B', '317', 24, 'backbone clash', (165.791, 203.077, 185.661)), ('B', '225', 25, 'smoc Outlier', (145.503, 180.771, 168.033)), ('B', '226', 25, 'smoc Outlier', (142.869, 180.226, 165.374)), ('B', '227', 25, 'smoc Outlier', (144.45100000000002, 180.45000000000002, 161.91)), ('B', '34', 26, 'cablam CA Geom Outlier', (141.4, 191.0, 178.6)), ('B', '36', 26, 'smoc Outlier', (146.23999999999998, 188.01, 176.403)), ('B', '37', 26, 'smoc Outlier', (147.232, 185.477, 173.761)), ('B', '851', 27, 'Dihedral angle:CA:C', (167.446, 163.491, 187.805)), ('B', '852', 27, 'Dihedral angle:N:CA', (171.069, 163.88400000000001, 188.524)), ('B', '853', 27, 'cablam Outlier', (171.0, 164.3, 184.7)), ('B', '734', 28, 'smoc Outlier', (176.313, 171.70399999999998, 195.476)), ('B', '860', 28, 'Bond length:C', (172.875, 168.883, 195.635)), ('B', '861', 28, 'Bond length:N', (174.83, 166.563, 197.854)), ('B', '353', 29, 'side-chain clash', (197.042, 219.969, 128.173)), ('B', '466', 29, 'side-chain clash', (200.098, 217.655, 125.969)), ('B', '468', 29, 'side-chain clash', (200.098, 217.655, 125.969)), ('B', '1057', 30, 'smoc Outlier', (167.91299999999998, 173.985, 209.974)), ('B', '1058', 30, 'smoc Outlier', (171.526, 174.82200000000003, 209.012)), ('B', '728', 30, 'smoc Outlier', (174.164, 180.042, 210.786)), ('B', '605', 31, 'backbone clash', (149.124, 198.886, 199.559)), ('B', '606', 31, 'backbone clash', (149.124, 198.886, 199.559)), ('B', '607', 31, 'side-chain clash', (149.625, 200.859, 199.781)), ('B', '808', 32, 'Bond angle:CA:C', (159.403, 164.315, 223.27399999999997)), ('B', '809', 32, 'Bond angle:N\nsmoc Outlier', (160.076, 160.48000000000002, 223.187)), ('B', '810', 32, 'smoc Outlier', (156.707, 159.58200000000002, 221.61899999999997)), ('B', '213', 33, 'Ramachandran', (125.84399999999997, 192.265, 181.711)), ('B', '215', 33, 'cablam CA Geom Outlier', (130.6, 195.4, 180.5)), ('B', '345', 34, 'backbone clash', (191.627, 232.879, 127.878)), ('B', '346', 34, 'backbone clash', (191.627, 232.879, 127.878)), ('B', '357', 35, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (196.57, 220.47899999999998, 139.997)), ('B', '990', 35, 'side-chain clash', (201.675, 222.72, 143.824)), ('B', '1301', 36, 'Bond angle:C2:N2:C7\nBond angle:C1:C2:N2', (143.617, 205.681, 180.685)), ('B', '59', 36, 'smoc Outlier', (143.17399999999998, 199.172, 182.35100000000003)), ('B', '310', 37, 'side-chain clash\ncablam CA Geom Outlier', (175.651, 213.318, 237.599)), ('B', '600', 37, 'side-chain clash\ncablam Outlier', (175.651, 213.318, 237.599)), ('B', '796', 38, 'Dihedral angle:CA:CB:CG:OD1', (162.899, 166.44299999999998, 240.265)), ('B', '797', 38, 'cablam Outlier', (164.8, 169.6, 239.4)), ('B', '323', 39, 'side-chain clash', (167.892, 221.447, 174.173)), ('B', '537', 39, 'side-chain clash', (167.892, 221.447, 174.173)), ('B', '790', 40, 'Bond length:C', (170.483, 160.26999999999998, 228.93800000000002)), ('B', '791', 40, 'Bond length:N', (168.22899999999998, 162.21399999999997, 231.171)), ('B', '429', 41, 'side-chain clash', (189.871, 209.97, 135.122)), ('B', '464', 41, 'side-chain clash', (189.871, 209.97, 135.122)), ('B', '301', 42, 'side-chain clash', (161.853, 190.554, 185.731)), ('B', '304', 42, 'side-chain clash', (161.853, 190.554, 185.731)), ('B', '585', 43, 'smoc Outlier', (183.33200000000002, 226.317, 178.354)), ('B', '586', 43, 'Dihedral angle:CA:CB:CG:OD1', (182.751, 223.71899999999997, 181.05)), ('B', '309', 44, 'Dihedral angle:CB:CG:CD:OE1', (158.14899999999997, 191.556, 200.684)), ('B', '601', 44, 'smoc Outlier', (154.738, 194.393, 201.265)), ('B', '897', 45, 'smoc Outlier', (171.292, 168.577, 242.668)), ('B', '900', 45, 'side-chain clash', (174.819, 172.22, 245.643)), ('B', '374', 46, 'side-chain clash\ncablam Outlier', (176.502, 224.647, 130.357)), ('B', '436', 46, 'side-chain clash', (176.502, 224.647, 130.357)), ('B', '68', 47, 'smoc Outlier', (121.54400000000001, 202.056, 166.33100000000002)), ('B', '69', 47, 'smoc Outlier', (120.402, 205.681, 166.135)), ('B', '745', 48, 'Dihedral angle:CA:CB:CG:OD1\ncablam Outlier', (176.24899999999997, 165.156, 175.05100000000002)), ('B', '746', 48, 'smoc Outlier', (177.964, 166.88200000000003, 172.124)), ('B', '1127', 49, 'smoc Outlier', (192.86800000000002, 211.93, 258.257)), ('B', '1128', 49, 'smoc Outlier', (193.883, 210.43200000000002, 254.906)), ('B', '1043', 50, 'cablam Outlier', (176.1, 185.2, 226.3)), ('B', '1045', 50, 'cablam Outlier', (172.2, 190.6, 228.1)), ('B', '462', 51, 'side-chain clash', (198.064, 207.947, 127.529)), ('B', '465', 51, 'side-chain clash', (198.064, 207.947, 127.529)), ('B', '231', 52, 'cablam Outlier', (148.7, 186.9, 152.7)), ('B', '232', 52, 'cablam Outlier', (151.1, 189.8, 153.2)), ('C', '273', 1, 'Dihedral angle:CD:NE:CZ:NH1', (211.889, 207.77299999999997, 175.92700000000002)), ('C', '274', 1, 'smoc Outlier', (209.287, 207.97, 178.696)), ('C', '291', 1, 'cablam Outlier', (212.4, 207.6, 183.7)), ('C', '294', 1, 'side-chain clash', (218.017, 207.969, 186.704)), ('C', '296', 1, 'smoc Outlier', (216.256, 206.877, 191.59)), ('C', '297', 1, 'smoc Outlier', (214.238, 208.255, 188.696)), ('C', '625', 1, 'Dihedral angle:CA:C', (222.86, 196.509, 180.29399999999998)), ('C', '626', 1, 'Dihedral angle:N:CA', (226.167, 198.11599999999999, 181.159)), ('C', '630', 1, 'Rotamer\nside-chain clash\nsmoc Outlier', (221.875, 204.015, 183.324)), ('C', '633', 1, 'side-chain clash', (221.875, 204.015, 183.324)), ('C', '634', 1, 'Dihedral angle:CD:NE:CZ:NH1', (226.73499999999999, 202.05100000000002, 184.783)), ('C', '636', 1, 'cablam Outlier\nsmoc Outlier', (225.5, 201.0, 189.9)), ('C', '638', 1, 'cablam CA Geom Outlier', (230.7, 198.1, 190.4)), ('C', '827', 2, 'backbone clash', (192.752, 214.471, 202.567)), ('C', '828', 2, 'backbone clash\nside-chain clash', (188.928, 213.026, 197.7)), ('C', '829', 2, 'cablam Outlier', (195.1, 214.2, 198.5)), ('C', '832', 2, 'side-chain clash', (191.08, 207.894, 194.908)), ('C', '833', 2, 'side-chain clash\ncablam CA Geom Outlier', (184.635, 207.2, 192.808)), ('C', '835', 2, 'side-chain clash', (188.928, 213.026, 197.7)), ('C', '837', 2, 'Dihedral angle:CA:C', (181.82500000000002, 212.824, 194.165)), ('C', '838', 2, 'Dihedral angle:N:CA', (181.49, 211.877, 197.819)), ('C', '860', 2, 'Bond length:C\nsmoc Outlier', (178.40200000000002, 207.651, 196.236)), ('C', '861', 2, 'Bond length:N\nsmoc Outlier', (175.577, 206.871, 198.55800000000002)), ('C', '956', 2, 'side-chain clash', (191.08, 207.894, 194.908)), ('C', '959', 2, 'side-chain clash', (184.635, 207.2, 192.808)), ('C', '108', 3, 'cablam Outlier', (217.0, 213.0, 150.9)), ('C', '130', 3, 'side-chain clash', (208.886, 219.229, 150.256)), ('C', '197', 3, 'Bond angle:C', (205.864, 211.681, 161.71499999999997)), ('C', '198', 3, 'Ramachandran\nDihedral angle:CA:CB:CG:OD1\nBond angle:N:CA\ncablam Outlier', (203.08, 210.042, 159.617)), ('C', '199', 3, 'smoc Outlier', (203.077, 212.631, 156.836)), ('C', '230', 3, 'Dihedral angle:CA:C', (201.134, 218.485, 155.806)), ('C', '231', 3, 'Dihedral angle:N:CA', (204.14499999999998, 218.02200000000002, 153.495)), ('C', '232', 3, 'cablam Outlier', (204.8, 214.3, 153.0)), ('C', '233', 3, 'side-chain clash\nDihedral angle:CA:C', (208.52, 213.985, 152.036)), ('C', '234', 3, 'Dihedral angle:N:CA', (210.85000000000002, 211.181, 152.959)), ('C', '210', 4, 'Dihedral angle:CA:C', (220.87800000000001, 234.409, 178.542)), ('C', '211', 4, 'Dihedral angle:N:CA', (224.108, 235.79899999999998, 179.871)), ('C', '213', 4, 'cablam Outlier', (229.9, 232.3, 179.7)), ('C', '214', 4, 'side-chain clash\nDihedral angle:CA:C\ncablam CA Geom Outlier', (229.17899999999997, 230.545, 176.446)), ('C', '215', 4, 'Dihedral angle:N:CA\ncablam Outlier', (227.16299999999998, 227.38500000000002, 176.608)), ('C', '266', 4, 'side-chain clash', (228.141, 226.157, 173.211)), ('C', '318', 5, 'side-chain clash', (221.04, 190.593, 185.187)), ('C', '320', 5, 'smoc Outlier', (220.923, 188.95700000000002, 180.27499999999998)), ('C', '611', 5, 'smoc Outlier', (219.10899999999998, 194.768, 195.17899999999997)), ('C', '613', 5, 'smoc Outlier', (216.92700000000002, 189.478, 193.689)), ('C', '615', 5, 'side-chain clash', (219.917, 187.967, 188.403)), ('C', '623', 5, 'side-chain clash', (221.04, 190.593, 185.187)), ('C', '393', 6, 'side-chain clash', (208.835, 165.712, 160.013)), ('C', '516', 6, 'side-chain clash\nDihedral angle:CA:C', (203.93800000000002, 169.04299999999998, 157.77299999999997)), ('C', '517', 6, 'Dihedral angle:CA:C\nDihedral angle:N:CA\ncablam CA Geom Outlier', (205.77599999999998, 171.509, 159.97299999999998)), ('C', '518', 6, 'Dihedral angle:N:CA\ncablam Outlier', (208.517, 171.366, 162.572)), ('C', '519', 6, 'side-chain clash\ncablam Outlier', (203.807, 168.523, 162.948)), ('C', '520', 6, 'side-chain clash', (208.835, 165.712, 160.013)), ('C', '112', 7, 'backbone clash', (217.667, 220.901, 142.532)), ('C', '113', 7, 'cablam Outlier', (214.8, 214.7, 141.2)), ('C', '133', 7, 'backbone clash', (217.667, 220.901, 142.532)), ('C', '134', 7, 'side-chain clash', (220.956, 225.506, 145.142)), ('C', '160', 7, 'side-chain clash', (220.956, 225.506, 145.142)), ('C', '336', 8, 'Rotamer', (214.922, 170.666, 144.107)), ('C', '361', 8, 'C-beta\nBond angle:C:CA:CB', (216.606, 169.38200000000003, 148.627)), ('C', '362', 8, 'Rotamer', (217.352, 173.076, 149.322)), ('C', '363', 8, 'side-chain clash', (214.787, 177.144, 149.482)), ('C', '527', 8, 'side-chain clash', (214.787, 177.144, 149.482)), ('C', '31', 9, 'side-chain clash\nBond angle:C', (222.283, 219.453, 178.078)), ('C', '32', 9, 'Bond angle:N:CA', (221.395, 219.023, 181.797)), ('C', '33', 9, 'Rotamer', (217.62399999999994, 219.582, 181.133)), ('C', '34', 9, 'side-chain clash', (219.39, 219.586, 176.885)), ('C', '60', 9, 'smoc Outlier', (223.564, 213.79899999999998, 176.71299999999997)), ('C', '501', 10, 'side-chain clash', (185.243, 178.045, 127.402)), ('C', '503', 10, 'Dihedral angle:CA:C\ncablam Outlier', (187.324, 182.751, 130.091)), ('C', '504', 10, 'Dihedral angle:N:CA\ncablam Outlier', (185.348, 180.434, 132.27599999999998)), ('C', '505', 10, 'side-chain clash', (185.243, 178.045, 127.402)), ('C', '506', 10, 'side-chain clash', (187.793, 180.866, 126.102)), ('C', '1303', 11, 'smoc Outlier', (230.02100000000002, 169.306, 158.536)), ('C', '328', 11, 'side-chain clash', (226.005, 171.024, 161.673)), ('C', '580', 11, 'side-chain clash', (226.005, 171.024, 161.673)), ('C', '581', 11, 'Rotamer', (226.964, 166.603, 164.017)), ('C', '805', 12, 'Bond length:C', (186.76, 213.978, 226.105)), ('C', '806', 12, 'Bond length:N', (183.35800000000003, 215.19299999999998, 227.02700000000002)), ('C', '808', 12, 'side-chain clash', (182.193, 220.174, 223.59)), ('C', '810', 12, 'cablam Outlier', (180.4, 226.0, 222.2)), ('C', '988', 13, 'Dihedral angle:CA:C', (182.101, 194.373, 160.79299999999998)), ('C', '989', 13, 'Dihedral angle:N:CA\nsmoc Outlier', (181.681, 197.201, 163.251)), ('C', '990', 13, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (179.964, 194.597, 165.417)), ('C', '993', 13, 'smoc Outlier', (182.436, 196.806, 169.424)), ('C', '164', 14, 'Dihedral angle:CA:C', (210.942, 223.282, 139.288)), ('C', '165', 14, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (207.88100000000003, 221.033, 138.88100000000003)), ('C', '166', 14, 'Dihedral angle:N:CA', (206.636, 221.291, 142.404)), ('C', '167', 14, 'backbone clash\ncablam Outlier\nsmoc Outlier', (201.675, 222.72, 143.824)), ('C', '1142', 15, 'Dihedral angle:CA:C', (193.89200000000002, 186.09, 273.98299999999995)), ('C', '1143', 15, 'Dihedral angle:N:CA', (196.754, 188.401, 275.106)), ('C', '1144', 15, 'smoc Outlier', (195.112, 191.724, 276.013)), ('C', '757', 16, 'smoc Outlier', (172.511, 187.817, 179.532)), ('C', '758', 16, 'cablam Outlier\nsmoc Outlier', (172.3, 189.2, 183.1)), ('C', '762', 16, 'smoc Outlier', (174.323, 190.548, 188.978)), ('C', '449', 17, 'cablam Outlier', (188.6, 164.9, 124.5)), ('C', '494', 17, 'backbone clash', (185.827, 166.743, 127.77)), ('C', '495', 17, 'backbone clash\ncablam Outlier', (185.827, 166.743, 127.77)), ('C', '403', 18, 'Dihedral angle:CD:NE:CZ:NH1', (187.698, 173.859, 133.66299999999998)), ('C', '406', 18, 'side-chain clash', (186.444, 172.238, 139.446)), ('C', '418', 18, 'side-chain clash', (186.444, 172.238, 139.446)), ('C', '1092', 19, 'cablam Outlier', (195.7, 186.2, 250.0)), ('C', '1093', 19, 'smoc Outlier', (199.42000000000002, 186.931, 249.89800000000002)), ('C', '1107', 19, 'Dihedral angle:CD:NE:CZ:NH1', (201.509, 190.404, 245.974)), ('C', '412', 20, 'cablam Outlier', (189.6, 173.6, 152.2)), ('C', '413', 20, 'cablam Outlier', (185.9, 173.0, 152.4)), ('C', '425', 20, 'smoc Outlier', (191.22899999999998, 168.66899999999998, 150.52)), ('C', '1087', 21, 'smoc Outlier', (201.859, 174.483, 258.739)), ('C', '1088', 21, 'smoc Outlier', (200.371, 177.905, 258.02799999999996)), ('C', '1126', 21, 'cablam Outlier', (205.5, 170.6, 259.2)), ('C', '309', 22, 'Dihedral angle:CB:CG:CD:OE1', (209.45600000000002, 208.13299999999998, 201.298)), ('C', '310', 22, 'cablam CA Geom Outlier', (211.8, 205.7, 203.1)), ('C', '600', 22, 'cablam Outlier', (216.4, 206.7, 202.7)), ('C', '738', 23, 'Rotamer', (176.515, 198.993, 184.085)), ('C', '739', 23, 'smoc Outlier', (175.002, 200.395, 180.931)), ('C', '740', 23, 'smoc Outlier', (176.42700000000002, 203.87, 181.347)), ('C', '264', 24, 'backbone clash', (228.353, 227.2, 165.641)), ('C', '65', 24, 'backbone clash', (228.353, 227.2, 165.641)), ('C', '443', 25, 'side-chain clash', (190.804, 173.489, 125.758)), ('C', '497', 25, 'side-chain clash', (190.804, 173.489, 125.758)), ('C', '192', 26, 'smoc Outlier', (213.98200000000003, 224.28, 167.875)), ('C', '93', 26, 'smoc Outlier', (219.82100000000003, 225.586, 169.447)), ('C', '549', 27, 'cablam CA Geom Outlier', (217.3, 182.2, 173.0)), ('C', '550', 27, 'smoc Outlier', (219.289, 180.42800000000003, 175.71399999999997)), ('C', '804', 28, 'side-chain clash', (192.499, 218.19, 225.898)), ('C', '935', 28, 'side-chain clash', (192.499, 218.19, 225.898)), ('C', '122', 29, 'Bond angle:C\ncablam Outlier', (214.238, 237.33, 154.40800000000002)), ('C', '123', 29, 'Bond angle:N:CA', (214.206, 239.726, 157.45100000000002)), ('C', '127', 30, 'side-chain clash', (207.011, 232.862, 151.95)), ('C', '171', 30, 'side-chain clash', (207.011, 232.862, 151.95)), ('C', '417', 31, 'backbone clash\ncablam Outlier', (178.383, 164.543, 138.656)), ('C', '455', 31, 'backbone clash', (178.383, 164.543, 138.656)), ('C', '366', 32, 'side-chain clash', (210.237, 185.16, 144.017)), ('C', '370', 32, 'side-chain clash', (210.237, 185.16, 144.017)), ('C', '912', 33, 'smoc Outlier', (193.02800000000002, 196.33200000000002, 248.026)), ('C', '913', 33, 'smoc Outlier', (190.765, 199.359, 248.039)), ('C', '703', 34, 'side-chain clash\nbackbone clash', (217.741, 189.79, 232.115)), ('C', '704', 34, 'backbone clash', (217.741, 189.79, 232.115)), ('C', '422', 35, 'side-chain clash', (185.306, 163.527, 137.863)), ('C', '454', 35, 'side-chain clash', (185.306, 163.527, 137.863)), ('C', '244', 36, 'Rotamer', (227.87700000000007, 235.832, 155.07)), ('C', '246', 36, 'smoc Outlier', (231.506, 237.476, 150.429)), ('C', '382', 37, 'Bond length:C', (202.167, 179.726, 156.20899999999997)), ('C', '383', 37, 'Bond length:N', (202.724, 183.10299999999998, 154.823)), ('C', '375', 38, 'smoc Outlier', (197.475, 183.83700000000002, 138.899)), ('C', '435', 38, 'smoc Outlier', (197.017, 177.68800000000002, 139.46)), ('C', '573', 39, 'smoc Outlier', (211.959, 172.859, 173.92200000000003)), ('C', '574', 39, 'side-chain clash', (213.25, 170.587, 176.227)), ('C', '743', 40, 'side-chain clash', (176.897, 201.489, 174.087)), ('C', '749', 40, 'side-chain clash', (176.897, 201.489, 174.087)), ('C', '979', 41, 'Dihedral angle:CA:CB:CG:OD1', (184.92800000000003, 206.61299999999997, 165.767)), ('C', '982', 41, 'cablam Outlier', (181.6, 206.8, 161.8)), ('C', '747', 42, 'side-chain clash', (170.717, 199.42, 170.694)), ('C', '751', 42, 'side-chain clash', (170.717, 199.42, 170.694)), ('C', '206', 43, 'side-chain clash', (210.828, 228.304, 178.482)), ('C', '221', 43, 'side-chain clash', (210.828, 228.304, 178.482)), ('C', '605', 44, 'backbone clash', (220.548, 211.076, 198.863)), ('C', '606', 44, 'backbone clash', (220.548, 211.076, 198.863)), ('C', '796', 45, 'Dihedral angle:CA:CB:CG:OD1', (182.759, 216.548, 241.197)), ('C', '797', 45, 'cablam Outlier', (184.5, 213.5, 239.8)), ('C', '1058', 46, 'cablam Outlier', (185.0, 205.7, 209.4)), ('C', '730', 46, 'smoc Outlier', (183.04299999999998, 201.093, 207.62)), ('C', '617', 47, 'cablam Outlier', (226.8, 188.7, 191.6)), ('C', '618', 47, 'Bond angle:N:CA:C', (229.334, 187.108, 189.445)), ('C', '485', 48, 'cablam Outlier', (170.9, 151.5, 128.6)), ('C', '486', 48, 'cablam Outlier', (168.3, 153.5, 130.5)), ('O', '1', 1, 'side-chain clash', (168.615, 199.67, 260.675))]
data['rama'] = [('A', ' 521 ', 'PRO', 0.04504929323571246, (155.39299999999997, 173.772, 161.217)), ('B', ' 210 ', 'ILE', 0.06014458791051855, (129.25099999999995, 186.06, 180.86400000000003)), ('B', ' 213 ', 'VAL', 0.09390705076764264, (125.84399999999997, 192.265, 181.711)), ('B', ' 487 ', 'ASN', 0.029240217607171645, (199.266, 209.384, 100.203)), ('C', ' 198 ', 'ASP', 0.031236684644045245, (203.08, 210.042, 159.617))]
data['cablam'] = [('A', '33', 'THR', 'check CA trace,carbonyls, peptide', 'turn\n-TT--', (198.3, 144.7, 178.0)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (207.8, 162.2, 167.7)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--S-E', (189.2, 151.0, 161.6)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (187.6, 146.4, 149.4)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (190.5, 144.2, 139.9)), ('A', '132', 'GLU', ' beta sheet', ' \n----B', (194.9, 146.8, 140.3)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (202.0, 139.7, 180.4)), ('A', '244', 'LEU', 'check CA trace,carbonyls, peptide', 'strand\nEEESS', (203.8, 127.1, 151.7)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTSSH', (188.4, 149.6, 181.8)), ('A', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSHH', (173.6, 201.8, 143.9)), ('A', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (165.5, 224.1, 144.5)), ('A', '496', 'GLY', ' beta sheet', ' \nE----', (174.0, 198.2, 127.3)), ('A', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (162.6, 177.1, 163.2)), ('A', '521', 'PRO', 'check CA trace,carbonyls, peptide', ' \nSS---', (155.4, 173.8, 161.2)), ('A', '522', 'ALA', 'check CA trace,carbonyls, peptide', ' \nS---E', (158.0, 172.8, 158.7)), ('A', '530', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (161.8, 158.7, 157.8)), ('A', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (168.7, 167.3, 166.0)), ('A', '559', 'PHE', 'check CA trace,carbonyls, peptide', ' \n----S', (150.0, 169.4, 175.2)), ('A', '591', 'SER', 'check CA trace,carbonyls, peptide', ' \n-----', (175.8, 160.3, 180.2)), ('A', '592', 'PHE', 'check CA trace,carbonyls, peptide', ' \n-----', (175.3, 159.7, 183.9)), ('A', '616', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nT-TTT', (167.2, 153.3, 193.6)), ('A', '640', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSS-E', (174.9, 140.5, 195.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (179.6, 158.4, 202.2)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (176.7, 160.5, 203.3)), ('A', '709', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTE', (168.1, 165.4, 244.7)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (197.0, 198.3, 183.5)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (212.7, 174.3, 239.4)), ('A', '982', 'SER', ' alpha helix', 'turn\nHHTTS', (208.0, 182.3, 162.4)), ('A', '987', 'PRO', ' alpha helix', 'helix\n-HHHH', (198.6, 191.1, 159.7)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (193.7, 176.7, 226.1)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (169.7, 177.0, 266.8)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (183.4, 178.2, 250.1)), ('A', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (180.0, 160.0, 255.0)), ('A', '1126', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (165.7, 177.5, 259.3)), ('A', '1143', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nTSSTT', (185.7, 176.4, 276.6)), ('A', '214', 'ARG', 'check CA trace', 'bend\n-SSS-', (201.6, 129.3, 173.9)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (192.3, 156.4, 200.8)), ('A', '519', 'HIS', 'check CA trace', 'bend\n-SSS-', (159.0, 178.2, 163.6)), ('A', '520', 'ALA', 'check CA trace', 'bend\nSSS--', (155.4, 177.0, 163.3)), ('A', '638', 'THR', 'check CA trace', 'bend\nGGSSS', (174.5, 144.3, 189.9)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (149.4, 197.9, 164.8)), ('B', '99', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (124.8, 185.5, 165.4)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (143.7, 200.3, 152.9)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (138.7, 200.1, 150.3)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (137.6, 201.4, 146.8)), ('B', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (138.4, 198.7, 144.2)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (126.8, 180.2, 159.1)), ('B', '231', 'ILE', ' beta sheet', ' \nE----', (148.7, 186.9, 152.7)), ('B', '232', 'GLY', ' beta sheet', ' \n-----', (151.1, 189.8, 153.2)), ('B', '282', 'ASN', 'check CA trace,carbonyls, peptide', 'helix-3\n-GGG-', (149.2, 171.4, 181.8)), ('B', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTSSH', (151.5, 200.0, 184.5)), ('B', '371', 'SER', 'check CA trace,carbonyls, peptide', ' \nHS-S-', (175.0, 227.2, 138.6)), ('B', '374', 'PHE', 'check CA trace,carbonyls, peptide', ' \nS--SE', (175.7, 223.8, 132.1)), ('B', '406', 'GLU', ' three-ten', 'bend\nSSS-T', (181.4, 214.6, 120.5)), ('B', '410', 'ILE', 'check CA trace,carbonyls, peptide', ' \nTT-SB', (183.4, 210.7, 127.7)), ('B', '427', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nB-SS-', (188.1, 201.2, 133.9)), ('B', '430', 'THR', 'check CA trace,carbonyls, peptide', ' \nS--SE', (185.4, 208.9, 140.5)), ('B', '442', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (183.6, 231.2, 121.2)), ('B', '459', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (196.6, 202.2, 117.9)), ('B', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (206.7, 210.2, 101.8)), ('B', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (208.7, 211.1, 104.9)), ('B', '485', 'GLY', 'check CA trace,carbonyls, peptide', 'beta bridge\n--BTT', (199.6, 215.4, 100.7)), ('B', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (198.2, 207.6, 151.3)), ('B', '529', 'LYS', ' beta sheet', ' \n-----', (179.1, 223.9, 158.5)), ('B', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \nEE--T', (155.1, 197.9, 202.7)), ('B', '615', 'VAL', 'check CA trace,carbonyls, peptide', ' \nSS--S', (167.8, 215.2, 191.3)), ('B', '616', 'ASN', 'check CA trace,carbonyls, peptide', ' \nS--SS', (166.9, 218.5, 193.1)), ('B', '640', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSS-E', (151.6, 217.6, 197.4)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.4, 206.0, 203.2)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (169.6, 207.7, 204.2)), ('B', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (168.2, 207.1, 218.9)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nHSS-T', (176.2, 165.2, 175.1)), ('B', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SSH', (192.2, 172.2, 182.8)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (164.8, 169.6, 239.4)), ('B', '853', 'GLN', ' alpha helix', 'bend\nTTSSS', (171.0, 164.3, 184.7)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (176.1, 185.2, 226.3)), ('B', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (172.2, 190.6, 228.1)), ('B', '1071', 'GLN', 'check CA trace,carbonyls, peptide', ' \nE--EE', (163.6, 198.1, 241.3)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (189.2, 204.9, 267.1)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (182.9, 192.8, 250.3)), ('B', '1144', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (178.4, 189.0, 276.7)), ('B', '1145', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS---', (181.5, 186.7, 276.4)), ('B', '34', 'ARG', 'check CA trace', ' \n-S--E', (141.4, 191.0, 178.6)), ('B', '98', 'SER', 'check CA trace', 'bend\n-SSS-', (121.8, 185.7, 167.8)), ('B', '164', 'ASN', 'check CA trace', ' \n---S-', (138.3, 190.8, 140.4)), ('B', '198', 'ASP', 'check CA trace', 'turn\n--TT-', (155.9, 190.1, 158.7)), ('B', '215', 'ASP', 'check CA trace', 'bend\n-SS--', (130.6, 195.4, 180.5)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (158.6, 194.8, 202.5)), ('B', '417', 'LYS', 'check CA trace', 'bend\n-SSST', (186.9, 209.8, 117.1)), ('B', '486', 'PHE', 'check CA trace', 'turn\n-BTTB', (200.8, 212.5, 98.5)), ('B', '524', 'VAL', 'check CA trace', 'strand\n--EE-', (191.4, 219.4, 149.9)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (176.8, 215.0, 175.5)), ('B', '638', 'THR', 'check CA trace', 'bend\nGTSSS', (154.0, 215.7, 190.8)), ('B', '1143', 'PRO', 'check CA trace', 'bend\nT-SS-', (178.6, 191.6, 273.9)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (214.0, 210.5, 163.7)), ('C', '106', 'PHE', ' beta sheet', ' \nEE--S', (215.8, 219.1, 154.3)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (217.0, 213.0, 150.9)), ('C', '113', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (214.8, 214.7, 141.2)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (214.2, 237.3, 154.4)), ('C', '167', 'THR', 'check CA trace,carbonyls, peptide', ' \nS--EE', (203.8, 221.4, 144.9)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (203.1, 210.0, 159.6)), ('C', '213', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (229.9, 232.3, 179.7)), ('C', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (227.2, 227.4, 176.6)), ('C', '232', 'GLY', ' beta sheet', ' \n-----', (204.8, 214.3, 153.0)), ('C', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (212.4, 207.6, 183.7)), ('C', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (189.6, 173.6, 152.2)), ('C', '413', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (185.9, 173.0, 152.4)), ('C', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSII', (182.0, 168.5, 141.2)), ('C', '449', 'TYR', 'check CA trace,carbonyls, peptide', ' \n-B---', (188.6, 164.9, 124.5)), ('C', '485', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (170.9, 151.5, 128.6)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTE', (168.3, 153.5, 130.5)), ('C', '495', 'TYR', ' beta sheet', ' \nEE--B', (185.6, 168.7, 128.9)), ('C', '503', 'VAL', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (187.3, 182.8, 130.1)), ('C', '504', 'GLY', ' alpha helix', 'turn\n-TTSS', (185.3, 180.4, 132.3)), ('C', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (208.5, 171.4, 162.6)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (208.0, 168.0, 164.3)), ('C', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (214.2, 179.6, 167.0)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (216.4, 206.7, 202.7)), ('C', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (226.8, 188.7, 191.6)), ('C', '636', 'TYR', ' alpha helix', 'turn\nHSTT-', (225.5, 201.0, 189.9)), ('C', '658', 'ASN', 'check CA trace,carbonyls, peptide', ' \n-S---', (227.1, 195.9, 214.5)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (215.7, 193.4, 203.0)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SSS', (172.3, 189.2, 183.1)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (184.5, 213.5, 239.8)), ('C', '810', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (180.4, 226.0, 222.2)), ('C', '829', 'ALA', 'check CA trace,carbonyls, peptide', ' \n---S-', (195.1, 214.2, 198.5)), ('C', '970', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (191.6, 195.8, 173.9)), ('C', '982', 'SER', ' alpha helix', 'turn\nHHTTS', (181.6, 206.8, 161.8)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (192.2, 196.2, 226.4)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (185.0, 205.7, 209.4)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (203.5, 174.4, 266.8)), ('C', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (195.7, 186.2, 250.0)), ('C', '1126', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nS-TTS', (205.5, 170.6, 259.2)), ('C', '214', 'ARG', 'check CA trace', 'bend\nSSSS-', (229.2, 230.5, 176.4)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (211.8, 205.7, 203.1)), ('C', '415', 'THR', 'check CA trace', ' \nS--SS', (181.2, 171.7, 147.3)), ('C', '517', 'LEU', 'check CA trace', 'strand\nEEESS', (205.8, 171.5, 160.0)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (217.3, 182.2, 173.0)), ('C', '638', 'THR', 'check CA trace', ' \nTT-SS', (230.7, 198.1, 190.4)), ('C', '833', 'PHE', 'check CA trace', 'bend\n-SSHH', (187.4, 209.8, 192.9))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22254/6xm3/Model_validation_1/validation_cootdata/molprobity_probe6xm3_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('B', ' 370 ', 'ASN', 0.0028492972806604994, (63.70402, -25.88353, -46.28649)), ('B', ' 468 ', 'ILE', 0.00512602, (58.70681, -5.143719999999998, -23.334439999999997)), ('C', ' 527 ', 'PRO', 0.010692966227264341, (34.79829000000001, -51.80491, -45.08104999999998)), ('D', ' 439 ', 'ASN', 0.021578183850427986, (-4.4303999999999935, 0.11913, 102.01902)), ('J', ' 199 ', 'THR', 0.0018924044347234886, (-28.72939999999999, -54.67387000000001, 41.42704)), ('K', ' 108 ', 'SER', 0.03842993687264791, (22.699470000000005, 7.043260000000001, 88.35573)), ('K', ' 157 ', 'PRO', 0.13066275986381887, (46.25459, -2.53956, 82.81580999999998)), ('K', ' 158 ', 'VAL', 0.005164742475593724, (49.06835, -1.26025, 80.50494)), ('L', '   3 ', 'GLN', 0.02097375099855462, (-1.7663299999999893, -35.375819999999976, 82.79907)), ('L', '  40 ', 'PRO', 0.05657074107271026, (-11.961089999999992, -28.46235, 102.64695)), ('L', '  68 ', 'GLU', 0.04020455296358296, (9.904430000000014, -28.875869999999978, 81.91748)), ('M', '  68 ', 'GLU', 0.014094018315254987, (70.51879, -31.85843, -9.44305)), ('M', '  95 ', 'LEU', 0.04598676977698787, (52.20711, -27.938350000000003, -13.57615)), ('M', '  96 ', 'PRO', 0.0, (50.53126000000001, -29.530409999999996, -10.70759)), ('M', ' 139 ', 'ASN', 0.034570308868389556, (52.05283000000001, -35.69325999999999, 30.79009)), ('M', ' 192 ', 'LEU', 0.012012810151627949, (35.15973000000001, -53.05945999999998, 40.64729)), ('N', '  39 ', 'LYS', 0.06831192071441927, (0.3370400000000022, -57.42262, 16.10537)), ('N', '  40 ', 'PRO', 0.0, (-2.81283, -58.85034, 14.4161)), ('N', '  68 ', 'GLU', 0.011174336098405074, (24.12851000000002, -63.96687999999999, 2.06359)), ('N', '  95 ', 'LEU', 0.0, (8.80265, -57.79783, -8.15938)), ('O', '  68 ', 'GLU', 0.029800890443378036, (5.6183700000000005, -7.030550000000001, 88.56826)), ('O', '  84 ', 'ALA', 0.02870093805201208, (27.486920000000012, -4.72624, 74.29974)), ('O', '  95 ', 'LEU', 0.0, (20.685620000000004, -1.5910599999999997, 98.96709))]
data['omega'] = [('B', ' 360 ', 'ASN', None, (60.07352, -8.55216, -51.79815)), ('D', ' 362 ', 'VAL', None, (-7.80659, 14.336199999999998, 130.82846)), ('H', ' 155 ', 'PRO', None, (-31.748310000000018, -31.903279999999995, 100.91181999999999)), ('H', ' 157 ', 'PRO', None, (-27.19881, -27.924319999999998, 102.6805)), ('I', ' 155 ', 'PRO', None, (29.582589999999993, -35.105979999999995, 11.01405)), ('I', ' 157 ', 'PRO', None, (34.35363, -31.312629999999974, 12.204029999999998)), ('J', ' 155 ', 'PRO', None, (-21.268530000000013, -60.60188, 6.14806)), ('J', ' 157 ', 'PRO', None, (-17.1543, -57.62792, 9.72816)), ('K', ' 155 ', 'PRO', None, (50.67475000000001, -5.9143, 87.80805)), ('K', ' 157 ', 'PRO', None, (46.722030000000004, -2.51516, 84.21506)), ('L', '   2 ', 'ILE', None, (-2.4758299999999913, -33.408129999999986, 79.03347)), ('L', '   8 ', 'PRO', None, (3.84478, -36.36309, 97.54115)), ('L', '  96 ', 'PRO', None, (-10.171439999999992, -26.339779999999987, 78.29457999999998)), ('L', ' 142 ', 'PRO', None, (-3.471669999999996, -38.39526999999997, 117.92914)), ('M', '   8 ', 'PRO', None, (65.22148, -39.72819999999999, 6.339959999999998)), ('M', '  96 ', 'PRO', None, (50.512990000000045, -28.80396, -11.9883)), ('M', ' 142 ', 'PRO', None, (58.239560000000004, -41.817709999999984, 27.380539999999996)), ('N', '   8 ', 'PRO', None, (12.8002, -70.24637, 15.2333)), ('N', '  84 ', 'ALA', None, (3.8725600000000053, -60.09335999999999, 19.31526)), ('N', ' 142 ', 'PRO', None, (-0.8955099999999998, -72.48863999999999, 30.43675)), ('O', '   8 ', 'PRO', None, (17.55179000000001, -13.99583, 76.33232)), ('O', ' 142 ', 'PRO', None, (32.4191, -14.78589, 60.626009999999994))]
data['rota'] = [('A', ' 341 ', 'VAL', 0.05434380008659592, (6.622310000000004, -12.531479999999993, 50.467999999999996)), ('A', ' 355 ', 'ARG', 0.2758389819504448, (-0.3531399999999927, -7.1226899999999995, 53.758889999999994)), ('A', ' 390 ', 'LEU', 0.1266246193264048, (-5.036510000000003, -13.27341, 36.39619)), ('A', ' 391 ', 'CYS', 0.0, (-8.71996, -14.12424, 36.68548)), ('A', ' 394 ', 'ASN', 0.05972699169561175, (-7.18542, -7.858579999999999, 43.10912)), ('A', ' 477 ', 'SER', 0.26981103864616285, (-14.20341, 0.30664999999999976, 86.1038)), ('A', ' 483 ', 'VAL', 0.24741981088923087, (0.07122000000000028, 2.830799999999998, 83.71073)), ('A', ' 514 ', 'SER', 0.0061410951210635195, (-7.133949999999994, -13.739960000000002, 49.27926)), ('B', ' 341 ', 'VAL', 0.003127019590465352, (66.19548, -14.66436, -40.1985)), ('B', ' 361 ', 'CYS', 0.15173508441394787, (60.038850000000004, -12.85571, -53.38007)), ('C', ' 367 ', 'VAL', 0.04615981679229721, (36.12061, -57.84302, -34.6012)), ('C', ' 415 ', 'THR', 0.013857866861496477, (10.80276, -50.065869999999975, -17.76016)), ('C', ' 477 ', 'SER', 0.2778564943648695, (4.34651, -31.56721, 1.3880399999999997)), ('C', ' 514 ', 'SER', 0.009531609591804806, (23.694960000000016, -45.50116, -32.0189)), ('C', ' 531 ', 'THR', 0.1952249717397643, (35.11731, -41.01114, -46.34849)), ('D', ' 366 ', 'SER', 0.005321201024344191, (-5.463299999999991, 2.5068, 128.11165)), ('D', ' 385 ', 'THR', 0.2311112147013494, (0.38244999999999507, 1.5599099999999997, 131.5607)), ('D', ' 391 ', 'CYS', 0.07429197224570012, (0.9204399999999993, 14.364199999999999, 134.02191)), ('D', ' 395 ', 'VAL', 0.016800384266233856, (1.2257100000000065, 16.71744, 124.63949)), ('D', ' 414 ', 'GLN', 0.23093005102557762, (17.351510000000005, 6.4944599999999975, 112.68359999999998)), ('D', ' 469 ', 'SER', 0.2714148574954812, (8.982930000000007, 24.59915, 100.74993999999997)), ('D', ' 494 ', 'SER', 0.0036495588139089956, (4.614609999999999, 11.03715, 95.1412)), ('D', ' 525 ', 'CYS', 0.20895025268894132, (-3.8659899999999965, 13.3834, 133.01985)), ('H', ' 195 ', 'SER', 0.037192110860977956, (-21.315169999999974, -25.981869999999997, 137.865)), ('I', '   7 ', 'SER', 0.14605695881995717, (35.11397, -20.743499999999997, 4.1352)), ('I', ' 150 ', 'VAL', 0.003127019590465352, (31.509690000000003, -35.5389, 23.802159999999997)), ('I', ' 158 ', 'VAL', 0.04097027160216643, (34.01256000000003, -30.304719999999975, 17.025669999999998)), ('I', ' 167 ', 'LEU', 0.2981898747841494, (40.98237000000001, -21.32754, 30.8843)), ('I', ' 199 ', 'THR', 0.18000932062453245, (34.702460000000016, -22.262199999999996, 44.62645)), ('I', ' 201 ', 'THR', 0.13784288061978509, (33.04943000000001, -23.05908, 38.288959999999996)), ('I', ' 212 ', 'ASN', 0.29962843390488103, (24.162700000000022, -26.502309999999998, 14.798079999999999)), ('J', '  30 ', 'SER', 0.0013303002560860477, (2.69553, -38.6611, -6.953799999999999)), ('J', '  37 ', 'VAL', 0.2085512809500405, (-0.17025, -55.34255999999999, -0.0783)), ('J', ' 191 ', 'THR', 0.09190876584830411, (-16.86899, -61.86083999999996, 34.72559)), ('J', ' 195 ', 'SER', 0.2267193488397635, (-23.403099999999995, -60.45665000000001, 44.6685)), ('K', '  97 ', 'ARG', 0.0, (25.98046, 10.191639999999996, 90.92257999999998)), ('K', ' 106 ', 'VAL', 0.27285478109971273, (18.673770000000005, 9.220919999999994, 92.00156)), ('K', ' 107 ', 'THR', 0.09551991567814178, (18.887010000000018, 7.443079999999995, 88.62864)), ('K', ' 168 ', 'THR', 0.2908728497741104, (45.0322, 5.333179999999999, 65.21531999999999)), ('K', ' 191 ', 'THR', 0.13913443316891405, (48.04954, -2.3866, 59.17723)), ('K', ' 192 ', 'VAL', 0.15709077171477734, (49.82979, 0.08907999999999998, 56.90638)), ('K', ' 197 ', 'LEU', 0.0724588860055492, (58.02551000000001, 0.9002399999999998, 54.72986)), ('L', ' 132 ', 'SER', 0.28489588433661556, (-29.94570999999998, -42.61912999999997, 118.68574)), ('M', '  12 ', 'SER', 0.22283055256323445, (63.78724, -38.5184, 16.78092)), ('M', '  33 ', 'LEU', 0.08615637506415111, (63.15885000000001, -27.38664, -4.91078)), ('M', '  56 ', 'SER', 0.1887654268351065, (61.259400000000014, -14.32387, 5.1383399999999995)), ('M', '  60 ', 'SER', 0.23825288616424006, (67.73838000000002, -18.72761000000001, 10.85969)), ('M', '  96 ', 'PRO', 0.15034728285334548, (50.53126000000001, -29.530409999999996, -10.70759)), ('M', ' 106 ', 'GLU', 0.2868062327250227, (59.585280000000004, -36.05948999999999, 17.10679)), ('M', ' 115 ', 'SER', 0.09400905795859336, (49.70912, -39.2266, 36.41397)), ('M', ' 126 ', 'LEU', 0.022175411616563282, (23.63173, -43.965, 32.10289)), ('M', ' 211 ', 'ASN', 0.2982230632140942, (33.38246000000003, -49.50079, 42.75446)), ('N', '   2 ', 'ILE', 0.0, (13.541990000000009, -67.65567, -3.35746)), ('N', '  85 ', 'THR', 0.19053595711070304, (4.3701300000000005, -62.31044, 14.909789999999997)), ('N', '  93 ', 'SER', 0.24586800520063146, (14.17731, -60.8999, -6.39934)), ('N', ' 109 ', 'ARG', 0.0, (4.392980000000005, -66.9999, 32.67618)), ('O', '  10 ', 'SER', 0.07194423106529181, (23.655750000000005, -14.374149999999997, 74.10068)), ('O', ' 115 ', 'SER', 0.0974117256322549, (43.85139000000001, -11.62854, 56.16833)), ('O', ' 191 ', 'LYS', 0.1663738397398722, (62.74322000000004, -25.295139999999986, 60.75484999999998))]
data['cbeta'] = []
data['probe'] = [(' N 109  ARG  HG3', ' N 109  ARG HH11', -0.874, (0.927, -67.318, 33.42)), (' K  90  THR HG22', ' K 119  VAL  H  ', -0.846, (42.76, -7.749, 93.876)), (' O   6  GLN  H  ', ' O 101  GLN HE22', -0.829, (19.101, -13.966, 84.181)), (' K 164  SER  H  ', ' K 205  ASN HD21', -0.82, (53.741, 7.152, 70.62)), (' D 365  TYR  HD2', ' D 387  LEU  HB3', -0.803, (-0.917, 7.53, 128.679)), (' J  40  ALA  HB1', ' J  41  PRO  HD2', -0.8, (-6.242, -66.188, 2.086)), (' O 104  LYS  NZ ', ' O 301  HOH  O  ', -0.762, (30.038, -6.274, 74.785)), (' L   2  ILE  O  ', ' L  26  SER  OG ', -0.759, (1.015, -35.693, 79.913)), (' C 484  GLU  OE1', ' I  13  LYS  NZ ', -0.749, (22.254, -37.276, 1.824)), (' I 134  PRO  HG3', ' I 146  LEU  HB3', -0.747, (37.017, -32.719, 37.866)), (' J  45  LEU HD21', ' N  44  PRO  HG2', -0.741, (2.439, -55.888, 6.077)), (' I 205  ASN  ND2', ' I 216  ASP  OD1', -0.734, (30.509, -22.791, 26.842)), (' N   6  GLN  OE1', ' N 103  THR  OG1', -0.734, (9.846, -66.342, 12.185)), (' D 438  SER  HB3', ' D 509  ARG  HD2', -0.722, (-4.131, 4.466, 106.614)), (' J  90  THR HG23', ' J 118  THR  HA ', -0.717, (-13.656, -61.561, 0.675)), (' I  82  MET  HB3', ' I  85  LEU HD21', -0.703, (34.575, -31.869, -5.265)), (' M  19  VAL HG21', ' M  78  LEU HD13', -0.697, (65.733, -30.981, 14.435)), (' H 203  ILE HD11', ' H 218  LYS  HE2', -0.693, (-34.389, -22.205, 125.796)), (' N 109  ARG  HD2', ' N 172  SER  HB2', -0.686, (1.283, -64.841, 31.029)), (' K  11  LEU HD12', ' K  12  VAL  H  ', -0.677, (47.669, -4.915, 94.69)), (' N   2  ILE  H  ', ' N   2  ILE HD12', -0.673, (12.229, -66.674, -4.676)), (' L  47  LEU  HA ', ' L  58  VAL HG21', -0.668, (-0.197, -17.88, 96.404)), (' D 365  TYR  CD2', ' D 387  LEU  HB3', -0.664, (-0.641, 7.66, 128.557)), (' N  90  GLN HE21', ' N  98  THR HG22', -0.659, (11.256, -63.5, -2.521)), (' I  29  VAL HG22', ' I  34  MET  HE2', -0.658, (43.3, -14.814, -4.148)), (' C 457  ARG  NH1', ' C 467  ASP  OD2', -0.651, (16.833, -35.57, -14.548)), (' C 433  VAL HG12', ' C 512  VAL HG22', -0.648, (22.627, -49.769, -26.025)), (' K 164  SER  H  ', ' K 205  ASN  ND2', -0.647, (53.299, 6.769, 70.413)), (' H 134  PRO  HG3', ' H 146  LEU  HB3', -0.642, (-25.422, -30.924, 128.273)), (' H 211  SER  HG ', ' H 213  THR  HG1', -0.631, (-36.697, -27.917, 106.229)), (' C 358  ILE  HB ', ' C 395  VAL HG13', -0.626, (31.393, -42.83, -34.162)), (' K 194  SER  O  ', ' K 197  LEU  HG ', -0.623, (56.841, -0.938, 51.988)), (' L   6  GLN  HB2', ' L 101  GLN  NE2', -0.621, (-0.586, -35.192, 92.882)), (' I   2  VAL HG22', ' I  26  GLY  HA3', -0.615, (47.838, -8.492, 2.314)), (' A 358  ILE  HB ', ' A 395  VAL HG13', -0.611, (-1.837, -10.348, 44.413)), (' J  35  SER  OG ', ' J  98  GLY  O  ', -0.61, (5.544, -49.876, -2.586)), (' A 355  ARG  HD3', ' A 398  ASP  OD1', -0.604, (-2.666, -8.961, 53.156)), (' I 218  LYS  HD2', ' I 220  GLU  OE1', -0.601, (28.235, -27.621, 37.458)), (' M  11  LEU HD22', ' M 105  VAL HG22', -0.598, (63.058, -35.046, 11.983)), (' H  72  ASP  OD2', ' H  75  LYS  HE2', -0.596, (-29.142, -8.798, 83.272)), (' H 151  LYS  NZ ', ' H 179  GLN HE22', -0.594, (-30.77, -41.106, 111.313)), (' C 456  PHE  CZ ', ' J 105  GLY  HA3', -0.594, (13.753, -42.754, -1.808)), (' M 146  LYS  HB3', ' M 198  THR  HB ', -0.59, (51.818, -51.525, 29.702)), (' I 192  VAL HG21', ' I 202  TYR  OH ', -0.589, (40.53, -24.978, 37.85)), (' J 159  THR HG22', ' J 207  ASN  HB3', -0.589, (-20.886, -53.218, 16.267)), (' A 372  ALA  O  ', ' A 373  SER  OG ', -0.588, (9.16, -26.727, 50.535)), (' I  27  ILE HD12', ' I  97  ARG  HG3', -0.586, (49.006, -13.457, -3.149)), (' B 454  ARG  HD3', ' B 457  ARG  HG3', -0.584, (54.045, -8.758, -18.969)), (' L 147  VAL HG22', ' L 197  VAL HG22', -0.583, (-14.387, -44.116, 120.999)), (' O 147  VAL HG12', ' O 197  VAL HG22', -0.582, (44.194, -19.171, 61.604)), (' K  97  ARG  O  ', ' K 108  SER  HA ', -0.58, (24.066, 8.34, 89.469)), (' L  11  LEU HD22', ' L 105  VAL HG22', -0.578, (1.714, -31.588, 103.087)), (' K 164  SER  N  ', ' K 205  ASN HD21', -0.575, (53.272, 7.905, 70.283)), (' O   6  GLN  N  ', ' O 101  GLN HE22', -0.574, (18.282, -13.437, 84.095)), (' M 170  LYS  HA ', ' M 170  LYS  HE2', -0.574, (57.858, -25.33, 25.134)), (' C 409  GLN  HA ', ' C 414  GLN  HG2', -0.572, (15.289, -52.759, -20.226)), (' C 526  GLY  O  ', ' C 528  LYS  N  ', -0.57, (33.966, -49.517, -45.678)), (' O   5  THR  HA ', ' O 101  GLN HE22', -0.57, (18.689, -13.985, 84.701)), (' D 363  ALA  HB1', ' D 365  TYR  CZ ', -0.565, (-3.196, 10.932, 127.449)), (' B 347  PHE  CD2', ' B 509  ARG  HD3', -0.558, (67.313, -18.251, -33.215)), (' D 361  CYS  HA ', ' D 362  VAL  HB ', -0.556, (-9.58, 14.71, 128.813)), (' D 357  ARG  HE ', ' D 394  ASN HD21', -0.554, (-0.323, 23.431, 124.618)), (' C 340  GLU  OE1', ' C 356  LYS  NZ ', -0.554, (38.786, -42.484, -27.5)), (' L   6  GLN  HB2', ' L 101  GLN HE22', -0.552, (-0.059, -35.981, 93.071)), (' J  13  LYS  HD2', ' J  13  LYS  N  ', -0.552, (-20.246, -59.872, -5.097)), (' N  39  LYS  NZ ', ' N  81  ASP  O  ', -0.55, (3.893, -55.178, 21.226)), (' I  27  ILE  CD1', ' I  97  ARG  HG3', -0.549, (48.643, -13.832, -3.42)), (' B 438  SER  HB3', ' B 509  ARG  HG3', -0.547, (68.433, -21.982, -31.547)), (' N 109  ARG  HG3', ' N 109  ARG  NH1', -0.545, (1.024, -66.956, 34.433)), (' O   5  THR  HA ', ' O 101  GLN  NE2', -0.545, (18.864, -13.757, 85.15)), (' A 403  ARG  HB2', ' A 406  GLU  HG3', -0.543, (0.416, -20.876, 68.428)), (' H  51  ILE HG13', ' H  57  THR HG22', -0.543, (-17.829, -17.365, 76.441)), (' K 134  PRO  HG3', ' K 146  LEU  HB3', -0.54, (54.891, -3.814, 60.045)), (' N  25  ALA  HB3', ' N  69  THR  HA ', -0.539, (20.694, -66.413, 2.608)), (' I  82  MET  HE1', ' I 117  VAL HG11', -0.539, (35.21, -31.409, -1.317)), (' H  41  PRO  O  ', ' H  43  LYS  HE2', -0.539, (-16.268, -37.239, 95.877)), (' H  11  LEU HD12', ' H  12  VAL  H  ', -0.537, (-31.502, -31.811, 92.651)), (' K  82  MET  HE1', ' K 117  VAL HG21', -0.537, (39.633, -0.118, 94.684)), (' O   6  GLN  H  ', ' O 101  GLN  NE2', -0.537, (19.384, -13.543, 84.199)), (' H  29  VAL HG22', ' H  34  MET  HE2', -0.535, (-16.99, -11.52, 85.801)), (' A 356  LYS  HD3', ' A 357  ARG  N  ', -0.533, (1.177, -6.303, 47.863)), (' I 101  GLY  HA3', ' I 106  VAL HG12', -0.533, (57.267, -20.92, -8.412)), (' M  30  SER  OG ', ' M  31  ARG  N  ', -0.532, (68.1, -26.216, -10.14)), (' D 363  ALA  HB1', ' D 365  TYR  CE1', -0.526, (-3.685, 10.727, 127.063)), (' K 197  LEU HD12', ' K 198  GLY  H  ', -0.521, (59.639, 1.016, 52.211)), (' K  20  LEU  HG ', ' K  82  MET  HE2', -0.519, (39.054, 2.595, 95.887)), (' N  47  LEU  HA ', ' N  58  VAL HG21', -0.519, (11.126, -51.114, 13.46)), (' C 445  VAL HG12', ' C 499  PRO  HG2', -0.519, (36.701, -59.362, -3.009)), (' A 367  VAL  HA ', ' A 370  ASN  ND2', -0.518, (4.7, -25.422, 40.433)), (' O  47  LEU  HA ', ' O  58  VAL HG21', -0.518, (19.457, 4.852, 77.563)), (' K  11  LEU HD12', ' K  12  VAL  N  ', -0.518, (48.022, -4.452, 95.135)), (' L  19  VAL HG21', ' L  78  LEU HD13', -0.516, (4.202, -27.846, 105.825)), (' B 408  ARG  NH1', ' B 414  GLN  OE1', -0.516, (49.667, -26.014, -25.171)), (' J 127  PRO  HB3', ' J 153  TYR  HB3', -0.514, (-24.831, -61.909, 12.688)), (' C 354  ASN  O  ', ' C 398  ASP  HA ', -0.514, (28.164, -42.633, -23.867)), (' H  82  MET  HB3', ' H  85  LEU HD21', -0.514, (-25.989, -28.704, 85.171)), (' C 388  ASN  HB3', ' C 527  PRO  HD2', -0.513, (32.659, -54.143, -42.93)), (' A 403  ARG  HG3', ' A 495  TYR  CE1', -0.513, (2.336, -18.555, 69.763)), (' L   2  ILE HG13', ' L  93  SER  HB3', -0.513, (-1.867, -29.922, 78.16)), (' K  47  TRP  HE1', ' K  50  VAL HG13', -0.512, (24.758, 3.373, 96.561)), (' D 354  ASN  O  ', ' D 398  ASP  HA ', -0.512, (1.305, 15.416, 113.506)), (' L   6  GLN HE22', ' L  87  TYR  HA ', -0.511, (-2.385, -30.06, 93.624)), (' K  88  GLU  N  ', ' K  88  GLU  OE1', -0.511, (38.513, -11.552, 98.459)), (' M 199  HIS  CD2', ' M 200  GLN  H  ', -0.511, (57.15, -46.29, 29.941)), (' J 199  THR HG23', ' J 200  GLN  OE1', -0.509, (-25.777, -54.303, 41.407)), (' M 114  PRO  HD3', ' M 199  HIS  ND1', -0.509, (54.673, -42.877, 31.738)), (' B 467  ASP  O  ', ' B 468  ILE HG12', -0.509, (57.665, -3.458, -25.571)), (' C 421  TYR  OH ', ' J  53  SER  O  ', -0.509, (9.33, -42.994, -11.192)), (' L 164  VAL HG22', ' L 176  LEU HD12', -0.508, (-13.721, -39.231, 113.659)), (' N 109  ARG  NH1', ' N 110  THR  O  ', -0.506, (0.351, -67.994, 34.636)), (' B 343  ASN  OD1', ' B 601  NAG  N2 ', -0.502, (70.04, -20.494, -43.367)), (' A 403  ARG HH21', ' A 405  ASP  HB2', -0.501, (-0.119, -24.384, 70.292)), (' N  94  THR  O  ', ' N  95  LEU  HB2', -0.5, (8.965, -59.078, -10.204)), (' N  11  LEU HD22', ' N 105  VAL HG22', -0.497, (9.261, -65.286, 19.722)), (' K  50  VAL  CG2', ' K  58  TYR  HB2', -0.496, (23.934, 3.047, 101.165)), (' D 392  PHE  O  ', ' D 523  THR  N  ', -0.495, (-0.026, 19.403, 130.964)), (' N  59  PRO  HG2', ' N  62  PHE  HE1', -0.492, (11.408, -51.628, 20.238)), (' O  30  SER  OG ', ' O  31  ARG  N  ', -0.492, (6.363, -1.068, 89.659)), (' M  35  TRP  CE2', ' M  73  LEU  HB2', -0.49, (65.203, -29.427, 3.177)), (' K 156  GLU  HB3', ' K 157  PRO  HA ', -0.489, (45.282, -3.888, 83.038)), (' H  82  MET  HE2', ' H  85  LEU HD21', -0.488, (-25.839, -28.875, 86.019)), (' M  89  GLN  HB2', ' M  99  PHE  CD1', -0.488, (56.215, -29.91, -2.356)), (' B 408  ARG HH22', ' B 414  GLN HE22', -0.487, (48.788, -28.256, -26.135)), (' N 184  LYS  O  ', ' N 188  GLU  HG2', -0.486, (-35.192, -80.35, 21.315)), (' B 347  PHE  CE2', ' B 509  ARG  HB3', -0.482, (66.081, -19.019, -33.745)), (' L   1  ASP  O  ', ' L   3  GLN  NE2', -0.481, (-2.566, -35.586, 77.836)), (' D 405  ASP  N  ', ' D 405  ASP  OD1', -0.48, (8.45, -0.141, 103.877)), (' H  97  ARG  O  ', ' H 108  SER  HA ', -0.477, (-8.481, -16.286, 87.463)), (' D 384  PRO  HA ', ' D 387  LEU HD23', -0.477, (1.997, 4.593, 128.288)), (' J  51  ILE HD12', ' J  57  THR HG22', -0.477, (1.229, -47.194, -11.598)), (' M  47  LEU  O  ', ' M  48  ILE HD13', -0.476, (63.344, -21.458, 3.881)), (' L   6  GLN  NE2', ' L  88  CYS  H  ', -0.475, (-1.507, -29.891, 92.197)), (' D 365  TYR  CE2', ' D 387  LEU HD12', -0.475, (0.268, 9.295, 128.082)), (' K 127  PRO  HB3', ' K 153  TYR  HB3', -0.474, (54.521, -6.063, 80.884)), (' N 124  GLU  N  ', ' N 124  GLU  OE1', -0.471, (-35.173, -67.339, 24.437)), (' D 361  CYS  HB3', ' D 362  VAL  C  ', -0.471, (-7.468, 13.358, 128.211)), (' H 127  PRO  HB3', ' H 153  TYR  HB3', -0.469, (-32.72, -32.297, 108.76)), (' C 523  THR HG23', ' C 524  VAL HG13', -0.469, (30.973, -40.889, -39.073)), (' K   2  VAL HG22', ' K  26  GLY  HA3', -0.469, (28.67, 19.338, 85.141)), (' L   6  GLN HE21', ' L  88  CYS  H  ', -0.467, (-1.013, -30.157, 92.232)), (' I 127  PRO  HB2', ' I 150  VAL HG23', -0.466, (29.348, -34.532, 21.248)), (' C 503  VAL  HA ', ' C 506  GLN HE21', -0.466, (27.389, -62.355, -10.325)), (' O  94  THR  C  ', ' O  96  PRO  HD2', -0.465, (19.081, -3.358, 100.312)), (' C 523  THR  N  ', ' C 601  HOH  O  ', -0.464, (29.852, -40.648, -43.698)), (' C 456  PHE  HZ ', ' J 105  GLY  HA3', -0.464, (14.412, -43.196, -1.529)), (' N 141  TYR  CD1', ' N 142  PRO  HA ', -0.463, (-0.14, -70.566, 28.749)), (' K  35  SER  OG ', ' K  50  VAL HG12', -0.462, (24.846, 5.166, 96.024)), (' B 438  SER  CB ', ' B 509  ARG  HG3', -0.462, (69.157, -22.028, -31.225)), (' B 472  ILE HD12', ' B 484  GLU  HG2', -0.46, (61.178, -4.035, -8.792)), (' J 211  SER  OG ', ' J 213  THR  OG1', -0.46, (-27.838, -56.394, 10.449)), (' N  35  TRP  CZ3', ' N  88  CYS  HB3', -0.459, (12.799, -62.461, 9.634)), (' K 167  LEU HD21', ' K 190  VAL HG21', -0.458, (49.429, 1.887, 62.509)), (' J  63  VAL  HB ', ' J  67  PHE  CD2', -0.458, (-4.72, -57.878, -8.661)), (' M 138  ASN  OD1', ' M 139  ASN  ND2', -0.457, (49.565, -33.796, 32.107)), (' J   2  VAL HG22', ' J  26  GLY  HA3', -0.456, (3.095, -36.656, 6.106)), (' I 127  PRO  HB3', ' I 153  TYR  HB3', -0.455, (28.976, -35.381, 18.513)), (' K  38  ARG  HG2', ' K  48  VAL  CG2', -0.455, (31.451, -2.557, 95.125)), (' I 217  LYS  HA ', ' I 217  LYS  HD2', -0.455, (26.473, -28.675, 30.828)), (' A 471  GLU  N  ', ' A 471  GLU  OE1', -0.455, (-2.222, 1.522, 73.253)), (' K  72  ASP  OD1', ' K  75  LYS  N  ', -0.454, (37.567, 19.915, 97.888)), (' D 497  PHE  CE2', ' D 507  PRO  HB3', -0.454, (0.332, 5.25, 100.938)), (' K 116  LEU HD12', ' K 117  VAL  N  ', -0.452, (41.299, -2.85, 90.198)), (' C 502  GLY  O  ', ' C 506  GLN  HG3', -0.451, (26.657, -60.66, -9.333)), (' M  93  SER  OG ', ' M  94  THR  O  ', -0.451, (55.259, -30.576, -12.817)), (' J 103  ILE  O  ', ' J 107  THR HG23', -0.45, (14.195, -47.837, 1.771)), (' M 141  TYR  CG ', ' M 142  PRO  HA ', -0.449, (58.481, -39.808, 25.793)), (' O 141  TYR  CG ', ' O 142  PRO  HA ', -0.449, (31.682, -13.195, 61.919)), (' B 354  ASN  O  ', ' B 398  ASP  HA ', -0.448, (59.649, -12.439, -35.611)), (' I 131  PRO  O  ', ' M 122  SER  OG ', -0.447, (30.247, -37.051, 33.323)), (' N   4  MET  HE2', ' N  25  ALA  HA ', -0.447, (16.054, -66.894, 2.229)), (' N  33  LEU HD22', ' N  71  PHE  CG ', -0.447, (18.224, -61.555, 6.777)), (' J  82  MET  HB3', ' J  85  LEU HD21', -0.446, (-10.431, -57.25, -6.851)), (' A 399  SER  HA ', ' A 510  VAL  O  ', -0.446, (2.059, -15.015, 56.424)), (' B 348  ALA  HB2', ' B 354  ASN  OD1', -0.446, (64.785, -10.404, -32.11)), (' L 184  LYS  O  ', ' L 188  GLU  HG3', -0.444, (-37.541, -49.646, 122.23)), (' M 187  TYR  O  ', ' M 212  ARG  NH1', -0.444, (27.613, -52.636, 36.407)), (' K 156  GLU  HG3', ' K 184  TYR  CE2', -0.444, (46.669, -8.495, 84.544)), (' A 370  ASN  OD1', ' A 371  SER  N  ', -0.444, (6.47, -26.775, 42.96)), (' N  94  THR  O  ', ' N  94  THR  OG1', -0.443, (11.417, -60.054, -10.742)), (' K  18  LEU HD12', ' K  19  ARG  H  ', -0.442, (44.275, 4.224, 98.021)), (' J 217  LYS  HA ', ' J 217  LYS  HD2', -0.441, (-31.189, -57.063, 23.424)), (' M 191  LYS  HG3', ' M 211  ASN  OD1', -0.44, (32.355, -53.064, 43.378)), (' M  33  LEU HD22', ' M  71  PHE  CG ', -0.44, (66.395, -30.641, -3.133)), (' J  45  LEU HD21', ' N  44  PRO  CG ', -0.439, (2.177, -56.447, 6.913)), (' N   2  ILE  N  ', ' N   2  ILE HD12', -0.439, (12.472, -66.575, -4.672)), (' N   2  ILE HD13', ' N  90  GLN  NE2', -0.438, (12.336, -63.127, -3.199)), (' A 497  PHE  CE2', ' A 507  PRO  HB3', -0.438, (7.848, -18.329, 66.619)), (' A 369  TYR  O  ', ' A 372  ALA  HB2', -0.437, (4.042, -28.118, 47.012)), (' A 367  VAL  HA ', ' A 370  ASN HD21', -0.437, (4.945, -25.336, 40.437)), (' H  43  LYS  HA ', ' H  43  LYS  HD3', -0.437, (-12.507, -37.273, 94.836)), (' M 109  ARG  HB2', ' M 109  ARG  HE ', -0.437, (62.866, -34.449, 27.842)), (' C 392  PHE  CD1', ' C 515  PHE  HB3', -0.437, (24.51, -45.77, -38.252)), (' A 376  THR HG23', ' A 378  LYS  HE3', -0.436, (-3.677, -26.492, 56.511)), (' J  12  VAL  O  ', ' J 119  VAL  HA ', -0.436, (-16.854, -61.094, -3.308)), (' K  50  VAL HG23', ' K  58  TYR  HB2', -0.436, (23.994, 3.548, 101.445)), (' N   2  ILE HD11', ' N  93  SER  HB2', -0.435, (13.005, -63.127, -5.286)), (' J  36  TRP  NE1', ' J  80  LEU  HB2', -0.435, (-4.391, -50.153, -4.984)), (' O  41  GLY  O  ', ' O  42  LYS  HD2', -0.435, (36.101, 0.512, 79.66)), (' A 356  LYS  HG3', ' A 358  ILE HD11', -0.434, (2.484, -9.125, 46.955)), (' M 164  VAL HG22', ' M 176  LEU HD12', -0.433, (48.301, -42.394, 24.185)), (' A 398  ASP  O  ', ' A 511  VAL  HA ', -0.432, (0.62, -15.043, 54.534)), (' O  36  TYR  CE2', ' O  46  LEU HD13', -0.432, (20.801, 2.87, 85.05)), (' B 399  SER  HA ', ' B 510  VAL  O  ', -0.431, (61.802, -17.327, -34.15)), (' N 121  PRO  HD3', ' N 133  VAL HG22', -0.431, (-27.239, -75.813, 25.464)), (' D 338  PHE  HE2', ' D 365  TYR  CD1', -0.43, (-3.923, 9.043, 125.343)), (' H 213  THR HG22', ' H 215  VAL HG23', -0.43, (-36.729, -26.421, 111.903)), (' H 130  PHE  CE2', ' L 125  GLN  HG3', -0.429, (-35.021, -38.202, 117.013)), (' O 106  GLU  HG2', ' O 107  ILE  N  ', -0.429, (27.352, -9.037, 66.661)), (' L 116  VAL  O  ', ' L 208  LYS  HE2', -0.428, (-16.402, -39.456, 129.0)), (' A 354  ASN  O  ', ' A 398  ASP  HA ', -0.427, (-0.02, -10.157, 54.731)), (' K 107  THR  O  ', ' K 108  SER  HB2', -0.427, (21.621, 5.242, 88.431)), (' K  36  TRP  HD1', ' K  69  ILE HD12', -0.426, (31.415, 6.019, 97.886)), (' I  97  ARG  O  ', ' I 108  SER  HA ', -0.426, (52.227, -19.616, -2.876)), (' J  36  TRP  O  ', ' J  48  VAL HG12', -0.425, (-0.156, -54.768, -2.93)), (' L   2  ILE  CG1', ' L  93  SER  HB3', -0.424, (-1.581, -30.212, 78.353)), (' B 408  ARG  NH2', ' B 414  GLN HE22', -0.422, (49.025, -28.158, -26.131)), (' O 159  ASN  N  ', ' O 159  ASN  OD1', -0.422, (51.152, -25.297, 72.408)), (' L  33  LEU HD22', ' L  71  PHE  CG ', -0.422, (5.324, -27.023, 88.226)), (' C 440  ASN  N  ', ' C 440  ASN  OD1', -0.422, (36.171, -58.4, -13.004)), (' M 212  ARG  HG3', ' M 212  ARG HH11', -0.421, (28.214, -51.325, 37.619)), (' J  13  LYS  H  ', ' J  13  LYS  HD2', -0.42, (-20.679, -59.525, -5.084)), (' A 403  ARG  NH2', ' A 405  ASP  HB2', -0.419, (-0.377, -24.13, 70.858)), (' N   2  ILE HD11', ' N  93  SER  CB ', -0.419, (12.603, -63.501, -5.549)), (' J  36  TRP  HD1', ' J  69  ILE HD12', -0.419, (-1.144, -50.133, -5.85)), (' N  41  GLY  O  ', ' N  42  LYS  HD3', -0.417, (-5.021, -53.139, 14.116)), (' H 207  ASN HD21', ' H 209  LYS  HG3', -0.416, (-30.704, -21.715, 105.791)), (' I  11  LEU  HB2', ' I 155  PRO  HG3', -0.416, (29.794, -33.701, 7.548)), (' A 337  PRO  HD2', ' A 360  ASN HD21', -0.416, (3.362, -13.029, 40.762)), (' O 101  GLN  CD ', ' O 101  GLN  H  ', -0.416, (21.39, -12.532, 84.634)), (' J  30  SER  HB3', ' J  73  ASN  ND2', -0.415, (1.04, -37.393, -8.882)), (' D 443  SER  O  ', ' D 444  LYS  HD2', -0.414, (-7.517, 3.212, 97.198)), (' O 146  LYS  HB3', ' O 198  THR  HB ', -0.414, (40.125, -24.081, 61.32)), (' N 191  LYS  HE2', ' N 211  ASN  HB3', -0.413, (-31.717, -82.593, 34.721)), (' K  99  GLU  HG2', ' K  99  GLU  O  ', -0.413, (20.394, 3.977, 95.349)), (' A 358  ILE  HB ', ' A 395  VAL  CG1', -0.413, (-2.307, -10.519, 44.323)), (' C 404  GLY  HA2', ' C 508  TYR  CD1', -0.412, (25.024, -57.411, -14.695)), (' I 160  VAL HG12', ' I 206  VAL HG22', -0.411, (33.166, -29.939, 23.074)), (' H   2  VAL HG22', ' H  26  GLY  HA3', -0.411, (-13.099, -5.279, 92.179)), (' I 192  VAL HG21', ' I 202  TYR  CZ ', -0.409, (40.008, -25.375, 37.955)), (' D 475  ALA  HB1', ' K  32  ASN HD21', -0.409, (23.56, 17.34, 91.831)), (' M 188  GLU  HA ', ' M 212  ARG  NH1', -0.408, (26.532, -52.618, 37.318)), (' O  28  SER  OG ', ' O  68  GLU  HG3', -0.407, (4.236, -7.413, 91.205)), (' A 447  GLY  HA2', ' A 498  GLN  HG2', -0.406, (13.755, -19.439, 73.613)), (' D 438  SER  O  ', ' D 507  PRO  HG2', -0.405, (-2.087, 1.726, 102.943)), (' C 403  ARG  NH2', ' C 405  ASP  OD1', -0.405, (19.146, -56.691, -10.436)), (' M   2  ILE  N  ', ' M   2  ILE HD12', -0.404, (58.662, -35.395, -12.778)), (' C 365  TYR  CD2', ' C 387  LEU  HB3', -0.404, (28.799, -51.9, -38.375)), (' K  27  ILE  HA ', ' K  27  ILE HD13', -0.404, (26.21, 18.561, 89.312)), (' M 199  HIS  CD2', ' M 200  GLN  N  ', -0.403, (56.922, -46.266, 30.429)), (' L 210  PHE  C  ', ' L 210  PHE  CD1', -0.402, (-27.031, -46.416, 130.202)), (' B 472  ILE  CD1', ' B 484  GLU  HG2', -0.402, (60.976, -3.799, -9.115)), (' J  97  ARG  O  ', ' J 108  SER  HA ', -0.401, (6.584, -48.308, 1.999)), (' D 404  GLY  O  ', ' D 407  VAL HG23', -0.401, (6.569, 1.26, 107.523)), (' I  93  TYR  O  ', ' I 114  GLY  HA2', -0.401, (42.124, -25.658, 4.029)), (' D 382  VAL HG22', ' D 387  LEU HD22', -0.4, (4.372, 6.0, 129.776)), (' L  42  LYS  HA ', ' L  42  LYS  HD2', -0.4, (-15.774, -22.995, 100.927))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

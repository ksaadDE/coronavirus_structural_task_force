# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  78 ', 'ARG', 0.04910306565957958, (258.295, 170.393, 171.38899999999998)), ('A', ' 518 ', 'LEU', 0.029474288434345863, (192.616, 172.113, 176.05)), ('A', ' 582 ', 'LEU', 0.04245084688035604, (193.14699999999993, 155.606, 178.696)), ('A', ' 640 ', 'SER', 0.045500821072182715, (226.83399999999995, 161.694, 209.09599999999998)), ('A', ' 744 ', 'GLY', 0.01159819944225751, (211.109, 214.024, 189.492)), ('A', ' 830 ', 'ASP', 0.020430518523879816, (219.848, 211.013, 209.293)), ('A', ' 834 ', 'ILE', 0.019154550831103272, (220.29, 221.062, 207.964)), ('B', ' 123 ', 'ALA', 0.02324741354845537, (174.84700000000012, 250.63099999999994, 164.947)), ('B', ' 132 ', 'GLU', 0.029530732498391877, (193.6820000000001, 239.17099999999994, 154.69099999999997)), ('B', ' 164 ', 'ASN', 0.006798365561538947, (191.27, 239.71, 149.84)), ('B', ' 172 ', 'SER', 0.045400992308700705, (173.643, 239.20299999999997, 163.701)), ('B', ' 518 ', 'LEU', 0.020977934681207684, (223.042, 206.43999999999994, 176.05)), ('B', ' 637 ', 'SER', 0.04543357136448027, (212.39500000000012, 237.447, 201.025)), ('B', ' 640 ', 'SER', 0.049464590875203655, (215.208, 241.109, 208.71)), ('B', ' 830 ', 'ASP', 0.006292959721955796, (175.652, 210.326, 209.413)), ('B', ' 834 ', 'ILE', 0.03888528048174348, (166.862, 205.95899999999997, 207.81999999999996)), ('B', ' 837 ', 'TYR', 0.02311882539618978, (164.612, 209.655, 200.11099999999996)), ('C', '  32 ', 'PHE', 0.03615424323076375, (162.448, 170.037, 192.669)), ('C', '  78 ', 'ARG', 0.04591769351376079, (143.795, 159.663, 171.23099999999997)), ('C', ' 172 ', 'SER', 0.04994692474198133, (174.506, 156.27, 163.475)), ('C', ' 518 ', 'LEU', 0.020764493020911993, (178.345, 215.499, 176.09699999999998)), ('C', ' 637 ', 'SER', 0.025489095214622618, (157.00899999999996, 190.874, 200.99)), ('C', ' 830 ', 'ASP', 0.0014491960499761819, (198.523, 172.61399999999998, 209.58)), ('C', ' 834 ', 'ILE', 0.0316830993179558, (206.894, 167.157, 207.75299999999996))]
data['omega'] = []
data['rota'] = [('A', ' 121 ', 'ASN', 0.062058291134445706, (249.534, 189.86599999999999, 166.76399999999998)), ('A', ' 173 ', 'GLN', 0.1179522766821699, (248.859, 198.479, 166.13399999999996)), ('A', ' 237 ', 'ARG', 0.011337078217244783, (235.309, 175.699, 169.102)), ('A', ' 461 ', 'LEU', 0.22483950614258083, (172.51599999999996, 187.64099999999993, 163.225)), ('A', ' 516 ', 'GLU', 0.04876564213571978, (188.364, 175.351, 171.16799999999998)), ('A', ' 581 ', 'THR', 0.07442548100914273, (196.44199999999992, 154.288, 177.22499999999997)), ('A', ' 619 ', 'GLU', 0.01521655108570094, (214.78299999999996, 162.478, 199.2)), ('A', ' 629 ', 'LEU', 0.07817602736408398, (218.92199999999994, 171.196, 190.619)), ('A', ' 985 ', 'ASP', 0.06427007669461453, (207.402, 210.928, 171.053)), ('B', ' 130 ', 'VAL', 0.14286400152279116, (188.508, 237.268, 159.45199999999997)), ('B', ' 176 ', 'LEU', 0.2711245863243552, (174.87000000000006, 247.355, 173.13899999999998)), ('B', ' 206 ', 'LYS', 0.21750025589811398, (179.611, 240.257, 181.975)), ('B', ' 317 ', 'ASN', 0.21589855741171998, (207.354, 221.8799999999999, 197.537)), ('B', ' 366 ', 'SER', 0.11995962232279025, (215.039, 214.087, 158.95)), ('B', ' 382 ', 'VAL', 0.16160847777261178, (213.08899999999994, 205.203, 169.73799999999997)), ('B', ' 510 ', 'VAL', 0.006254039180930704, (215.808, 197.38, 152.67599999999996)), ('B', ' 546 ', 'LEU', 0.2418957690430463, (221.18, 212.386, 178.254)), ('B', ' 577 ', 'ARG', 0.04864224298077531, (232.238, 213.005, 181.21899999999997)), ('B', ' 748 ', 'GLU', 0.26337798019119696, (179.5, 195.029, 181.192)), ('B', ' 836 ', 'GLN', 0.06604039454641934, (163.858, 207.97299999999998, 203.476)), ('C', '  96 ', 'GLU', 0.0849621328602689, (158.62999999999994, 156.428, 180.424)), ('C', ' 237 ', 'ARG', 0.0038643690466155247, (160.078, 176.833, 169.06999999999996)), ('C', ' 376 ', 'THR', 0.22125432626617578, (189.955, 205.047, 155.29899999999998)), ('C', ' 516 ', 'GLU', 0.04478406783505035, (183.193, 217.67499999999995, 171.00899999999996)), ('C', ' 546 ', 'LEU', 0.22026722529484774, (174.119, 210.845, 178.19999999999996)), ('C', ' 649 ', 'CYS', 0.0, (163.15999999999994, 197.047, 207.709)), ('C', ' 883 ', 'THR', 0.24854695846628405, (204.55400000000006, 175.469, 246.122)), ('C', ' 990 ', 'GLU', 0.0, (204.311, 188.869, 177.79299999999998))]
data['cbeta'] = [('A', ' 198 ', 'ASP', ' ', 0.334952669428224, (222.335, 189.342, 170.00599999999994)), ('A', ' 461 ', 'LEU', ' ', 0.2809991579946071, (172.676, 186.713, 162.013)), ('A', ' 745 ', 'ASP', ' ', 0.3938034641225634, (212.524, 218.119, 187.818)), ('A', '1041 ', 'ASP', ' ', 0.264843350156952, (207.594, 190.82999999999998, 236.356)), ('B', '  78 ', 'ARG', ' ', 0.27920058968582234, (192.43199999999993, 264.8159999999998, 170.168)), ('B', ' 745 ', 'ASP', ' ', 0.38936989304782227, (173.404, 200.754, 187.619)), ('B', '1041 ', 'ASP', ' ', 0.25330055390948014, (199.44700000000012, 209.944, 236.55299999999997)), ('C', '  19 ', 'THR', ' ', 0.2539115928777813, (140.75399999999988, 164.071, 165.81399999999996)), ('C', ' 183 ', 'GLN', ' ', 0.303539560408433, (160.758, 143.161, 180.893)), ('C', ' 273 ', 'ARG', ' ', 0.25016816118239865, (170.814, 180.718, 187.429)), ('C', ' 617 ', 'CYS', ' ', 0.26632091079024767, (160.592, 198.509, 204.08499999999995)), ('C', ' 745 ', 'ASP', ' ', 0.3293412464570692, (207.874, 175.422, 187.47799999999998)), ('C', ' 950 ', 'ASP', ' ', 0.25299348313623393, (187.663, 183.05499999999998, 215.411))]
data['probe'] = [(' A 331  ASN  ND2', ' A1403  NAG  C1 ', -1.531, (198.253, 153.86, 168.546)), (' B 234  ASN  ND2', ' R   1  NAG  C1 ', -1.528, (202.228, 233.993, 164.197)), (' C 616  ASN  ND2', ' e   1  NAG  C1 ', -1.507, (158.281, 206.293, 205.011)), (' B 149  ASN HD21', ' B1402  NAG  C1 ', -1.485, (165.877, 260.726, 156.975)), (' C  16  VAL HG21', ' C 158  ARG  NH1', -1.401, (148.292, 158.86, 156.937)), (' B 401  VAL HG21', ' B 451  TYR  CD1', -1.36, (218.682, 192.111, 145.199)), (' B 149  ASN  ND2', ' B1402  NAG  C1 ', -1.328, (165.277, 260.899, 158.1)), (' B 905  ARG  NH1', ' B1050  MET  HB3', -1.321, (186.411, 206.053, 243.957)), (' A 904  TYR  CD1', ' B1107  ARG  HD3', -1.29, (205.742, 207.39, 253.287)), (' A1107  ARG  HD3', ' C 904  TYR  CD1', -1.243, (202.47, 186.349, 253.251)), (' C  16  VAL  CG2', ' C 158  ARG  NH1', -1.239, (147.838, 159.699, 156.485)), (' A 904  TYR  CE1', ' B1107  ARG  HD3', -1.223, (205.793, 208.521, 253.947)), (' A  83  VAL  CG1', ' A 237  ARG  HD2', -1.166, (238.095, 172.732, 167.153)), (' A 624  ILE HD12', ' A 634  ARG HH21', -1.164, (225.007, 163.97, 194.94)), (' B 347  PHE  CE2', ' B 509  ARG  HG2', -1.151, (219.198, 198.243, 149.615)), (' B 905  ARG HH12', ' B1050  MET  CB ', -1.139, (185.579, 206.263, 243.039)), (' A  83  VAL HG12', ' A 237  ARG  CD ', -1.129, (237.965, 172.648, 167.791)), (' B 347  PHE  CD2', ' B 509  ARG  HG3', -1.121, (219.729, 197.069, 148.457)), (' A  83  VAL HG11', ' A 237  ARG  HD2', -1.109, (238.327, 172.421, 166.498)), (' A1107  ARG  HD3', ' C 904  TYR  CE1', -1.109, (203.358, 186.08, 254.434)), (' B 347  PHE  CE1', ' B 509  ARG  HD3', -1.105, (220.846, 199.296, 147.816)), (' B 401  VAL HG21', ' B 451  TYR  CE1', -1.098, (219.552, 192.349, 145.614)), (' C 905  ARG  NH1', ' C1050  MET  HB3', -1.097, (196.753, 183.821, 244.091)), (' B 282  ASN HD21', ' S   1  NAG  C1 ', -1.085, (168.715, 231.859, 194.534)), (' B 904  TYR  CE1', ' C1107  ARG  HD3', -1.078, (185.245, 199.247, 254.596)), (' A 905  ARG  NH1', ' A1050  MET  HB3', -1.074, (210.886, 203.882, 243.993)), (' A  83  VAL  CG1', ' A 237  ARG  CD ', -1.064, (237.974, 173.225, 167.175)), (' B 347  PHE  CE2', ' B 509  ARG  CG ', -1.055, (218.992, 198.059, 148.534)), (' B 904  TYR  CD1', ' C1107  ARG  HD3', -1.055, (186.74, 199.39, 253.881)), (' A 403  ARG  NH1', ' A 406  GLU  OE1', -1.03, (181.172, 193.271, 149.61)), (' B 905  ARG HH12', ' B1050  MET  HB3', -1.019, (185.517, 207.033, 243.966)), (' C  16  VAL  CG2', ' C 158  ARG HH11', -1.018, (148.852, 160.196, 157.568)), (' A  83  VAL HG12', ' A 237  ARG  HD3', -1.007, (237.775, 172.618, 168.528)), (' A 624  ILE  HA ', ' A 634  ARG  NH2', -0.994, (223.229, 165.265, 194.269)), (' A 624  ILE HD12', ' A 634  ARG  NH2', -0.987, (223.887, 164.715, 194.361)), (' B 401  VAL  CG2', ' B 451  TYR  CD1', -0.983, (217.987, 191.342, 146.394)), (' C 140  PHE  CZ ', ' C 158  ARG  HD2', -0.953, (150.376, 158.95, 158.685)), (' B 401  VAL HG21', ' B 451  TYR  HD1', -0.948, (218.682, 190.915, 145.991)), (' B 346  ARG  NH2', ' B 451  TYR  CE2', -0.944, (220.724, 192.051, 141.264)), (' B 140  PHE  CE1', ' B 158  ARG  HD2', -0.941, (188.241, 258.911, 159.375)), (' B 434  ILE  O  ', ' B 510  VAL HG12', -0.937, (214.496, 198.936, 154.401)), (' A1019  ARG  NH1', ' B1017  GLU  HG3', -0.93, (195.595, 205.213, 217.126)), (' B 401  VAL  CG2', ' B 451  TYR  HD1', -0.926, (218.184, 191.042, 146.571)), (' A 905  ARG HH12', ' A1050  MET  HB3', -0.921, (210.881, 204.656, 244.027)), (' C 905  ARG HH12', ' C1050  MET  HB3', -0.919, (197.397, 183.391, 244.072)), (' A 904  TYR  CE1', ' B1107  ARG  CD ', -0.915, (205.031, 208.271, 254.117)), (' B 282  ASN  ND2', ' S   1  NAG  C1 ', -0.913, (169.392, 231.509, 194.226)), (' C 905  ARG HH12', ' C1050  MET  CB ', -0.906, (196.95, 183.289, 243.054)), (' A 905  ARG HH12', ' A1050  MET  CB ', -0.903, (211.23, 204.526, 243.012)), (' B 347  PHE  CD2', ' B 509  ARG  CG ', -0.894, (219.192, 197.854, 148.278)), (' C  16  VAL HG21', ' C 158  ARG HH11', -0.881, (149.048, 159.382, 158.155)), (' A 904  TYR  HD1', ' B1107  ARG  HD3', -0.878, (205.328, 206.484, 253.858)), (' B 435  ALA  CB ', ' B 510  VAL HG13', -0.862, (212.511, 198.135, 152.981)), (' A1107  ARG  HD3', ' C 904  TYR  HD1', -0.861, (201.687, 187.153, 253.726)), (' A 896  ILE HD11', ' A 904  TYR  CE2', -0.851, (209.779, 209.788, 253.481)), (' A1017  GLU  HG3', ' C1019  ARG HH12', -0.85, (206.056, 196.573, 216.176)), (' A 140  PHE  CZ ', ' A 158  ARG  HD2', -0.85, (256.14, 176.886, 159.693)), (' A 765  ARG HH12', ' B 957  GLN  HG2', -0.85, (190.582, 212.66, 204.216)), (' C  16  VAL HG21', ' C 158  ARG HH12', -0.844, (147.474, 158.524, 157.612)), (' A1019  ARG HH12', ' B1017  GLU  HG3', -0.842, (195.962, 205.401, 215.869)), (' B 435  ALA  HB2', ' B 510  VAL HG13', -0.836, (212.231, 197.451, 153.896)), (' A 624  ILE  CD1', ' A 634  ARG HH21', -0.835, (224.569, 163.713, 194.929)), (' A 140  PHE  CE1', ' A 158  ARG  HD2', -0.83, (254.833, 175.765, 159.411)), (' B 435  ALA  CA ', ' B 510  VAL HG13', -0.824, (212.618, 198.369, 152.991)), (' A 559  PHE  O  ', ' A 577  ARG  NH2', -0.822, (186.887, 158.504, 182.207)), (' A1107  ARG  CD ', ' C 904  TYR  CE1', -0.82, (203.515, 186.72, 254.175)), (' C 900  MET  O  ', ' C 904  TYR  HD2', -0.82, (200.127, 182.052, 253.014)), (' B 140  PHE  CZ ', ' B 158  ARG  HD2', -0.814, (187.479, 258.692, 159.743)), (' A1017  GLU  CG ', ' C1019  ARG  NH1', -0.813, (204.934, 196.815, 216.501)), (' B 435  ALA  HB2', ' B 510  VAL  CG1', -0.804, (212.906, 197.151, 153.718)), (' B 742  ILE  O  ', ' B1000  ARG  NH1', -0.799, (182.893, 202.16, 187.984)), (' B 434  ILE  O  ', ' B 510  VAL  CG1', -0.789, (214.078, 198.47, 153.876)), (' A 331  ASN  ND2', ' A1403  NAG  O5 ', -0.785, (197.188, 153.009, 168.306)), (' C 900  MET  O  ', ' C 904  TYR  CD2', -0.785, (199.936, 183.229, 253.278)), (' A 896  ILE HD11', ' A 904  TYR  HE2', -0.778, (209.829, 210.183, 254.145)), (' C 896  ILE HD11', ' C 904  TYR  CE2', -0.772, (202.723, 182.184, 253.501)), (' A 900  MET  O  ', ' A 904  TYR  CD2', -0.768, (210.452, 207.075, 253.386)), (' A 900  MET  O  ', ' A 904  TYR  HD2', -0.765, (210.681, 207.482, 252.932)), (' C 273  ARG  HG3', ' C 273  ARG HH11', -0.764, (167.822, 179.476, 187.493)), (' A 904  TYR  HE1', ' B1107  ARG  HD3', -0.759, (205.6, 208.038, 255.291)), (' A1107  ARG HH11', ' C 904  TYR  HE1', -0.755, (202.833, 186.73, 255.474)), (' A1017  GLU  HG2', ' C1019  ARG  NH1', -0.751, (204.803, 196.682, 217.5)), (' A  57  PRO  HB3', ' A 273  ARG  NH1', -0.751, (229.758, 178.755, 188.951)), (' C 453  TYR  CE2', ' C 495  TYR  CZ ', -0.748, (202.368, 218.254, 147.44)), (' C 273  ARG  HG3', ' C 273  ARG  NH1', -0.747, (168.562, 179.499, 187.619)), (' C 971  GLY  HA3', ' C 995  ARG HH21', -0.746, (192.667, 192.209, 182.248)), (' A 454  ARG  HD3', ' A 457  ARG  HG3', -0.739, (168.692, 189.049, 156.323)), (' A 904  TYR  HE1', ' B1107  ARG  CD ', -0.738, (205.339, 208.13, 255.52)), (' A1017  GLU  HG3', ' C1019  ARG  NH1', -0.734, (205.812, 195.81, 216.693)), (' B 448  ASN HD21', ' B 451  TYR  HE2', -0.733, (219.356, 192.792, 141.26)), (' A 625  HIS  HB2', ' A 634  ARG  HD2', -0.731, (224.76, 168.138, 193.032)), (' A 295  PRO  HG2', ' A 636  TYR  CE1', -0.73, (226.191, 174.645, 201.723)), (' A1017  GLU  CG ', ' C1019  ARG HH12', -0.729, (205.101, 196.883, 216.189)), (' A 559  PHE  HB2', ' A 577  ARG HH21', -0.726, (188.916, 159.591, 183.061)), (' A1019  ARG  NH1', ' B1017  GLU  CG ', -0.726, (195.798, 204.633, 216.592)), (' B 904  TYR  OH ', ' C1094  VAL  HB ', -0.724, (183.314, 199.452, 256.792)), (' B 347  PHE  CZ ', ' B 509  ARG  HD3', -0.724, (219.625, 199.749, 148.824)), (' B 347  PHE  CD1', ' B 509  ARG  HD3', -0.722, (220.82, 199.055, 147.551)), (' B 896  ILE HD11', ' B 904  TYR  CE2', -0.722, (182.526, 201.834, 253.707)), (' B 282  ASN  OD1', ' S   1  NAG  C7 ', -0.721, (171.312, 232.56, 195.823)), (' B 435  ALA  HA ', ' B 510  VAL HG13', -0.713, (213.252, 198.776, 153.009)), (' A1107  ARG  NH1', ' C 904  TYR  CE1', -0.712, (201.593, 186.954, 255.45)), (' A 765  ARG HH12', ' B 957  GLN  CG ', -0.709, (190.262, 213.517, 204.029)), (' A 904  TYR  CD1', ' B1107  ARG  CD ', -0.707, (204.941, 207.285, 253.62)), (' B 905  ARG  NH1', ' B1049  LEU  O  ', -0.706, (186.879, 206.189, 244.253)), (' B 904  TYR  CE1', ' C1107  ARG  CD ', -0.701, (186.224, 198.954, 254.906)), (' B 905  ARG  NH1', ' B1050  MET  CB ', -0.699, (186.436, 207.006, 244.03)), (' C 140  PHE  CE1', ' C 158  ARG  HD2', -0.697, (150.247, 159.562, 159.249)), (' B 904  TYR  CD1', ' C1107  ARG  NH1', -0.692, (187.212, 200.596, 255.157)), (' B 347  PHE  CZ ', ' B 509  ARG  HG2', -0.692, (218.991, 198.991, 149.881)), (' A 624  ILE  HA ', ' A 634  ARG HH22', -0.689, (222.789, 165.047, 195.204)), (' A 765  ARG  NH1', ' B 957  GLN  CD ', -0.688, (191.448, 214.191, 204.195)), (' C 453  TYR  HE2', ' C 495  TYR  CE1', -0.686, (203.645, 218.413, 147.191)), (' A 904  TYR  HE1', ' B1107  ARG  CG ', -0.68, (204.803, 208.47, 255.109)), (' C 905  ARG  NH1', ' C1049  LEU  O  ', -0.677, (196.653, 184.479, 244.257)), (' C 634  ARG  HD3', ' C 634  ARG  O  ', -0.674, (157.423, 189.075, 196.652)), (' A 457  ARG  HD2', ' A 467  ASP  OD2', -0.674, (170.27, 186.471, 157.585)), (' B 149  ASN HD22', ' B1402  NAG  C1 ', -0.67, (166.653, 259.996, 158.836)), (' B 904  TYR  HE1', ' C1107  ARG  HD3', -0.666, (185.841, 199.456, 255.466)), (' A 905  ARG  NH1', ' A1049  LEU  O  ', -0.665, (210.288, 203.646, 244.284)), (' B 295  PRO  HG2', ' B 636  TYR  CE1', -0.663, (204.462, 233.531, 201.837)), (' B 347  PHE  CZ ', ' B 509  ARG  CG ', -0.662, (219.544, 198.648, 148.984)), (' C 453  TYR  CD2', ' C 495  TYR  CZ ', -0.66, (201.746, 219.115, 147.778)), (' B 448  ASN  ND2', ' B 451  TYR  CE2', -0.655, (218.957, 192.591, 141.428)), (' A 869  MET  HE1', ' B 669  GLY  HA2', -0.652, (212.409, 222.301, 220.692)), (' A1019  ARG HH22', ' B1017  GLU  HB2', -0.651, (195.592, 203.04, 215.473)), (' C  57  PRO  HG3', ' C 273  ARG  NH1', -0.647, (166.662, 179.82, 187.252)), (' B 273  ARG  NH2', ' B 290  ASP  OD2', -0.646, (197.286, 233.682, 190.383)), (' A1017  GLU  HG2', ' C1019  ARG  CZ ', -0.646, (204.41, 196.188, 217.008)), (' B 904  TYR  HD1', ' C1107  ARG  HD3', -0.645, (187.01, 200.044, 253.893)), (' A1107  ARG  CG ', ' C 904  TYR  HE1', -0.644, (203.33, 186.377, 255.185)), (' A 391  CYS  HA ', ' A 525  CYS  HB3', -0.638, (195.655, 169.707, 168.694)), (' C 173  GLN  HB3', ' C 174  PRO  HD2', -0.638, (172.064, 151.956, 166.776)), (' C1010  GLN  O  ', ' C1014  ARG  HG3', -0.63, (195.82, 190.618, 208.849)), (' A1107  ARG  CD ', ' C 904  TYR  HE1', -0.63, (203.134, 186.563, 255.327)), (' A 765  ARG  NH1', ' B 957  GLN  CG ', -0.627, (191.122, 214.03, 203.986)), (' A 403  ARG  HD2', ' A 406  GLU  HG3', -0.625, (183.189, 194.817, 150.182)), (' A 361  CYS  O  ', ' A 524  VAL HG23', -0.625, (193.64, 165.583, 163.145)), (' A 742  ILE  O  ', ' A1000  ARG  NH1', -0.624, (209.202, 208.818, 188.134)), (' B1016  ALA  HA ', ' B1019  ARG  NH1', -0.623, (192.0, 197.491, 215.897)), (' B  99  ASN  OD1', ' B 190  ARG  NH2', -0.621, (177.265, 249.476, 176.179)), (' C 815  ARG  NH1', ' C 823  PHE  CG ', -0.617, (198.355, 170.225, 223.183)), (' C 453  TYR  CE2', ' C 495  TYR  CE1', -0.617, (202.818, 218.726, 147.441)), (' A 765  ARG  NH1', ' B 957  GLN  HG2', -0.617, (191.252, 213.256, 204.123)), (' A 625  HIS  HB2', ' A 634  ARG  CD ', -0.616, (225.099, 167.966, 192.818)), (' B 896  ILE HD11', ' B 904  TYR  HE2', -0.615, (182.097, 202.542, 254.682)), (' B 391  CYS  HA ', ' B 525  CYS  HB3', -0.612, (223.647, 210.547, 168.258)), (' A 577  ARG  HE ', ' A 584  ILE HD11', -0.612, (190.693, 159.019, 182.343)), (' C 905  ARG  NH1', ' C1050  MET  CB ', -0.611, (196.199, 183.482, 243.916)), (' B 904  TYR  OH ', ' C1094  VAL  CG2', -0.611, (182.41, 200.037, 256.909)), (' C 346  ARG  HD2', ' C 346  ARG  O  ', -0.603, (186.66, 222.946, 145.525)), (' C 896  ILE HD11', ' C 904  TYR  HE2', -0.6, (202.271, 182.157, 254.536)), (' C 453  TYR  CE2', ' C 495  TYR  OH ', -0.599, (202.591, 217.749, 148.425)), (' B 448  ASN  ND2', ' B 451  TYR  HE2', -0.597, (219.267, 192.367, 140.756)), (' A 905  ARG  NH1', ' A1050  MET  CB ', -0.594, (211.551, 203.9, 243.86)), (' C 403  ARG HH21', ' C 406  GLU  CD ', -0.593, (203.568, 214.131, 150.692)), (' B 347  PHE  CZ ', ' B 509  ARG  CD ', -0.591, (219.408, 199.005, 148.292)), (' B 173  GLN  HB3', ' B 174  PRO  HD2', -0.59, (170.879, 242.975, 166.966)), (' B 361  CYS  O  ', ' B 524  VAL HG23', -0.585, (228.144, 210.607, 163.036)), (' C 346  ARG  C  ', ' C 346  ARG  HD2', -0.581, (187.074, 222.14, 145.371)), (' C  16  VAL HG23', ' C 158  ARG HH11', -0.58, (149.344, 160.069, 157.562)), (' B 357  ARG  C  ', ' B 357  ARG  HD2', -0.578, (230.635, 202.602, 160.913)), (' C 619  GLU  O  ', ' C 622  VAL  N  ', -0.577, (157.15, 198.65, 196.663)), (' B 347  PHE  CG ', ' B 509  ARG  HG3', -0.574, (219.731, 197.088, 148.203)), (' A 353  TRP  HH2', ' A 355  ARG HH21', -0.574, (178.829, 178.424, 161.297)), (' A1107  ARG  CG ', ' C 904  TYR  CE1', -0.574, (203.911, 186.544, 254.653)), (' A 580  GLN  O  ', ' A1403  NAG  H82', -0.57, (197.673, 153.281, 173.997)), (' B 904  TYR  OH ', ' C1094  VAL  CB ', -0.57, (182.853, 199.299, 257.424)), (' A 765  ARG HH11', ' B 957  GLN  NE2', -0.569, (192.058, 215.139, 204.435)), (' C 971  GLY  HA3', ' C 995  ARG  NH2', -0.568, (192.602, 192.205, 181.743)), (' B 401  VAL  CG2', ' B 451  TYR  CE1', -0.568, (219.194, 192.446, 146.596)), (' A 896  ILE  CD1', ' A 904  TYR  CE2', -0.567, (209.1, 210.001, 253.299)), (' C  57  PRO  CB ', ' C 273  ARG HH12', -0.565, (165.877, 178.427, 188.356)), (' B 457  ARG  NH1', ' B 467  ASP  HB2', -0.564, (223.602, 179.955, 158.41)), (' B 900  MET  O  ', ' B 904  TYR  HD2', -0.561, (183.321, 204.139, 253.159)), (' A 669  GLY  CA ', ' C 869  MET  HE1', -0.56, (210.973, 172.613, 220.646)), (' C  34  ARG  NH2', ' C 217  PRO  HG2', -0.557, (163.471, 161.992, 189.551)), (' A 904  TYR  CE1', ' B1107  ARG  CG ', -0.556, (205.452, 208.67, 254.901)), (' C 175  PHE  CE1', ' C 177  MET  HE1', -0.555, (172.311, 156.92, 174.423)), (' B 904  TYR  HE1', ' C1107  ARG  CD ', -0.554, (185.979, 198.756, 255.154)), (' C 954  GLN  HB3', ' C1014  ARG  NH1', -0.553, (191.959, 186.469, 209.922)), (' B 634  ARG  HD3', ' B 634  ARG  O  ', -0.552, (210.245, 237.436, 196.984)), (' B 319  ARG  HG3', ' B 630  THR  OG1', -0.549, (210.311, 223.785, 191.169)), (' A 904  TYR  CE1', ' B1107  ARG  HG2', -0.548, (205.624, 209.013, 254.877)), (' A 382  VAL HG12', ' C 983  ARG  HB3', -0.547, (197.537, 179.537, 171.468)), (' A 559  PHE  CB ', ' A 577  ARG HH21', -0.545, (188.066, 160.082, 183.083)), (' A 421  TYR  HD2', ' A 457  ARG  HB2', -0.543, (170.01, 191.231, 157.671)), (' B 901  GLN  O  ', ' B 905  ARG  HG2', -0.543, (185.12, 205.267, 249.723)), (' C  34  ARG HH21', ' C 217  PRO  HG2', -0.54, (163.224, 162.382, 189.901)), (' A1094  VAL  CG2', ' C 904  TYR  OH ', -0.538, (203.83, 183.131, 256.92)), (' C 403  ARG  HD3', ' C 495  TYR  CE1', -0.537, (202.15, 216.004, 146.318)), (' C 901  GLN  O  ', ' C 905  ARG  HG2', -0.533, (198.12, 183.108, 249.693)), (' B 346  ARG  NH2', ' B 451  TYR  CD2', -0.533, (220.007, 191.054, 141.927)), (' R   1  NAG  H61', ' R   2  NAG  C7 ', -0.531, (206.842, 236.447, 166.804)), (' B1016  ALA  HA ', ' B1019  ARG  CZ ', -0.526, (193.306, 196.977, 216.124)), (' A 901  GLN  O  ', ' A 905  ARG  HG2', -0.526, (210.603, 205.465, 249.704)), (' R   1  NAG  H61', ' R   2  NAG  H82', -0.525, (206.036, 237.4, 167.016)), (' A1107  ARG  CD ', ' C 904  TYR  CD1', -0.524, (202.278, 187.537, 254.197)), (' A 454  ARG  CD ', ' A 457  ARG  HG3', -0.521, (169.667, 188.96, 155.953)), (' A 403  ARG  CD ', ' A 406  GLU  HG3', -0.52, (183.619, 194.574, 150.066)), (' B 815  ARG  NH1', ' B 823  PHE  CG ', -0.519, (174.257, 211.932, 223.343)), (' j   1  NAG  O4 ', ' j   2  NAG  O7 ', -0.516, (175.778, 215.167, 275.419)), (' A 669  GLY  HA2', ' C 869  MET  HE1', -0.516, (211.536, 173.449, 220.675)), (' A 636  TYR  HB3', ' A 651  ILE HG22', -0.512, (224.747, 169.289, 203.981)), (' A1019  ARG  CZ ', ' B1017  GLU  HG2', -0.511, (196.429, 204.037, 217.343)), (' A 904  TYR  HE1', ' B1107  ARG  HG2', -0.51, (205.089, 209.016, 255.379)), (' B 900  MET  O  ', ' B 904  TYR  CD2', -0.51, (184.052, 203.771, 253.43)), (' B 319  ARG  HG3', ' B 630  THR  HG1', -0.506, (210.741, 224.277, 190.914)), (' A 904  TYR  HE1', ' B1107  ARG HH11', -0.506, (205.553, 207.751, 255.687)), (' C 618  THR  O  ', ' C 618  THR HG22', -0.505, (155.628, 202.037, 200.766)), (' A1019  ARG  CZ ', ' B1017  GLU  CG ', -0.504, (196.403, 204.441, 216.971)), (' A 971  GLY  HA3', ' A 995  ARG HH21', -0.504, (205.877, 196.39, 182.28)), (' B 282  ASN  OD1', ' S   1  NAG  O7 ', -0.503, (171.571, 232.676, 195.638)), (' B 457  ARG HH12', ' B 467  ASP  HB2', -0.502, (224.034, 179.786, 158.467)), (' B 149  ASN  ND2', ' B1402  NAG  C2 ', -0.502, (167.138, 260.688, 157.826)), (' B 347  PHE  CE1', ' B 509  ARG  CD ', -0.5, (219.529, 198.773, 148.198)), (' B 435  ALA  HB2', ' B 510  VAL HG11', -0.498, (212.787, 197.103, 154.704)), (' C 281  GLU  HG3', ' d   1  NAG  H82', -0.497, (182.855, 160.153, 197.517)), (' B 996  LEU  O  ', ' B1000  ARG  HG3', -0.493, (187.873, 202.96, 188.7)), (' B 319  ARG  CG ', ' B 630  THR  OG1', -0.491, (210.093, 223.648, 191.163)), (' A1094  VAL  HB ', ' C 904  TYR  OH ', -0.49, (204.148, 184.167, 256.998)), (' B 904  TYR  HE1', ' C1107  ARG  HG2', -0.488, (185.735, 198.621, 255.894)), (' A 865  LEU  HA ', ' A 869  MET  HE3', -0.486, (212.524, 219.376, 221.678)), (' A 625  HIS  CB ', ' A 634  ARG  CD ', -0.486, (225.318, 167.41, 192.286)), (' C 866  THR  H  ', ' C 869  MET  HE3', -0.485, (209.021, 173.266, 221.399)), (' C 617  CYS  C  ', ' C 619  GLU  H  ', -0.484, (158.688, 200.517, 201.648)), (' C 616  ASN  ND2', ' e   1  NAG  O5 ', -0.484, (158.384, 206.534, 205.022)), (' C 102  ARG HH11', ' C 246  ARG  HD3', -0.482, (158.946, 153.997, 168.307)), (' A1017  GLU  HB2', ' C1019  ARG HH22', -0.482, (203.727, 197.652, 215.517)), (' B 282  ASN  CG ', ' S   1  NAG  C1 ', -0.479, (170.162, 231.801, 194.635)), (' A 140  PHE  CE1', ' A 158  ARG  CD ', -0.478, (254.749, 176.159, 159.067)), (' C 815  ARG  NH1', ' C 823  PHE  CD1', -0.478, (198.31, 170.507, 223.835)), (' A1050  MET  HE2', ' A1052  PHE  CE1', -0.478, (214.821, 206.871, 242.158)), (' B  34  ARG  NH2', ' B 217  PRO  HG2', -0.476, (184.225, 245.451, 189.75)), (' A 140  PHE  HZ ', ' A 158  ARG  NH1', -0.475, (256.805, 175.815, 159.16)), (' A 869  MET  HE1', ' B 669  GLY  CA ', -0.474, (212.582, 222.171, 220.516)), (' A 142  GLY  HA2', ' A 247  SER  H  ', -0.474, (257.447, 181.478, 165.733)), (' C  16  VAL HG23', ' C 158  ARG  NH1', -0.474, (149.2, 160.078, 157.222)), (' C 449  TYR  CE1', ' C 496  GLY  HA3', -0.47, (201.12, 219.359, 137.885)), (' B 815  ARG  NH1', ' B 823  PHE  CD1', -0.468, (174.081, 211.407, 223.932)), (' C  57  PRO  CA ', ' C 273  ARG HH12', -0.464, (166.276, 178.097, 188.341)), (' B 904  TYR  HE1', ' C1107  ARG  CG ', -0.461, (185.803, 198.6, 255.393)), (' B 896  ILE  CD1', ' B 904  TYR  CE2', -0.461, (182.064, 201.551, 253.618)), (' B 401  VAL HG12', ' B 509  ARG  HA ', -0.46, (216.714, 195.364, 148.077)), (' C 624  ILE HD12', ' C 634  ARG  NH1', -0.459, (154.704, 191.204, 194.911)), (' A 517  LEU HD13', ' C 983  ARG  HD2', -0.458, (195.123, 177.79, 172.408)), (' B 883  THR HG23', ' C 707  TYR  HB2', -0.457, (172.161, 202.908, 247.302)), (' B 577  ARG  HB2', ' B 584  ILE HD13', -0.455, (234.445, 212.251, 182.187)), (' B 282  ASN  OD1', ' S   1  NAG  C1 ', -0.455, (170.558, 232.239, 195.378)), (' A 765  ARG HH11', ' B 957  GLN  CD ', -0.454, (192.12, 214.162, 204.585)), (' C 273  ARG  CG ', ' C 273  ARG HH11', -0.454, (168.199, 180.269, 186.88)), (' B1050  MET  HE2', ' B1052  PHE  CE1', -0.453, (181.406, 208.117, 242.113)), (' B 836  GLN  HB2', ' B 836  GLN HE21', -0.453, (161.316, 207.273, 203.392)), (' C  57  PRO  HA ', ' C 273  ARG HH12', -0.453, (166.533, 178.004, 188.591)), (' B 983  ARG  HB3', ' C 382  VAL HG12', -0.452, (182.215, 208.184, 171.324)), (' A 392  PHE  CD1', ' A 517  LEU HD21', -0.45, (193.823, 174.369, 168.937)), (' B 904  TYR  CE1', ' C1107  ARG  NH1', -0.449, (186.842, 200.294, 255.485)), (' A 273  ARG  NH2', ' A 632  THR HG21', -0.448, (227.542, 176.079, 189.754)), (' A 559  PHE  HB2', ' A 577  ARG  NH2', -0.448, (188.083, 159.764, 182.643)), (' B 577  ARG  HB2', ' B 584  ILE  CD1', -0.447, (234.453, 211.756, 182.165)), (' B 466  ARG  HG3', ' B 466  ARG  O  ', -0.446, (226.924, 184.536, 158.491)), (' A 996  LEU  O  ', ' A1000  ARG  HG3', -0.446, (207.219, 204.323, 188.897)), (' A 403  ARG  HD2', ' A 406  GLU  CG ', -0.445, (182.729, 194.442, 150.981)), (' A 761  THR  O  ', ' A 765  ARG  HG3', -0.444, (197.16, 213.653, 201.894)), (' C 617  CYS  C  ', ' C 619  GLU  N  ', -0.442, (158.332, 200.648, 201.75)), (' C 173  GLN  HB3', ' C 174  PRO  CD ', -0.441, (171.978, 152.201, 166.787)), (' B 636  TYR  HB3', ' B 651  ILE HG22', -0.438, (209.381, 235.505, 203.902)), (' C 736  VAL HG13', ' C 858  LEU HD23', -0.437, (202.69, 181.858, 199.03)), (' B 524  VAL  O  ', ' B 524  VAL HG13', -0.435, (225.99, 208.31, 166.075)), (' C 179  LEU  HG ', ' C 180  GLU  H  ', -0.433, (169.614, 149.723, 183.695)), (' A 561  PRO  HA ', ' A 577  ARG HH12', -0.433, (186.277, 158.904, 179.364)), (' A 295  PRO  HG2', ' A 636  TYR  HE1', -0.433, (226.375, 174.829, 201.731)), (' C 216  LEU  C  ', ' C 216  LEU HD23', -0.433, (159.948, 164.703, 189.803)), (' B 983  ARG  O  ', ' C 382  VAL  HA ', -0.433, (183.495, 206.573, 170.795)), (' A1107  ARG  HG2', ' C 904  TYR  CE1', -0.433, (204.092, 186.302, 254.901)), (' B 883  THR HG21', ' C 705  VAL  HB ', -0.432, (171.793, 200.783, 245.444)), (' B  52  GLN  HG2', ' B 273  ARG  O  ', -0.432, (196.075, 225.932, 186.237)), (' A 559  PHE  CB ', ' A 577  ARG  NH2', -0.431, (187.971, 159.819, 182.67)), (' C 636  TYR  HB3', ' C 651  ILE HG22', -0.431, (159.915, 189.234, 204.261)), (' C 295  PRO  HG2', ' C 636  TYR  CE1', -0.431, (163.618, 185.071, 202.265)), (' A 403  ARG  HD2', ' A 406  GLU  OE1', -0.43, (182.143, 194.199, 150.184)), (' C  83  VAL HG11', ' C 237  ARG  NH2', -0.43, (155.312, 176.043, 166.312)), (' B1016  ALA  CB ', ' B1019  ARG HH22', -0.43, (194.369, 196.947, 215.286)), (' C 991  VAL  O  ', ' C 995  ARG  HG3', -0.429, (198.549, 191.011, 180.224)), (' C 468  ILE HG23', ' Q   1  NAG  H82', -0.424, (195.165, 232.168, 151.34)), (' B 636  TYR  HB3', ' B 651  ILE  CG2', -0.423, (209.823, 235.354, 204.067)), (' A  34  ARG HH11', ' A 221  SER  HB3', -0.423, (242.987, 189.385, 188.806)), (' B 346  ARG  CZ ', ' B 451  TYR  CE2', -0.42, (221.169, 192.525, 141.928)), (' A 403  ARG  HD2', ' A 406  GLU  CD ', -0.42, (182.176, 194.41, 150.9)), (' A 567  ARG  HD3', ' A 571  ASP  OD1', -0.42, (190.875, 175.176, 186.282)), (' A  81  ASN HD21', ' A 245  HIS  CD2', -0.418, (250.635, 177.02, 171.378)), (' B 434  ILE  O  ', ' B 510  VAL HG13', -0.417, (213.623, 198.542, 154.099)), (' B 319  ARG  HG3', ' B 319  ARG  O  ', -0.417, (211.54, 224.178, 191.238)), (' B 457  ARG  NH1', ' B 467  ASP  CB ', -0.415, (223.825, 179.667, 158.195)), (' B 326  ILE HD11', ' B 534  VAL HG12', -0.414, (225.854, 225.975, 181.518)), (' B1016  ALA  HA ', ' B1019  ARG HH12', -0.414, (192.317, 197.232, 215.381)), (' A 904  TYR  OH ', ' B1094  VAL  CG2', -0.413, (207.891, 210.486, 257.438)), (' B 448  ASN  ND2', ' B 451  TYR  CD2', -0.413, (219.088, 191.43, 141.48)), (' B1050  MET  HE2', ' B1052  PHE  CZ ', -0.412, (181.896, 208.474, 242.62)), (' A 736  VAL HG13', ' A 858  LEU HD23', -0.411, (210.237, 210.129, 198.847)), (' B  34  ARG HH21', ' B 217  PRO  HG2', -0.411, (184.525, 245.783, 190.375)), (' A 403  ARG  CG ', ' A 406  GLU  HG3', -0.41, (183.694, 193.852, 150.268)), (' B1016  ALA  HA ', ' B1019  ARG  NH2', -0.41, (193.551, 197.065, 216.128)), (' B 357  ARG  HD2', ' B 358  ILE  N  ', -0.409, (229.84, 202.709, 161.502)), (' C 896  ILE  CD1', ' C 904  TYR  CE2', -0.408, (202.919, 182.354, 253.509)), (' A 524  VAL  O  ', ' A 524  VAL HG13', -0.408, (192.606, 168.693, 165.845)), (' A1107  ARG  NH1', ' C 904  TYR  CD1', -0.406, (201.452, 186.682, 255.082)), (' A 173  GLN  HB3', ' A 174  PRO  HD2', -0.406, (250.491, 199.447, 167.005)), (' A 983  ARG  O  ', ' B 382  VAL  HA ', -0.406, (212.77, 206.813, 170.995)), (' R   1  NAG  H61', ' R   2  NAG  C8 ', -0.405, (206.29, 237.328, 167.013)), (' A 457  ARG HH22', ' c   1  NAG  C7 ', -0.404, (168.153, 186.452, 163.334)), (' A  34  ARG HH21', ' A 217  PRO  HG2', -0.404, (246.254, 186.58, 190.459)), (' C 971  GLY  C  ', ' C 995  ARG  HE ', -0.404, (194.071, 190.417, 181.65)), (' C 452  LEU  CD2', ' C 494  SER  HB3', -0.404, (200.893, 224.65, 143.611)), (' A 179  LEU  HG ', ' A 180  GLU  H  ', -0.403, (254.19, 197.325, 183.771)), (' B 173  GLN  HB3', ' B 174  PRO  CD ', -0.403, (171.156, 243.427, 167.051)), (' B 983  ARG  HG2', ' C 390  LEU HD13', -0.403, (179.159, 209.076, 172.584)), (' A 904  TYR  OH ', ' B1094  VAL  HB ', -0.402, (206.991, 209.885, 257.065)), (' A 190  ARG  HG2', ' A 207  HIS  CD2', -0.401, (248.302, 191.109, 179.474)), (' C  16  VAL HG23', ' C 158  ARG  HD3', -0.401, (149.744, 160.533, 157.502)), (' C 357  ARG  HB2', ' C 396  TYR  CE1', -0.401, (181.436, 225.765, 162.252)), (' A  34  ARG  NH1', ' A 221  SER  HB3', -0.401, (242.981, 189.902, 188.926)), (' A 295  PRO  CG ', ' A 636  TYR  HE1', -0.4, (226.113, 175.169, 201.611))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

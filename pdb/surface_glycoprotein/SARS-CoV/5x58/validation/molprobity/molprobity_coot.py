# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('A', ' 317 ', 'PRO', None, (29.942, 23.554, 27.833)), ('A', ' 470 ', 'PRO', None, (-18.364, 38.918, 54.54000000000001)), ('A', ' 513 ', 'PRO', None, (28.117, 15.712, 32.823)), ('A', ' 617 ', 'PRO', None, (29.813999999999997, -3.913, 5.109)), ('A', ' 625 ', 'GLY', None, (41.198, -4.096000000000002, -3.307)), ('A', ' 742 ', 'CYS', None, (-9.998, -8.782, 3.8690000000000007)), ('B', ' 317 ', 'PRO', None, (-35.37, 14.158000000000003, 27.833)), ('B', ' 470 ', 'PRO', None, (-24.523, -35.358, 54.542)), ('B', ' 513 ', 'PRO', None, (-27.665, 16.497999999999994, 32.823)), ('B', ' 617 ', 'PRO', None, (-11.517, 27.78, 5.109)), ('B', ' 625 ', 'GLY', None, (-17.049999999999994, 37.73, -3.3080000000000003)), ('B', ' 742 ', 'CYS', None, (12.604, -4.265, 3.871000000000001)), ('C', ' 317 ', 'PRO', None, (5.422999999999998, -37.705, 27.833)), ('C', ' 470 ', 'PRO', None, (42.882, -3.554, 54.541)), ('C', ' 513 ', 'PRO', None, (-0.456, -32.203, 32.823)), ('C', ' 617 ', 'PRO', None, (-18.299, -23.86, 5.1080000000000005)), ('C', ' 625 ', 'GLY', None, (-24.15, -33.62700000000002, -3.3080000000000003)), ('C', ' 742 ', 'CYS', None, (-2.608, 13.051, 3.868))]
data['rota'] = [('A', ' 305 ', 'PHE', 0.23130453649012553, (28.291, 0.769, 4.181)), ('A', ' 515 ', 'LEU', 0.07035968707081973, (34.976, 15.097, 28.724000000000007)), ('A', ' 681 ', 'LEU', 0.2641468947230503, (27.519999999999992, 1.243, -29.740000000000006)), ('A', ' 920 ', 'LEU', 0.15301510867032675, (16.819, -22.051, -29.098)), ('B', ' 305 ', 'PHE', 0.23329745076143502, (-14.81, 24.12, 4.182)), ('B', ' 515 ', 'LEU', 0.07098655920483139, (-30.563, 22.746, 28.724000000000007)), ('B', ' 681 ', 'LEU', 0.2659159665259858, (-14.834999999999999, 23.214000000000006, -29.739)), ('B', ' 920 ', 'LEU', 0.15223345091281504, (10.687999999999999, 25.59400000000001, -29.097)), ('C', ' 305 ', 'PHE', 0.23013784127070722, (-13.483, -24.882, 4.181)), ('C', ' 515 ', 'LEU', 0.07036923219552606, (-4.418, -37.836, 28.724000000000007)), ('C', ' 681 ', 'LEU', 0.2668022652528137, (-12.684999999999997, -24.452, -29.740000000000006)), ('C', ' 920 ', 'LEU', 0.15271980412463534, (-27.508000000000006, -3.538, -29.099000000000007))]
data['cbeta'] = []
data['probe'] = [(' A 953  GLY  HA3', ' A 977  ARG HH11', -0.659, (6.105, -5.107, 16.515)), (' C 953  GLY  HA3', ' C 977  ARG HH11', -0.655, (-7.979, -2.919, 16.279)), (' B 891  ILE HD12', ' B1029  TYR  HB3', -0.651, (1.337, 11.281, -47.553)), (' C 891  ILE HD12', ' C1029  TYR  HB3', -0.645, (-10.475, -4.954, -47.315)), (' A 891  ILE HD12', ' A1029  TYR  HB3', -0.632, (9.089, -6.827, -47.536)), (' B 953  GLY  HA3', ' B 977  ARG HH11', -0.631, (1.222, 7.94, 16.429)), (' A 831  LEU  HB3', ' C 632  GLN HE22', -0.626, (-3.412, -31.776, -12.374)), (' A 632  GLN HE22', ' B 831  LEU  HB3', -0.612, (29.003, 13.608, -12.15)), (' B 385  ASP  HB2', ' B 498  VAL  HB ', -0.603, (-23.528, -4.326, 38.117)), (' B 632  GLN HE22', ' C 831  LEU  HB3', -0.599, (-26.307, 18.394, -12.2)), (' C 385  ASP  HB2', ' C 498  VAL  HB ', -0.595, (16.23, -18.008, 38.2)), (' A 385  ASP  HB2', ' A 498  VAL  HB ', -0.593, (7.817, 22.553, 38.039)), (' B  38  ARG  NH1', ' B 184  GLU  OE2', -0.59, (9.626, 47.924, 9.47)), (' A 349  VAL HG13', ' A 511  CYS  HB3', -0.589, (27.646, 19.33, 32.35)), (' A  38  ARG  NH1', ' A 184  GLU  OE2', -0.586, (36.635, -32.204, 9.47)), (' C 317  PRO  HG2', ' C 511  CYS  HB2', -0.582, (3.949, -34.866, 30.189)), (' B 349  VAL HG13', ' B 511  CYS  HB3', -0.579, (-30.518, 14.362, 32.35)), (' C  38  ARG  NH1', ' C 184  GLU  OE2', -0.577, (-46.636, -15.699, 9.961)), (' C 349  VAL HG13', ' C 511  CYS  HB3', -0.576, (2.505, -33.507, 32.851)), (' A 317  PRO  HG2', ' A 511  CYS  HB2', -0.576, (28.071, 20.954, 30.102)), (' B 317  PRO  HG2', ' B 511  CYS  HB2', -0.572, (-32.634, 13.843, 30.029)), (' C  62  PHE  HD2', ' C 277  ASP  HB2', -0.568, (-32.476, -18.11, 5.023)), (' B  62  PHE  HD2', ' B 277  ASP  HB2', -0.567, (0.888, 37.559, 4.878)), (' C 421  LEU HD13', ' C 499  LEU HD13', -0.563, (8.845, -19.358, 38.609)), (' A  62  PHE  HD2', ' A 277  ASP  HB2', -0.562, (32.205, -19.492, 5.041)), (' C 599  GLN  HG3', ' C 606  VAL HG11', -0.562, (-16.508, -30.402, -3.147)), (' C 380  SER  HA ', ' C 508  ALA  HA ', -0.558, (11.201, -31.541, 26.433)), (' B 340  TRP  O  ', ' B 453  ARG  NH1', -0.557, (-29.037, -10.571, 40.485)), (' B 421  LEU HD13', ' B 499  LEU HD13', -0.556, (-20.692, 2.256, 38.574)), (' A 599  GLN  HG3', ' A 606  VAL HG11', -0.555, (34.893, 1.243, -2.987)), (' A 409  ASN HD21', ' A 441  ARG  HB2', -0.552, (-5.842, 28.153, 42.497)), (' A 380  SER  HA ', ' A 508  ALA  HA ', -0.552, (21.204, 25.354, 26.393)), (' B 599  GLN  HG3', ' B 606  VAL HG11', -0.551, (-18.575, 29.518, -2.982)), (' C 314  VAL  HA ', ' C 516  SER  HB2', -0.549, (-0.937, -38.366, 23.367)), (' B 380  SER  HA ', ' B 508  ALA  HA ', -0.548, (-32.738, 6.1, 26.287)), (' A 340  TRP  O  ', ' A 453  ARG  NH1', -0.548, (5.504, 30.273, 40.401)), (' B 314  VAL  HA ', ' B 516  SER  HB2', -0.545, (-32.561, 20.06, 23.462)), (' C 409  ASN HD21', ' C 441  ARG  HB2', -0.545, (27.745, -9.026, 42.662)), (' C 340  TRP  O  ', ' C 453  ARG  NH1', -0.545, (23.597, -20.001, 40.412)), (' A 421  LEU HD13', ' A 499  LEU HD13', -0.542, (12.217, 16.849, 38.53)), (' B 409  ASN HD21', ' B 441  ARG  HB2', -0.541, (-21.36, -19.137, 42.576)), (' C 936  GLN  HG2', ' C 996  ARG  HE ', -0.54, (-11.675, -1.37, -10.94)), (' A 314  VAL  HA ', ' A 516  SER  HB2', -0.539, (33.561, 18.308, 23.456)), (' A 282  PRO  HG2', ' A 597  LEU HD11', -0.539, (33.817, -8.166, -3.585)), (' A 285  GLU  HB2', ' A 619  TRP  HE1', -0.538, (29.586, -10.554, 0.218)), (' B 766  GLN  NE2', ' B1012  SER  OG ', -0.536, (12.397, 0.169, -34.202)), (' B 282  PRO  HG2', ' B 597  LEU HD11', -0.533, (-9.895, 32.979, -3.559)), (' A 766  GLN  NE2', ' A1012  SER  OG ', -0.533, (-6.061, -10.093, -34.164)), (' C 282  PRO  HG2', ' C 597  LEU HD11', -0.532, (-23.871, -25.024, -3.715)), (' A 936  GLN  HG2', ' A 996  ARG  HE ', -0.532, (6.983, -9.489, -10.933)), (' B 936  GLN  HG2', ' B 996  ARG  HE ', -0.531, (4.6, 11.318, -10.85)), (' C 766  GLN  NE2', ' C1012  SER  OG ', -0.529, (-6.256, 10.687, -34.135)), (' B 285  GLU  HB2', ' B 619  TRP  HE1', -0.528, (-5.639, 30.926, 0.24)), (' A 798  SER  OG ', ' A 799  PHE  N  ', -0.528, (6.579, -28.765, -33.693)), (' A 329  PHE  HZ ', ' A 499  LEU HD11', -0.526, (14.118, 18.309, 40.104)), (' B 329  PHE  HZ ', ' B 499  LEU HD11', -0.526, (-23.069, 3.471, 40.406)), (' A 109  ASN  ND2', ' A1314  NAG  O3 ', -0.525, (43.695, -20.595, 46.909)), (' B 798  SER  OG ', ' B 799  PHE  N  ', -0.523, (21.575, 20.173, -33.788)), (' C 798  SER  OG ', ' C 799  PHE  N  ', -0.522, (-28.247, 8.307, -33.751)), (' C 329  PHE  HZ ', ' C 499  LEU HD11', -0.52, (8.765, -21.728, 40.015)), (' C 285  GLU  HB2', ' C 619  TRP  HE1', -0.519, (-23.949, -20.318, 0.291)), (' A 948  LEU HD13', ' C 558  PHE  HE2', -0.518, (2.183, -19.72, 6.487)), (' B 558  PHE  HE2', ' C 948  LEU HD13', -0.515, (-17.717, 7.801, 6.326)), (' A 965  ARG  HB2', ' C 369  VAL  HA ', -0.512, (3.361, -18.653, 26.751)), (' B 109  ASN  ND2', ' B1314  NAG  O3 ', -0.512, (-3.997, 48.127, 46.342)), (' A 558  PHE  HE2', ' B 948  LEU HD13', -0.511, (15.587, 11.485, 6.332)), (' C 353  SER  HA ', ' C 356  TYR  HB3', -0.509, (-1.105, -22.464, 39.176)), (' C 127  ALA  HB3', ' C 161  PHE  HB3', -0.509, (-38.519, -11.832, 36.598)), (' A 369  VAL  HA ', ' B 965  ARG  HB2', -0.508, (14.066, 12.158, 26.943)), (' A 186  VAL HG13', ' A 257  LEU HD11', -0.507, (31.307, -23.085, 17.95)), (' C 543  LYS  NZ ', ' C 560  ASP  OD2', -0.506, (7.673, -32.105, 5.547)), (' B 353  SER  HA ', ' B 356  TYR  HB3', -0.506, (-18.237, 12.33, 39.111)), (' B 543  LYS  NZ ', ' B 560  ASP  OD2', -0.506, (-31.977, 9.1, 5.504)), (' A 538  LEU HD12', ' A 571  LEU HD13', -0.505, (30.985, 19.651, 12.116)), (' A 543  LYS  NZ ', ' A 560  ASP  OD2', -0.504, (24.055, 22.676, 5.698)), (' C 186  VAL HG13', ' C 257  LEU HD11', -0.503, (-36.367, -15.659, 17.925)), (' A  39  GLY  HA3', ' A  60  LEU  HB3', -0.502, (33.753, -24.054, 11.583)), (' C  39  GLY  HA3', ' C  60  LEU  HB3', -0.502, (-37.164, -17.25, 11.588)), (' A 353  SER  HA ', ' A 356  TYR  HB3', -0.502, (19.691, 9.806, 39.111)), (' A 185  PHE  HE1', ' A 198  LYS  HG3', -0.502, (32.337, -34.96, 18.597)), (' B 127  ALA  HB3', ' B 161  PHE  HB3', -0.501, (9.53, 39.312, 36.733)), (' B 185  PHE  HE1', ' B 198  LYS  HG3', -0.501, (14.173, 45.619, 18.602)), (' C1000  ILE  O  ', ' C1004  ALA  N  ', -0.499, (-7.717, 4.209, -22.594)), (' A 312  ASP  O  ', ' A 528  ASN  N  ', -0.499, (29.808, 13.637, 19.118)), (' B 186  VAL HG13', ' B 257  LEU HD11', -0.499, (4.654, 39.257, 17.922)), (' B 312  ASP  O  ', ' B 528  ASN  N  ', -0.498, (-26.769, 19.01, 19.062)), (' A 127  ALA  HB3', ' A 161  PHE  HB3', -0.497, (29.464, -27.358, 36.685)), (' B  39  GLY  HA3', ' B  60  LEU  HB3', -0.497, (3.714, 40.666, 11.592)), (' C 185  PHE  HE1', ' C 198  LYS  HG3', -0.496, (-46.646, -10.499, 18.64)), (' B1000  ILE  O  ', ' B1004  ALA  N  ', -0.495, (7.449, 4.673, -22.592)), (' C 109  ASN  ND2', ' C1314  NAG  O3 ', -0.492, (-39.926, -27.552, 46.363)), (' B 369  VAL  HA ', ' C 965  ARG  HB2', -0.492, (-17.362, 6.288, 27.124)), (' C 788  LEU HD13', ' C 857  ALA  HB2', -0.491, (-23.896, 15.148, -33.816)), (' A1010  LYS  NZ ', ' A1024  PHE  O  ', -0.489, (6.371, -6.648, -34.06)), (' A 788  LEU HD13', ' A 857  ALA  HB2', -0.489, (-0.84, -28.434, -33.396)), (' C 538  LEU HD12', ' C 571  LEU HD13', -0.488, (1.63, -36.545, 12.291)), (' B1010  LYS  NZ ', ' B1024  PHE  O  ', -0.487, (2.624, 8.932, -34.049)), (' C1010  LYS  NZ ', ' C1024  PHE  O  ', -0.487, (-8.991, -1.86, -33.755)), (' B 788  LEU HD13', ' B 857  ALA  HB2', -0.487, (25.097, 13.118, -33.832)), (' B 538  LEU HD12', ' B 571  LEU HD13', -0.486, (-32.417, 16.832, 12.263)), (' B 100  GLY  HA3', ' B 234  ILE  HB ', -0.486, (7.755, 52.46, 28.931)), (' A 484  TYR  HB2', ' A 487  THR HG23', -0.486, (-3.285, 15.264, 60.119)), (' A 603  CYS  SG ', ' A 604  THR  N  ', -0.485, (38.227, 7.445, -4.734)), (' C 603  CYS  SG ', ' C 604  THR  N  ', -0.484, (-12.592, -36.941, -4.734)), (' B 484  TYR  HB2', ' B 487  THR HG23', -0.484, (-11.418, -10.8, 60.29)), (' A 100  GLY  HA3', ' A 234  ILE  HB ', -0.483, (41.268, -33.418, 28.739)), (' C 840  LEU HD11', ' C 944  LEU HD23', -0.482, (-13.781, 6.733, -1.84)), (' B 603  CYS  SG ', ' B 604  THR  N  ', -0.482, (-25.623, 29.262, -4.746)), (' C 724  ILE  O  ', ' C 982  ARG  NH1', -0.481, (-13.243, 8.448, 10.223)), (' C 312  ASP  O  ', ' C 528  ASN  N  ', -0.481, (-3.192, -32.544, 19.159)), (' C 100  GLY  HA3', ' C 234  ILE  HB ', -0.48, (-49.489, -19.501, 28.848)), (' C 345  ILE HD13', ' C 382  VAL HG23', -0.479, (12.026, -27.482, 35.907)), (' B 140  VAL HG22', ' B 147  GLN  HA ', -0.479, (15.141, 62.314, 31.146)), (' C 484  TYR  HB2', ' C 487  THR HG23', -0.478, (14.655, -4.398, 59.96)), (' C 313  VAL  HA ', ' C 528  ASN  HB3', -0.478, (-2.547, -33.019, 21.765)), (' B 313  VAL  HA ', ' B 528  ASN  HB3', -0.478, (-26.803, 18.649, 21.723)), (' A 313  VAL  HA ', ' A 528  ASN  HB3', -0.476, (29.948, 14.163, 21.585)), (' C 527  PHE  HB3', ' C 538  LEU HD21', -0.476, (-2.735, -33.976, 14.523)), (' B 345  ILE HD13', ' B 382  VAL HG23', -0.475, (-29.741, 3.132, 35.849)), (' B 891  ILE  HB ', ' B 893  VAL HG12', -0.475, (2.32, 11.238, -51.652)), (' C 140  VAL HG22', ' C 147  GLN  HA ', -0.475, (-61.473, -18.059, 31.202)), (' A 328  VAL HG22', ' A 343  LYS  HD3', -0.473, (17.014, 26.216, 42.908)), (' A 361  PHE  HA ', ' A 423  TRP  HB3', -0.472, (10.639, 12.101, 46.555)), (' C 328  VAL HG22', ' C 343  LYS  HD3', -0.472, (14.677, -27.687, 42.759)), (' B 527  PHE  HB3', ' B 538  LEU HD21', -0.472, (-28.011, 19.403, 14.466)), (' C 105  SER  HB2', ' C 111  SER  HB2', -0.472, (-34.399, -23.174, 36.766)), (' A  94  LYS  NZ ', ' A 249  ALA  O  ', -0.472, (50.029, -39.707, 15.441)), (' A 527  PHE  HB3', ' A 538  LEU HD21', -0.471, (30.963, 15.036, 14.222)), (' B 141  SER  HB3', ' B 144  MET  HB2', -0.471, (16.551, 69.444, 29.355)), (' A 724  ILE  O  ', ' A 982  ARG  NH1', -0.47, (-0.707, -15.714, 10.258)), (' A1000  ILE  O  ', ' A1004  ALA  N  ', -0.47, (0.404, -8.913, -22.578)), (' B 105  SER  HB2', ' B 111  SER  HB2', -0.469, (-3.145, 41.359, 36.426)), (' B 840  LEU HD11', ' B 944  LEU HD23', -0.469, (13.186, 8.418, -1.779)), (' B1059  THR  OG1', ' B1076  VAL  O  ', -0.469, (-14.278, 12.358, -60.886)), (' C 141  SER  HB3', ' C 144  MET  HB2', -0.468, (-68.508, -20.478, 29.368)), (' A 141  SER  HB3', ' A 144  MET  HB2', -0.468, (51.925, -49.031, 29.299)), (' B  94  LYS  NZ ', ' B 249  ALA  O  ', -0.467, (9.096, 62.94, 15.69)), (' A 140  VAL HG22', ' A 147  GLN  HA ', -0.467, (46.567, -44.251, 31.335)), (' B 361  PHE  HA ', ' B 423  TRP  HB3', -0.466, (-16.151, 3.007, 46.83)), (' C 965  ARG  HG3', ' C 966  LEU HD12', -0.466, (-15.553, 6.486, 24.717)), (' A 738  TYR  OH ', ' A 976  ASP  OD1', -0.466, (-5.556, -5.331, 14.087)), (' A 380  SER  HB3', ' A 506  ALA  HB3', -0.466, (19.028, 27.669, 24.959)), (' A 965  ARG  HG3', ' A 966  LEU HD12', -0.465, (2.302, -16.593, 24.749)), (' C 584  ILE  HB ', ' C 596  VAL HG22', -0.465, (-22.418, -24.546, -11.754)), (' A 744  GLN  HG3', ' C 943  THR HG21', -0.465, (-12.321, -3.57, -1.404)), (' A 105  SER  HB2', ' A 111  SER  HB2', -0.465, (37.34, -18.067, 36.885)), (' A 345  ILE HD13', ' A 382  VAL HG23', -0.464, (17.647, 24.053, 35.899)), (' A 840  LEU HD11', ' A 944  LEU HD23', -0.464, (0.98, -15.264, -1.746)), (' B 965  ARG  HG3', ' B 966  LEU HD12', -0.464, (13.391, 10.732, 24.586)), (' B 724  ILE  O  ', ' B 982  ARG  NH1', -0.464, (14.0, 7.299, 10.074)), (' C 306  ARG  HB3', ' C 576  CYS  HB3', -0.463, (-10.127, -28.587, 6.797)), (' C  94  LYS  NZ ', ' C 249  ALA  O  ', -0.463, (-59.122, -23.702, 15.688)), (' C1059  THR  OG1', ' C1076  VAL  O  ', -0.462, (-3.641, -18.513, -60.987)), (' A1059  THR  OG1', ' A1076  VAL  O  ', -0.461, (17.434, 5.867, -60.92)), (' A 943  THR HG21', ' B 744  GLN  HG3', -0.461, (9.182, -8.908, -1.555)), (' A 891  ILE  HB ', ' A 893  VAL HG12', -0.46, (8.574, -7.761, -51.604)), (' B 328  VAL HG22', ' B 343  LYS  HD3', -0.458, (-31.27, 1.103, 42.732)), (' C 917  GLN  O  ', ' C 921  THR  OG1', -0.457, (-32.163, -1.763, -30.963)), (' C 891  ILE  HB ', ' C 893  VAL HG12', -0.457, (-11.01, -4.008, -51.941)), (' A 993  GLN  OE1', ' A 996  ARG  NH1', -0.455, (3.658, -10.438, -8.451)), (' C 361  PHE  HA ', ' C 423  TRP  HB3', -0.454, (5.507, -15.341, 46.85)), (' B 306  ARG  HB3', ' B 576  CYS  HB3', -0.453, (-19.788, 23.129, 6.844)), (' A 596  VAL HG21', ' A 639  ALA  HB2', -0.453, (34.675, -5.513, -12.24)), (' A 306  ARG  HB3', ' A 576  CYS  HB3', -0.453, (29.977, 5.651, 6.76)), (' C 380  SER  HB3', ' C 506  ALA  HB3', -0.452, (14.581, -30.337, 25.078)), (' B 444  ARG  NH2', ' C1310  NAG  O7 ', -0.452, (-25.801, -22.101, 34.576)), (' B 584  ILE  HB ', ' B 596  VAL HG22', -0.451, (-10.176, 31.563, -11.667)), (' C 993  GLN  OE1', ' C 996  ARG  NH1', -0.45, (-10.533, 1.684, -8.49)), (' A 584  ILE  HB ', ' A 596  VAL HG22', -0.449, (32.029, -7.316, -11.746)), (' B 596  VAL HG21', ' B 639  ALA  HB2', -0.449, (-12.947, 32.745, -12.514)), (' B 943  THR HG21', ' C 744  GLN  HG3', -0.448, (3.57, 12.499, -1.319)), (' B 993  GLN  OE1', ' B 996  ARG  NH1', -0.448, (6.708, 8.189, -8.419)), (' B 380  SER  HB3', ' B 506  ALA  HB3', -0.447, (-33.25, 2.883, 25.262)), (' C 596  VAL HG21', ' C 639  ALA  HB2', -0.444, (-21.943, -27.573, -12.564)), (' C 738  TYR  OH ', ' C 976  ASP  OD1', -0.443, (-1.959, 7.312, 14.057)), (' B 582  SER  O  ', ' B 598  TYR  N  ', -0.442, (-11.521, 27.46, -6.73)), (' B 956  SER  H  ', ' B 962  ILE HD11', -0.442, (9.838, 11.592, 18.606)), (' B 738  TYR  OH ', ' B 976  ASP  OD1', -0.441, (7.576, -1.843, 13.989)), (' C 399  PRO  HD3', ' C 412  LEU HD23', -0.438, (13.125, -11.021, 33.281)), (' B 124  VAL HG21', ' B1312  NAG  H82', -0.438, (16.849, 48.987, 35.242)), (' A 956  SER  H  ', ' A 962  ILE HD11', -0.438, (5.154, -14.385, 18.6)), (' A 582  SER  O  ', ' A 598  TYR  N  ', -0.438, (29.867, -3.459, -6.812)), (' C 956  SER  H  ', ' C 962  ILE HD11', -0.437, (-14.922, 3.172, 18.435)), (' A 917  GLN  O  ', ' A 921  THR  OG1', -0.437, (17.43, -26.847, -30.9)), (' A 737  GLN  HB2', ' C 951  ASN  HB3', -0.437, (-13.273, -4.267, 14.046)), (' A 264  LEU HD22', ' A 272  ILE HD13', -0.436, (24.315, -26.78, 7.521)), (' B 399  PRO  HD3', ' B 412  LEU HD23', -0.436, (-15.739, -5.93, 33.033)), (' C 582  SER  O  ', ' C 598  TYR  N  ', -0.436, (-17.845, -24.113, -6.653)), (' B 951  ASN  HB3', ' C 737  GLN  HB2', -0.435, (3.367, 13.547, 14.079)), (' C1029  TYR  HB2', ' C1049  TYR  HB3', -0.434, (-13.175, -6.362, -46.829)), (' B 601  VAL HG22', ' C 835  GLN HE22', -0.432, (-20.005, 21.745, -1.518)), (' A 124  VAL HG21', ' A1312  NAG  H82', -0.432, (33.988, -39.113, 35.256)), (' A 835  GLN HE22', ' C 601  VAL HG22', -0.432, (-8.848, -28.118, -1.567)), (' A 601  VAL HG22', ' B 835  GLN HE22', -0.432, (28.701, 6.342, -1.596)), (' B 656  ILE  HA ', ' B 678  THR  HA ', -0.432, (-17.756, 26.488, -20.943)), (' B 264  LEU HD22', ' B 272  ILE HD13', -0.432, (10.721, 34.278, 7.257)), (' A 951  ASN  HB3', ' B 737  GLN  HB2', -0.431, (9.987, -9.632, 14.057)), (' B 652  ILE HD11', ' B 658  ALA  HB2', -0.431, (-13.072, 28.615, -15.829)), (' C 769  GLN  NE2', ' C 771  TYR  OH ', -0.431, (-11.714, 21.044, -41.525)), (' A 444  ARG  NH2', ' B1310  NAG  O7 ', -0.431, (-6.451, 33.301, 34.554)), (' A 399  PRO  HD3', ' A 412  LEU HD23', -0.43, (2.787, 16.598, 32.99)), (' A 730  GLU  HG3', ' A 968  LYS  HD3', -0.43, (-9.016, -17.358, 21.738)), (' B1029  TYR  HB2', ' B1049  TYR  HB3', -0.43, (1.152, 14.562, -46.773)), (' B 917  GLN  O  ', ' B 921  THR  OG1', -0.43, (14.602, 28.652, -30.941)), (' C 264  LEU HD22', ' C 272  ILE HD13', -0.429, (-35.08, -7.876, 7.241)), (' A1310  NAG  O7 ', ' C 444  ARG  NH2', -0.428, (31.985, -11.368, 34.579)), (' C 652  ILE HD11', ' C 658  ALA  HB2', -0.428, (-18.217, -25.531, -15.804)), (' A1029  TYR  HB2', ' A1049  TYR  HB3', -0.428, (11.848, -7.877, -46.923)), (' A 209  LEU HD12', ' A 210  PRO  HD2', -0.426, (42.016, -31.272, 9.62)), (' B 305  PHE  HA ', ' B 305  PHE  HD1', -0.426, (-14.751, 25.638, 3.412)), (' A 552  GLY  O  ', ' A 560  ASP  N  ', -0.425, (21.667, 20.754, 9.527)), (' C 124  VAL HG21', ' C1312  NAG  H82', -0.424, (-50.985, -9.808, 35.311)), (' A 652  ILE HD11', ' A 658  ALA  HB2', -0.423, (31.405, -3.416, -15.875)), (' C 656  ILE  HA ', ' C 678  THR  HA ', -0.422, (-14.029, -28.186, -20.805)), (' B 209  LEU HD12', ' B 210  PRO  HD2', -0.421, (5.737, 51.741, 9.787)), (' C 350  ALA  HB3', ' C 510  VAL HG13', -0.421, (5.998, -29.197, 34.381)), (' B  22  PHE  H  ', ' B 135  ASN HD22', -0.421, (-0.885, 62.834, 33.383)), (' A  22  PHE  H  ', ' A 135  ASN HD22', -0.42, (54.886, -30.571, 33.328)), (' B 537  VAL  N  ', ' B 574  SER  O  ', -0.42, (-26.241, 19.126, 7.93)), (' B 730  GLU  HG3', ' B 968  LYS  HD3', -0.419, (19.498, 0.8, 21.706)), (' A 444  ARG  NH1', ' A 447  LYS  O  ', -0.419, (-7.611, 30.883, 34.32)), (' A 656  ILE  HA ', ' A 678  THR  HA ', -0.418, (31.588, 1.872, -20.666)), (' C 209  LEU HD12', ' C 210  PRO  HD2', -0.418, (-47.645, -20.789, 9.796)), (' C 552  GLY  O  ', ' C 560  ASP  N  ', -0.418, (7.122, -29.114, 9.585)), (' C 730  GLU  HG3', ' C 968  LYS  HD3', -0.418, (-10.483, 16.417, 21.705)), (' C 444  ARG  NH1', ' C 447  LYS  O  ', -0.418, (30.508, -8.78, 34.387)), (' B 444  ARG  NH1', ' B 447  LYS  O  ', -0.418, (-23.068, -22.286, 34.657)), (' A 307  VAL  N  ', ' A 614  GLN  O  ', -0.417, (31.92, 1.558, 8.249)), (' C  22  PHE  H  ', ' C 135  ASN HD22', -0.417, (-53.62, -31.929, 33.389)), (' A 140  VAL  O  ', ' A 239  SER  N  ', -0.417, (53.163, -42.612, 29.351)), (' A 350  ALA  HB3', ' A 510  VAL HG13', -0.415, (22.541, 19.717, 34.028)), (' A 924  SER  HB2', ' A 927  LEU  HG ', -0.414, (17.074, -19.868, -21.041)), (' B  72  ILE HG23', ' B  74  HIS  H  ', -0.414, (-0.971, 67.657, 20.422)), (' C 307  VAL  N  ', ' C 614  GLN  O  ', -0.414, (-14.65, -28.401, 8.272)), (' B 140  VAL  O  ', ' B 239  SER  N  ', -0.413, (10.336, 67.375, 29.346)), (' C  72  ILE HG23', ' C  74  HIS  H  ', -0.413, (-58.232, -34.744, 20.81)), (' A1022  VAL HG21', ' B1017  GLY  HA3', -0.412, (9.685, 2.02, -42.055)), (' B 924  SER  HB2', ' B 927  LEU  HG ', -0.411, (8.459, 24.973, -21.297)), (' C 924  SER  HB2', ' C 927  LEU  HG ', -0.411, (-25.793, -4.866, -21.004)), (' C 697  PRO  HA ', ' C1054  GLU  HA ', -0.411, (-15.967, -16.739, -53.792)), (' A 697  PRO  HA ', ' A1054  GLU  HA ', -0.41, (22.489, -5.358, -53.747)), (' B 609  ALA  HB1', ' B 614  GLN  HB2', -0.409, (-20.544, 30.098, 6.14)), (' A  72  ILE HG23', ' A  74  HIS  H  ', -0.408, (59.166, -33.125, 20.811)), (' B 697  PRO  HA ', ' B1054  GLU  HA ', -0.407, (-6.363, 21.807, -53.811)), (' A 429  ASP  O  ', ' A 435  ASN  ND2', -0.407, (3.563, 21.594, 57.773)), (' B 552  GLY  O  ', ' B 560  ASP  N  ', -0.406, (-28.903, 8.388, 9.387)), (' A 609  ALA  HB1', ' A 614  GLN  HB2', -0.405, (36.381, 2.665, 6.14)), (' B 429  ASP  O  ', ' B 435  ASN  ND2', -0.405, (-20.252, -7.507, 58.051)), (' B 307  VAL  N  ', ' B 614  GLN  O  ', -0.405, (-17.415, 26.812, 8.179)), (' C 429  ASP  O  ', ' C 435  ASN  ND2', -0.405, (16.616, -13.752, 58.026)), (' C 983  LEU  HA ', ' C 983  LEU HD13', -0.404, (-5.448, 7.26, 4.986)), (' A 809  THR  H  ', ' A 931  GLN HE22', -0.404, (11.635, -21.756, -16.576)), (' C 809  THR  H  ', ' C 931  GLN HE22', -0.404, (-24.562, 0.414, -16.515)), (' A 582  SER  H  ', ' A 598  TYR  HB2', -0.403, (27.926, -2.015, -6.398)), (' C 388  VAL HG22', ' C 495  ARG  HG2', -0.403, (14.753, -16.468, 49.859)), (' B 809  THR  H  ', ' B 931  GLN HE22', -0.403, (12.628, 20.973, -16.464)), (' B 350  ALA  HB3', ' B 510  VAL HG13', -0.402, (-28.303, 9.74, 34.061)), (' C 140  VAL  O  ', ' C 239  SER  N  ', -0.402, (-63.503, -24.704, 29.259)), (' A  91  ALA  HA ', ' A 252  TYR  HA ', -0.402, (43.366, -32.112, 17.114)), (' A 388  VAL HG22', ' A 495  ARG  HG2', -0.402, (7.263, 20.83, 49.882)), (' C 537  VAL  N  ', ' C 574  SER  O  ', -0.402, (-3.513, -32.064, 8.07)), (' A1017  GLY  HA3', ' C1022  VAL HG21', -0.401, (-3.375, -9.15, -41.869)), (' B 582  SER  H  ', ' B 598  TYR  HB2', -0.4, (-11.773, 25.043, -6.654)), (' B 105  SER  OG ', ' B 227  ASN  O  ', -0.4, (-2.001, 39.128, 34.334))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

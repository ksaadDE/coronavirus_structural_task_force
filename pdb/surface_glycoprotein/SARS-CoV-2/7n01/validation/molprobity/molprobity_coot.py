# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('L', '   8 ', 'PRO', None, (201.42599999999987, 271.296, 258.293)), ('L', '  95 ', 'PRO', None, (181.64099999999993, 257.11400000000003, 255.57500000000005))]
data['rota'] = [('A', ' 185 ', 'ASN', 0.2622018663467595, (161.829, 245.295, 225.97900000000004)), ('A', ' 218 ', 'GLN', 0.2606446330919424, (172.73000000000002, 235.807, 218.1670000000001)), ('L', '  33 ', 'LEU', 0.2950104301886872, (192.509, 261.1070000000001, 247.308)), ('B', ' 110 ', 'LEU', 0.19872519469380528, (229.10699999999989, 171.097, 245.49800000000005)), ('B', ' 235 ', 'ILE', 0.10787328213408542, (225.77700000000002, 177.74299999999994, 240.099)), ('B', ' 569 ', 'ILE', 0.012673417755245145, (239.429, 213.647, 215.09700000000004))]
data['cbeta'] = [('A', ' 213 ', 'VAL', ' ', 0.2818313973410381, (160.4220000000001, 241.13699999999997, 223.16700000000006)), ('A', ' 466 ', 'ARG', ' ', 0.36157409916567834, (221.0849999999999, 184.456, 248.78100000000006)), ('A', ' 707 ', 'TYR', ' ', 0.2703675469357789, (188.5909999999999, 200.89599999999993, 163.173)), ('A', ' 710 ', 'ASN', ' ', 0.2851394950024885, (188.386, 200.723, 151.785)), ('A', ' 802 ', 'PHE', ' ', 0.2564302284085003, (203.028, 240.35099999999994, 168.77900000000005)), ('A', '1098 ', 'ASN', ' ', 0.2578617420097421, (185.05299999999994, 212.449, 146.395)), ('H', '  51 ', 'ILE', ' ', 0.32367518138997914, (170.692, 261.854, 244.898)), ('H', '  96 ', 'ARG', ' ', 0.27108777691222913, (185.774, 262.962, 238.354)), ('H', ' 100L', 'TYR', ' ', 0.3041919167799203, (189.6290000000001, 251.26999999999995, 240.929)), ('H', ' 100M', 'TYR', ' ', 0.5803144779157532, (184.26300000000012, 253.16, 240.73000000000002)), ('H', ' 100N', 'TYR', ' ', 0.2823409978059468, (183.51600000000005, 255.904, 243.706)), ('H', ' 100O', 'TYR', ' ', 0.25154272345579354, (187.5050000000001, 259.322, 240.578)), ('B', ' 118 ', 'LEU', ' ', 0.25251202988205795, (219.356, 168.677, 246.636)), ('B', ' 230 ', 'PRO', ' ', 0.3122467796354257, (212.576, 182.74099999999999, 244.75800000000007)), ('B', ' 343 ', 'ASN', ' ', 0.49085172450568015, (241.15, 209.08699999999993, 259.946)), ('B', ' 571 ', 'ASP', ' ', 0.2954436882674717, (236.896, 208.364, 220.87300000000005)), ('B', ' 792 ', 'PRO', ' ', 0.28341946225177, (187.547, 199.75699999999995, 167.014)), ('B', '1002 ', 'GLN', ' ', 0.3127892366353791, (212.665, 210.361, 214.836)), ('B', '1120 ', 'THR', ' ', 0.2613324215553042, (221.3639999999999, 212.695, 143.067)), ('B', '1121 ', 'PHE', ' ', 0.27677690234881014, (222.12399999999997, 217.53299999999993, 145.344)), ('C', '  66 ', 'HIS', ' ', 0.2828580865629228, (260.6099999999998, 251.667, 227.83600000000007)), ('C', ' 370 ', 'ASN', ' ', 0.2749928496554187, (220.21, 229.61099999999996, 255.81800000000004)), ('C', ' 630 ', 'THR', ' ', 0.2849105858026763, (237.3310000000001, 244.85599999999994, 215.42800000000003)), ('C', ' 716 ', 'THR', ' ', 0.3271189418582775, (229.094, 233.51099999999994, 153.58600000000004)), ('C', ' 815 ', 'ARG', ' ', 0.27384731500242415, (243.05599999999995, 205.30999999999995, 179.276))]
data['probe'] = [(' B 708  SER  HB2', ' B 711  SER  HB2', -0.765, (234.574, 198.477, 153.52)), (' A 794  ILE HG21', ' A 803  SER  HB2', -0.674, (202.787, 245.766, 168.147)), (' B 567  ARG  HD3', ' C  42  VAL HG11', -0.665, (242.626, 214.089, 222.549)), (' B 802  PHE  HD1', ' B 805  ILE HD11', -0.662, (197.547, 195.159, 169.078)), (' L  89  GLN HE22', ' L  96  PHE  HB3', -0.658, (184.271, 262.58, 250.508)), (' A 707  TYR  HB2', ' B 883  THR HG22', -0.645, (188.748, 202.332, 164.409)), (' A  36  VAL  HB ', ' A 220  PHE  CZ ', -0.614, (183.721, 234.57, 222.025)), (' A1097  SER  HB3', ' A1102  TRP  CD2', -0.607, (190.363, 207.913, 144.908)), (' H   6  GLN  H  ', ' H 105  GLN HE22', -0.605, (172.578, 278.105, 240.567)), (' A 805  ILE  HB ', ' A1054  GLN HE22', -0.599, (204.009, 238.211, 174.416)), (' A 807  PRO  HD3', ' A 816  SER  HB2', -0.599, (206.362, 242.63, 175.988)), (' B 760  CYS  HA ', ' B 763  LEU HD12', -0.597, (203.524, 214.903, 211.651)), (' A 501  ASN HD22', ' A 505  TYR  HD1', -0.59, (222.315, 202.879, 266.527)), (' C 365  TYR  CD1', ' C 368  LEU  HB2', -0.587, (215.148, 233.377, 249.409)), (' A 858  LEU HD21', ' A 962  LEU HD23', -0.587, (211.457, 229.191, 208.705)), (' C 365  TYR  HB2', ' C 387  LEU HD22', -0.585, (214.658, 234.994, 246.145)), (' A 213  VAL HG13', ' A 214  ARG  HG2', -0.579, (160.354, 238.054, 222.888)), (' B 707  TYR  HE1', ' C 897  PRO  HA ', -0.572, (234.756, 204.764, 157.281)), (' B 319  ARG HH21', ' B 624  ILE HD11', -0.572, (232.968, 189.411, 210.741)), (' A 962  LEU HD13', ' A1007  TYR  HB2', -0.571, (210.997, 224.469, 208.404)), (' C 627  ASP  HB3', ' C 634  ARG HH21', -0.564, (229.439, 252.71, 215.41)), (' A  36  VAL  HB ', ' A 220  PHE  CE1', -0.562, (183.119, 234.063, 221.769)), (' A 894  LEU HD11', ' C 715  PRO  HD3', -0.561, (221.923, 232.017, 157.749)), (' B 752  LEU HD21', ' B 990  GLU  HG2', -0.558, (203.265, 214.278, 228.943)), (' A  99  ASN  ND2', ' A 178  ASP  O  ', -0.556, (168.951, 248.868, 238.362)), (' A 393  THR  HB ', ' A 520  ALA  HB3', -0.554, (201.844, 187.373, 235.668)), (' C 536  ASN  H  ', ' C 551  VAL HG13', -0.552, (216.358, 251.78, 218.983)), (' A 126  VAL HG11', ' H 100I LEU HD11', -0.549, (181.076, 241.445, 241.989)), (' B 631  PRO  HA ', ' B 634  ARG  HB2', -0.546, (235.621, 177.478, 212.254)), (' B 712  ILE HG21', ' B1096  VAL HG12', -0.543, (226.781, 200.492, 150.017)), (' C 564  GLN  NE2', ' C 577  ARG  O  ', -0.543, (203.776, 246.619, 230.807)), (' B 965  GLN  NE2', ' C 758  SER  OG ', -0.542, (213.046, 199.172, 211.912)), (' H  37  VAL HG11', ' H  45  LEU HD12', -0.541, (182.508, 270.932, 249.889)), (' C 319  ARG  NH2', ' C 592  PHE  O  ', -0.54, (224.097, 241.707, 212.053)), (' A 756  TYR  O  ', ' C 965  GLN  NE2', -0.538, (226.944, 218.276, 214.502)), (' B 335  LEU  HA ', ' B 362  VAL HG22', -0.538, (249.515, 203.506, 248.328)), (' A1102  TRP  CZ2', ' A1133  VAL HG21', -0.538, (190.849, 204.459, 145.25)), (' B 560  LEU HD12', ' B 561  PRO  HD2', -0.538, (258.004, 219.168, 224.963)), (' A 191  GLU  OE1', ' A 221  SER  OG ', -0.535, (178.245, 237.937, 224.703)), (' A 818  ILE  CD1', ' A1063  LEU HD11', -0.535, (200.696, 236.779, 176.085)), (' C1047  TYR  HB2', ' C1067  TYR  HB3', -0.532, (224.374, 223.826, 163.045)), (' C 763  LEU HD22', ' C1008  VAL HG11', -0.53, (219.651, 207.333, 206.513)), (' H  18  VAL HG21', ' H 109  VAL HG21', -0.529, (168.136, 276.177, 254.503)), (' B1046  GLY  HA2', ' C 890  ALA  HA ', -0.529, (217.49, 199.894, 167.366)), (' A  21  ARG  NH1', ' A 138  ASP  OD2', -0.528, (160.332, 229.956, 245.054)), (' A 745  ASP  HB2', ' C 549  THR  HB ', -0.528, (218.605, 239.572, 222.131)), (' A 781  VAL HG12', ' A1026  ALA  HB2', -0.527, (214.916, 226.184, 182.066)), (' H  18  VAL HG12', ' H  82  LEU  HB2', -0.526, (166.398, 271.21, 254.75)), (' C 534  VAL  HB ', ' C 537  LYS  HB3', -0.525, (219.723, 252.281, 222.593)), (' A 324  GLU  CB ', ' A 539  VAL HG23', -0.525, (182.027, 204.067, 229.257)), (' C 858  LEU HD21', ' C 962  LEU HD23', -0.523, (230.279, 208.616, 207.3)), (' B 990  GLU  O  ', ' B 994  ASP  HB2', -0.522, (207.198, 213.03, 227.776)), (' A 108  THR  HA ', ' A 236  THR HG22', -0.521, (178.264, 220.171, 245.145)), (' A 699  LEU  HG ', ' B 788  ILE HG13', -0.52, (185.815, 207.735, 179.201)), (' B 329  PHE  HE2', ' B 528  LYS  HB2', -0.52, (244.993, 196.96, 238.493)), (' A 613  GLN  HA ', ' A 648  GLY  HA3', -0.519, (184.842, 205.081, 202.382)), (' C1036  GLN  NE2', ' C1048  HIS  O  ', -0.518, (223.36, 217.761, 163.608)), (' L  33  LEU  HB2', ' L  51  ALA  HB2', -0.516, (195.029, 260.37, 246.827)), (' B 797  PHE  HB3', ' B 802  PHE  HE2', -0.515, (194.499, 195.892, 163.979)), (' B1029  MET  HE1', ' B1053  PRO  HB3', -0.515, (200.12, 203.923, 177.251)), (' A 393  THR  HA ', ' A 522  ALA  HA ', -0.514, (199.115, 188.638, 238.348)), (' C 797  PHE  CD2', ' C 882  ILE HG21', -0.514, (237.673, 207.087, 163.376)), (' H 101  ASP  OD1', ' L  55  GLN  NE2', -0.513, (187.512, 268.158, 236.431)), (' H  99  HIS  HE1', ' H 100C SER  HA ', -0.512, (174.128, 251.777, 236.073)), (' B1117  THR  H  ', ' B1139  ASP  HB3', -0.511, (217.488, 211.175, 137.437)), (' B 794  ILE HG13', ' B 806  LEU HD22', -0.509, (189.195, 194.928, 169.87)), (' L  89  GLN  NE2', ' L  96  PHE  HB3', -0.508, (184.547, 262.267, 250.287)), (' C 551  VAL  N  ', ' C 588  THR  O  ', -0.507, (215.326, 246.299, 219.988)), (' B 131  CYS  HB2', ' B 133  PHE  HD2', -0.507, (220.07, 170.793, 251.52)), (' C  27  ALA  HB3', ' C  64  TRP  HE1', -0.507, (254.648, 254.083, 224.07)), (' C 804  GLN  O  ', ' C 816  SER  OG ', -0.506, (241.867, 210.204, 173.458)), (' A 403  ARG HH11', ' A 505  TYR  HA ', -0.504, (224.706, 203.703, 261.756)), (' A 220  PHE  HD2', ' A 286  THR  O  ', -0.502, (183.335, 237.251, 217.924)), (' C  14  GLN  O  ', ' C 158  ARG  NH1', -0.502, (264.605, 248.341, 252.48)), (' B 517  LEU HD12', ' B 518  LEU  HB2', -0.502, (239.022, 211.181, 231.009)), (' C 156  GLU  OE1', ' C 158  ARG  NH2', -0.502, (267.929, 246.423, 251.297)), (' C  64  TRP  CH2', ' C  66  HIS  HB2', -0.501, (259.805, 251.679, 225.845)), (' C 398  ASP  HB2', ' C 512  VAL  HB ', -0.5, (201.858, 226.28, 249.366)), (' C 566  GLY  O  ', ' C 574  ASP  N  ', -0.5, (205.622, 241.158, 222.761)), (' C 467  ASP  N  ', ' C 467  ASP  OD1', -0.498, (189.316, 219.684, 252.147)), (' A 986  PRO  HA ', ' A 989  ALA  HB3', -0.496, (220.342, 226.689, 232.171)), (' B 333  THR  HB ', ' B 362  VAL  CG1', -0.496, (250.014, 202.569, 243.512)), (' A1105  THR HG23', ' A1111  GLU  H  ', -0.495, (194.533, 217.653, 151.042)), (' A 913  GLN  NE2', ' C1090  PRO  O  ', -0.494, (208.34, 225.881, 150.549)), (' B 277  LEU HD13', ' B 285  ILE HG12', -0.494, (209.939, 180.072, 219.531)), (' A1097  SER  HB3', ' A1102  TRP  CE3', -0.492, (190.417, 208.137, 145.857)), (' A 705  VAL HG11', ' B 789  TYR  HD2', -0.492, (187.365, 208.003, 168.663)), (' A 555  SER  HB3', ' A 584  ILE  O  ', -0.492, (187.217, 187.945, 222.622)), (' H  63  PHE  HB3', ' H  66  ARG  HG2', -0.492, (170.22, 263.827, 259.424)), (' C1126  CYS  HB2', ' C1132  ILE HD13', -0.492, (201.698, 235.376, 144.063)), (' A 894  LEU  CD1', ' C 715  PRO  HD3', -0.491, (221.43, 232.262, 157.956)), (' A 879  ALA  O  ', ' A 883  THR  HB ', -0.491, (213.506, 239.686, 166.405)), (' A 385  THR HG22', ' C 415  THR  HB ', -0.491, (200.617, 209.611, 244.906)), (' A 917  TYR  HB3', ' C1129  VAL HG22', -0.491, (200.068, 233.272, 149.825)), (' B 729  VAL  H  ', ' B1059  GLY  HA2', -0.49, (203.196, 202.543, 186.603)), (' A 596  SER  HB2', ' A 611  LEU  HB3', -0.488, (186.322, 211.826, 203.058)), (' A 805  ILE  HB ', ' A1054  GLN  NE2', -0.487, (203.81, 237.915, 174.979)), (' B 333  THR  HB ', ' B 362  VAL HG12', -0.486, (249.942, 202.513, 243.352)), (' A 985  ASP  O  ', ' A 989  ALA  N  ', -0.486, (219.232, 225.495, 234.25)), (' A 666  ILE HD13', ' A 670  ILE HG22', -0.485, (181.624, 211.127, 194.683)), (' C 324  GLU  HG3', ' C 539  VAL HG23', -0.483, (223.694, 247.619, 226.941)), (' A 276  LEU HD11', ' A 304  LYS  HA ', -0.481, (192.597, 227.433, 212.413)), (' B 802  PHE  CD1', ' B 805  ILE HD11', -0.481, (197.17, 195.38, 169.167)), (' A 566  GLY  O  ', ' A 573  THR  HA ', -0.48, (198.366, 190.113, 222.849)), (' C 602  THR  HA ', ' C 605  SER  O  ', -0.479, (243.125, 236.7, 199.019)), (' A1093  GLY  O  ', ' B 904  TYR  OH ', -0.479, (199.414, 208.945, 152.564)), (' A 567  ARG  CB ', ' B  44  ARG  HA ', -0.478, (201.639, 186.455, 219.711)), (' A1050  MET  HB2', ' A1050  MET  HE3', -0.476, (203.779, 230.923, 168.33)), (' C 598  ILE HG13', ' C 650  LEU HD11', -0.474, (230.008, 243.162, 197.746)), (' C 805  ILE HG13', ' C 806  LEU HD12', -0.474, (238.785, 209.13, 168.722)), (' B 336  CYS  C  ', ' B 338  PHE  H  ', -0.473, (246.56, 208.051, 250.562)), (' B 316  SER  O  ', ' B 319  ARG  NH1', -0.473, (228.824, 191.264, 211.531)), (' B 916  LEU HD12', ' B 923  ILE HD13', -0.473, (205.096, 195.38, 157.193)), (' A1097  SER  HB3', ' A1102  TRP  CE2', -0.473, (190.264, 207.261, 145.257)), (' C 897  PRO  HB2', ' C 900  MET  HG2', -0.472, (231.975, 206.979, 154.553)), (' B 580  GLN  HB3', ' B1310  NAG  H62', -0.471, (257.916, 200.673, 232.384)), (' B 931  ILE HD12', ' B 934  ILE HD11', -0.471, (202.857, 191.289, 172.92)), (' C 103  GLY  HA3', ' C 119  ILE  O  ', -0.471, (257.579, 237.204, 239.839)), (' A 598  ILE HD11', ' A 611  LEU HD12', -0.469, (184.9, 212.447, 199.906)), (' A 337  PRO  HB2', ' A 340  GLU  HB3', -0.469, (200.409, 189.037, 257.492)), (' A 344  ALA  HB3', ' A 347  PHE  HE1', -0.468, (208.304, 190.969, 259.787)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.467, (213.101, 203.831, 252.876)), (' B 666  ILE HD13', ' B 670  ILE HG22', -0.466, (233.019, 188.093, 192.376)), (' A 726  ILE HG13', ' A1061  VAL HG23', -0.465, (200.979, 230.202, 182.131)), (' A 705  VAL HG11', ' B 789  TYR  CD2', -0.465, (187.361, 208.513, 168.685)), (' C 226  LEU  HG ', ' C 227  VAL HG13', -0.465, (254.461, 226.64, 235.48)), (' A 906  PHE  HE1', ' A1049  LEU HD13', -0.464, (200.337, 227.449, 163.181)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.464, (230.755, 243.766, 193.58)), (' H  87  THR HG23', ' H 110  THR  HA ', -0.464, (172.459, 280.007, 257.894)), (' C 280  ASN  ND2', ' C 284  THR  OG1', -0.464, (254.37, 223.397, 214.127)), (' C 642  VAL HG22', ' C 651  ILE HD12', -0.464, (229.681, 252.098, 202.745)), (' C 950  ASP  HA ', ' C 953  ASN  HB2', -0.462, (233.762, 219.922, 195.359)), (' C 109  THR  O  ', ' C 237  ARG  NH2', -0.461, (245.534, 248.15, 244.812)), (' A 711  SER  HB3', ' B 895  GLN HE22', -0.461, (186.981, 206.025, 156.202)), (' A 802  PHE  O  ', ' A 805  ILE HG12', -0.459, (203.117, 241.027, 171.021)), (' A 900  MET  N  ', ' A 900  MET  SD ', -0.458, (208.66, 234.625, 156.482)), (' A 737  ASP  HB3', ' A 740  MET  HB3', -0.457, (219.622, 234.037, 212.185)), (' A 151  SER  HB2', ' A1313  NAG  H82', -0.456, (161.708, 257.805, 248.576)), (' A1102  TRP  HB2', ' A1135  ASN HD22', -0.456, (192.738, 208.459, 140.777)), (' C  34  ARG HH22', ' C 217  PRO  HG2', -0.453, (258.116, 237.99, 216.811)), (' A 598  ILE  HB ', ' A 609  ALA  HB3', -0.452, (180.477, 216.027, 200.737)), (' C 408  ARG  NH1', ' C 414  GLN  OE1', -0.452, (206.492, 209.99, 247.847)), (' H  17  SER  HA ', ' H  82  LEU  O  ', -0.451, (163.578, 270.62, 257.188)), (' A 867  ASP  HA ', ' A 870  ILE HD12', -0.45, (212.705, 239.127, 187.5)), (' A 299  THR  O  ', ' A 303  LEU  HB2', -0.45, (190.525, 223.276, 207.658)), (' C 786  LYS  HA ', ' C 786  LYS  HD3', -0.45, (226.661, 195.589, 177.042)), (' B 791  THR  CG2', ' B 806  LEU HD21', -0.448, (188.025, 196.807, 171.401)), (' A1081  ILE  O  ', ' A1088  HIS  N  ', -0.448, (200.347, 202.333, 142.791)), (' B 393  THR  OG1', ' B 516  GLU  O  ', -0.448, (242.724, 214.145, 235.587)), (' A  68  ILE HG21', ' A  76  THR  HA ', -0.447, (152.949, 235.569, 234.891)), (' C 294  ASP  OD1', ' C 296  LEU  HB3', -0.446, (239.537, 238.794, 207.413)), (' C 656  VAL HG13', ' C 693  ILE HD11', -0.446, (234.587, 251.353, 189.227)), (' C 521  PRO  HG3', ' C 564  GLN  HB2', -0.445, (199.569, 243.484, 232.15)), (' C  53  ASP  OD2', ' C 195  LYS  NZ ', -0.445, (241.272, 229.576, 228.351)), (' L  11  LEU HD23', ' L 104  VAL HG22', -0.445, (200.637, 276.601, 252.343)), (' A 329  PHE  HE2', ' A 528  LYS  HB3', -0.444, (190.138, 198.99, 241.053)), (' A 282  ASN  OD1', ' A1305  NAG  N2 ', -0.444, (189.768, 247.8, 215.935)), (' B 391  CYS  HA ', ' B 525  CYS  HB3', -0.444, (243.292, 205.827, 238.02)), (' A1030  SER  OG ', ' C1040  VAL  O  ', -0.443, (216.815, 223.792, 172.906)), (' H  14  PRO  HD3', ' H 112  SER  O  ', -0.443, (165.508, 280.89, 263.61)), (' C 366  SER  O  ', ' C 369  TYR  HB2', -0.442, (218.969, 235.595, 252.755)), (' A 379  CYS  HA ', ' A 432  CYS  HA ', -0.442, (209.468, 201.317, 244.606)), (' A 204  TYR  HD1', ' A 225  PRO  HA ', -0.44, (187.636, 236.131, 232.787)), (' B 141  LEU  H  ', ' B 243  ALA  HA ', -0.438, (220.15, 155.83, 242.982)), (' A1014  ARG  HA ', ' A1017  GLU  HG2', -0.438, (209.618, 220.12, 195.514)), (' A 278  LYS  HE2', ' A 287  ASP  HB2', -0.437, (186.152, 235.667, 213.37)), (' B 804  GLN  O  ', ' B 816  SER  HB3', -0.437, (194.327, 191.484, 175.607)), (' C 826  VAL HG21', ' C1057  PRO  HG2', -0.436, (238.88, 212.566, 187.797)), (' B 376  THR  HB ', ' B 435  ALA  HB3', -0.436, (227.267, 213.352, 252.697)), (' A 894  LEU HD13', ' C 713  ALA  O  ', -0.436, (220.52, 233.885, 157.821)), (' C 802  PHE  CD1', ' C 805  ILE HD11', -0.436, (237.876, 211.353, 166.691)), (' B 571  ASP  CB ', ' C 976  VAL HG12', -0.435, (236.79, 209.273, 221.757)), (' B 417  LYS  O  ', ' B 421  TYR  HB2', -0.434, (227.655, 231.41, 252.015)), (' B 598  ILE HG23', ' B 664  ILE HG21', -0.434, (227.875, 185.663, 195.311)), (' B 726  ILE HG21', ' B 948  LEU  HB2', -0.434, (206.084, 196.506, 185.787)), (' A 895  GLN  HB3', ' C 705  VAL HG21', -0.434, (218.127, 239.916, 162.827)), (' C 366  SER  HA ', ' C 369  TYR  HD2', -0.434, (219.415, 236.689, 250.725)), (' C 737  ASP  N  ', ' C 737  ASP  OD1', -0.434, (230.113, 200.153, 208.984)), (' A 960  ASN  HA ', ' A 963  VAL HG12', -0.434, (205.214, 231.254, 209.601)), (' C  56  LEU HD12', ' C  57  PRO  HD2', -0.434, (243.406, 240.727, 222.806)), (' C 105  ILE HG23', ' C 241  LEU HD11', -0.434, (255.233, 241.615, 242.363)), (' C 327  VAL HG12', ' C 542  ASN  HB3', -0.433, (217.147, 243.941, 233.783)), (' A  36  VAL HG22', ' A 275  PHE  HE2', -0.433, (183.687, 229.444, 221.821)), (' L  32  TYR  HB3', ' L  91  LEU  HB3', -0.433, (188.562, 257.991, 246.85)), (' A  96  GLU  OE2', ' A 100  ILE  N  ', -0.432, (166.989, 242.881, 237.204)), (' A 570  ALA  HB2', ' B 963  VAL  CG1', -0.431, (202.914, 196.318, 213.671)), (' A 357  ARG  NH1', ' A 394  ASN  OD1', -0.431, (205.488, 185.386, 241.654)), (' C 802  PHE  HB3', ' C 806  LEU HD13', -0.43, (239.633, 208.328, 166.943)), (' C 296  LEU  HB2', ' C 608  VAL HG11', -0.43, (239.021, 239.387, 204.548)), (' A 706  ALA  O  ', ' A 707  TYR  C  ', -0.429, (186.651, 202.445, 161.288)), (' B 984  LEU HD23', ' B 989  ALA  HA ', -0.429, (205.827, 207.888, 232.855)), (' A 434  ILE  HB ', ' A 511  VAL HG23', -0.429, (208.618, 198.062, 252.204)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.429, (221.397, 165.068, 226.089)), (' C 105  ILE HD12', ' C 110  LEU HD22', -0.428, (250.478, 243.65, 243.712)), (' A1030  SER  HA ', ' A1034  LEU HD12', -0.428, (215.812, 227.221, 173.726)), (' B 328  ARG  HD3', ' B 543  PHE  HB3', -0.427, (248.327, 199.342, 230.268)), (' C 361  CYS  SG ', ' C 362  VAL  N  ', -0.427, (208.205, 243.62, 248.068)), (' B 117  LEU HD13', ' B 231  ILE HD13', -0.426, (217.137, 175.349, 244.366)), (' A 105  ILE HG23', ' A 241  LEU HD11', -0.426, (172.917, 232.742, 245.855)), (' C 743  CYS  HB3', ' C 749  CYS  HB3', -0.425, (228.399, 200.136, 221.158)), (' C 475  ALA  HB3', ' C 487  ASN  HB3', -0.425, (183.448, 201.582, 259.868)), (' B1028  LYS  O  ', ' B1032  CYS  HB2', -0.425, (205.127, 206.489, 173.864)), (' A 715  PRO  HG3', ' B 894  LEU HD21', -0.424, (190.729, 215.486, 160.481)), (' H  92  CYS  O  ', ' H 104  GLY  N  ', -0.424, (178.209, 272.909, 241.758)), (' H  38  ARG  NH1', ' H  86  ASP  OD1', -0.422, (174.487, 271.339, 258.981)), (' A1082  CYS  HA ', ' A1087  ALA  HA ', -0.422, (199.749, 200.676, 141.411)), (' C 550  GLY  HA3', ' C 589  PRO  HA ', -0.422, (216.264, 243.683, 219.945)), (' A 354  ASN  HB3', ' A 399  SER  HB3', -0.421, (212.578, 188.436, 254.956)), (' A 172  SER  OG ', ' A 173  GLN  N  ', -0.421, (183.85, 247.398, 245.072)), (' A 616  ASN  HB3', ' A 618  THR  H  ', -0.42, (176.643, 200.029, 205.428)), (' B 734  THR HG21', ' B 959  LEU HD21', -0.42, (202.269, 202.781, 202.589)), (' A 406  GLU  HB3', ' A 418  ILE HG13', -0.42, (223.584, 199.244, 253.821)), (' C 902  MET  HE1', ' C1050  MET  SD ', -0.419, (230.999, 213.696, 163.443)), (' A 722  VAL HG12', ' A 930  ALA  HB1', -0.419, (194.86, 232.406, 170.971)), (' C 856  ASN HD21', ' C 963  VAL HG12', -0.419, (233.765, 209.143, 210.879)), (' A 890  ALA  O  ', ' C1068  VAL HG13', -0.419, (225.982, 229.996, 166.769)), (' A 740  MET  HB2', ' A 740  MET  HE2', -0.417, (220.724, 235.664, 213.416)), (' A 893  ALA  O  ', ' A 894  LEU  C  ', -0.416, (219.456, 236.671, 162.504)), (' C 877  LEU  O  ', ' C 881  THR  OG1', -0.416, (230.287, 206.0, 170.066)), (' B 566  GLY  HA2', ' C  43  PHE  HB3', -0.416, (248.212, 213.591, 221.496)), (' B 772  VAL HG12', ' B 776  LYS  HZ2', -0.414, (198.009, 216.526, 193.437)), (' A 931  ILE  O  ', ' A 935  GLN  HG3', -0.413, (194.29, 238.776, 174.234)), (' C 330  PRO  HB3', ' C 579  PRO  HB2', -0.413, (205.781, 248.486, 236.993)), (' B 905  ARG  O  ', ' B1036  GLN  NE2', -0.413, (207.261, 204.96, 162.624)), (' C 797  PHE  CE2', ' C 882  ILE HG21', -0.413, (237.591, 206.301, 164.096)), (' C 802  PHE  O  ', ' C 803  SER  C  ', -0.413, (242.38, 209.801, 168.786)), (' B1129  VAL  HB ', ' B1132  ILE HD11', -0.413, (233.956, 214.076, 145.452)), (' A 825  LYS  HE2', ' A 941  THR  HA ', -0.412, (191.771, 236.934, 187.077)), (' C1091  ARG  NH1', ' C1118  ASP  O  ', -0.412, (211.618, 219.549, 143.429)), (' A 187  LYS  HA ', ' A 210  ILE  O  ', -0.411, (168.011, 246.346, 225.636)), (' B 740  MET  HB3', ' B 740  MET  HE3', -0.41, (195.128, 204.46, 214.584)), (' B1010  GLN  HA ', ' B1013  ILE HG12', -0.41, (212.717, 208.315, 200.916)), (' C 797  PHE  HA ', ' C 797  PHE  HD1', -0.409, (238.149, 206.673, 159.951)), (' A 808  ASP  OD2', ' A 810  SER  OG ', -0.409, (204.576, 252.498, 175.292)), (' A 816  SER  OG ', ' A 817  PHE  N  ', -0.409, (202.886, 243.398, 177.252)), (' A  81  ASN  N  ', ' A  81  ASN  OD1', -0.408, (163.654, 229.863, 241.569)), (' B 792  PRO  HB2', ' B 797  PHE  HZ ', -0.408, (188.52, 198.529, 166.63)), (' A1101  HIS  CG ', ' A1103  PHE  HE1', -0.406, (189.49, 214.492, 141.63)), (' B 336  CYS  SG ', ' B 337  PRO  HD2', -0.406, (248.295, 209.984, 249.569)), (' B 808  ASP  OD2', ' B 810  SER  OG ', -0.406, (184.784, 188.024, 175.509)), (' C1081  ILE  O  ', ' C1088  HIS  N  ', -0.406, (204.495, 231.661, 143.531)), (' B 804  GLN  CD ', ' B 804  GLN  H  ', -0.405, (195.243, 189.457, 171.034)), (' B 521  PRO  HG3', ' B 564  GLN  HB2', -0.405, (250.259, 212.782, 230.287)), (' H  99  HIS  CE1', ' H 100C SER  HA ', -0.405, (174.377, 251.61, 235.816)), (' B 497  PHE  CE2', ' B 507  PRO  HB3', -0.405, (230.2, 221.167, 263.248)), (' B 819  GLU  OE2', ' B1054  GLN  NE2', -0.404, (196.434, 196.06, 177.13)), (' B 229  LEU  HB3', ' B 231  ILE HG13', -0.404, (214.196, 178.068, 243.732)), (' A  22  THR  O  ', ' A  78  ARG  NH1', -0.403, (156.282, 227.582, 237.034)), (' A 326  ILE HG13', ' A 541  PHE  HA ', -0.403, (187.144, 200.218, 230.98)), (' A1093  GLY  HA3', ' A1106  GLN  HA ', -0.402, (199.238, 214.347, 153.055)), (' A 962  LEU  O  ', ' A 965  GLN  HB2', -0.402, (208.346, 226.796, 213.16)), (' B 797  PHE  HE2', ' B 806  LEU HD13', -0.402, (191.32, 196.714, 168.703)), (' C 229  LEU  HB3', ' C 231  ILE HG12', -0.401, (247.331, 229.198, 242.17)), (' C 459  SER  OG ', ' C 460  ASN  N  ', -0.401, (188.943, 210.464, 245.192)), (' A  96  GLU  HG2', ' A 190  ARG  NH2', -0.401, (170.169, 243.341, 234.895)), (' A 552  LEU HD12', ' A 585  LEU  HG ', -0.401, (185.925, 193.677, 226.396)), (' B 335  LEU  HA ', ' B 335  LEU HD12', -0.4, (248.635, 203.212, 248.943)), (' A 962  LEU  HA ', ' A 962  LEU HD12', -0.4, (208.716, 225.459, 210.758)), (' A1128  VAL HG13', ' A1129  VAL HG23', -0.4, (201.962, 194.388, 146.397)), (' H  14  PRO  HD3', ' H 112  SER  C  ', -0.4, (166.138, 280.467, 263.591))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

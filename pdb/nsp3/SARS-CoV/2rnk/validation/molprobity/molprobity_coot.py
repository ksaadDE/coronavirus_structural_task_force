# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 569 ', 'ILE', 0.00256301, (-10.388, -11.468, 0.45300000000000007)), ('A', ' 608 ', 'ILE', 0.002760745213594627, (6.342, -3.8430000000000004, 1.6620000000000004)), ('A', '  -1 ', 'MET', 0.031947167912403165, (-19.84, 4.472999999999998, -14.838)), ('A', ' 517 ', 'GLU', 0.039502668156389524, (-18.473, 16.937, -6.278)), ('A', ' 565 ', 'LYS', 0.010292093010481236, (-18.249, -3.537, 4.1)), ('A', ' 566 ', 'GLY', 0.0039058993851467045, (-18.612, -7.193, 3.464)), ('A', ' 572 ', 'GLY', 0.0111503, (-4.487000000000002, -10.324, -8.037)), ('A', ' 573 ', 'ILE', 0.030541252730224108, (-6.027000000000002, -6.851, -8.408)), ('A', ' 608 ', 'ILE', 0.00256301, (6.222000000000001, -3.712999999999999, 1.386)), ('A', ' 569 ', 'ILE', 0.0030583902099572, (-10.936, -11.185, 0.3390000000000001)), ('A', ' 608 ', 'ILE', 0.00512602, (6.301, -3.967, 2.439)), ('A', '  -3 ', 'SER', 0.018936684208235587, (-35.924000000000014, 35.298, -7.087)), ('A', ' 523 ', 'GLU', 0.019133461303384447, (-0.6970000000000003, 19.028, -6.588)), ('A', ' 565 ', 'LYS', 0.0032113040881922733, (-17.173, -4.059, 5.294)), ('A', ' 608 ', 'ILE', 0.002063783227501342, (6.494, -4.124, 0.78)), ('A', ' 612 ', 'THR', 0.04822706417823755, (5.105, -9.202, 6.613000000000002)), ('A', '  -2 ', 'HIS', 0.02530964840296787, (-18.872000000000003, -2.361999999999999, 12.926)), ('A', ' 513 ', 'VAL', 0.0026654417208398086, (-19.41, 2.714999999999999, 10.599)), ('A', ' 517 ', 'GLU', 0.011615911047050391, (-16.23, 10.718999999999998, 2.095)), ('A', ' 518 ', 'ALA', 0.0016242199999999998, (-14.3, 14.035999999999998, 1.425)), ('A', ' 608 ', 'ILE', 0.08908570560274676, (5.802, -4.147000000000002, 1.7650000000000003)), ('A', ' 523 ', 'GLU', 0.04304984385155416, (-1.9850000000000005, 17.565, -6.327000000000002)), ('A', ' 569 ', 'ILE', 0.00256301, (-10.242, -11.473, 0.677)), ('A', ' 608 ', 'ILE', 0.00974392136884504, (6.343, -4.578000000000001, 1.81)), ('A', ' 513 ', 'VAL', 0.03904255640032323, (-7.0779999999999985, 21.982, -27.782000000000007)), ('A', ' 569 ', 'ILE', 0.004865239569285468, (-10.492, -11.357, 0.33500000000000013)), ('A', ' 608 ', 'ILE', 0.0037935183531769908, (6.258, -3.814, 1.2290000000000003)), ('A', ' 544 ', 'ARG', 0.012797806415222027, (-7.107, 6.257, -7.107000000000002)), ('A', ' 569 ', 'ILE', 0.00512602, (-10.397, -10.966, 0.6520000000000002)), ('A', ' 608 ', 'ILE', 0.004780172553884308, (6.431, -4.256, 1.1380000000000001)), ('A', ' 517 ', 'GLU', 0.005097894231398193, (-20.171, 13.683, -12.115000000000004)), ('A', ' 569 ', 'ILE', 0.00256301, (-10.228, -11.318, 0.7670000000000002)), ('A', ' 650 ', 'SER', 0.02814260374354243, (23.045, 5.3870000000000005, 1.931)), ('A', ' 513 ', 'VAL', 0.0, (-25.681, 4.687000000000002, -8.984)), ('A', ' 532 ', 'ASN', 0.03521616757700284, (-0.7079999999999997, 4.857, 8.61)), ('A', ' 569 ', 'ILE', 0.003633027576723299, (-10.49, -11.461, 0.211)), ('A', ' 608 ', 'ILE', 0.003191320706356652, (6.285000000000001, -4.023, 1.3990000000000005)), ('A', ' 513 ', 'VAL', 0.0, (-21.88, 5.642, -1.2290000000000003)), ('A', ' 520 ', 'ASN', 0.018069356107033745, (-12.539, 20.434, -5.687)), ('A', ' 532 ', 'ASN', 0.021927783331330806, (-0.7179999999999997, 4.952000000000002, 8.349)), ('A', ' 569 ', 'ILE', 0.0025544750773870382, (-10.293, -11.123, 0.4940000000000001)), ('A', ' 608 ', 'ILE', 0.00512602, (6.047, -4.109, 2.012000000000001)), ('A', '  -1 ', 'MET', 0.041307614501332995, (-20.028, 5.203000000000002, -16.541000000000007)), ('A', ' 522 ', 'LYS', 0.003916674173702037, (-6.193, 19.204000000000004, -6.88)), ('A', ' 569 ', 'ILE', 0.0023087289587816217, (-10.337, -11.101, 0.4410000000000001)), ('A', ' 608 ', 'ILE', 0.00256301, (6.129, -4.171, 1.7)), ('A', ' 611 ', 'VAL', 0.07375107853292537, (7.833000000000001, -7.024999999999999, 8.856)), ('A', ' 516 ', 'SER', 0.021707849239136386, (-19.966, 10.371, -7.008000000000002)), ('A', ' 569 ', 'ILE', 0.071049480622124, (-10.179, -11.305, 0.8210000000000002)), ('A', ' 523 ', 'GLU', 0.020196386023837633, (-1.3090000000000004, 18.625, -6.354)), ('A', ' 608 ', 'ILE', 0.006741152684248176, (6.216, -4.2, 1.6330000000000005)), ('A', ' 650 ', 'SER', 0.033096186131766125, (22.457, 6.677, 1.1850000000000005)), ('A', ' 517 ', 'GLU', 0.000600611329798444, (-16.325, 15.387, -12.816000000000004)), ('A', ' 569 ', 'ILE', 0.00512602, (-9.826, -11.342, 0.588)), ('A', ' 572 ', 'GLY', 0.0456109568980418, (-5.162000000000002, -10.122, -7.987000000000001)), ('A', ' 573 ', 'ILE', 0.00465393710704, (-6.236000000000002, -6.453, -8.172)), ('A', '  -2 ', 'HIS', 0.039116681740522095, (-30.961, 6.668000000000001, -16.107000000000003)), ('A', '  -1 ', 'MET', 0.0037198534133615103, (-31.747, 9.329, -13.384000000000004)), ('A', ' 523 ', 'GLU', 0.006607893873042315, (-1.9059999999999995, 18.558, -7.026000000000002)), ('A', ' 532 ', 'ASN', 0.006975638934359004, (-0.34699999999999986, 5.035000000000002, 8.686000000000003)), ('A', ' 569 ', 'ILE', 0.0014020934381410188, (-10.381000000000002, -11.462, 1.013)), ('A', ' 578 ', 'VAL', 0.03674271697446243, (-8.816, 1.617, -3.044000000000001)), ('A', ' 579 ', 'ARG', 0.03192881055013403, (-7.816, -0.66, -5.949000000000002)), ('A', ' 608 ', 'ILE', 0.0018167231593415208, (6.113, -3.847, 1.108)), ('A', ' 565 ', 'LYS', 0.001406422253387974, (-17.991, -3.223, 4.252)), ('A', ' 566 ', 'GLY', 0.0011773300997714904, (-18.228, -6.99, 4.274)), ('A', '  -3 ', 'SER', 0.029500776365358607, (-29.687, 11.604, -11.338)), ('A', ' 513 ', 'VAL', 0.03825194737470703, (-22.808, 9.078, -5.308)), ('A', ' 569 ', 'ILE', 0.0752627541258201, (-10.546, -11.469999999999999, 0.6680000000000003)), ('A', ' 608 ', 'ILE', 0.00556729366782857, (6.023000000000001, -3.668, 1.0300000000000005)), ('A', '  -1 ', 'MET', 0.017708636773805027, (-25.774, 1.254, -0.206)), ('A', ' 513 ', 'VAL', 0.0, (-23.355, 4.023, -1.338)), ('A', ' 518 ', 'ALA', 0.02732934702356858, (-16.303000000000004, 17.173, -3.176)), ('A', ' 523 ', 'GLU', 0.004147879071982299, (-1.328, 19.325, -5.377000000000002)), ('A', ' 569 ', 'ILE', 0.0003152454455984736, (-10.517000000000003, -11.054, 0.3430000000000001))]
data['omega'] = [('A', ' 566 ', 'GLY', None, (-18.717, -5.882, 4.05)), ('A', ' 651 ', 'SER', None, (22.100000000000005, 4.1290000000000004, -1.8820000000000001)), ('A', '  -3 ', 'SER', None, (-23.37, 9.396, 16.327)), ('A', ' 565 ', 'LYS', None, (-17.118, -2.869, 3.690000000000001)), ('A', '  -2 ', 'HIS', None, (-34.189, 33.868, -8.048000000000004)), ('A', ' 635 ', 'VAL', None, (6.059, 4.681, 6.24)), ('A', ' 651 ', 'SER', None, (23.435, 7.776, 3.111)), ('A', ' 632 ', 'VAL', None, (4.413, 6.519, -3.596)), ('A', ' 524 ', 'GLU', None, (-0.33900000000000013, 16.769, -6.365)), ('A', ' 632 ', 'VAL', None, (4.327999999999999, 6.773, -3.4810000000000008)), ('A', '  -2 ', 'HIS', None, (-19.893, 4.184, -18.118))]
data['rota'] = [('A', ' 526 ', 'LEU', 0.01785907558046012, (6.001, 11.782, -3.36)), ('A', ' 570 ', 'GLN', 0.0027733184574643558, (-9.25, -12.214, -3.096)), ('A', ' 585 ', 'SER', 0.005359990245779045, (2.944000000000001, -14.396000000000003, 1.934)), ('A', ' 586 ', 'LYS', 0.0, (4.865, -16.694, -0.4570000000000001)), ('A', ' 595 ', 'LYS', 0.16131953524943754, (5.0699999999999985, -7.881999999999999, -11.099000000000004)), ('A', ' 597 ', 'ASN', 0.27011087092135916, (6.747, -3.3240000000000007, -13.160000000000004)), ('A', ' 598 ', 'SER', 0.06828788144028282, (3.921, -4.311, -15.578)), ('A', ' 626 ', 'SER', 0.23408565814189186, (14.395, -1.976, -7.414000000000001)), ('A', ' 635 ', 'VAL', 0.17211390716180267, (6.610000000000003, 4.327999999999999, 8.156)), ('A', ' 530 ', 'SER', 0.2882374951893762, (4.584000000000001, 9.89, 8.302)), ('A', ' 533 ', 'LEU', 0.11855658454144267, (-2.928, 3.012000000000001, 7.224000000000001)), ('A', ' 541 ', 'GLU', 0.10426087777690632, (-9.195, 6.977, -2.54)), ('A', ' 542 ', 'GLU', 0.09632340309323954, (-8.404000000000002, 10.448, -3.8860000000000006)), ('A', ' 562 ', 'ARG', 0.0, (-14.176, -3.911, 7.675)), ('A', ' 563 ', 'LYS', 0.15657693937079536, (-14.129, -0.3839999999999999, 6.128)), ('A', ' 567 ', 'ILE', 0.009795582147505623, (-15.762, -7.111, 0.951)), ('A', ' 570 ', 'GLN', 0.0, (-9.497000000000002, -11.865, -3.528000000000001)), ('A', ' 585 ', 'SER', 0.05735492149931957, (3.288, -14.021, 0.9890000000000001)), ('A', ' 594 ', 'THR', 0.021758937509730458, (9.325000000000003, -7.4, -10.947000000000001)), ('A', ' 600 ', 'ASN', 0.0, (4.442, 1.1139999999999997, -13.838000000000003)), ('A', ' 606 ', 'MET', 0.032857085196927996, (4.832, 0.956, 3.315000000000001)), ('A', ' 612 ', 'THR', 0.0028257932867521143, (5.734000000000003, -9.621, 7.412000000000002)), ('A', ' 622 ', 'ARG', 0.0, (17.021, -1.888, -0.304)), ('A', ' 645 ', 'ASN', 0.19068291092804526, (15.576, 8.227, 3.231)), ('A', '  -3 ', 'SER', 0.1861245503640033, (-24.68, 10.035, 16.432)), ('A', ' 514 ', 'LEU', 0.0853477842734073, (-18.017, 14.837, 9.515000000000002)), ('A', ' 529 ', 'VAL', 0.04223137020687419, (5.567000000000001, 10.065, 4.927)), ('A', ' 534 ', 'ARG', 0.08512355096443978, (-6.197, 4.885999999999998, 7.164)), ('A', ' 541 ', 'GLU', 0.04843860477266017, (-8.84, 7.025, -2.987)), ('A', ' 544 ', 'ARG', 0.06597654718420692, (-7.038000000000003, 6.595, -7.351)), ('A', ' 556 ', 'ILE', 0.2336403262316422, (-4.2189999999999985, -4.789, 7.940000000000001)), ('A', ' 579 ', 'ARG', 0.012659473547697243, (-7.781, 0.132, -6.163)), ('A', ' 587 ', 'GLU', 6.383423262368213e-05, (6.451000000000001, -15.122000000000002, -3.011)), ('A', ' 592 ', 'ILE', 0.1915580276660772, (6.278999999999998, -8.269000000000004, -6.302)), ('A', ' 594 ', 'THR', 0.08408425851488324, (9.449, -7.144999999999998, -10.38)), ('A', ' 598 ', 'SER', 0.05771054285451899, (5.240000000000002, -4.086000000000001, -15.254000000000001)), ('A', ' 606 ', 'MET', 0.0083252044723804, (4.88, 1.12, 2.952)), ('A', ' 611 ', 'VAL', 0.1440753692361281, (7.230000000000003, -6.991, 8.258)), ('A', ' 622 ', 'ARG', 0.007416591983641147, (17.296, -1.4860000000000002, -0.286)), ('A', ' 623 ', 'CYS', 0.05492158234119415, (14.762, -3.834, -1.9360000000000002)), ('A', ' 635 ', 'VAL', 0.03673449479266417, (6.5660000000000025, 4.322, 8.082000000000004)), ('A', ' 639 ', 'ASP', 0.16923177788672789, (12.762000000000002, 9.553, 12.402000000000003)), ('A', ' 525 ', 'ILE', 0.10197388336502568, (2.5539999999999994, 14.016, -3.107000000000001)), ('A', ' 526 ', 'LEU', 0.0944179913412832, (5.488, 11.593, -3.5300000000000007)), ('A', ' 533 ', 'LEU', 0.07345053588950183, (-4.610000000000002, 3.592999999999999, 6.542)), ('A', ' 541 ', 'GLU', 0.014755787500490752, (-9.131, 7.277, -3.422)), ('A', ' 544 ', 'ARG', 0.16954832886248355, (-6.685000000000002, 6.225, -7.690000000000001)), ('A', ' 563 ', 'LYS', 0.02732060503386701, (-13.551, -0.389, 6.629000000000001)), ('A', ' 567 ', 'ILE', 0.0016218285737355715, (-15.614, -6.792, 0.905)), ('A', ' 568 ', 'LYS', 0.06741979264870526, (-14.097, -10.313, 1.414)), ('A', ' 570 ', 'GLN', 0.0, (-9.495, -12.162, -2.635)), ('A', ' 584 ', 'THR', 0.13226454062923726, (1.0240000000000005, -14.496, -1.298)), ('A', ' 594 ', 'THR', 0.14842721631952183, (9.067000000000004, -7.4079999999999995, -10.841)), ('A', ' 598 ', 'SER', 0.04110802695221968, (4.906, -4.058, -15.582)), ('A', ' 600 ', 'ASN', 0.14625763324116872, (4.434, 1.137, -14.101)), ('A', ' 606 ', 'MET', 0.008368739234561289, (4.535, 0.688, 2.889)), ('A', ' 611 ', 'VAL', 0.0408374420698278, (7.178000000000001, -7.3370000000000015, 7.900000000000001)), ('A', ' 613 ', 'HIS', 0.031418262274034346, (8.899000000000003, -11.356, 4.472)), ('A', ' 617 ', 'LEU', 0.11886539602629179, (13.967, -1.512, 7.324000000000001)), ('A', ' 639 ', 'ASP', 0.061294298068909375, (11.701, 8.561, 13.325000000000003)), ('A', ' 643 ', 'THR', 0.03637409709402146, (15.896000000000004, 6.488, 8.658000000000001)), ('A', ' 526 ', 'LEU', 0.023316280105478437, (5.578, 11.643, -3.7350000000000003)), ('A', ' 534 ', 'ARG', 0.19411177587415832, (-6.403, 5.761, 7.111000000000001)), ('A', ' 541 ', 'GLU', 0.21527631226234958, (-9.057, 7.15, -3.464)), ('A', ' 552 ', 'ASP', 0.06870464069585155, (-0.465, -11.972000000000001, 5.162)), ('A', ' 553 ', 'VAL', 0.18418345933490585, (-0.785, -8.871, 7.397)), ('A', ' 557 ', 'MET', 0.005665314085126376, (-6.361, -6.758, 6.086)), ('A', ' 567 ', 'ILE', 0.2683416904717352, (-15.834000000000001, -7.913, 1.1490000000000005)), ('A', ' 570 ', 'GLN', 0.007322621790428983, (-9.375, -11.823, -3.084000000000001)), ('A', ' 591 ', 'SER', 0.21755877406593138, (8.903000000000004, -11.321, -7.479)), ('A', ' 592 ', 'ILE', 0.267384808417817, (6.097, -8.881, -6.59)), ('A', ' 594 ', 'THR', 0.016319203132297844, (8.994000000000003, -7.453, -10.984)), ('A', ' 595 ', 'LYS', 0.027966837607749602, (5.160999999999998, -7.74, -11.184)), ('A', ' 598 ', 'SER', 0.06017496524827414, (5.455000000000002, -4.458, -15.508)), ('A', ' 617 ', 'LEU', 0.14203573571686395, (14.05, -0.9990000000000002, 7.182000000000002)), ('A', ' 622 ', 'ARG', 0.014716522870698802, (17.013, -1.352, -0.621)), ('A', ' 623 ', 'CYS', 0.21733047111534867, (14.271, -3.533, -2.197)), ('A', ' 634 ', 'SER', 0.28118146333162336, (4.870000000000001, 4.931, 4.939)), ('A', ' 636 ', 'SER', 0.13395536691597792, (4.443000000000001, 4.073, 11.684)), ('A', ' 637 ', 'SER', 0.007307650813030849, (6.781, 6.696999999999999, 13.275)), ('A', ' 643 ', 'THR', 0.17641733714911345, (16.37, 6.388000000000002, 8.791)), ('A', ' 645 ', 'ASN', 0.15153413194082554, (15.925, 8.66, 3.6720000000000006)), ('A', '  -3 ', 'SER', 0.016556613007836878, (-19.97, -6.046, 12.498000000000003)), ('A', ' 525 ', 'ILE', 0.16254640798145267, (2.633, 14.189, -3.3240000000000007)), ('A', ' 526 ', 'LEU', 0.03869931587544322, (5.4639999999999995, 11.648, -3.6330000000000005)), ('A', ' 533 ', 'LEU', 0.05920218067865882, (-3.807000000000001, 3.615, 6.783)), ('A', ' 534 ', 'ARG', 0.1949287531346912, (-6.448, 6.404, 6.913000000000002)), ('A', ' 535 ', 'GLU', 0.2847257739653836, (-4.431000000000001, 9.179, 5.195)), ('A', ' 541 ', 'GLU', 0.04311950742689526, (-9.036, 7.182, -3.247)), ('A', ' 557 ', 'MET', 0.0026057754812423297, (-5.943, -6.719, 6.224)), ('A', ' 562 ', 'ARG', 0.06056277957587509, (-13.222, -3.409, 8.399000000000003)), ('A', ' 567 ', 'ILE', 0.2078232487637472, (-15.432000000000002, -7.632, 1.051)), ('A', ' 570 ', 'GLN', 0.2528680807738331, (-9.235999999999999, -12.468, -2.948)), ('A', ' 584 ', 'THR', 0.16221502895529988, (0.96, -14.205, -2.191)), ('A', ' 592 ', 'ILE', 0.14516311452053254, (6.207, -8.565000000000001, -6.579)), ('A', ' 594 ', 'THR', 0.0258387386566028, (9.168000000000003, -7.324999999999998, -10.818000000000001)), ('A', ' 598 ', 'SER', 0.05557542184548047, (5.169, -4.392, -15.426)), ('A', ' 606 ', 'MET', 0.25104900248720635, (4.27, 0.939, 2.9250000000000007)), ('A', ' 617 ', 'LEU', 0.09712293763370708, (13.725000000000001, -1.4160000000000004, 7.521)), ('A', ' 622 ', 'ARG', 0.20062228913765415, (16.972, -1.352, -0.294)), ('A', ' 624 ', 'MET', 0.17003554263852036, (12.052, -1.254, -2.733)), ('A', ' 628 ', 'LYS', 0.0, (11.052, 1.146, -11.265)), ('A', ' 643 ', 'THR', 0.07628508556247354, (15.99, 6.367000000000002, 8.594000000000001)), ('A', ' 524 ', 'GLU', 0.25338771615744665, (0.037, 14.370999999999995, -5.86)), ('A', ' 530 ', 'SER', 0.16414775508509405, (4.356000000000002, 9.55, 7.744000000000001)), ('A', ' 533 ', 'LEU', 0.08009550321008352, (-3.585, 3.4739999999999998, 6.419)), ('A', ' 536 ', 'MET', 0.031826445967866844, (-3.407000000000001, 6.648, 2.397)), ('A', ' 541 ', 'GLU', 0.06569448241562674, (-9.346, 7.441, -3.5220000000000007)), ('A', ' 544 ', 'ARG', 0.054049562536284394, (-6.8820000000000014, 6.562, -7.87)), ('A', ' 562 ', 'ARG', 0.03985042351027955, (-13.514000000000001, -3.526, 8.391)), ('A', ' 563 ', 'LYS', 0.0, (-13.679000000000004, -0.21900000000000006, 6.465)), ('A', ' 567 ', 'ILE', 0.16616872982478934, (-15.257, -7.99, 1.5060000000000004)), ('A', ' 594 ', 'THR', 0.20190200775844258, (9.183000000000003, -6.87, -10.879000000000003)), ('A', ' 596 ', 'LEU', 0.23380128193599437, (4.494, -3.475, -10.073)), ('A', ' 598 ', 'SER', 0.022498550766035994, (4.361, -4.113, -15.381)), ('A', ' 606 ', 'MET', 0.08083497382949924, (4.729, 0.538, 2.549)), ('A', ' 611 ', 'VAL', 0.04244579445448463, (7.1850000000000005, -7.62, 8.052000000000003)), ('A', ' 612 ', 'THR', 0.05850622124517793, (5.621000000000001, -10.354999999999995, 5.908)), ('A', ' 613 ', 'HIS', 0.26577252013443586, (9.146000000000004, -11.436, 4.861)), ('A', ' 622 ', 'ARG', 0.08677494434329243, (17.361, -1.366, -0.3160000000000001)), ('A', ' 627 ', 'LEU', 0.2891777523799642, (11.808000000000003, -0.7469999999999998, -7.869000000000001)), ('A', ' 634 ', 'SER', 0.16071529951050784, (4.853, 4.898, 4.333)), ('A', ' 639 ', 'ASP', 0.10221588809547481, (11.050000000000002, 9.944, 13.219)), ('A', ' 522 ', 'LYS', 0.0, (-3.2560000000000007, 17.542, -10.502)), ('A', ' 526 ', 'LEU', 0.02780294034040703, (5.041, 10.863, -3.814)), ('A', ' 528 ', 'THR', 0.008159601566148922, (7.944, 8.864, 2.127)), ('A', ' 541 ', 'GLU', 0.12015332693269187, (-8.989, 6.972, -3.067)), ('A', ' 557 ', 'MET', 0.03494083690593222, (-6.932, -6.662, 6.535000000000002)), ('A', ' 570 ', 'GLN', 0.0, (-9.502000000000002, -11.989, -3.285)), ('A', ' 584 ', 'THR', 0.06406082798141162, (1.096, -13.976, -1.8300000000000003)), ('A', ' 594 ', 'THR', 0.029645413516555825, (8.936000000000003, -7.711, -10.835)), ('A', ' 596 ', 'LEU', 0.0032061564225700826, (4.618, -4.209, -10.009)), ('A', ' 598 ', 'SER', 0.03187152728543033, (4.909, -4.727, -15.264)), ('A', ' 606 ', 'MET', 0.06520680158245193, (4.692, 0.9100000000000003, 3.228000000000001)), ('A', ' 612 ', 'THR', 0.06316352158255853, (5.22, -9.415, 6.252000000000001)), ('A', ' 617 ', 'LEU', 0.11538173162623484, (13.866000000000003, -1.118, 7.241)), ('A', ' 622 ', 'ARG', 0.026045001218794994, (16.917, -1.302, -0.5230000000000002)), ('A', ' 624 ', 'MET', 0.005439426277604192, (12.05, -0.742, -2.788)), ('A', ' 628 ', 'LYS', 0.0485937129367347, (10.463, 0.7340000000000002, -11.584)), ('A', ' 635 ', 'VAL', 0.07044660504201437, (6.2120000000000015, 4.0520000000000005, 8.288)), ('A', ' 643 ', 'THR', 0.029516994982498778, (16.116, 6.833000000000002, 8.529000000000002)), ('A', ' 645 ', 'ASN', 0.2728572023361864, (15.111, 8.569999999999997, 3.228000000000001)), ('A', ' 517 ', 'GLU', 0.009595706970250974, (-19.328, 13.872, 0.802)), ('A', ' 522 ', 'LYS', 0.12262960835551942, (-5.839000000000002, 18.29, -4.543)), ('A', ' 529 ', 'VAL', 0.2571138183707277, (5.477, 10.177, 4.567000000000001)), ('A', ' 533 ', 'LEU', 0.1648879107078427, (-3.051, 3.072000000000001, 7.141000000000001)), ('A', ' 541 ', 'GLU', 0.28303865775769216, (-8.949, 7.01, -3.031)), ('A', ' 552 ', 'ASP', 0.06368578427507275, (-0.476, -12.12, 5.456000000000001)), ('A', ' 556 ', 'ILE', 0.1436094714219675, (-3.652000000000001, -4.212000000000001, 7.787000000000001)), ('A', ' 557 ', 'MET', 0.04722704932001279, (-6.432, -6.307, 6.267000000000001)), ('A', ' 567 ', 'ILE', 0.11309737080895381, (-15.645, -7.57, 0.998)), ('A', ' 574 ', 'VAL', 0.1721611799471305, (-9.076, -5.814, -5.929000000000002)), ('A', ' 592 ', 'ILE', 0.09199295687474963, (6.574, -8.652, -6.676000000000002)), ('A', ' 598 ', 'SER', 0.017268212104797544, (5.367, -3.945, -15.039)), ('A', ' 600 ', 'ASN', 0.12577283605896816, (3.698000000000001, 1.1069999999999995, -14.606000000000002)), ('A', ' 606 ', 'MET', 0.04738744531004836, (4.477, 0.6109999999999998, 2.62)), ('A', ' 611 ', 'VAL', 0.2500586929214421, (7.135000000000002, -6.565999999999998, 8.454)), ('A', ' 623 ', 'CYS', 0.05492158234119415, (14.564, -3.911, -2.11)), ('A', ' 628 ', 'LYS', 0.09158867587740971, (10.768, 0.992, -11.429)), ('A', ' 634 ', 'SER', 0.14583404497497762, (4.83, 4.839, 4.894)), ('A', ' 635 ', 'VAL', 0.030471174359936126, (6.340000000000002, 3.922, 8.261)), ('A', ' 637 ', 'SER', 0.12781098083391318, (7.019, 6.692, 13.049)), ('A', ' 514 ', 'LEU', 0.26648921525155544, (-23.104, 6.250000000000001, -9.117)), ('A', ' 522 ', 'LYS', 0.2243968637162544, (-5.702, 18.937, -6.807000000000001)), ('A', ' 525 ', 'ILE', 0.16732187673575016, (2.5879999999999996, 14.233, -3.595)), ('A', ' 532 ', 'ASN', 0.0047082160742753275, (-0.7299999999999999, 6.346000000000002, 8.624000000000002)), ('A', ' 541 ', 'GLU', 0.21624412539156634, (-9.229, 6.097000000000001, -2.527)), ('A', ' 547 ', 'MET', 0.05258327264259992, (-2.146, -0.24, -2.991)), ('A', ' 557 ', 'MET', 0.0012087704160481736, (-6.748000000000001, -6.695000000000002, 6.228)), ('A', ' 565 ', 'LYS', 0.0, (-17.956, -3.407, 4.027000000000001)), ('A', ' 567 ', 'ILE', 0.019561315341210538, (-15.07, -7.253, 0.893)), ('A', ' 568 ', 'LYS', 0.06678470096102158, (-13.936000000000003, -10.839, 1.754)), ('A', ' 576 ', 'TYR', 0.2786140429809732, (-13.028000000000002, -1.7140000000000004, -3.6400000000000006)), ('A', ' 578 ', 'VAL', 0.007351242675213143, (-9.128, 1.839, -3.113)), ('A', ' 585 ', 'SER', 0.019487004726482866, (3.641000000000001, -14.61, 1.39)), ('A', ' 591 ', 'SER', 0.2147379537419457, (8.953000000000003, -10.904, -7.541000000000001)), ('A', ' 592 ', 'ILE', 0.17194576234049447, (6.269999999999998, -8.311000000000003, -6.75)), ('A', ' 594 ', 'THR', 0.021758937509730458, (9.255000000000004, -7.208, -11.095000000000004)), ('A', ' 598 ', 'SER', 0.196902013761238, (5.358, -4.429, -15.527)), ('A', ' 600 ', 'ASN', 0.13966312109600368, (4.36, 0.8850000000000002, -14.020000000000003)), ('A', ' 606 ', 'MET', 0.07425849180505009, (4.647, 1.352, 2.8720000000000003)), ('A', ' 611 ', 'VAL', 0.15023904720115824, (8.046, -7.421, 8.586)), ('A', ' 613 ', 'HIS', 0.2836168290444915, (8.389, -11.383, 4.854)), ('A', ' 623 ', 'CYS', 0.05492158234119415, (14.319000000000003, -3.7109999999999994, -2.226)), ('A', ' 626 ', 'SER', 0.08245284718630602, (15.226, -1.36, -7.014000000000001)), ('A', ' 628 ', 'LYS', 0.0, (11.486, 1.1200000000000003, -11.479000000000003)), ('A', ' 636 ', 'SER', 0.05359990173019469, (4.163, 4.108, 11.544000000000004)), ('A', ' 648 ', 'LEU', 0.058639989152478186, (17.6, 5.579, 0.15700000000000006)), ('A', ' 649 ', 'THR', 0.06362526408165102, (20.665, 7.861, 0.15800000000000006)), ('A', ' 513 ', 'VAL', 0.00945159699767828, (-25.681, 4.687000000000002, -8.984)), ('A', ' 514 ', 'LEU', 0.00034508763225129174, (-21.893, 5.263, -9.193000000000003)), ('A', ' 526 ', 'LEU', 0.01811726204851844, (5.392, 10.969000000000001, -3.592000000000001)), ('A', ' 532 ', 'ASN', 0.2670838290770582, (-0.7079999999999997, 4.857, 8.61)), ('A', ' 533 ', 'LEU', 0.0021725741201690466, (-3.8640000000000008, 3.382000000000001, 6.975)), ('A', ' 544 ', 'ARG', 0.026397612617860937, (-6.837000000000002, 6.778, -7.303000000000001)), ('A', ' 554 ', 'ARG', 0.08953295598625448, (-4.337, -9.928, 9.184)), ('A', ' 557 ', 'MET', 0.026700502160928143, (-6.798, -6.998, 6.457000000000002)), ('A', ' 563 ', 'LYS', 0.0, (-13.933, -0.23, 5.784)), ('A', ' 570 ', 'GLN', 0.0, (-9.274, -12.05, -3.3240000000000007)), ('A', ' 584 ', 'THR', 0.009821281496158338, (1.3039999999999994, -13.931, -1.8950000000000002)), ('A', ' 594 ', 'THR', 0.027198673342354596, (8.928000000000004, -7.405, -10.999000000000004)), ('A', ' 598 ', 'SER', 0.055899211933510225, (4.055, -4.073, -15.53)), ('A', ' 599 ', 'LEU', 0.23501991491781857, (1.768, -1.547, -13.798000000000004)), ('A', ' 606 ', 'MET', 0.1680806631491205, (4.54, 0.824, 3.064)), ('A', ' 611 ', 'VAL', 0.17961861148292363, (7.646000000000003, -6.782999999999999, 8.463000000000003)), ('A', ' 612 ', 'THR', 0.007583736313667416, (5.546000000000001, -9.541, 6.765)), ('A', ' 617 ', 'LEU', 0.08580402189542688, (14.213, -1.125, 7.24)), ('A', ' 643 ', 'THR', 0.019871546188543955, (16.163, 6.695000000000002, 8.476)), ('A', ' 648 ', 'LEU', 0.14134173290201188, (17.521, 5.924, -0.186)), ('A', '  -3 ', 'SER', 0.09894678040262306, (-25.357, 0.357, 5.095)), ('A', ' 525 ', 'ILE', 0.05949500097333026, (2.326000000000001, 14.272, -2.863000000000001)), ('A', ' 533 ', 'LEU', 0.11021128703999612, (-3.923, 3.508, 6.764)), ('A', ' 544 ', 'ARG', 0.1266125754011847, (-7.124000000000001, 6.014, -7.519000000000001)), ('A', ' 557 ', 'MET', 0.09351290266594575, (-6.37, -6.517, 6.447)), ('A', ' 584 ', 'THR', 0.05786578971429573, (0.9210000000000003, -14.331, -2.233)), ('A', ' 587 ', 'GLU', 0.0, (6.548, -15.23, -3.013000000000001)), ('A', ' 598 ', 'SER', 0.05359990173019469, (5.327, -3.871, -15.115000000000002)), ('A', ' 600 ', 'ASN', 0.1435248613765939, (4.057000000000001, 1.2380000000000004, -14.492)), ('A', ' 606 ', 'MET', 0.032948076586858055, (4.382, 0.951, 2.879000000000001)), ('A', ' 617 ', 'LEU', 0.09649527491998759, (14.219, -1.383, 7.358)), ('A', ' 624 ', 'MET', 0.06725666710011245, (12.062, -1.234, -2.640000000000001)), ('A', ' 625 ', 'ARG', 0.021944786473375708, (14.469000000000003, 1.0920000000000003, -4.543)), ('A', ' 635 ', 'VAL', 0.09494994719756635, (5.967000000000002, 3.919, 8.092)), ('A', ' 636 ', 'SER', 0.25729763673954775, (4.298000000000002, 3.958, 11.528)), ('A', ' 637 ', 'SER', 0.24484816503443524, (6.869, 6.428, 12.982000000000001)), ('A', ' 643 ', 'THR', 0.13333983366691796, (16.06, 6.512000000000001, 8.74)), ('A', ' 651 ', 'SER', 0.15592941916771177, (22.224, 3.028, -1.5750000000000002)), ('A', ' 523 ', 'GLU', 0.03458997766945329, (-2.4909999999999997, 18.827, -6.005)), ('A', ' 524 ', 'GLU', 0.27755316956272075, (-0.537, 15.595000000000002, -5.521000000000001)), ('A', ' 525 ', 'ILE', 0.1845555003639573, (2.270000000000001, 14.513, -3.162)), ('A', ' 530 ', 'SER', 0.17828526982915754, (4.588000000000002, 10.264, 7.989)), ('A', ' 563 ', 'LYS', 0.03185070883990362, (-13.662, 0.615, 5.904)), ('A', ' 567 ', 'ILE', 0.10277523539415052, (-15.138000000000003, -7.362, 0.4900000000000001)), ('A', ' 570 ', 'GLN', 0.00441028053735586, (-9.295999999999998, -11.929, -3.119)), ('A', ' 578 ', 'VAL', 0.007351242675213143, (-9.281, 1.642, -3.3080000000000007)), ('A', ' 592 ', 'ILE', 0.20571059831421792, (5.712999999999998, -8.345, -6.587)), ('A', ' 594 ', 'THR', 0.07142564197312805, (8.719000000000003, -7.18, -10.865)), ('A', ' 596 ', 'LEU', 0.040744155631042715, (4.557, -3.394000000000001, -10.231)), ('A', ' 598 ', 'SER', 0.03839110300005005, (5.276, -3.952000000000001, -15.428)), ('A', ' 605 ', 'THR', 0.09613211193126193, (1.8250000000000004, 1.652, 0.35700000000000004)), ('A', ' 606 ', 'MET', 0.0, (4.367, 0.8920000000000002, 3.125000000000001)), ('A', ' 611 ', 'VAL', 0.03478684115351844, (7.833000000000001, -7.024999999999999, 8.856)), ('A', ' 648 ', 'LEU', 0.027064192467924037, (17.534, 5.806, -0.057)), ('A', ' 649 ', 'THR', 0.2308314540051144, (20.261000000000003, 8.412, -0.6360000000000002)), ('A', '  -1 ', 'MET', 0.10835573031269495, (-23.204000000000004, 0.529, -2.275000000000001)), ('A', ' 523 ', 'GLU', 0.0759743811065378, (-1.0990000000000002, 19.013, -6.477)), ('A', ' 526 ', 'LEU', 0.035600221725722955, (5.787, 11.868, -3.488)), ('A', ' 530 ', 'SER', 0.002771568698786325, (4.602000000000002, 9.788, 7.9190000000000005)), ('A', ' 533 ', 'LEU', 0.019727690701099962, (-3.4850000000000003, 3.415000000000001, 6.954)), ('A', ' 541 ', 'GLU', 0.1346435575389436, (-9.063, 7.063, -3.632)), ('A', ' 562 ', 'ARG', 0.006086438628686099, (-13.609000000000004, -3.674, 8.658000000000001)), ('A', ' 570 ', 'GLN', 0.012583192501483277, (-9.396999999999998, -11.867, -2.886000000000001)), ('A', ' 571 ', 'GLU', 0.08063145164042744, (-6.172, -12.206, -4.955)), ('A', ' 584 ', 'THR', 0.09624275576197723, (0.841, -14.308, -3.008)), ('A', ' 587 ', 'GLU', 0.15602174773845906, (6.477000000000002, -15.136, -3.438)), ('A', ' 592 ', 'ILE', 0.17400318001035206, (6.285000000000001, -8.691, -6.544)), ('A', ' 594 ', 'THR', 0.13906904028909908, (9.188000000000004, -7.064, -10.780000000000003)), ('A', ' 595 ', 'LYS', 0.17662924604779237, (5.385, -7.376, -11.134000000000004)), ('A', ' 596 ', 'LEU', 0.1750786824947817, (4.734, -3.720000000000001, -10.106)), ('A', ' 598 ', 'SER', 0.0583693435296395, (5.404, -4.321, -15.377000000000002)), ('A', ' 600 ', 'ASN', 0.1528816890924938, (4.604000000000001, 0.9290000000000003, -14.064)), ('A', ' 606 ', 'MET', 0.09811228642890293, (4.691, 1.0, 2.532)), ('A', ' 611 ', 'VAL', 0.03942718615349563, (7.059000000000001, -7.911, 8.056000000000001)), ('A', ' 612 ', 'THR', 0.24038025569343102, (5.570000000000002, -10.496999999999995, 5.682)), ('A', ' 626 ', 'SER', 0.07204979376292833, (14.747, -2.064, -6.749)), ('A', ' 635 ', 'VAL', 0.18319826946819523, (6.005000000000003, 4.375, 7.75)), ('A', ' 525 ', 'ILE', 0.2803656467241491, (2.599, 13.949, -2.996)), ('A', ' 526 ', 'LEU', 0.2669077890798221, (5.508, 11.501, -3.338000000000001)), ('A', ' 534 ', 'ARG', 0.0, (-7.276, 5.943, 6.715)), ('A', ' 541 ', 'GLU', 0.05894562918182368, (-8.838, 7.34, -3.8120000000000003)), ('A', ' 552 ', 'ASP', 0.0010541867828195034, (-0.496, -12.401999999999996, 5.654)), ('A', ' 557 ', 'MET', 0.003204093630742742, (-6.106, -6.441, 6.440000000000002)), ('A', ' 563 ', 'LYS', 0.18583506668665054, (-13.796, -0.047, 6.034)), ('A', ' 567 ', 'ILE', 0.12447771497351018, (-15.739, -7.467, 0.776)), ('A', ' 570 ', 'GLN', 0.0013002880527505489, (-9.251, -12.149, -2.566)), ('A', ' 571 ', 'GLU', 0.23668370079576287, (-5.962000000000001, -12.73, -4.427)), ('A', ' 573 ', 'ILE', 0.2716769948102388, (-6.143000000000004, -7.258, -8.183)), ('A', ' 596 ', 'LEU', 0.1166966395834979, (4.454, -3.5019999999999993, -9.657)), ('A', ' 598 ', 'SER', 0.042834979455431854, (5.229, -4.23, -14.923000000000002)), ('A', ' 606 ', 'MET', 0.06665561138489921, (4.133, 0.9600000000000002, 3.275000000000001)), ('A', ' 623 ', 'CYS', 0.11735900897436526, (14.951000000000004, -3.608, -2.225)), ('A', ' 626 ', 'SER', 0.02947994798887521, (15.21, -1.266, -7.349000000000001)), ('A', ' 649 ', 'THR', 0.2561504707308208, (19.581, 8.557, -0.557)), ('A', ' 524 ', 'GLU', 0.2734153516391939, (0.163, 14.38, -6.463)), ('A', ' 533 ', 'LEU', 0.002094451800356621, (-3.607000000000001, 2.756, 6.513)), ('A', ' 535 ', 'GLU', 0.08040983697728325, (-4.321000000000001, 8.321999999999996, 5.483)), ('A', ' 536 ', 'MET', 0.13482582469703158, (-3.545000000000001, 6.139999999999999, 2.475)), ('A', ' 541 ', 'GLU', 0.2549016466612004, (-9.326, 7.311, -3.477)), ('A', ' 563 ', 'LYS', 0.0, (-14.26, -0.231, 6.172000000000001)), ('A', ' 567 ', 'ILE', 0.27077082651904394, (-15.025000000000002, -8.028, 0.784)), ('A', ' 570 ', 'GLN', 0.001064341818396135, (-9.330999999999998, -11.9, -3.141000000000001)), ('A', ' 594 ', 'THR', 0.0258387386566028, (8.962000000000003, -7.248, -10.533000000000001)), ('A', ' 595 ', 'LYS', 0.1724324412436181, (5.138, -7.222, -10.872)), ('A', ' 598 ', 'SER', 0.056870248419047364, (5.299, -3.515000000000001, -15.327000000000002)), ('A', ' 604 ', 'VAL', 0.2015461221357112, (0.9090000000000001, 4.525, -2.4580000000000006)), ('A', ' 611 ', 'VAL', 0.09796072379964216, (8.489, -7.755, 8.664)), ('A', ' 613 ', 'HIS', 0.1064147439837883, (9.316000000000004, -11.721000000000002, 4.799)), ('A', ' 623 ', 'CYS', 0.05678034867553142, (14.544000000000002, -4.129999999999999, -1.7560000000000004)), ('A', ' 628 ', 'LYS', 0.0, (10.912, 1.0889999999999997, -10.83)), ('A', ' 648 ', 'LEU', 0.11802835189907457, (17.685, 5.49, -0.059000000000000004)), ('A', ' 517 ', 'GLU', 0.029352802406884537, (-17.521, 14.359, -10.517)), ('A', ' 525 ', 'ILE', 0.049267312100353435, (2.496, 14.407, -3.096)), ('A', ' 530 ', 'SER', 0.15802314911982135, (4.564000000000002, 9.795, 8.36)), ('A', ' 557 ', 'MET', 0.027356342413338657, (-6.057, -6.573, 6.448)), ('A', ' 561 ', 'GLN', 0.05393426644650237, (-11.729, -5.748000000000001, 5.21)), ('A', ' 567 ', 'ILE', 0.115202490995329, (-15.432000000000002, -7.795, 0.836)), ('A', ' 570 ', 'GLN', 0.26267561005805057, (-9.351, -12.155, -2.626)), ('A', ' 591 ', 'SER', 0.029678646622329163, (8.982000000000003, -10.828, -7.807000000000001)), ('A', ' 594 ', 'THR', 0.02991853980347514, (9.205000000000004, -6.879999999999998, -11.195000000000004)), ('A', ' 598 ', 'SER', 0.13542450022848107, (4.484000000000002, -4.394, -15.306000000000001)), ('A', ' 606 ', 'MET', 0.0468891035660145, (4.415, 0.825, 2.5620000000000003)), ('A', ' 623 ', 'CYS', 0.13367508435678366, (14.628000000000002, -4.055999999999998, -1.8230000000000002)), ('A', ' 639 ', 'ASP', 0.005657548535964452, (11.667000000000002, 8.697, 13.019)), ('A', ' 648 ', 'LEU', 0.050960986751159634, (17.75, 5.463, 0.48800000000000004)), ('A', ' 516 ', 'SER', 0.23953290948058545, (-17.892000000000007, 18.558, -16.306)), ('A', ' 525 ', 'ILE', 0.008458700781183453, (3.1189999999999998, 14.25, -3.194)), ('A', ' 553 ', 'VAL', 0.18766391934540136, (-0.769, -9.244, 7.359000000000001)), ('A', ' 563 ', 'LYS', 0.0, (-13.641000000000002, -0.6240000000000002, 6.338)), ('A', ' 567 ', 'ILE', 0.010242416417488078, (-15.553, -7.193, 1.476)), ('A', ' 570 ', 'GLN', 0.0, (-9.412999999999997, -12.171, -3.056)), ('A', ' 573 ', 'ILE', 0.20475159646944874, (-5.921000000000002, -7.110000000000002, -8.534)), ('A', ' 578 ', 'VAL', 0.248634114762928, (-9.858000000000004, 1.404, -3.843)), ('A', ' 592 ', 'ILE', 0.11578503623208758, (6.228, -8.589000000000004, -6.675000000000002)), ('A', ' 594 ', 'THR', 0.07090456170594572, (9.149, -7.094, -11.225000000000003)), ('A', ' 598 ', 'SER', 0.056199931771013956, (4.869, -3.956, -15.525)), ('A', ' 600 ', 'ASN', 0.23767147212990417, (4.146, 1.162, -13.871)), ('A', ' 608 ', 'ILE', 0.07932452514264265, (6.05, -3.9820000000000007, 1.732)), ('A', ' 611 ', 'VAL', 0.11721734053211129, (7.087000000000001, -7.3039999999999985, 8.444)), ('A', ' 612 ', 'THR', 0.0743071611234362, (4.974, -9.955, 6.630000000000002)), ('A', ' 617 ', 'LEU', 0.17231391879190433, (13.929, -1.451, 7.846)), ('A', ' 626 ', 'SER', 0.17915960547164883, (14.604000000000001, -2.0089999999999995, -6.778)), ('A', ' 628 ', 'LYS', 0.06343037360411749, (11.073000000000002, 1.1979999999999995, -11.014)), ('A', ' 636 ', 'SER', 0.16205255803504762, (4.253, 4.201, 11.492)), ('A', ' 639 ', 'ASP', 0.07818132198771621, (11.488, 9.607, 12.932)), ('A', ' 643 ', 'THR', 0.09639374590977468, (16.287, 6.637, 8.965)), ('A', ' 645 ', 'ASN', 0.12926191224242634, (15.56, 8.264999999999997, 3.6560000000000006)), ('A', ' 522 ', 'LYS', 0.002219004160181862, (-3.3530000000000006, 16.744, -10.144000000000004)), ('A', ' 524 ', 'GLU', 0.0016421129808679587, (0.11400000000000003, 14.517999999999997, -5.902000000000001)), ('A', ' 525 ', 'ILE', 0.06330959008947198, (2.7609999999999992, 13.633, -3.414)), ('A', ' 526 ', 'LEU', 0.038283672007835, (5.61, 11.114, -3.773)), ('A', ' 534 ', 'ARG', 0.03380776743361729, (-6.367000000000002, 5.644, 6.767)), ('A', ' 541 ', 'GLU', 0.019992689479200302, (-9.087, 7.259, -3.1180000000000003)), ('A', ' 553 ', 'VAL', 0.20213740649069467, (-1.0400000000000003, -9.619, 7.530000000000001)), ('A', ' 563 ', 'LYS', 0.0, (-13.573, -0.148, 6.657)), ('A', ' 570 ', 'GLN', 0.0, (-9.443, -12.039, -2.934000000000001)), ('A', ' 594 ', 'THR', 0.008159601566148922, (9.532, -6.919, -11.304)), ('A', ' 598 ', 'SER', 0.014739973994437605, (5.442, -3.479000000000001, -15.763000000000002)), ('A', ' 605 ', 'THR', 0.008159601566148922, (1.667, 1.743, 0.409)), ('A', ' 612 ', 'THR', 0.061533856611229475, (5.141000000000002, -9.462000000000002, 7.288000000000001)), ('A', ' 634 ', 'SER', 0.2884112034753255, (4.714, 4.829999999999999, 5.068)), ('A', ' 648 ', 'LEU', 0.07155339190005915, (17.657, 5.375, -0.063)), ('A', ' 651 ', 'SER', 0.2849204279504163, (25.000000000000007, 7.298, 3.643)), ('A', '  -1 ', 'MET', 0.0479922885751358, (-25.774, 1.254, -0.206)), ('A', ' 522 ', 'LYS', 0.23729529849895273, (-4.162000000000001, 20.604, -3.131)), ('A', ' 525 ', 'ILE', 0.014542613348618503, (2.523, 14.165, -2.281)), ('A', ' 530 ', 'SER', 0.02825627620022457, (4.392000000000002, 9.091, 8.114000000000003)), ('A', ' 533 ', 'LEU', 0.0828796605923879, (-4.053000000000002, 3.4179999999999997, 6.72)), ('A', ' 557 ', 'MET', 0.009446412292277547, (-6.406, -6.481, 6.262)), ('A', ' 561 ', 'GLN', 0.0, (-12.031, -5.123, 4.671)), ('A', ' 562 ', 'ARG', 0.0, (-13.62, -3.786000000000001, 7.9270000000000005)), ('A', ' 563 ', 'LYS', 0.08187305225425176, (-14.04, -0.3600000000000001, 6.295000000000002)), ('A', ' 585 ', 'SER', 0.005701630363685663, (2.721, -14.417, 1.2170000000000003)), ('A', ' 589 ', 'VAL', 0.006152635697182902, (9.752, -9.057, -2.520000000000001)), ('A', ' 594 ', 'THR', 0.03375675831549069, (9.317000000000004, -6.891, -10.87)), ('A', ' 596 ', 'LEU', 0.07823893814867051, (4.642, -3.6470000000000007, -9.807)), ('A', ' 598 ', 'SER', 0.2615406494751331, (4.538000000000002, -4.314999999999999, -15.223)), ('A', ' 600 ', 'ASN', 0.06877999064491311, (3.821000000000001, 0.912, -13.831000000000003)), ('A', ' 606 ', 'MET', 0.0, (4.982, 0.969, 2.822000000000001)), ('A', ' 612 ', 'THR', 0.19321936616277444, (5.97, -10.075000000000003, 6.737)), ('A', ' 623 ', 'CYS', 0.2626070585369089, (14.821, -3.809, -2.186)), ('A', ' 633 ', 'VAL', 0.2681734654454683, (6.320000000000001, 4.767, 0.9070000000000001)), ('A', ' 635 ', 'VAL', 0.038449729483943006, (6.578000000000003, 4.060999999999998, 8.135)), ('A', ' 651 ', 'SER', 0.048558020574178976, (22.401, 4.488, -2.2520000000000002))]
data['cbeta'] = [('A', ' 608 ', 'ILE', ' ', 0.2675558443543015, (6.339000000000001, -3.718, 0.116)), ('A', ' 565 ', 'LYS', ' ', 0.2653089350739948, (-19.502, -3.25, 3.2760000000000007)), ('A', ' 573 ', 'ILE', ' ', 0.27361697595389434, (-6.01, -6.667, -9.94)), ('A', ' 600 ', 'ASN', ' ', 0.2887793451735772, (5.015000000000001, 1.628, -15.190000000000001)), ('A', ' 607 ', 'PRO', ' ', 0.3245657134209843, (9.459, -0.327, 3.77)), ('A', ' 608 ', 'ILE', ' ', 0.30655904730365635, (5.928, -4.237, 0.954)), ('A', ' 600 ', 'ASN', ' ', 0.2532929359637345, (5.127, 1.32, -15.477000000000002)), ('A', ' 622 ', 'ARG', ' ', 0.2718104248326545, (17.971, -2.199, 0.23700000000000002)), ('A', ' 513 ', 'VAL', ' ', 0.2857136050868697, (-17.965, 2.232000000000001, 10.318)), ('A', ' 569 ', 'ILE', ' ', 0.29523089705294236, (-9.209, -12.072, 1.6490000000000005)), ('A', ' 608 ', 'ILE', ' ', 0.27574102729417105, (6.06, -4.669, 0.29)), ('A', ' 569 ', 'ILE', ' ', 0.26671761607651207, (-9.631, -12.033, 1.425)), ('A', ' 608 ', 'ILE', ' ', 0.274818827082746, (6.272, -3.798, -0.3200000000000001)), ('A', ' 544 ', 'ARG', ' ', 0.30064985936143507, (-8.29, 6.003, -8.061)), ('A', ' 553 ', 'VAL', ' ', 0.252914317410546, (0.047, -7.553, 7.166000000000002)), ('A', ' 517 ', 'GLU', ' ', 0.2772182578905227, (-21.114, 14.887, -12.217000000000002)), ('A', ' 569 ', 'ILE', ' ', 0.3428956292468747, (-9.326999999999998, -11.847, 1.9)), ('A', ' 578 ', 'VAL', ' ', 0.4240883055185424, (-8.154, 2.173, -1.9690000000000003)), ('A', ' 600 ', 'ASN', ' ', 0.3196351436876107, (5.184000000000002, 1.184, -15.300000000000004)), ('A', ' 607 ', 'PRO', ' ', 0.2751143619200737, (8.929, -0.5239999999999999, 3.798)), ('A', ' 608 ', 'ILE', ' ', 0.2842096207613906, (5.808000000000002, -4.374, 0.5)), ('A', ' 569 ', 'ILE', ' ', 0.282439178306222, (-9.389, -11.672, 1.517)), ('A', ' 578 ', 'VAL', ' ', 0.44204607475503976, (-8.435, 2.102, -2.113)), ('A', ' 600 ', 'ASN', ' ', 0.30511619039721305, (5.409, 1.118, -15.374000000000002)), ('A', ' 544 ', 'ARG', ' ', 0.2744349824272155, (-7.647, 6.642, -9.049)), ('A', ' 650 ', 'SER', ' ', 0.25387902681957797, (23.049000000000003, 5.752, 0.114)), ('A', ' 578 ', 'VAL', ' ', 0.42867747368237075, (-8.275, 2.0889999999999995, -1.703)), ('A', ' 608 ', 'ILE', ' ', 0.31386562022574566, (6.055, -4.103, -0.412)), ('A', ' 565 ', 'LYS', ' ', 0.28776737547309444, (-19.269000000000002, -3.079, 3.438)), ('A', ' 600 ', 'ASN', ' ', 0.2805662101874869, (4.952000000000001, 1.407, -15.167)), ('A', ' 513 ', 'VAL', ' ', 0.3650022351953229, (-22.643, 7.96, -4.253)), ('A', ' 608 ', 'ILE', ' ', 0.25524530107982885, (6.262, -3.819, -0.5)), ('A', ' 523 ', 'GLU', ' ', 0.26508847233495947, (-0.06299999999999999, 20.189, -5.280000000000002)), ('A', ' 589 ', 'VAL', ' ', 0.31638953698860495, (10.406, -8.422, -1.2850000000000001)), ('A', ' 594 ', 'THR', ' ', 0.26207397984881375, (10.144, -8.118, -11.284)), ('A', ' 600 ', 'ASN', ' ', 0.2957610726075957, (4.388, 1.24, -15.241))]
data['probe'] = [(' A 567  ILE HD11', ' A 570  GLN HE22', -0.631, (-11.437, -7.25, -1.648)), (' A 599  LEU  N  ', ' A 599  LEU HD12', -0.498, (2.002, -3.765, -14.09)), (' A 556  ILE HD11', ' A 606  MET  HE1', -0.444, (0.201, -2.727, 6.843)), (' A 578  VAL  HB ', ' A 580  PHE  CE2', -0.425, (-8.369, 0.086, -1.334)), (' A 592  ILE HD11', ' A 608  ILE HG21', -0.423, (6.489, -5.141, -2.353)), (' A 556  ILE  CD1', ' A 606  MET  HE1', -0.4, (-0.256, -2.683, 6.595))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

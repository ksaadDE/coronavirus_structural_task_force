# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 113 ', 'LYS', 0.0024501319478802248, (192.059, 146.854, 118.05)), ('A', ' 345 ', 'THR', 0.00438665126940513, (155.602, 96.162, 103.33199999999997)), ('A', ' 375 ', 'SER', 0.049558317437291416, (169.94200000000004, 107.742, 104.01799999999997)), ('A', ' 407 ', 'VAL', 0.00256301, (163.498, 112.529, 96.80299999999998)), ('A', ' 544 ', 'ASN', 0.039674395805664495, (156.016, 113.51700000000002, 136.99699999999999)), ('B', ' 115 ', 'GLN', 0.0, (131.353, 114.132, 116.07199999999999)), ('C', ' 112 ', 'SER', 0.0018905564544762989, (131.137, 192.792, 118.757)), ('C', ' 346 ', 'ARG', 0.009966888389984795, (194.115, 177.589, 107.039)), ('C', ' 349 ', 'SER', 0.03655115159760776, (189.10100000000003, 169.544, 102.19299999999998)), ('C', ' 351 ', 'TYR', 0.004545057224342071, (185.583, 164.251, 102.31399999999998))]
data['omega'] = [('A', ' 347 ', 'PHE', None, (153.439, 100.68299999999999, 99.834)), ('A', ' 372 ', 'ALA', None, (171.882, 103.406, 111.66)), ('A', ' 374 ', 'PHE', None, (169.37600000000006, 105.88399999999999, 107.929)), ('A', ' 618 ', 'THR', None, (174.98600000000005, 117.636, 161.038)), ('B', ' 114 ', 'THR', None, (129.531, 116.518, 112.876)), ('B', ' 115 ', 'GLN', None, (130.649, 114.93, 115.05999999999997)), ('B', ' 124 ', 'THR', None, (133.881, 91.636, 127.66599999999997)), ('B', ' 402 ', 'ILE', None, (114.448, 170.40100000000007, 96.27299999999998)), ('B', ' 521 ', 'PRO', None, (130.593, 173.736, 126.484)), ('B', ' 544 ', 'ASN', None, (117.754, 161.758, 138.222)), ('B', ' 857 ', 'GLY', None, (159.81300000000005, 129.261, 155.765)), ('C', ' 406 ', 'GLU', None, (176.933, 180.26500000000004, 99.46299999999997)), ('C', ' 413 ', 'GLY', None, (169.098, 166.19399999999996, 104.93099999999998)), ('C', ' 420 ', 'ASP', None, (175.29000000000002, 166.77500000000006, 97.73299999999999)), ('C', ' 424 ', 'LYS', None, (179.15, 164.37099999999995, 104.22)), ('C', ' 437 ', 'ASN', None, (181.60900000000004, 185.78, 108.329)), ('D', ' 100 ', 'ASP', None, (170.885, 117.155, 106.47999999999999)), ('E', '   8 ', 'PRO', None, (195.016, 91.082, 100.442)), ('E', '  52 ', 'SER', None, (178.48600000000002, 99.102, 95.51099999999997)), ('E', '  95 ', 'PRO', None, (177.311, 99.048, 118.97)), ('G', '   8 ', 'PRO', None, (85.10300000000001, 148.38800000000006, 90.77199999999998)), ('G', '  95 ', 'PRO', None, (96.996, 154.287, 114.417)), ('L', '   8 ', 'PRO', None, (177.379, 215.13, 105.41999999999997)), ('L', '  95 ', 'PRO', None, (178.38900000000007, 194.919, 124.833)), ('L', '  95A', 'PRO', None, (175.365, 193.095, 123.84799999999998))]
data['rota'] = [('A', ' 122 ', 'ASN', 0.006604325965511835, (206.868, 160.165, 135.105)), ('C', ' 616 ', 'ASN', 0.24941439583798425, (161.04000000000005, 182.118, 166.99299999999997)), ('C', ' 657 ', 'ASN', 0.010423067832779872, (154.626, 186.55699999999996, 186.364))]
data['cbeta'] = [('A', ' 617 ', 'CYS', ' ', 0.2638162445647954, (175.827, 120.89699999999998, 162.64299999999997)), ('C', ' 424 ', 'LYS', ' ', 0.31413246305553233, (179.51200000000006, 165.956, 106.206)), ('D', ' 100 ', 'ASP', ' ', 0.45398174041364736, (170.86700000000002, 114.453, 105.88)), ('L', '  32 ', 'TYR', ' ', 0.3858419932032427, (177.755, 192.851, 107.27399999999997))]
data['probe'] = [(' B 372  ALA  O  ', ' F 100D ARG  NH2', -1.028, (104.284, 157.204, 103.732)), (' C 372  ALA  O  ', ' H 100D ARG  NH2', -1.015, (178.016, 189.731, 112.614)), (' A 372  ALA  O  ', ' D 100D ARG  NH2', -0.999, (172.921, 104.1, 107.39)), (' A 128  ILE HG21', ' A 229  LEU HD21', -0.927, (193.142, 158.083, 132.69)), (' A 376  THR  HA ', ' D 100  ASP  OD2', -0.833, (169.861, 112.573, 103.339)), (' C 437  ASN  OD1', ' L  32  TYR  CE1', -0.833, (180.681, 189.231, 107.797)), (' H  51  ILE HG22', ' H  57  THR HG22', -0.785, (163.253, 187.034, 123.471)), (' C 437  ASN  OD1', ' L  32  TYR  CZ ', -0.774, (179.886, 188.897, 108.978)), (' C 819  GLU  OE2', ' C1055  SER  OG ', -0.77, (121.855, 151.717, 185.005)), (' B 546  LEU HD21', ' B 573  THR HG21', -0.745, (120.521, 160.273, 145.754)), (' L   4  LEU HD12', ' L  23  CYS  SG ', -0.743, (178.731, 205.069, 109.248)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.741, (139.671, 153.376, 192.169)), (' G  63  SER  OG ', ' G  74  THR  OG1', -0.728, (96.843, 151.592, 82.463)), (' C 383  SER  OG ', ' H  53  ASP  OD2', -0.718, (164.777, 177.172, 120.321)), (' B 437  ASN  OD1', ' G  32  TYR  OH ', -0.708, (106.452, 161.117, 99.408)), (' C 437  ASN  OD1', ' L  32  TYR  OH ', -0.708, (179.934, 188.646, 108.967)), (' B 370  ASN  OD1', ' F  58  TYR  OH ', -0.706, (108.838, 154.428, 114.635)), (' A 703  ASN  ND2', ' B 787  GLN  OE1', -0.698, (167.003, 127.362, 199.829)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.692, (148.409, 180.359, 176.537)), (' C 908  GLY  O  ', ' C1038  LYS  NZ ', -0.692, (139.812, 148.744, 206.568)), (' B1028  LYS  NZ ', ' B1042  PHE  O  ', -0.691, (142.199, 136.434, 190.522)), (' E   5  THR  OG1', ' E  24  ARG  O  ', -0.681, (186.808, 90.138, 106.104)), (' B 128  ILE HG21', ' B 229  LEU HD11', -0.665, (137.547, 106.005, 125.677)), (' E   4  LEU HD12', ' E  23  CYS  SG ', -0.664, (185.228, 94.923, 104.026)), (' B 525  CYS  SG ', ' B 526  GLY  N  ', -0.663, (119.01, 164.731, 124.82)), (' B 804  GLN  NE2', ' B 935  GLN  OE1', -0.663, (143.391, 114.002, 191.419)), (' B 676  THR  N  ', ' B 690  GLN  OE1', -0.66, (112.646, 119.691, 174.955)), (' A 869  MET  HE1', ' C 669  GLY  HA2', -0.653, (155.763, 173.579, 183.055)), (' C 335  LEU HD23', ' C 362  VAL HG23', -0.648, (183.779, 176.478, 129.125)), (' G   5  THR  OG1', ' G  24  ARG  O  ', -0.648, (87.533, 153.927, 98.666)), (' C 714  ILE HD12', ' C1096  VAL HG11', -0.647, (146.687, 162.773, 218.888)), (' A 819  GLU  OE2', ' A1055  SER  OG ', -0.646, (163.486, 164.008, 189.47)), (' H  52A TYR  O  ', ' H  71  ARG  NH1', -0.645, (158.601, 182.311, 117.191)), (' F  94  ARG  NH1', ' F 101  ASP  OD2', -0.643, (116.093, 143.069, 98.222)), (' A 378  LYS  NZ ', ' D  99  ARG  O  ', -0.643, (168.795, 117.811, 103.915)), (' B 714  ILE HD12', ' B1096  VAL HG11', -0.642, (124.676, 136.828, 214.772)), (' C 378  LYS  NZ ', ' H  99  ARG  O  ', -0.639, (167.653, 179.176, 109.969)), (' F  36  TRP  CE3', ' F  80  LEU HD13', -0.636, (108.74, 136.354, 112.341)), (' B 619  GLU  N  ', ' B 619  GLU  OE1', -0.633, (111.093, 141.109, 154.402)), (' A 378  LYS  HD3', ' D  99  ARG  O  ', -0.632, (168.593, 117.6, 104.897)), (' B 378  LYS  NZ ', ' F  99  ARG  O  ', -0.621, (119.64, 154.041, 102.35)), (' G 100  GLN  NE2', ' G 101  GLY  O  ', -0.621, (86.651, 143.264, 95.953)), (' B 671  CYS  SG ', ' B 697  MET  HE2', -0.618, (120.995, 135.636, 176.474)), (' C 373  SER  O  ', ' L  32  TYR  OH ', -0.617, (179.819, 187.434, 109.98)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.614, (154.91, 146.984, 192.472)), (' G  61  ARG  NH1', ' G  79  GLU  OE1', -0.612, (99.58, 140.223, 77.769)), (' A 438  SER  OG ', ' A 509  ARG  N  ', -0.609, (161.866, 103.032, 98.18)), (' A 404  GLY  N  ', ' A 506  GLN  O  ', -0.608, (163.307, 105.151, 92.302)), (' B 123  ALA  O  ', ' B 124  THR HG22', -0.607, (134.067, 90.315, 125.213)), (' B 369  TYR  OH ', ' B 384  PRO  O  ', -0.606, (116.503, 157.888, 116.503)), (' C1050  MET  HE2', ' C1052  PHE  CZ ', -0.605, (126.767, 152.015, 199.217)), (' A 229  LEU HD23', ' A 231  ILE HD11', -0.604, (190.931, 157.489, 132.195)), (' A1123  SER  OG ', ' B 914  ASN  ND2', -0.602, (137.132, 128.324, 219.695)), (' B 618  THR  OG1', ' B 619  GLU  OE1', -0.602, (109.866, 141.962, 154.68)), (' A  34  ARG  NH1', ' A 191  GLU  OE2', -0.597, (198.157, 150.547, 153.726)), (' A 616  ASN  OD1', ' A 617  CYS  N  ', -0.594, (173.619, 118.445, 162.691)), (' D  52A TYR  OH ', ' D  99  ARG  NH1', -0.591, (169.066, 123.991, 110.232)), (' E  75  ILE HG21', ' E  78  LEU HD23', -0.59, (194.805, 101.011, 90.188)), (' C 546  LEU HD21', ' C 573  THR HG21', -0.589, (173.392, 168.036, 150.498)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.588, (175.443, 129.36, 174.863)), (' C 531  THR HG22', ' C 532  ASN  H  ', -0.586, (173.402, 183.86, 142.788)), (' A 869  MET  HE1', ' C 669  GLY  CA ', -0.586, (155.773, 173.867, 182.599)), (' I   1  NAG  O3 ', ' I   1  NAG  O7 ', -0.585, (162.819, 99.956, 114.463)), (' B 121  ASN  ND2', ' B1302  NAG  H82', -0.585, (133.627, 100.717, 130.454)), (' C 418  ILE HG22', ' C 423  TYR  HE1', -0.585, (179.225, 169.946, 98.847)), (' C 112  SER  OG ', ' C 113  LYS  N  ', -0.584, (132.291, 191.456, 117.086)), (' C 410  ILE HG23', ' C 414  GLN  H  ', -0.581, (170.751, 167.594, 103.21)), (' G  38  GLN  O  ', ' G  85  VAL HG12', -0.578, (94.965, 137.232, 93.07)), (' F  69  ILE HD13', ' F  80  LEU HD12', -0.578, (110.023, 139.02, 113.702)), (' G  20  THR HG22', ' G  74  THR HG22', -0.573, (92.379, 151.677, 83.016)), (' A 328  ARG  NH1', ' A 578  ASP  OD1', -0.572, (161.346, 106.936, 141.212)), (' B 819  GLU  OE2', ' B1055  SER  OG ', -0.57, (152.782, 121.965, 185.156)), (' C 411  ALA  HB3', ' C 412  PRO  HD3', -0.568, (167.884, 170.819, 105.832)), (' B 324  GLU  N  ', ' B 324  GLU  OE1', -0.566, (112.101, 145.871, 140.458)), (' C1050  MET  HE2', ' C1052  PHE  CE1', -0.565, (126.475, 151.334, 199.06)), (' E  19  ALA  HB2', ' E  78  LEU HD11', -0.565, (197.23, 97.926, 91.387)), (' A 804  GLN  NE2', ' A 935  GLN  OE1', -0.564, (172.966, 159.882, 197.317)), (' A 406  GLU  O  ', ' A 407  VAL HG13', -0.564, (163.096, 109.865, 95.556)), (' A 916  LEU HD12', ' A 923  ILE HD13', -0.563, (163.064, 150.38, 213.551)), (' C 596  SER  OG ', ' C 613  GLN  OE1', -0.562, (149.46, 173.877, 168.182)), (' C 974  SER  O  ', ' C 980  ILE HD11', -0.561, (136.194, 155.126, 140.472)), (' G  21  LEU  O  ', ' G  72  THR  OG1', -0.56, (91.256, 152.29, 87.876)), (' C 376  THR  HA ', ' H 100  ASP  OD2', -0.56, (172.18, 183.031, 110.458)), (' A 320  VAL HG12', ' A 591  SER  O  ', -0.559, (168.476, 123.745, 154.451)), (' C 703  ASN  OD1', ' C 704  SER  N  ', -0.559, (152.045, 173.246, 203.941)), (' A 226  LEU HD12', ' A 227  VAL HG23', -0.557, (193.959, 160.315, 141.031)), (' C 715  PRO  O  ', ' C1110  TYR  N  ', -0.557, (140.195, 162.443, 215.973)), (' C 331  ASN  OD1', ' C 332  ILE  N  ', -0.556, (185.215, 178.399, 136.695)), (' C 434  ILE HD13', ' C 511  VAL HG13', -0.554, (179.353, 175.76, 114.311)), (' A 378  LYS  CD ', ' D  99  ARG  O  ', -0.552, (168.411, 118.087, 104.671)), (' B 551  VAL HG12', ' B 588  THR  O  ', -0.552, (115.471, 151.189, 151.187)), (' B 666  ILE HD11', ' B 672  ALA  HB2', -0.549, (117.938, 131.445, 169.821)), (' A 106  PHE  HB3', ' A 235  ILE HD12', -0.544, (192.051, 148.805, 131.849)), (' A 376  THR HG23', ' D 100  ASP  OD1', -0.54, (168.54, 114.683, 103.805)), (' L  38  GLN  O  ', ' L  85  VAL HG12', -0.54, (163.88, 209.481, 105.763)), (' B 437  ASN  OD1', ' G  32  TYR  CZ ', -0.539, (106.018, 160.656, 99.041)), (' B 811  LYS  NZ ', ' B 820  ASP  OD2', -0.536, (151.065, 111.945, 186.173)), (' A 599  THR  OG1', ' A 600  PRO  O  ', -0.536, (181.282, 138.186, 172.539)), (' A 439  ASN  ND2', ' A 506  GLN  OE1', -0.535, (167.185, 99.419, 92.357)), (' B 715  PRO  O  ', ' B1110  TYR  N  ', -0.535, (128.879, 131.626, 212.405)), (' D  93  ALA  HB2', ' D 103  TRP  CD1', -0.534, (187.941, 116.533, 109.237)), (' C 100  ILE  H  ', ' C 100  ILE HD12', -0.534, (116.192, 202.599, 140.089)), (' C 749  CYS  SG ', ' C 997  ILE HD11', -0.534, (136.962, 145.622, 144.403)), (' B 531  THR HG22', ' B 532  ASN  H  ', -0.533, (108.589, 153.113, 135.548)), (' F  69  ILE  CD1', ' F  80  LEU HD12', -0.531, (110.687, 138.416, 113.442)), (' B 738  CYS  SG ', ' B 739  THR  N  ', -0.53, (162.118, 139.106, 154.498)), (' A 372  ALA  O  ', ' A 373  SER  OG ', -0.528, (172.811, 105.637, 107.702)), (' B 342  PHE  HB2', ' J   1  NAG  H82', -0.528, (108.339, 168.622, 110.679)), (' B 437  ASN  ND2', ' G  31  THR  OG1', -0.527, (103.497, 161.972, 96.032)), (' G   4  LEU HD12', ' G  23  CYS  SG ', -0.527, (92.728, 152.219, 97.803)), (' A 376  THR  CA ', ' D 100  ASP  OD2', -0.526, (169.596, 112.135, 103.429)), (' C  46  SER  OG ', ' C 281  GLU  OE2', -0.522, (117.771, 170.227, 162.771)), (' H  51  ILE HD12', ' H  71  ARG  HE ', -0.52, (158.461, 185.622, 120.009)), (' B 858  LEU HD23', ' B 959  LEU HD22', -0.52, (153.576, 130.655, 160.516)), (' A1144  GLU  N  ', ' A1144  GLU  OE1', -0.519, (148.328, 139.079, 241.774)), (' A 437  ASN  ND2', ' E  31  THR  OG1', -0.519, (171.458, 99.983, 99.962)), (' C 619  GLU  N  ', ' C 619  GLU  OE1', -0.515, (160.937, 184.104, 162.736)), (' B 395  VAL  O  ', ' B 395  VAL HG12', -0.514, (119.599, 169.837, 114.582)), (' A 105  ILE HD11', ' A 241  LEU HD21', -0.513, (202.419, 149.33, 129.925)), (' A 344  ALA  O  ', ' A 345  THR  OG1', -0.512, (154.827, 94.851, 104.534)), (' H  38  ARG  NH1', ' H  86  ASP  OD1', -0.511, (160.986, 203.187, 126.952)), (' B 377  PHE  C  ', ' F 100  ASP  OD1', -0.511, (115.665, 157.286, 104.844)), (' C1087  ALA  HB1', ' C1089  PHE  HE1', -0.509, (158.239, 151.904, 226.045)), (' B 537  LYS  O  ', ' B 551  VAL HG23', -0.509, (111.607, 149.638, 147.927)), (' A 534  VAL  CG2', ' A 539  VAL HG11', -0.508, (169.067, 113.231, 144.731)), (' B 520  ALA  O  ', ' B 522  ALA  N  ', -0.507, (128.541, 173.219, 125.865)), (' A 320  VAL HG13', ' A 590  CYS  SG ', -0.506, (168.756, 121.634, 152.11)), (' A 715  PRO  O  ', ' A1110  TYR  N  ', -0.506, (161.489, 136.701, 215.952)), (' A 895  GLN  HB3', ' C 705  VAL HG12', -0.504, (152.763, 167.881, 210.165)), (' B 382  VAL HG21', ' B 387  LEU HD13', -0.504, (122.263, 160.393, 115.532)), (' C 916  LEU HD12', ' C 923  ILE HD13', -0.503, (128.476, 157.337, 211.034)), (' E  30  SER  OG ', ' E  31  THR  N  ', -0.501, (172.19, 97.663, 101.949)), (' C 437  ASN  ND2', ' L  31  THR  OG1', -0.499, (183.423, 190.009, 107.057)), (' B 397  ALA  HB2', ' B 513  LEU  HG ', -0.497, (118.174, 169.28, 111.154)), (' B 433  VAL HG12', ' B 512  VAL HG22', -0.496, (120.236, 165.295, 104.197)), (' C 385  THR HG21', ' H  56  ASN  ND2', -0.496, (170.111, 182.156, 124.95)), (' A 973  ILE HD13', ' A 984  LEU HD11', -0.494, (161.447, 158.601, 135.83)), (' E  48  ILE HD12', ' E  54  ARG  HE ', -0.494, (183.404, 102.021, 93.085)), (' C 226  LEU  HG ', ' C 227  VAL HG23', -0.493, (117.523, 183.369, 137.773)), (' B 404  GLY  N  ', ' B 506  GLN  O  ', -0.493, (112.515, 166.09, 91.87)), (' E  61  ARG  NH2', ' E  79  GLU  OE1', -0.493, (195.33, 105.745, 84.516)), (' A 437  ASN  CG ', ' E  32  TYR  HH ', -0.491, (169.612, 102.056, 101.084)), (' B 705  VAL HG12', ' C 895  GLN  HB3', -0.49, (119.429, 139.801, 204.328)), (' A  94  SER  OG ', ' A 101  ILE HD13', -0.49, (206.097, 149.533, 143.6)), (' A 342  PHE  HD2', ' I   1  NAG  H83', -0.489, (160.986, 102.598, 111.936)), (' A  90  VAL HG21', ' A 238  PHE  CE1', -0.488, (194.52, 144.316, 138.226)), (' B  34  ARG  NH1', ' B 191  GLU  OE2', -0.487, (126.956, 104.029, 145.452)), (' F  45  LEU HD11', ' G  44  PRO  HG2', -0.487, (99.971, 138.755, 98.953)), (' A 115  GLN  NE2', ' A1315  NAG  O5 ', -0.486, (187.904, 154.789, 120.092)), (' L  62  PHE  CD1', ' L  75  ILE HD12', -0.485, (171.089, 205.462, 96.281)), (' C 113  LYS  O  ', ' C 114  THR  OG1', -0.483, (135.193, 188.878, 120.765)), (' B 201  PHE  CD2', ' B 203  ILE HD11', -0.483, (134.974, 109.468, 129.257)), (' L  74  THR  O  ', ' L  75  ILE HD13', -0.482, (173.653, 206.383, 95.977)), (' C 327  VAL  O  ', ' C 327  VAL HG12', -0.48, (173.456, 176.902, 139.933)), (' A1053  PRO  O  ', ' A1054  GLN  NE2', -0.478, (162.312, 160.473, 195.078)), (' B  83  VAL HG11', ' B 237  ARG  NH2', -0.478, (120.134, 112.662, 121.967)), (' B 546  LEU HD23', ' B 576  VAL  CG1', -0.477, (118.359, 160.976, 144.373)), (' C 138  ASP  N  ', ' C 138  ASP  OD1', -0.477, (128.073, 205.092, 125.94)), (' A1094  VAL HG11', ' B 904  TYR  OH ', -0.477, (152.738, 131.098, 213.841)), (' H  94  ARG  NH1', ' H 101  ASP  OD2', -0.477, (160.592, 188.35, 106.89)), (' E   7  SER  O  ', ' E  21  LEU HD12', -0.476, (193.25, 92.556, 99.905)), (' E  48  ILE HD12', ' E  54  ARG HH21', -0.476, (182.862, 101.101, 93.654)), (' B 201  PHE  CE2', ' B 203  ILE HD11', -0.476, (134.936, 109.078, 129.51)), (' C  83  VAL HG11', ' C 237  ARG  NH1', -0.474, (135.182, 196.085, 129.698)), (' C  90  VAL HG21', ' C 238  PHE  CE1', -0.473, (131.448, 191.679, 137.648)), (' A 658  ASN  ND2', ' A 660  TYR  OH ', -0.473, (180.586, 123.846, 186.14)), (' A 373  SER  OG ', ' D 100D ARG  HD2', -0.471, (173.562, 106.861, 107.328)), (' A 736  VAL HG13', ' A 858  LEU HD23', -0.47, (157.165, 162.84, 160.421)), (' C 705  VAL  O  ', ' C 707  TYR  N  ', -0.47, (155.826, 170.116, 209.912)), (' C 128  ILE HG21', ' C 229  LEU  CD1', -0.468, (121.136, 184.3, 130.408)), (' C 376  THR HG23', ' H 100  ASP  OD1', -0.467, (171.941, 181.193, 109.389)), (' L   8  PRO  O  ', ' L 102  THR HG23', -0.467, (174.069, 214.375, 106.1)), (' B 821  LEU HD11', ' B 935  GLN  HG3', -0.466, (142.511, 115.234, 187.378)), (' G  33  LEU HD22', ' G  71  PHE  CG ', -0.465, (95.853, 155.259, 95.292)), (' C 726  ILE HG12', ' C1061  VAL HG22', -0.464, (130.255, 157.463, 185.112)), (' A1093  GLY  HA2', ' A1107  ARG  HD2', -0.462, (152.062, 135.46, 215.916)), (' A 591  SER  OG ', ' A 615  VAL HG23', -0.462, (168.607, 121.838, 158.784)), (' C1305  NAG  O3 ', ' C1305  NAG  O7 ', -0.461, (188.492, 179.185, 143.549)), (' B  64  TRP  HE1', ' B 264  ALA  HB1', -0.46, (115.835, 101.095, 138.321)), (' B 669  GLY  HA2', ' C 869  MET  HE1', -0.46, (119.253, 140.093, 177.546)), (' C 423  TYR  CD2', ' C 424  LYS  HG2', -0.46, (179.144, 167.877, 104.136)), (' C 689  SER  OG ', ' C 690  GLN  N  ', -0.46, (141.174, 192.38, 181.447)), (' B1094  VAL HG11', ' C 904  TYR  OH ', -0.459, (128.035, 141.908, 212.822)), (' C 658  ASN  ND2', ' C 660  TYR  OH ', -0.458, (148.582, 187.209, 188.938)), (' B 105  ILE  CD1', ' B 241  LEU HD21', -0.458, (123.711, 104.413, 121.62)), (' L  91  ARG  HG2', ' L  92  SER  H  ', -0.457, (175.698, 194.294, 117.214)), (' L  62  PHE  HD1', ' L  75  ILE HD12', -0.456, (171.258, 205.887, 96.603)), (' A 879  ALA  O  ', ' A 883  THR  OG1', -0.455, (155.868, 165.767, 205.211)), (' B  95  THR  CG2', ' B 264  ALA  HB3', -0.455, (118.214, 98.971, 139.615)), (' G  33  LEU HD22', ' G  71  PHE  CD1', -0.455, (96.348, 154.965, 95.519)), (' C 568  ASP  OD1', ' C 569  ILE  N  ', -0.454, (172.916, 162.808, 161.029)), (' A 534  VAL HG23', ' A 539  VAL HG11', -0.453, (168.613, 113.143, 145.232)), (' D   2  VAL  O  ', ' D   2  VAL HG23', -0.452, (188.284, 127.15, 102.144)), (' C 326  ILE HD11', ' C 533  LEU  HA ', -0.45, (174.433, 182.107, 146.895)), (' A 904  TYR  OH ', ' C1094  VAL HG11', -0.45, (150.071, 157.993, 215.777)), (' B 988  GLU  N  ', ' B 988  GLU  OE1', -0.45, (158.174, 142.952, 131.585)), (' B 435  ALA  CB ', ' B 510  VAL HG22', -0.448, (114.21, 165.064, 100.064)), (' A 124  THR  H  ', ' A1302  NAG  H82', -0.447, (207.85, 165.317, 136.037)), (' A1076  THR  O  ', ' A1097  SER  N  ', -0.446, (158.187, 126.139, 221.043)), (' A 703  ASN  OD1', ' A 704  SER  N  ', -0.445, (165.622, 124.122, 201.397)), (' C 902  MET  HE1', ' C1049  LEU HD13', -0.443, (130.603, 155.042, 205.637)), (' A 671  CYS  SG ', ' A 697  MET  HE2', -0.443, (169.147, 129.312, 180.521)), (' B 974  SER  O  ', ' B 980  ILE HD11', -0.44, (152.762, 134.964, 140.559)), (' A 340  GLU  O  ', ' A 344  ALA  HB2', -0.439, (154.321, 99.258, 108.371)), (' B 756  TYR  OH ', ' B 994  ASP  OD1', -0.438, (156.603, 146.768, 145.4)), (' B 726  ILE HG12', ' B1061  VAL HG22', -0.438, (144.228, 126.337, 183.682)), (' A 726  ILE HG12', ' A1061  VAL HG22', -0.437, (164.197, 153.881, 187.897)), (' A 395  VAL  O  ', ' A 395  VAL HG12', -0.435, (153.002, 111.82, 113.631)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.435, (121.746, 121.895, 154.262)), (' C 821  LEU HD11', ' C 935  GLN  NE2', -0.435, (120.053, 163.816, 188.93)), (' A 210  ILE HG13', ' A 211  ASN  H  ', -0.435, (207.331, 149.852, 157.831)), (' A1129  VAL HG13', ' B 917  TYR  HB3', -0.435, (143.598, 122.276, 217.439)), (' B 611  LEU HD22', ' B 666  ILE HG23', -0.434, (120.013, 135.547, 166.925)), (' A 342  PHE  CE1', ' A 511  VAL HG21', -0.433, (158.862, 106.651, 108.082)), (' B1302  NAG  O3 ', ' B1302  NAG  O7 ', -0.433, (134.288, 99.388, 134.74)), (' C1303  NAG  O3 ', ' C1303  NAG  O7 ', -0.431, (140.422, 178.44, 128.322)), (' A 398  ASP  O  ', ' A 399  SER  OG ', -0.431, (153.727, 106.507, 105.482)), (' F  51  ILE HD12', ' F  57  THR HG22', -0.43, (113.944, 145.33, 115.661)), (' D  98  TYR  O  ', ' D  99  ARG  C  ', -0.429, (170.636, 118.696, 105.338)), (' A1315  NAG  O3 ', ' A1315  NAG  O7 ', -0.429, (184.908, 155.657, 115.094)), (' C 513  LEU HD23', ' C 515  PHE  HE2', -0.429, (178.145, 171.207, 118.715)), (' B  92  PHE  HE2', ' B 240  THR  HG1', -0.429, (122.557, 105.06, 131.371)), (' L   8  PRO  HD2', ' L  11  LEU HD21', -0.428, (175.532, 214.947, 102.967)), (' B 309  GLU  O  ', ' B 313  TYR  OH ', -0.427, (128.956, 124.6, 167.961)), (' B 522  ALA  HB1', ' C 230  PRO  HB2', -0.426, (124.557, 174.956, 127.293)), (' C 743  CYS  SG ', ' C 997  ILE HD11', -0.426, (136.329, 144.945, 145.185)), (' C 398  ASP  N  ', ' C 398  ASP  OD1', -0.425, (183.087, 170.055, 112.384)), (' E  11  LEU  HB2', ' E 104  LEU HD13', -0.425, (198.976, 97.225, 96.574)), (' D  34  MET  HB3', ' D  78  LEU HD22', -0.425, (184.042, 121.714, 114.614)), (' H   6  GLU  HG3', ' H 107  THR  HB ', -0.425, (151.381, 200.381, 117.844)), (' D 103  TRP  HE3', ' E  43  ALA  HB1', -0.424, (191.148, 114.85, 104.38)), (' A  31  SER  HB3', ' A  62  VAL HG13', -0.424, (195.553, 140.801, 150.31)), (' B 916  LEU HD12', ' B 923  ILE HD13', -0.424, (140.488, 124.254, 209.436)), (' C 644  GLN  NE2', ' C 645  THR  O  ', -0.424, (159.325, 180.263, 172.418)), (' B 317  ASN  ND2', ' C 737  ASP  OD2', -0.424, (127.92, 141.066, 153.924)), (' A 918  GLU  OE2', ' C1123  SER  OG ', -0.423, (159.708, 146.15, 223.894)), (' E  91  ARG  HG2', ' E  92  SER  N  ', -0.422, (177.216, 103.155, 111.865)), (' A 705  VAL  O  ', ' A 707  TYR  N  ', -0.422, (161.253, 121.057, 206.36)), (' C 555  SER  OG ', ' C 584  ILE  O  ', -0.422, (180.602, 175.13, 157.322)), (' A 866  THR  H  ', ' A 869  MET  HE3', -0.42, (157.022, 171.882, 183.867)), (' G  29  VAL  O  ', ' G  29  VAL HG12', -0.42, (99.876, 158.457, 101.404)), (' F  33  GLY  O  ', ' F  34  MET  HE2', -0.42, (115.565, 143.146, 105.656)), (' B 437  ASN HD21', ' G  31  THR  CB ', -0.42, (104.036, 161.046, 96.217)), (' B 905  ARG  O  ', ' B1036  GLN  NE2', -0.419, (143.475, 133.165, 205.399)), (' C 434  ILE HD13', ' C 511  VAL  CG1', -0.418, (180.07, 175.85, 114.471)), (' A 409  GLN  N  ', ' A 409  GLN  OE1', -0.417, (162.63, 115.63, 94.621)), (' A 105  ILE  CD1', ' A 241  LEU HD21', -0.417, (202.751, 149.054, 130.371)), (' G  31  THR  O  ', ' G  31  THR HG22', -0.415, (103.088, 158.532, 95.5)), (' A 546  LEU HD21', ' A 573  THR HG21', -0.415, (154.256, 116.943, 146.027)), (' C 357  ARG  O  ', ' C 358  ILE HD13', -0.414, (187.305, 167.353, 120.538)), (' C 387  LEU HD13', ' C 515  PHE  HE1', -0.414, (174.177, 171.96, 120.525)), (' C 128  ILE HD13', ' C 229  LEU HD11', -0.413, (120.697, 184.256, 131.7)), (' B 437  ASN  ND2', ' G  31  THR  CB ', -0.413, (104.101, 161.68, 96.22)), (' F  66  ARG  NH1', ' F  82A ASN  O  ', -0.413, (101.385, 135.244, 121.413)), (' F  50  VAL HG22', ' F  51  ILE  N  ', -0.412, (112.145, 145.481, 111.127)), (' B 591  SER  HB2', ' B 615  VAL HG12', -0.412, (117.244, 143.775, 156.448)), (' C 385  THR  OG1', ' H  56  ASN  HB2', -0.412, (167.783, 180.862, 124.788)), (' C 124  THR  O  ', ' C 124  THR HG22', -0.412, (106.688, 189.694, 133.85)), (' A1086  LYS  HD3', ' A1122  VAL HG21', -0.412, (139.841, 128.008, 229.521)), (' L  37  GLN  OE1', ' L  39  LYS  NZ ', -0.411, (162.553, 204.152, 100.599)), (' A 373  SER  HB2', ' D 100B VAL HG13', -0.41, (172.971, 108.64, 107.902)), (' B 404  GLY  O  ', ' B 407  VAL HG12', -0.41, (116.059, 162.73, 94.103)), (' C 128  ILE HG21', ' C 229  LEU HD13', -0.409, (121.468, 183.853, 130.315)), (' C 538  CYS  O  ', ' C 539  VAL HG13', -0.408, (166.611, 181.721, 151.107)), (' A 136  CYS  HG ', ' A 137  ASN  N  ', -0.408, (206.494, 144.091, 124.027)), (' C 742  ILE  CG2', ' C 997  ILE HD13', -0.408, (137.612, 146.241, 146.687)), (' A 342  PHE  CD2', ' I   1  NAG  H83', -0.407, (160.863, 103.042, 112.192)), (' C1087  ALA  HB1', ' C1089  PHE  CE1', -0.405, (157.928, 151.877, 226.123)), (' G   8  PRO  HD2', ' G  11  LEU HD21', -0.402, (86.359, 146.966, 88.354)), (' D 101  ASP  N  ', ' D 101  ASP  OD1', -0.402, (182.738, 116.718, 104.345)), (' A 320  VAL  O  ', ' A 320  VAL HG13', -0.401, (169.831, 122.776, 151.989)), (' A 373  SER  CB ', ' D 100D ARG  HD2', -0.401, (173.719, 107.101, 108.076)), (' A 226  LEU  CD1', ' A 227  VAL HG23', -0.401, (194.493, 160.68, 141.254)), (' B 216  LEU HD11', ' B 266  TYR  CG ', -0.401, (118.801, 105.34, 140.973)), (' C 434  ILE  O  ', ' C 510  VAL HG13', -0.401, (178.563, 176.641, 109.274)), (' C 100  ILE HD13', ' C 263  ALA  HB2', -0.4, (118.209, 203.362, 142.04)), (' B 203  ILE  CD1', ' B 229  LEU HD23', -0.4, (136.834, 108.359, 129.65)), (' B 555  SER  OG ', ' B 586  ASP  N  ', -0.4, (111.69, 159.88, 151.186)), (' C 370  ASN  ND2', ' H  58  TYR  CE2', -0.4, (173.795, 187.455, 122.108))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' C 382  VAL HG11', ' C 387  LEU HD21', -1.013, (204.343, 228.712, 188.958)), (' A 382  VAL HG11', ' A 387  LEU HD21', -0.867, (236.873, 238.193, 188.61)), (' A  29  THR HG23', ' A  62  VAL HG23', -0.817, (204.731, 270.714, 207.592)), (' C 117  LEU HD21', ' C 231  ILE HD13', -0.726, (209.773, 188.395, 188.636)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.721, (223.451, 203.245, 262.19)), (' B 189  LEU HD11', ' B 217  PRO  HG2', -0.716, (277.984, 231.586, 210.562)), (' B 597  VAL HG12', ' B 599  THR HG23', -0.706, (255.216, 216.636, 228.335)), (' A 722  VAL HG22', ' A1065  VAL HG22', -0.703, (207.829, 235.279, 263.022)), (' A1105  THR HG22', ' A1112  PRO  HA ', -0.702, (222.671, 240.735, 285.066)), (' A 231  ILE HD12', ' A 233  ILE  HB ', -0.65, (204.956, 256.321, 185.97)), (' B 382  VAL HG11', ' B 387  LEU HD21', -0.649, (231.398, 200.02, 177.507)), (' B 100  ILE HG22', ' B 242  LEU  HB2', -0.644, (283.996, 229.301, 194.306)), (' B 961  THR HG21', ' C 765  ARG HH22', -0.642, (238.616, 227.159, 222.672)), (' B 811  LYS  O  ', ' B 813  SER  N  ', -0.642, (245.281, 253.074, 248.939)), (' C1105  THR HG22', ' C1112  PRO  HA ', -0.632, (212.102, 212.666, 285.456)), (' B 908  GLY  O  ', ' B1038  LYS  NZ ', -0.628, (230.876, 225.747, 269.376)), (' A 195  LYS  HD3', ' A 197  ILE HD13', -0.626, (207.491, 252.385, 197.167)), (' A 326  ILE HD12', ' A 539  VAL HG21', -0.625, (240.046, 257.225, 203.465)), (' B 599  THR HG22', ' B 608  VAL HG12', -0.621, (257.598, 217.095, 228.266)), (' B 276  LEU  HB3', ' B 289  VAL HG23', -0.612, (256.386, 226.898, 217.327)), (' A  41  LYS  HD3', ' C 520  ALA  HB2', -0.612, (197.878, 242.762, 198.271)), (' B  31  SER  OG ', ' B  56  LEU HD21', -0.611, (269.853, 223.178, 208.717)), (' C 752  LEU HD21', ' C 990  GLU  HG2', -0.606, (234.612, 219.927, 199.878)), (' B 537  LYS  O  ', ' B 539  VAL HG23', -0.598, (245.408, 193.264, 208.523)), (' A 193  VAL HG23', ' A 223  LEU HD23', -0.596, (199.058, 258.81, 203.007)), (' C 130  VAL HG11', ' C 231  ILE HG22', -0.593, (212.093, 187.301, 185.463)), (' C 201  PHE  HB2', ' C 231  ILE HD11', -0.593, (210.763, 189.738, 190.793)), (' A 328  ARG  NH1', ' A 578  ASP  OD2', -0.585, (248.128, 257.061, 198.926)), (' A 391  CYS  HB3', ' A 522  ALA  HB1', -0.584, (246.087, 244.606, 191.948)), (' A 736  VAL HG11', ' A1004  LEU HD21', -0.581, (209.485, 222.029, 220.496)), (' C 331  ASN  N  ', ' C 331  ASN  OD1', -0.578, (183.844, 233.472, 191.071)), (' C 642  VAL HG22', ' C 651  ILE HG12', -0.577, (187.336, 206.112, 227.776)), (' A  94  SER  O  ', ' A 189  LEU HD12', -0.577, (194.555, 267.591, 205.017)), (' C 382  VAL HG11', ' C 387  LEU  CD2', -0.573, (203.521, 228.653, 189.184)), (' A 117  LEU HD21', ' A 231  ILE HG21', -0.569, (201.866, 256.038, 187.15)), (' B 597  VAL HG12', ' B 599  THR  CG2', -0.568, (255.346, 216.877, 227.905)), (' A 552  LEU  HB3', ' A 585  LEU HD13', -0.568, (245.875, 255.465, 206.439)), (' A 332  ILE HG22', ' A 362  VAL HG23', -0.566, (247.69, 250.448, 183.488)), (' B 726  ILE HG12', ' B1061  VAL HG22', -0.564, (241.568, 233.782, 248.014)), (' A 961  THR HG21', ' B 762  GLN  CD ', -0.563, (214.832, 233.788, 221.829)), (' A 395  VAL HG22', ' A 515  PHE  HD1', -0.563, (243.328, 237.966, 186.428)), (' B 128  ILE  CG2', ' B 229  LEU HD21', -0.561, (266.101, 234.108, 187.241)), (' C 858  LEU HD23', ' C 959  LEU HD22', -0.555, (230.23, 207.764, 222.995)), (' B 705  VAL HG12', ' C 895  GLN  HB3', -0.551, (243.369, 205.811, 269.413)), (' B 722  VAL HG22', ' B1065  VAL HG22', -0.547, (243.887, 232.773, 261.689)), (' A 612  TYR  HE1', ' A 651  ILE HD12', -0.545, (225.815, 261.043, 224.513)), (' A1086  LYS  HD2', ' A1122  VAL HG11', -0.544, (239.581, 229.574, 294.107)), (' B 128  ILE HG21', ' B 229  LEU HD21', -0.541, (265.989, 234.38, 187.631)), (' B 725  GLU  OE1', ' B1028  LYS  NZ ', -0.54, (235.437, 227.064, 253.023)), (' B 599  THR HG22', ' B 608  VAL  CG1', -0.533, (257.546, 216.332, 228.026)), (' A 382  VAL HG11', ' A 387  LEU  CD2', -0.533, (236.707, 239.447, 188.635)), (' B 335  LEU HD23', ' B 336  CYS  N  ', -0.532, (230.435, 185.48, 180.77)), (' B 727  LEU HD11', ' B1028  LYS  HD2', -0.525, (233.648, 229.284, 251.099)), (' C 326  ILE HD11', ' C 534  VAL HG12', -0.524, (183.536, 221.95, 203.828)), (' A 538  CYS  CB ', ' A 551  VAL HG12', -0.523, (238.043, 257.586, 211.007)), (' A 330  PRO  HB2', ' A 332  ILE HD13', -0.523, (250.006, 250.719, 189.333)), (' C 229  LEU  HB3', ' C 231  ILE HG23', -0.522, (213.565, 187.374, 188.536)), (' C 332  ILE HD12', ' C 361  CYS  C  ', -0.52, (190.414, 233.84, 184.892)), (' A1114  ILE  O  ', ' A1119  ASN  ND2', -0.519, (225.066, 236.052, 291.015)), (' B1126  CYS  CB ', ' B1132  ILE HD13', -0.517, (228.751, 201.23, 288.995)), (' A  34  ARG  O  ', ' A  56  LEU HD23', -0.515, (204.279, 261.478, 209.256)), (' B1123  SER  OG ', ' C 914  ASN  ND2', -0.506, (221.39, 208.117, 285.059)), (' A 391  CYS  HA ', ' A 524  VAL  O  ', -0.505, (244.526, 244.694, 189.507)), (' B 811  LYS  CB ', ' B 812  PRO  HD2', -0.503, (247.785, 251.043, 250.718)), (' B1126  CYS  HB2', ' B1132  ILE HG21', -0.5, (230.11, 200.237, 288.717)), (' A 216  LEU  O  ', ' A 216  LEU HD12', -0.498, (199.397, 269.001, 211.715)), (' A 329  PHE  HD1', ' A 391  CYS  SG ', -0.498, (244.192, 248.444, 191.534)), (' A 537  LYS  O  ', ' A 539  VAL HG13', -0.497, (239.176, 259.321, 207.03)), (' B 193  VAL HG23', ' B 223  LEU HD12', -0.494, (266.509, 231.016, 203.873)), (' A 902  MET  HE1', ' A1049  LEU HD13', -0.49, (209.907, 232.728, 269.647)), (' C 393  THR HG21', ' C 519  HIS  NE2', -0.487, (200.814, 240.716, 195.073)), (' C 127  VAL HG23', ' C 171  VAL HG22', -0.486, (213.171, 175.631, 184.553)), (' A 749  CYS  HB2', ' A 977  LEU HD21', -0.485, (207.067, 219.848, 205.932)), (' B 236  THR  O  ', ' B 236  THR HG22', -0.484, (265.855, 216.532, 190.523)), (' C 358  ILE  HB ', ' C 395  VAL  HB ', -0.482, (198.384, 237.705, 183.484)), (' B1126  CYS  HB2', ' B1132  ILE HD13', -0.482, (228.999, 201.16, 288.992)), (' C 520  ALA  HB1', ' C 521  PRO  HD2', -0.481, (195.209, 242.024, 197.599)), (' A1129  VAL HG13', ' B 917  TYR  HB3', -0.481, (242.123, 235.865, 282.32)), (' A 196  ASN  C  ', ' A 197  ILE HD12', -0.48, (209.044, 253.312, 195.105)), (' B  30  ASN  OD1', ' B  31  SER  N  ', -0.48, (272.145, 221.026, 212.917)), (' B  57  PRO  O  ', ' B  60  SER  OG ', -0.48, (266.401, 219.474, 210.208)), (' C 811  LYS  CB ', ' C 812  PRO  HD2', -0.477, (236.944, 190.566, 249.467)), (' C 201  PHE  HE2', ' C 203  ILE HD11', -0.475, (208.531, 184.988, 193.606)), (' B 297  SER  O  ', ' B 301  CYS  SG ', -0.472, (254.929, 221.761, 219.158)), (' B 541  PHE  CZ ', ' B 587  ILE HD13', -0.472, (235.649, 195.254, 207.988)), (' C 611  LEU HD22', ' C 666  ILE HG23', -0.472, (197.239, 210.812, 233.008)), (' A 612  TYR  CE1', ' A 620  VAL HG21', -0.471, (226.781, 260.029, 222.731)), (' C 736  VAL HG22', ' C 858  LEU  HG ', -0.47, (233.091, 209.654, 222.01)), (' B1114  ILE  O  ', ' B1119  ASN  ND2', -0.47, (236.581, 217.523, 290.569)), (' A1093  GLY  O  ', ' A1107  ARG  NH2', -0.47, (229.996, 235.068, 279.377)), (' C  28  TYR  HB3', ' C  61  ASN  OD1', -0.469, (189.052, 187.304, 207.635)), (' C  29  THR HG22', ' C  30  ASN  N  ', -0.468, (192.817, 183.028, 210.593)), (' A1011  GLN  OE1', ' A1014  ARG  NH1', -0.468, (213.3, 228.526, 229.488)), (' B 324  GLU  OE2', ' B 534  VAL HG21', -0.468, (247.727, 192.069, 204.474)), (' C 384  PRO  HA ', ' C 387  LEU  HG ', -0.467, (202.841, 227.131, 187.04)), (' A  37  TYR  HB2', ' A 223  LEU  O  ', -0.467, (198.898, 253.773, 204.184)), (' B 201  PHE  HB3', ' B 229  LEU  HB2', -0.466, (262.436, 232.597, 190.146)), (' B 905  ARG  HD2', ' B1049  LEU  O  ', -0.465, (234.992, 232.45, 266.958)), (' C1114  ILE  O  ', ' C1119  ASN  ND2', -0.465, (215.062, 216.586, 291.172)), (' A  35  GLY  HA3', ' A  56  LEU  HB3', -0.465, (204.671, 260.427, 207.939)), (' A 189  LEU  HB2', ' A 210  ILE HD13', -0.464, (191.96, 268.661, 208.068)), (' C  31  SER  HB3', ' C  62  VAL HG13', -0.461, (196.537, 186.773, 208.452)), (' B 205  SER  HB3', ' B 226  LEU HD12', -0.461, (268.627, 236.773, 199.654)), (' B1116  THR  OG1', ' B1118  ASP  OD1', -0.461, (233.085, 219.034, 292.709)), (' C1088  HIS  CE1', ' C1122  VAL HG22', -0.461, (213.903, 228.661, 293.575)), (' C 560  LEU HD13', ' C 562  PHE  CE2', -0.459, (192.538, 248.498, 205.42)), (' B 858  LEU HD23', ' B 959  LEU HD22', -0.458, (235.298, 238.155, 222.706)), (' A  31  SER  HB2', ' A  56  LEU HD21', -0.457, (204.956, 264.766, 209.033)), (' B 376  THR  HB ', ' B 435  ALA  HB3', -0.457, (236.723, 194.786, 162.743)), (' B 118  LEU HD12', ' B 135  PHE  HE2', -0.456, (274.43, 228.308, 183.493)), (' A 736  VAL HG13', ' A 858  LEU HD23', -0.454, (206.436, 222.931, 220.889)), (' A 284  THR  O  ', ' A 286  THR HG23', -0.454, (194.773, 250.442, 216.002)), (' B 595  VAL HG22', ' B 612  TYR  CD2', -0.454, (251.007, 207.653, 221.471)), (' B  90  VAL HG21', ' B 238  PHE  CE2', -0.453, (269.496, 221.984, 195.693)), (' C  83  VAL HG11', ' C 237  ARG  NH2', -0.452, (193.38, 188.649, 187.252)), (' B 589  PRO  HG2', ' C 855  PHE  CB ', -0.451, (236.485, 199.568, 216.048)), (' C  86  PHE  CD2', ' C  86  PHE  O  ', -0.45, (201.652, 193.41, 194.068)), (' C 715  PRO  HA ', ' C1072  GLU  HA ', -0.45, (207.394, 208.265, 275.174)), (' A  34  ARG  HD2', ' A 216  LEU HD13', -0.449, (199.642, 266.256, 210.401)), (' C 382  VAL HG12', ' C 383  SER  N  ', -0.449, (205.468, 226.988, 189.426)), (' B 722  VAL  O  ', ' B 934  ILE HD11', -0.448, (247.009, 230.187, 257.606)), (' A 595  VAL HG22', ' A 612  TYR  CD2', -0.447, (225.935, 256.194, 222.82)), (' A 303  LEU HD12', ' A 308  VAL HG22', -0.447, (210.761, 249.367, 227.215)), (' B 720  ILE HG13', ' B 923  ILE HG23', -0.446, (245.219, 231.395, 269.994)), (' C 531  THR HG22', ' C 532  ASN  N  ', -0.445, (181.881, 222.383, 197.845)), (' A 393  THR HG21', ' A 520  ALA  HB3', -0.445, (249.546, 239.671, 194.843)), (' B 736  VAL HG13', ' B 858  LEU HD12', -0.445, (230.953, 239.656, 220.504)), (' A 365  TYR  HH ', ' A 392  PHE  HE2', -0.444, (241.667, 242.42, 186.926)), (' A 193  VAL HG23', ' A 223  LEU  CD2', -0.444, (199.331, 258.638, 203.689)), (' C1081  ILE HD11', ' C1137  VAL HG22', -0.443, (210.666, 222.957, 293.074)), (' C 905  ARG  HD2', ' C1049  LEU  O  ', -0.443, (227.577, 210.155, 266.442)), (' C 908  GLY  O  ', ' C1038  LYS  NZ ', -0.443, (224.185, 217.435, 269.382)), (' A 391  CYS  CB ', ' A 522  ALA  HB1', -0.443, (245.912, 244.834, 192.397)), (' A 676  THR  HA ', ' A 690  GLN  HA ', -0.443, (213.033, 266.71, 240.721)), (' B 849  LEU  HB2', ' B 852  ALA  HB3', -0.442, (243.815, 241.876, 220.066)), (' A 612  TYR  CZ ', ' A 620  VAL HG21', -0.442, (226.396, 259.602, 222.656)), (' A 618  THR HG23', ' A 619  GLU  N  ', -0.441, (235.189, 262.109, 221.445)), (' C 320  VAL HG12', ' C 321  GLN  N  ', -0.441, (190.569, 214.381, 212.295)), (' A 395  VAL  HA ', ' A 514  SER  O  ', -0.44, (244.984, 235.321, 185.806)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.439, (231.802, 230.066, 175.197)), (' C 726  ILE HG13', ' C1061  VAL HG22', -0.439, (224.566, 204.083, 248.564)), (' C 143  VAL  O  ', ' C 143  VAL HG22', -0.438, (194.947, 164.354, 190.264)), (' B 532  ASN  OD1', ' B 533  LEU  N  ', -0.438, (244.018, 186.097, 201.298)), (' C 224  GLU  N  ', ' C 224  GLU  OE1', -0.437, (213.268, 181.797, 206.813)), (' C  86  PHE  HD2', ' C  86  PHE  O  ', -0.437, (201.465, 193.935, 194.014)), (' C 719  THR HG23', ' C1070  ALA  HB2', -0.437, (212.146, 203.044, 269.464)), (' C 130  VAL HG11', ' C 231  ILE  CG2', -0.437, (211.776, 187.473, 186.383)), (' A 749  CYS  CB ', ' A 977  LEU HD21', -0.435, (207.071, 220.117, 206.531)), (' B 749  CYS  CB ', ' B 977  LEU HD21', -0.435, (227.457, 240.634, 206.184)), (' C  53  ASP  HB2', ' C  55  PHE  CE1', -0.433, (209.705, 195.341, 207.679)), (' C 553  THR HG22', ' C 554  GLU  N  ', -0.433, (182.178, 230.323, 213.032)), (' C 736  VAL HG11', ' C1004  LEU HD21', -0.433, (232.638, 212.773, 219.882)), (' A  57  PRO  HG3', ' A 273  ARG  HE ', -0.432, (212.959, 259.411, 208.966)), (' B 122  ASN  O  ', ' B 124  THR  N  ', -0.431, (280.238, 242.454, 188.898)), (' C 676  THR  HA ', ' C 690  GLN  HA ', -0.431, (191.854, 193.308, 240.769)), (' C 986  PRO  N  ', ' C 987  PRO  CD ', -0.431, (234.259, 215.478, 192.447)), (' A 551  VAL HG22', ' A 588  THR  O  ', -0.43, (240.33, 253.939, 212.684)), (' A 852  ALA  O  ', ' A 856  ASN  ND2', -0.43, (201.412, 227.911, 218.49)), (' B 705  VAL  O  ', ' B 707  TYR  N  ', -0.43, (244.021, 202.069, 269.144)), (' C 401  VAL HG22', ' C 509  ARG  HG2', -0.429, (210.187, 237.223, 168.348)), (' A 612  TYR  CE1', ' A 651  ILE HD12', -0.429, (226.067, 260.963, 224.509)), (' C 382  VAL  CG1', ' C 387  LEU HD21', -0.427, (204.107, 228.533, 189.2)), (' C 734  THR HG21', ' C1007  TYR  OH ', -0.427, (231.322, 210.24, 226.083)), (' B1081  ILE  HA ', ' B1133  VAL  O  ', -0.427, (233.893, 204.189, 289.691)), (' A1006  THR  O  ', ' A1010  GLN  HG2', -0.426, (218.245, 227.446, 225.013)), (' C 354  ASN  O  ', ' C 398  ASP  HA ', -0.424, (206.198, 242.176, 177.759)), (' A 520  ALA  O  ', ' A 522  ALA  N  ', -0.423, (249.52, 243.491, 195.347)), (' B 598  ILE HG23', ' B 664  ILE HG21', -0.422, (252.785, 214.109, 233.852)), (' A 787  GLN  OE1', ' C 703  ASN  ND2', -0.421, (200.09, 211.341, 263.497)), (' C 802  PHE  HD2', ' C 805  ILE HD11', -0.42, (230.56, 199.339, 262.295)), (' A 309  GLU  O  ', ' A 313  TYR  OH ', -0.42, (212.405, 249.53, 232.005)), (' C1029  MET  HE2', ' C1053  PRO  HB3', -0.419, (231.966, 208.562, 253.738)), (' B  65  PHE  CE1', ' B  84  LEU HD11', -0.419, (276.222, 219.855, 197.304)), (' C 533  LEU HD11', ' C 585  LEU HD11', -0.418, (184.195, 229.241, 204.269)), (' A 551  VAL HG22', ' A 588  THR  HB ', -0.418, (241.302, 254.487, 213.188)), (' C 927  PHE  HE1', ' C1065  VAL HG21', -0.418, (225.685, 202.227, 263.537)), (' B 326  ILE HD11', ' B 541  PHE  HB3', -0.418, (240.106, 193.594, 204.814)), (' C 376  THR  HB ', ' C 435  ALA  HB3', -0.418, (213.42, 230.195, 174.977)), (' B 749  CYS  HB2', ' B 977  LEU HD21', -0.417, (227.615, 240.657, 205.702)), (' A1093  GLY  HA3', ' A1105  THR  O  ', -0.417, (226.169, 235.994, 282.356)), (' A1028  LYS  O  ', ' A1032  CYS  CB ', -0.417, (213.989, 225.789, 257.345)), (' A 290  ASP  HB3', ' A 293  LEU  HB2', -0.417, (210.833, 258.828, 216.184)), (' B 382  VAL HG23', ' B 430  THR HG23', -0.416, (229.542, 203.675, 175.269)), (' C 329  PHE  HD2', ' C 391  CYS  SG ', -0.416, (191.732, 231.08, 192.716)), (' C 329  PHE  CD2', ' C 391  CYS  SG ', -0.416, (192.054, 230.818, 192.829)), (' A 569  ILE HD13', ' B 849  LEU  HG ', -0.415, (245.019, 239.081, 220.248)), (' A 196  ASN  O  ', ' A 197  ILE HD12', -0.415, (209.352, 253.696, 194.771)), (' A 900  MET  HB2', ' A 900  MET  HE3', -0.414, (204.866, 224.707, 278.29)), (' A 866  THR  H  ', ' A 866  THR  HG1', -0.413, (197.046, 218.698, 244.191)), (' B 130  VAL  HB ', ' B 233  ILE HD11', -0.413, (264.226, 229.614, 182.225)), (' B 915  VAL  O  ', ' B 919  ASN  ND2', -0.413, (245.194, 229.122, 278.594)), (' B 984  LEU  HB2', ' B 989  ALA  HB2', -0.413, (228.592, 237.842, 196.132)), (' B1116  THR HG22', ' B1138  TYR  HD2', -0.413, (235.852, 217.471, 296.44)), (' A1088  HIS  CE1', ' A1122  VAL HG22', -0.413, (236.234, 230.628, 293.124)), (' A 900  MET  HE1', ' C1077  THR HG23', -0.411, (203.705, 222.347, 280.966)), (' A 613  GLN  O  ', ' A 615  VAL HG13', -0.409, (231.662, 254.101, 224.684)), (' C 749  CYS  HB2', ' C 977  LEU HD21', -0.408, (235.051, 212.007, 205.509)), (' A 585  LEU  O  ', ' A 585  LEU HD12', -0.408, (247.725, 252.661, 207.231)), (' C 391  CYS  HA ', ' C 524  VAL  O  ', -0.408, (195.105, 233.295, 190.266)), (' C  45  SER  O  ', ' C  47  VAL HG23', -0.408, (222.313, 191.046, 220.034)), (' B1028  LYS  O  ', ' B1032  CYS  CB ', -0.408, (231.952, 231.867, 257.389)), (' A 801  ASN  ND2', ' A1312  NAG  O7 ', -0.408, (194.479, 236.433, 267.794)), (' B  48  LEU HD23', ' B 278  LYS  HA ', -0.407, (255.515, 234.208, 218.591)), (' C1103  PHE  HZ ', ' C1312  NAG  H62', -0.407, (207.488, 210.087, 291.945)), (' C 902  MET  HE1', ' C1049  LEU HD13', -0.406, (224.397, 206.246, 269.037)), (' A 106  PHE  HB3', ' A 235  ILE  CD1', -0.406, (205.52, 261.358, 189.134)), (' A 215  ASP  HA ', ' A 266  TYR  OH ', -0.406, (197.734, 273.369, 207.925)), (' A 519  HIS  CD2', ' A 546  LEU HD21', -0.405, (243.162, 241.398, 199.719)), (' B 902  MET  HE1', ' B1049  LEU HD13', -0.404, (240.549, 231.975, 269.102)), (' C1118  ASP  O  ', ' C1118  ASP  OD1', -0.404, (221.201, 221.38, 290.359)), (' C 770  ILE  O  ', ' C 774  GLN  HG2', -0.404, (234.751, 214.665, 234.955)), (' B  86  PHE  CD2', ' B  86  PHE  O  ', -0.404, (264.125, 220.952, 194.494)), (' C 118  LEU  HG ', ' C 120  VAL HG23', -0.403, (205.546, 178.459, 186.015)), (' B 709  ASN  N  ', ' B 709  ASN  OD1', -0.403, (239.91, 198.546, 276.352)), (' C 706  ALA  CB ', ' C1311  NAG  H5 ', -0.403, (196.089, 213.182, 273.402)), (' B 543  PHE  O  ', ' B 544  ASN  C  ', -0.403, (231.675, 193.999, 199.076)), (' B 360  ASN  HA ', ' B 523  THR  HB ', -0.402, (221.905, 189.332, 185.264)), (' A 538  CYS  HB3', ' A 551  VAL HG12', -0.402, (237.377, 257.552, 211.461)), (' A1141  LEU  HG ', ' A1145  LEU HD13', -0.402, (227.741, 226.409, 304.964)), (' A1028  LYS  O  ', ' A1032  CYS  HB3', -0.401, (213.598, 226.005, 257.665)), (' B  34  ARG  NH1', ' B 191  GLU  OE2', -0.401, (272.148, 231.174, 210.061)), (' B 384  PRO  HA ', ' B 387  LEU HD12', -0.401, (234.61, 197.461, 177.579)), (' B  86  PHE  O  ', ' B  87  ASN  C  ', -0.401, (263.272, 219.22, 195.754)), (' B 335  LEU HD23', ' B 336  CYS  H  ', -0.401, (230.509, 185.585, 181.28)), (' B 612  TYR  HE1', ' B 651  ILE HD12', -0.4, (255.418, 205.502, 223.429)), (' A 104  TRP  HB3', ' A 106  PHE  CE1', -0.4, (200.129, 263.39, 191.583)), (' C 320  VAL HG12', ' C 321  GLN  H  ', -0.4, (190.061, 214.413, 212.233))]
data['smoc'] = [('A', 36, u'VAL', 0.6171428301222847, (202.195, 255.931, 209.001)), ('A', 40, u'ASP', 0.6403410832048069, (201.039, 245.181, 204.289)), ('A', 41, u'LYS', 0.614844207742266, (197.70999999999998, 243.85500000000002, 203.04399999999998)), ('A', 42, u'VAL', 0.6737270246980887, (197.437, 241.207, 205.788)), ('A', 47, u'VAL', 0.7146355277109758, (199.85500000000002, 243.032, 218.32700000000003)), ('A', 86, u'PHE', 0.572014882126021, (209.976, 263.43699999999995, 194.605)), ('A', 104, u'TRP', 0.6270529899814765, (198.148, 265.862, 190.847)), ('A', 110, u'LEU', 0.6633571495507605, (206.097, 267.289, 183.38600000000002)), ('A', 136, u'CYS', 0.5557775263251875, (200.591, 275.214, 181.153)), ('A', 137, u'ASN', 0.5924901722307326, (203.622, 277.09099999999995, 182.45800000000003)), ('A', 194, u'PHE', 0.5685247077001199, (202.67899999999997, 258.504, 196.971)), ('A', 201, u'PHE', 0.6979043832210478, (203.091, 253.64399999999998, 191.985)), ('A', 216, u'LEU', 0.6890403392126406, (197.38400000000001, 269.889, 210.196)), ('A', 233, u'ILE', 0.657338447326828, (207.231, 255.631, 184.778)), ('A', 263, u'ALA', 0.6963143223313704, (193.323, 275.443, 200.54)), ('A', 265, u'TYR', 0.6180174697905005, (198.772, 271.575, 201.525)), ('A', 267, u'VAL', 0.5470892266388473, (204.641, 267.97099999999995, 201.782)), ('A', 277, u'LEU', 0.7019713239612698, (202.859, 249.58, 214.918)), ('A', 279, u'TYR', 0.6926957453501911, (197.257, 247.012, 216.154)), ('A', 285, u'ILE', 0.6717190333470908, (196.999, 250.889, 213.835)), ('A', 291, u'CYS', 0.7119158923471192, (212.62, 253.61599999999999, 216.18200000000002)), ('A', 297, u'SER', 0.7062201129276603, (211.798, 255.411, 221.285)), ('A', 301, u'CYS', 0.6903798537727077, (211.589, 249.57899999999998, 219.756)), ('A', 330, u'PRO', 0.728109110599422, (248.798, 252.085, 191.093)), ('A', 336, u'CYS', 0.7301872996807959, (246.354, 245.23499999999999, 179.02200000000002)), ('A', 372, u'ALA', 0.6279134021384474, (228.526, 240.796, 171.255)), ('A', 417, u'LYS', 0.7262627768161013, (238.278, 213.78, 176.47299999999998)), ('A', 427, u'ASP', 0.6413628072539549, (237.16, 222.23399999999998, 191.102)), ('A', 429, u'PHE', 0.6122192850918202, (238.194, 227.52800000000002, 189.765)), ('A', 444, u'LYS', 0.7618312119436872, (238.43200000000002, 224.89700000000002, 155.36700000000002)), ('A', 445, u'VAL', 0.7935373278811387, (236.42200000000003, 223.464, 152.48600000000002)), ('A', 465, u'GLU', 0.7113552588974849, (248.571, 220.91299999999998, 183.64899999999997)), ('A', 480, u'CYS', 0.6771019958418933, (255.61899999999997, 199.931, 171.43800000000002)), ('A', 503, u'VAL', 0.7886310198426192, (227.596, 223.47, 164.877)), ('A', 505, u'TYR', 0.7731572300019834, (231.461, 219.89800000000002, 165.238)), ('A', 533, u'LEU', 0.7602293553829746, (243.93800000000002, 260.443, 200.873)), ('A', 546, u'LEU', 0.6760083250428836, (241.08700000000002, 245.68, 199.589)), ('A', 570, u'ALA', 0.7184064595578404, (241.289, 238.023, 213.67)), ('A', 587, u'ILE', 0.7110159531964632, (243.798, 251.504, 209.996)), ('A', 590, u'CYS', 0.7378680622419529, (235.824, 254.23999999999998, 213.23299999999998)), ('A', 666, u'ILE', 0.6630367297327235, (225.344, 252.315, 235.869)), ('A', 668, u'ALA', 0.7394218693600649, (232.08200000000002, 251.499, 238.38500000000002)), ('A', 671, u'CYS', 0.6784100046323588, (224.186, 254.81, 240.067)), ('A', 699, u'LEU', 0.7594763900027512, (227.542, 251.657, 250.92200000000003)), ('A', 729, u'VAL', 0.6293065401121569, (210.512, 225.42600000000002, 243.82100000000003)), ('A', 771, u'ALA', 0.6528005012550147, (208.95100000000002, 217.69899999999998, 234.02)), ('A', 901, u'GLN', 0.5661986332244523, (207.95100000000002, 225.17499999999998, 273.27599999999995)), ('A', 904, u'TYR', 0.6151412149103865, (212.782, 225.757, 274.556)), ('A', 938, u'LEU', 0.6945553887869308, (202.22299999999998, 241.46800000000002, 251.123)), ('A', 962, u'LEU', 0.6313952696184975, (210.038, 229.546, 220.4)), ('A', 963, u'VAL', 0.698647462680816, (206.768, 230.48000000000002, 218.712)), ('A', 990, u'GLU', 0.6922046671619334, (212.547, 219.491, 199.895)), ('A', 993, u'ILE', 0.6346982884271507, (212.171, 222.295, 203.537)), ('A', 1012, u'LEU', 0.6525110361251719, (217.869, 222.436, 231.056)), ('A', 1022, u'ALA', 0.6069405180363766, (214.317, 223.626, 245.433)), ('A', 1029, u'MET', 0.5967235615124155, (212.095, 223.39600000000002, 255.6)), ('A', 1051, u'SER', 0.6032976453561654, (209.553, 229.447, 260.89599999999996)), ('A', 1060, u'VAL', 0.6257306233299492, (207.312, 228.478, 249.047)), ('A', 1065, u'VAL', 0.5929345512621049, (210.20899999999997, 234.505, 263.547)), ('A', 1077, u'THR', 0.5849848027326507, (233.24599999999998, 244.507, 282.254)), ('A', 1094, u'VAL', 0.520205818101914, (229.589, 237.812, 281.825)), ('A', 1096, u'VAL', 0.5482698882678149, (229.27299999999997, 243.584, 284.39799999999997)), ('A', 1103, u'PHE', 0.6069213454827518, (226.842, 241.502, 288.76599999999996)), ('A', 1115, u'ILE', 0.6353003244616944, (227.89200000000002, 237.04899999999998, 292.197)), ('A', 1147, u'SER', 0.7604300211738689, (222.007, 230.77899999999997, 311.829)), ('A', 1303, u'NAG', 0.7303589251159645, (184.546, 247.505, 217.181)), ('A', 1305, u'NAG', 0.6729524247788028, (239.636, 241.05200000000002, 165.506)), ('A', 1306, u'NAG', 0.7704554383999636, (201.74299999999997, 254.105, 238.278)), ('A', 1307, u'NAG', 0.7138502304271573, (240.429, 262.33799999999997, 226.21499999999997)), ('A', 1314, u'NAG', 0.6160279770470704, (229.277, 254.683, 274.611)), ('B', 27, u'ALA', 0.7716556681961847, (280.65400000000005, 215.125, 205.78)), ('B', 35, u'GLY', 0.7453177643613617, (266.348, 227.83800000000002, 207.8)), ('B', 39, u'PRO', 0.7496850020281088, (256.39799999999997, 232.532, 204.991)), ('B', 41, u'LYS', 0.721391841618237, (254.70399999999998, 239.172, 202.873)), ('B', 61, u'ASN', 0.7950233679593355, (271.967, 216.95700000000002, 208.70299999999997)), ('B', 86, u'PHE', 0.7353827441237009, (266.40299999999996, 219.88700000000003, 194.55)), ('B', 105, u'ILE', 0.7362378291766166, (272.404, 226.424, 187.955)), ('B', 115, u'GLN', 0.6794830218675688, (265.45599999999996, 225.348, 179.946)), ('B', 122, u'ASN', 0.6736244308685518, (279.79599999999994, 239.011, 188.317)), ('B', 125, u'ASN', 0.7381353079542152, (275.948, 242.67399999999998, 189.60399999999998)), ('B', 140, u'PHE', 0.6518205327766898, (282.834, 227.236, 187.13299999999998)), ('B', 210, u'ILE', 0.7143709882503491, (280.412, 235.578, 212.064)), ('B', 215, u'ASP', 0.7422478554586888, (281.419, 224.646, 211.534)), ('B', 219, u'GLY', 0.7518890102405803, (271.924, 230.797, 216.576)), ('B', 263, u'ALA', 0.6695564369756296, (284.90799999999996, 228.761, 200.939)), ('B', 279, u'TYR', 0.7794191577195149, (257.02299999999997, 237.623, 215.85600000000002)), ('B', 285, u'ILE', 0.7885133597168816, (260.82, 236.224, 213.89200000000002)), ('B', 291, u'CYS', 0.7472926147357842, (256.118, 221.17499999999998, 215.454)), ('B', 324, u'GLU', 0.8179141126511806, (248.15200000000002, 196.72299999999998, 202.485)), ('B', 326, u'ILE', 0.7782372257557013, (242.512, 193.339, 200.471)), ('B', 346, u'ARG', 0.7165941868001701, (228.008, 179.575, 161.21099999999998)), ('B', 351, u'TYR', 0.7676844557833566, (220.68, 191.39100000000002, 156.04399999999998)), ('B', 355, u'ARG', 0.7457645002354851, (221.309, 189.24499999999998, 167.947)), ('B', 357, u'ARG', 0.7468005155263012, (221.04, 188.847, 174.489)), ('B', 364, u'ASP', 0.771777044802804, (234.985, 189.048, 181.28)), ('B', 374, u'PHE', 0.7800219623012004, (240.727, 190.575, 166.025)), ('B', 378, u'LYS', 0.7371312972151169, (236.753, 199.95800000000003, 168.08)), ('B', 379, u'CYS', 0.7468410141453521, (234.689, 201.168, 171.05)), ('B', 384, u'PRO', 0.710694964377526, (236.259, 197.94899999999998, 177.553)), ('B', 390, u'LEU', 0.7679071834319234, (230.134, 198.515, 185.298)), ('B', 403, u'ARG', 0.7650147602260371, (233.339, 191.636, 153.031)), ('B', 417, u'LYS', 0.716675910100589, (225.001, 199.447, 150.811)), ('B', 427, u'ASP', 0.7062279220095027, (224.93800000000002, 208.444, 165.21299999999997)), ('B', 430, u'THR', 0.6928506068473409, (227.79899999999998, 203.75, 172.48100000000002)), ('B', 444, u'LYS', 0.7625701224512352, (235.167, 177.925, 149.38500000000002)), ('B', 458, u'LYS', 0.6539360685233473, (212.67399999999998, 201.694, 149.516)), ('B', 462, u'LYS', 0.6986812279856338, (216.768, 202.999, 161.15200000000002)), ('B', 470, u'THR', 0.7317602683112843, (212.17399999999998, 189.001, 150.14499999999998)), ('B', 478, u'THR', 0.6761307904924658, (204.483, 199.15, 137.493)), ('B', 481, u'ASN', 0.710990031174424, (202.76999999999998, 191.545, 142.33800000000002)), ('B', 483, u'VAL', 0.7195741870910031, (206.668, 188.584, 139.80700000000002)), ('B', 490, u'PHE', 0.7184137503316242, (214.915, 190.24299999999997, 143.906)), ('B', 492, u'LEU', 0.7409428914502143, (219.005, 190.08700000000002, 147.931)), ('B', 505, u'TYR', 0.7285537258999687, (236.524, 190.925, 148.985)), ('B', 518, u'LEU', 0.7121753019840255, (216.601, 199.873, 181.85700000000003)), ('B', 519, u'HIS', 0.5001944668708395, (214.309, 200.45200000000003, 184.829)), ('B', 538, u'CYS', 0.8229651626042404, (245.509, 195.92700000000002, 210.343)), ('B', 546, u'LEU', 0.7186737921544784, (231.292, 197.14499999999998, 202.292)), ('B', 551, u'VAL', 0.8042904959575026, (242.07399999999998, 193.638, 211.82700000000003)), ('B', 582, u'LEU', 0.7763756525026306, (232.47299999999998, 180.126, 204.17299999999997)), ('B', 587, u'ILE', 0.7521814599428649, (236.61599999999999, 192.98100000000002, 212.42800000000003)), ('B', 590, u'CYS', 0.7066845688314812, (242.971, 198.869, 214.542)), ('B', 666, u'ILE', 0.6606425005009884, (248.3, 209.42200000000003, 234.98600000000002)), ('B', 694, u'ALA', 0.6650288000209851, (256.02799999999996, 206.76999999999998, 237.517)), ('B', 715, u'PRO', 0.6136967565559882, (245.55700000000002, 216.918, 274.43499999999995)), ('B', 729, u'VAL', 0.5901466458284289, (232.58100000000002, 234.996, 243.343)), ('B', 736, u'VAL', 0.6161487512297363, (228.73999999999998, 240.621, 222.70299999999997)), ('B', 738, u'CYS', 0.5378841130025092, (225.553, 239.77499999999998, 217.617)), ('B', 742, u'ILE', 0.5828506268957807, (228.412, 238.38000000000002, 212.495)), ('B', 749, u'CYS', 0.6011492035363963, (224.80100000000002, 240.77299999999997, 205.578)), ('B', 797, u'PHE', 0.5987629905256457, (242.909, 244.017, 271.014)), ('B', 819, u'GLU', 0.645856779899795, (244.697, 242.221, 250.072)), ('B', 822, u'LEU', 0.6504970358492221, (246.251, 238.92000000000002, 246.66)), ('B', 849, u'LEU', 0.7009723172968263, (244.284, 241.02200000000002, 222.977)), ('B', 858, u'LEU', 0.6618941963512397, (233.023, 242.01399999999998, 222.08800000000002)), ('B', 877, u'LEU', 0.6006659376753659, (232.9, 243.289, 258.092)), ('B', 923, u'ILE', 0.611849659631013, (247.508, 232.437, 271.93199999999996)), ('B', 965, u'GLN', 0.6690284597724232, (236.371, 231.732, 214.79)), ('B', 980, u'ILE', 0.6571253679822453, (232.931, 238.189, 199.303)), ('B', 996, u'LEU', 0.6673673440224477, (229.409, 232.596, 206.849)), ('B', 1010, u'GLN', 0.6456752311063014, (229.347, 227.61599999999999, 227.60999999999999)), ('B', 1012, u'LEU', 0.6861728691663951, (225.695, 230.036, 230.853)), ('B', 1051, u'SER', 0.576019262798126, (237.354, 234.05700000000002, 260.072)), ('B', 1060, u'VAL', 0.5982194968680412, (236.97, 236.38100000000003, 248.291)), ('B', 1072, u'GLU', 0.5804580919504919, (248.617, 214.738, 273.974)), ('B', 1082, u'CYS', 0.6034085974703036, (231.33700000000002, 203.768, 292.502)), ('B', 1096, u'VAL', 0.5669586205554878, (241.037, 210.0, 283.752)), ('B', 1115, u'ILE', 0.5867454995497919, (236.35800000000003, 214.537, 291.545)), ('B', 1301, u'NAG', 0.670933727858866, (273.772, 212.056, 209.983)), ('B', 1303, u'NAG', 0.7510110029416786, (263.812, 247.67299999999997, 216.69)), ('B', 1304, u'NAG', 0.788676391942925, (236.27899999999997, 178.534, 194.0)), ('B', 1305, u'NAG', 0.7517020556447407, (237.606, 179.54299999999998, 170.692)), ('B', 1306, u'NAG', 0.7431747360164822, (262.459, 230.565, 234.141)), ('B', 1307, u'NAG', 0.7399153877005259, (249.24399999999997, 193.256, 226.917)), ('B', 1308, u'NAG', 0.7300770911331457, (260.194, 195.433, 243.61499999999998)), ('B', 1309, u'NAG', 0.6978696849231804, (239.61599999999999, 194.55700000000002, 277.97799999999995)), ('B', 1313, u'NAG', 0.607788105724007, (250.222, 204.286, 273.80400000000003)), ('C', 42, u'VAL', 0.7185409928168207, (222.55100000000002, 191.095, 208.74399999999997)), ('C', 117, u'LEU', 0.6401965881035376, (206.647, 185.463, 186.318)), ('C', 122, u'ASN', 0.7196274905159101, (206.876, 170.25, 188.567)), ('C', 134, u'GLN', 0.6355940657795708, (200.063, 182.875, 177.02800000000002)), ('C', 135, u'PHE', 0.6731935291957051, (198.003, 181.49800000000002, 179.914)), ('C', 143, u'VAL', 0.5861144817160131, (195.377, 166.08100000000002, 188.66899999999998)), ('C', 172, u'SER', 0.6411448555548848, (216.797, 173.787, 190.411)), ('C', 194, u'PHE', 0.6151297653151896, (206.476, 187.455, 197.655)), ('C', 213, u'VAL', 0.7149817884813372, (193.076, 171.107, 209.466)), ('C', 289, u'VAL', 0.7793987604469909, (205.98600000000002, 193.265, 218.365)), ('C', 291, u'CYS', 0.7491475024084303, (204.296, 198.76399999999998, 216.74099999999999)), ('C', 297, u'SER', 0.7362802992065429, (202.74399999999997, 197.469, 221.845)), ('C', 298, u'GLU', 0.7071710062363498, (203.334, 201.132, 220.997)), ('C', 301, u'CYS', 0.6957235775541271, (208.39800000000002, 199.61499999999998, 220.637)), ('C', 309, u'GLU', 0.8084473982055524, (207.74499999999998, 197.963, 234.13299999999998)), ('C', 340, u'GLU', 0.7820646685509727, (197.369, 237.532, 171.684)), ('C', 387, u'LEU', 0.7301253881578057, (200.11599999999999, 227.365, 188.671)), ('C', 391, u'CYS', 0.7484739294892268, (195.49800000000002, 232.627, 192.171)), ('C', 429, u'PHE', 0.6056321850138565, (212.991, 236.407, 189.80100000000002)), ('C', 432, u'CYS', 0.5897120603125774, (208.778, 231.787, 183.647)), ('C', 436, u'TRP', 0.7113952681679128, (211.19299999999998, 229.869, 170.51899999999998)), ('C', 444, u'LYS', 0.7597457328002353, (214.006, 238.259, 155.39000000000001)), ('C', 477, u'SER', 0.7725971474454127, (235.71699999999998, 263.402, 174.295)), ('C', 478, u'THR', 0.7272298961107363, (234.007, 265.377, 171.504)), ('C', 484, u'GLU', 0.7422764448754968, (225.474, 261.305, 165.257)), ('C', 485, u'GLY', 0.7528204233919696, (228.877, 260.327, 163.93200000000002)), ('C', 486, u'PHE', 0.7393827333011888, (232.257, 259.082, 165.076)), ('C', 524, u'VAL', 0.7347317664927188, (194.071, 235.22299999999998, 187.73499999999999)), ('C', 525, u'CYS', 0.7374654484928274, (193.35100000000003, 231.617, 188.708)), ('C', 541, u'PHE', 0.7690253553306164, (190.605, 223.86700000000002, 203.054)), ('C', 565, u'PHE', 0.6946131391256648, (193.45700000000002, 236.95700000000002, 205.24599999999998)), ('C', 587, u'ILE', 0.7111910565889116, (190.30800000000002, 229.037, 211.395)), ('C', 641, u'ASN', 0.7283361032996774, (184.655, 203.16299999999998, 231.503)), ('C', 649, u'CYS', 0.7054234028839576, (190.64, 211.85800000000003, 229.283)), ('C', 666, u'ILE', 0.6434290685657996, (198.736, 210.894, 236.35100000000003)), ('C', 671, u'CYS', 0.6325177901809711, (197.137, 208.583, 240.55)), ('C', 676, u'THR', 0.7562605631751556, (191.81, 193.629, 242.88200000000003)), ('C', 705, u'VAL', 0.7446331673468735, (197.77399999999997, 215.809, 267.929)), ('C', 713, u'ALA', 0.6313253621940073, (204.306, 213.656, 275.90299999999996)), ('C', 714, u'ILE', 0.5886031707373621, (207.731, 212.295, 276.84200000000004)), ('C', 749, u'CYS', 0.6504610370348921, (236.55, 214.753, 204.924)), ('C', 763, u'LEU', 0.6414925576356038, (234.751, 219.96800000000002, 222.02200000000002)), ('C', 767, u'LEU', 0.6452409603047728, (235.369, 216.834, 227.55100000000002)), ('C', 771, u'ALA', 0.7087728664013991, (237.195, 214.35800000000003, 233.076)), ('C', 781, u'VAL', 0.5900867956339924, (234.683, 213.395, 248.593)), ('C', 870, u'ILE', 0.6311197711789951, (238.54399999999998, 204.18, 247.38500000000002)), ('C', 878, u'LEU', 0.606867967860304, (235.647, 204.146, 259.21599999999995)), ('C', 894, u'LEU', 0.638046601344341, (242.91299999999998, 210.515, 269.889)), ('C', 979, u'ASP', 0.7856915565965166, (230.23999999999998, 205.371, 199.594)), ('C', 983, u'ARG', 0.7933352263225074, (230.512, 207.055, 193.978)), ('C', 996, u'LEU', 0.6286537421819347, (227.4, 214.95700000000002, 206.718)), ('C', 1061, u'VAL', 0.6249345588576486, (226.765, 205.167, 250.585)), ('C', 1081, u'ILE', 0.5895206595124494, (206.642, 225.71099999999998, 290.51599999999996)), ('C', 1087, u'ALA', 0.5910238963861003, (209.33800000000002, 230.70899999999997, 290.97499999999997)), ('C', 1094, u'VAL', 0.5148818229707646, (210.817, 219.873, 282.16)), ('C', 1095, u'PHE', 0.6089456337639207, (208.478, 219.506, 285.11400000000003)), ('C', 1096, u'VAL', 0.5532408953722694, (206.093, 216.569, 284.794)), ('C', 1147, u'SER', 0.7969793288886549, (221.863, 216.032, 311.519))]
data['rota'] = [('A', ' 538 ', 'CYS', 0.015466413178673408, (237.313, 257.7550000000001, 209.219)), ('A', ' 615 ', 'VAL', 0.0846149553047036, (233.867, 256.217, 225.06399999999996)), ('A', ' 723 ', 'THR', 0.11257800614351905, (210.711, 238.262, 258.119)), ('A', ' 866 ', 'THR', 0.07992409348480381, (197.38799999999995, 220.524, 243.10199999999998)), ('A', ' 878 ', 'LEU', 0.0, (202.13899999999995, 224.254, 260.496)), ('A', '1133 ', 'VAL', 0.07801268539543511, (239.3370000000001, 242.86499999999995, 289.358)), ('B', ' 229 ', 'LEU', 0.24062006505238895, (261.301, 234.641, 189.263)), ('B', ' 289 ', 'VAL', 0.003127019590465352, (259.253, 225.747, 217.266)), ('B', ' 301 ', 'CYS', 0.0, (252.43800000000002, 224.15199999999996, 219.272)), ('B', ' 302 ', 'THR', 0.25077806074675546, (249.269, 222.531, 220.618)), ('B', ' 603 ', 'ASN', 0.06747038162306661, (261.29, 225.907, 233.623)), ('B', ' 723 ', 'THR', 0.008087669993983582, (244.21200000000007, 228.66, 256.906)), ('B', '1094 ', 'VAL', 0.06215589564197076, (235.766, 212.53299999999993, 281.392)), ('B', '1132 ', 'ILE', 0.24361072159345, (232.755, 201.221, 286.429)), ('C', ' 331 ', 'ASN', 0.0, (184.066, 232.867, 189.465)), ('C', ' 515 ', 'PHE', 0.2221876892734011, (203.293, 236.801, 188.858)), ('C', ' 517 ', 'LEU', 0.14826978349592798, (202.25500000000005, 235.316, 194.891)), ('C', ' 738 ', 'CYS', 0.11299273141627969, (236.15399999999994, 214.576, 217.18699999999998))]
data['clusters'] = [('A', '104', 1, 'side-chain clash\nsmoc Outlier', (200.129, 263.39, 191.583)), ('A', '106', 1, 'side-chain clash', (200.129, 263.39, 191.583)), ('A', '108', 1, 'cablam Outlier', (210.3, 264.1, 185.3)), ('A', '110', 1, 'smoc Outlier', (206.097, 267.289, 183.38600000000002)), ('A', '111', 1, 'cablam Outlier', (205.4, 268.7, 179.9)), ('A', '117', 1, 'side-chain clash', (201.866, 256.038, 187.15)), ('A', '194', 1, 'smoc Outlier', (202.67899999999997, 258.504, 196.971)), ('A', '195', 1, 'side-chain clash', (207.491, 252.385, 197.167)), ('A', '196', 1, 'side-chain clash', (209.352, 253.696, 194.771)), ('A', '197', 1, 'side-chain clash', (209.352, 253.696, 194.771)), ('A', '198', 1, 'Dihedral angle:CA:CB:CG:OD1', (210.20399999999998, 249.135, 190.914)), ('A', '201', 1, 'smoc Outlier', (203.091, 253.64399999999998, 191.985)), ('A', '231', 1, 'side-chain clash', (201.866, 256.038, 187.15)), ('A', '233', 1, 'side-chain clash\nsmoc Outlier', (204.956, 256.321, 185.97)), ('A', '235', 1, 'side-chain clash', (205.52, 261.358, 189.134)), ('A', '86', 1, 'smoc Outlier', (209.976, 263.43699999999995, 194.605)), ('A', '88', 1, 'cablam Outlier', (212.3, 258.8, 197.5)), ('A', '329', 2, 'side-chain clash', (244.192, 248.444, 191.534)), ('A', '330', 2, 'side-chain clash\nsmoc Outlier', (250.006, 250.719, 189.333)), ('A', '332', 2, 'side-chain clash', (250.006, 250.719, 189.333)), ('A', '365', 2, 'side-chain clash', (241.667, 242.42, 186.926)), ('A', '382', 2, 'side-chain clash', (236.707, 239.447, 188.635)), ('A', '387', 2, 'side-chain clash', (236.707, 239.447, 188.635)), ('A', '391', 2, 'side-chain clash\nbackbone clash', (245.912, 244.834, 192.397)), ('A', '392', 2, 'side-chain clash', (241.667, 242.42, 186.926)), ('A', '393', 2, 'side-chain clash', (249.546, 239.671, 194.843)), ('A', '395', 2, 'side-chain clash\nbackbone clash', (244.984, 235.321, 185.806)), ('A', '514', 2, 'backbone clash', (244.984, 235.321, 185.806)), ('A', '515', 2, 'side-chain clash', (243.328, 237.966, 186.428)), ('A', '521', 2, 'cablam Outlier', (251.8, 243.3, 195.6)), ('A', '524', 2, 'backbone clash', (244.526, 244.694, 189.507)), ('A', '544', 2, 'cablam Outlier', (244.3, 248.0, 195.4)), ('A', '193', 3, 'side-chain clash', (199.331, 258.638, 203.689)), ('A', '216', 3, 'side-chain clash\nsmoc Outlier', (199.642, 266.256, 210.401)), ('A', '218', 3, 'cablam Outlier', (198.0, 266.9, 216.2)), ('A', '223', 3, 'side-chain clash\nbackbone clash', (199.331, 258.638, 203.689)), ('A', '31', 3, 'side-chain clash', (204.956, 264.766, 209.033)), ('A', '34', 3, 'side-chain clash\ncablam CA Geom Outlier', (199.642, 266.256, 210.401)), ('A', '35', 3, 'side-chain clash', (204.671, 260.427, 207.939)), ('A', '36', 3, 'smoc Outlier', (202.195, 255.931, 209.001)), ('A', '37', 3, 'backbone clash', (198.898, 253.773, 204.184)), ('A', '56', 3, 'side-chain clash', (204.956, 264.766, 209.033)), ('A', '189', 4, 'side-chain clash', (191.96, 268.661, 208.068)), ('A', '210', 4, 'side-chain clash', (191.96, 268.661, 208.068)), ('A', '214', 4, 'cablam Outlier', (196.4, 277.0, 210.9)), ('A', '215', 4, 'side-chain clash\ncablam CA Geom Outlier', (197.734, 273.369, 207.925)), ('A', '263', 4, 'smoc Outlier', (193.323, 275.443, 200.54)), ('A', '265', 4, 'smoc Outlier', (198.772, 271.575, 201.525)), ('A', '266', 4, 'side-chain clash', (197.734, 273.369, 207.925)), ('A', '267', 4, 'smoc Outlier', (204.641, 267.97099999999995, 201.782)), ('A', '94', 4, 'side-chain clash', (194.555, 267.591, 205.017)), ('A', '1077', 5, 'smoc Outlier', (233.24599999999998, 244.507, 282.254)), ('A', '1094', 5, 'smoc Outlier', (229.589, 237.812, 281.825)), ('A', '1096', 5, 'smoc Outlier', (229.27299999999997, 243.584, 284.39799999999997)), ('A', '1098', 5, 'cablam Outlier', (226.8, 249.5, 286.7)), ('A', '1103', 5, 'smoc Outlier', (226.842, 241.502, 288.76599999999996)), ('A', '1107', 5, 'Dihedral angle:CD:NE:CZ:NH1', (225.291, 237.423, 277.553)), ('A', '1109', 5, 'cablam Outlier', (219.8, 239.9, 277.9)), ('A', '1115', 5, 'smoc Outlier', (227.89200000000002, 237.04899999999998, 292.197)), ('A', '1051', 6, 'smoc Outlier', (209.553, 229.447, 260.89599999999996)), ('A', '1065', 6, 'smoc Outlier', (210.20899999999997, 234.505, 263.547)), ('A', '29', 6, 'side-chain clash', (207.829, 235.279, 263.022)), ('A', '537', 6, 'side-chain clash', (209.907, 232.728, 269.647)), ('A', '539', 6, 'side-chain clash', (209.907, 232.728, 269.647)), ('A', '62', 6, 'side-chain clash', (207.829, 235.279, 263.022)), ('A', '723', 6, 'Rotamer', (210.711, 238.262, 258.119)), ('A', '303', 7, 'side-chain clash', (210.761, 249.367, 227.215)), ('A', '308', 7, 'side-chain clash', (210.761, 249.367, 227.215)), ('A', '309', 7, 'side-chain clash', (212.405, 249.53, 232.005)), ('A', '310', 7, 'cablam CA Geom Outlier', (212.6, 251.7, 235.2)), ('A', '313', 7, 'side-chain clash', (212.405, 249.53, 232.005)), ('A', '599', 7, 'Dihedral angle:CA:C', (215.284, 255.82600000000002, 232.218)), ('A', '600', 7, 'Dihedral angle:N:CA', (212.854, 255.989, 235.10299999999998)), ('A', '595', 8, 'side-chain clash', (225.935, 256.194, 222.82)), ('A', '612', 8, 'side-chain clash', (226.067, 260.963, 224.509)), ('A', '613', 8, 'side-chain clash', (231.662, 254.101, 224.684)), ('A', '615', 8, 'Rotamer\nside-chain clash', (231.662, 254.101, 224.684)), ('A', '620', 8, 'side-chain clash', (226.396, 259.602, 222.656)), ('A', '651', 8, 'side-chain clash', (226.067, 260.963, 224.509)), ('A', '538', 9, 'Rotamer\nside-chain clash', (237.377, 257.552, 211.461)), ('A', '551', 9, 'side-chain clash\nbackbone clash', (237.377, 257.552, 211.461)), ('A', '552', 9, 'side-chain clash', (245.875, 255.465, 206.439)), ('A', '587', 9, 'smoc Outlier', (243.798, 251.504, 209.996)), ('A', '588', 9, 'backbone clash\nside-chain clash', (241.302, 254.487, 213.188)), ('A', '590', 9, 'smoc Outlier', (235.824, 254.23999999999998, 213.23299999999998)), ('A', '277', 10, 'smoc Outlier', (202.859, 249.58, 214.918)), ('A', '279', 10, 'smoc Outlier', (197.257, 247.012, 216.154)), ('A', '284', 10, 'side-chain clash', (194.773, 250.442, 216.002)), ('A', '285', 10, 'smoc Outlier', (196.999, 250.889, 213.835)), ('A', '286', 10, 'side-chain clash', (194.773, 250.442, 216.002)), ('A', '47', 10, 'smoc Outlier', (199.85500000000002, 243.032, 218.32700000000003)), ('A', '749', 11, 'side-chain clash', (207.071, 220.117, 206.531)), ('A', '977', 11, 'side-chain clash', (207.071, 220.117, 206.531)), ('A', '987', 11, 'cablam Outlier', (212.8, 218.0, 193.8)), ('A', '988', 11, 'Dihedral angle:CB:CG:CD:OE1', (213.161, 221.61899999999997, 195.059)), ('A', '990', 11, 'smoc Outlier', (212.547, 219.491, 199.895)), ('A', '993', 11, 'smoc Outlier', (212.171, 222.295, 203.537)), ('A', '362', 12, 'side-chain clash', (214.832, 233.788, 221.829)), ('A', '852', 12, 'side-chain clash', (201.412, 227.911, 218.49)), ('A', '856', 12, 'side-chain clash', (201.412, 227.911, 218.49)), ('A', '962', 12, 'smoc Outlier', (210.038, 229.546, 220.4)), ('A', '963', 12, 'smoc Outlier', (206.768, 230.48000000000002, 218.712)), ('A', '666', 13, 'cablam Outlier\nsmoc Outlier', (225.3, 252.3, 235.9)), ('A', '667', 13, 'cablam Outlier', (228.7, 250.9, 236.7)), ('A', '668', 13, 'smoc Outlier', (232.08200000000002, 251.499, 238.38500000000002)), ('A', '671', 13, 'smoc Outlier', (224.186, 254.81, 240.067)), ('A', '1022', 14, 'smoc Outlier', (214.317, 223.626, 245.433)), ('A', '1058', 14, 'cablam Outlier', (205.5, 227.6, 242.0)), ('A', '1060', 14, 'smoc Outlier', (207.312, 228.478, 249.047)), ('A', '729', 14, 'smoc Outlier', (210.512, 225.42600000000002, 243.82100000000003)), ('A', '866', 15, 'Rotamer\nside-chain clash', (203.705, 222.347, 280.966)), ('A', '900', 15, 'side-chain clash', (204.866, 224.707, 278.29)), ('A', '901', 15, 'smoc Outlier', (207.95100000000002, 225.17499999999998, 273.27599999999995)), ('A', '904', 15, 'smoc Outlier', (212.782, 225.757, 274.556)), ('A', '326', 16, 'side-chain clash', (197.878, 242.762, 198.271)), ('A', '40', 16, 'smoc Outlier', (201.039, 245.181, 204.289)), ('A', '41', 16, 'smoc Outlier', (197.70999999999998, 243.85500000000002, 203.04399999999998)), ('A', '42', 16, 'smoc Outlier', (197.437, 241.207, 205.788)), ('A', '328', 17, 'side-chain clash', (248.128, 257.061, 198.926)), ('A', '533', 17, 'smoc Outlier', (243.93800000000002, 260.443, 200.873)), ('A', '578', 17, 'side-chain clash', (248.128, 257.061, 198.926)), ('A', '291', 18, 'smoc Outlier', (212.62, 253.61599999999999, 216.18200000000002)), ('A', '297', 18, 'smoc Outlier', (211.798, 255.411, 221.285)), ('A', '301', 18, 'smoc Outlier', (211.589, 249.57899999999998, 219.756)), ('A', '617', 19, 'cablam Outlier', (233.3, 262.6, 226.3)), ('A', '618', 19, 'backbone clash\ncablam Outlier', (235.189, 262.109, 221.445)), ('A', '619', 19, 'backbone clash', (235.189, 262.109, 221.445)), ('A', '136', 20, 'smoc Outlier', (200.591, 275.214, 181.153)), ('A', '137', 20, 'smoc Outlier', (203.622, 277.09099999999995, 182.45800000000003)), ('A', '427', 21, 'smoc Outlier', (237.16, 222.23399999999998, 191.102)), ('A', '429', 21, 'smoc Outlier', (238.194, 227.52800000000002, 189.765)), ('A', '676', 22, 'side-chain clash', (213.033, 266.71, 240.721)), ('A', '690', 22, 'side-chain clash', (213.033, 266.71, 240.721)), ('A', '936', 23, 'Dihedral angle:CA:CB:CG:OD1', (200.221, 244.691, 255.111)), ('A', '938', 23, 'smoc Outlier', (202.22299999999998, 241.46800000000002, 251.123)), ('A', '519', 24, 'side-chain clash', (243.162, 241.398, 199.719)), ('A', '546', 24, 'side-chain clash\nsmoc Outlier', (243.162, 241.398, 199.719)), ('A', '122', 25, 'Dihedral angle:CA:C', (186.39200000000002, 266.98099999999994, 188.833)), ('A', '123', 25, 'Dihedral angle:N:CA', (183.538, 267.78499999999997, 191.12800000000001)), ('A', '273', 26, 'side-chain clash', (212.959, 259.411, 208.966)), ('A', '57', 26, 'side-chain clash', (212.959, 259.411, 208.966)), ('A', '290', 27, 'side-chain clash', (245.019, 239.081, 220.248)), ('A', '293', 27, 'side-chain clash\ncablam CA Geom Outlier', (245.019, 239.081, 220.248)), ('A', '376', 28, 'side-chain clash', (231.802, 230.066, 175.197)), ('A', '435', 28, 'side-chain clash', (231.802, 230.066, 175.197)), ('A', '520', 29, 'side-chain clash\nbackbone clash\ncablam CA Geom Outlier', (200.09, 211.341, 263.497)), ('A', '522', 29, 'side-chain clash\nbackbone clash', (200.09, 211.341, 263.497)), ('A', '444', 30, 'smoc Outlier', (238.43200000000002, 224.89700000000002, 155.36700000000002)), ('A', '445', 30, 'smoc Outlier', (236.42200000000003, 223.464, 152.48600000000002)), ('A', '736', 31, 'side-chain clash', (206.436, 222.931, 220.889)), ('A', '858', 31, 'side-chain clash', (206.436, 222.931, 220.889)), ('A', '503', 32, 'smoc Outlier', (227.596, 223.47, 164.877)), ('A', '505', 32, 'smoc Outlier', (231.461, 219.89800000000002, 165.238)), ('A', '480', 33, 'smoc Outlier', (255.61899999999997, 199.931, 171.43800000000002)), ('A', '484', 33, 'cablam Outlier', (253.4, 203.2, 166.0)), ('B', '238', 1, 'side-chain clash', (236.485, 199.568, 216.048)), ('B', '324', 1, 'side-chain clash\nsmoc Outlier', (247.727, 192.069, 204.474)), ('B', '326', 1, 'side-chain clash\nsmoc Outlier', (240.106, 193.594, 204.814)), ('B', '534', 1, 'side-chain clash', (247.727, 192.069, 204.474)), ('B', '537', 1, 'side-chain clash', (245.408, 193.264, 208.523)), ('B', '538', 1, 'smoc Outlier', (245.509, 195.92700000000002, 210.343)), ('B', '539', 1, 'side-chain clash', (245.408, 193.264, 208.523)), ('B', '541', 1, 'side-chain clash', (240.106, 193.594, 204.814)), ('B', '549', 1, 'cablam CA Geom Outlier', (239.7, 199.4, 208.0)), ('B', '551', 1, 'smoc Outlier', (242.07399999999998, 193.638, 211.82700000000003)), ('B', '587', 1, 'side-chain clash\nsmoc Outlier', (235.649, 195.254, 207.988)), ('B', '590', 1, 'smoc Outlier', (242.971, 198.869, 214.542)), ('B', '90', 1, 'side-chain clash', (236.485, 199.568, 216.048)), ('B', '1301', 2, 'smoc Outlier', (273.772, 212.056, 209.983)), ('B', '193', 2, 'side-chain clash', (266.509, 231.016, 203.873)), ('B', '223', 2, 'side-chain clash', (266.509, 231.016, 203.873)), ('B', '30', 2, 'backbone clash', (272.145, 221.026, 212.917)), ('B', '31', 2, 'side-chain clash\nbackbone clash\nDihedral angle:CA:C', (271.501, 222.625, 211.342)), ('B', '32', 2, 'Dihedral angle:N:CA', (270.59799999999996, 223.74299999999997, 214.82500000000002)), ('B', '35', 2, 'smoc Outlier', (266.348, 227.83800000000002, 207.8)), ('B', '56', 2, 'side-chain clash', (269.853, 223.178, 208.717)), ('B', '57', 2, 'side-chain clash', (266.401, 219.474, 210.208)), ('B', '60', 2, 'side-chain clash', (266.401, 219.474, 210.208)), ('B', '61', 2, 'smoc Outlier', (271.967, 216.95700000000002, 208.70299999999997)), ('B', '810', 3, 'Dihedral angle:CA:C', (248.317, 255.52200000000002, 253.74899999999997)), ('B', '811', 3, 'backbone clash\nside-chain clash\nDihedral angle:N:CA\ncablam CA Geom Outlier', (248.02700000000002, 252.88600000000002, 251.045)), ('B', '812', 3, 'side-chain clash\nDihedral angle:CA:C\ncablam CA Geom Outlier', (246.098, 251.89600000000002, 247.877)), ('B', '813', 3, 'backbone clash\nDihedral angle:N:CA', (242.82100000000003, 253.478, 248.89000000000001)), ('B', '814', 3, 'Dihedral angle:CA:C\ncablam Outlier', (241.288, 250.88800000000003, 251.206)), ('B', '815', 3, 'Dihedral angle:N:CA', (243.346, 247.768, 251.20499999999998)), ('B', '819', 3, 'smoc Outlier', (244.697, 242.221, 250.072)), ('B', '822', 3, 'smoc Outlier', (246.251, 238.92000000000002, 246.66)), ('B', '1036', 4, 'cablam Outlier', (231.0, 230.7, 264.6)), ('B', '201', 4, 'side-chain clash', (234.992, 232.45, 266.958)), ('B', '229', 4, 'Rotamer\nside-chain clash', (234.992, 232.45, 266.958)), ('B', '278', 4, 'side-chain clash', (240.549, 231.975, 269.102)), ('B', '48', 4, 'side-chain clash', (240.549, 231.975, 269.102)), ('B', '720', 4, 'side-chain clash', (245.219, 231.395, 269.994)), ('B', '923', 4, 'side-chain clash\nsmoc Outlier', (245.219, 231.395, 269.994)), ('B', '189', 5, 'side-chain clash', (277.984, 231.586, 210.562)), ('B', '191', 5, 'side-chain clash', (272.148, 231.174, 210.061)), ('B', '210', 5, 'smoc Outlier', (280.412, 235.578, 212.064)), ('B', '217', 5, 'side-chain clash', (277.984, 231.586, 210.562)), ('B', '219', 5, 'smoc Outlier', (271.924, 230.797, 216.576)), ('B', '34', 5, 'side-chain clash\ncablam CA Geom Outlier', (272.148, 231.174, 210.061)), ('B', '276', 6, 'side-chain clash', (256.386, 226.898, 217.327)), ('B', '289', 6, 'Rotamer\nside-chain clash', (256.386, 226.898, 217.327)), ('B', '291', 6, 'smoc Outlier', (256.118, 221.17499999999998, 215.454)), ('B', '297', 6, 'side-chain clash', (254.929, 221.761, 219.158)), ('B', '301', 6, 'Rotamer\nside-chain clash', (254.929, 221.761, 219.158)), ('B', '302', 6, 'Rotamer', (249.269, 222.531, 220.618)), ('B', '979', 7, 'Dihedral angle:CA:CB:CG:OD1', (236.008, 240.266, 200.15200000000002)), ('B', '980', 7, 'smoc Outlier', (232.931, 238.189, 199.303)), ('B', '984', 7, 'side-chain clash', (228.592, 237.842, 196.132)), ('B', '989', 7, 'side-chain clash', (228.592, 237.842, 196.132)), ('B', '990', 7, 'Dihedral angle:CB:CG:CD:OE1', (224.14, 235.785, 199.383)), ('B', '335', 8, 'backbone clash\nside-chain clash', (230.509, 185.585, 181.28)), ('B', '336', 8, 'backbone clash\nside-chain clash', (230.509, 185.585, 181.28)), ('B', '364', 8, 'smoc Outlier', (234.985, 189.048, 181.28)), ('B', '527', 8, 'cablam Outlier', (234.7, 190.1, 186.7)), ('B', '528', 8, 'cablam Outlier', (235.8, 192.2, 189.6)), ('B', '108', 9, 'cablam Outlier', (266.6, 218.8, 185.0)), ('B', '236', 9, 'side-chain clash', (265.855, 216.532, 190.523)), ('B', '86', 9, 'backbone clash\nDihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (266.40299999999996, 219.88700000000003, 194.55)), ('B', '87', 9, 'backbone clash\nDihedral angle:N:CA', (263.949, 217.533, 196.183)), ('B', '88', 9, 'Dihedral angle:CA:CB:CG:OD1\ncablam Outlier', (261.387, 220.127, 197.29)), ('B', '736', 10, 'side-chain clash\nsmoc Outlier', (230.953, 239.656, 220.504)), ('B', '738', 10, 'smoc Outlier', (225.553, 239.77499999999998, 217.617)), ('B', '742', 10, 'smoc Outlier', (228.412, 238.38000000000002, 212.495)), ('B', '858', 10, 'side-chain clash\nsmoc Outlier', (230.953, 239.656, 220.504)), ('B', '959', 10, 'side-chain clash', (235.298, 238.155, 222.706)), ('B', '598', 11, 'side-chain clash', (252.785, 214.109, 233.852)), ('B', '664', 11, 'side-chain clash', (252.785, 214.109, 233.852)), ('B', '666', 11, 'cablam Outlier\nsmoc Outlier', (248.3, 209.4, 235.0)), ('B', '667', 11, 'cablam Outlier', (245.5, 207.1, 235.9)), ('B', '115', 12, 'smoc Outlier', (265.45599999999996, 225.348, 179.946)), ('B', '130', 12, 'side-chain clash', (264.226, 229.614, 182.225)), ('B', '231', 12, 'cablam Outlier', (259.7, 231.5, 185.1)), ('B', '233', 12, 'side-chain clash', (264.226, 229.614, 182.225)), ('B', '543', 13, 'backbone clash\nDihedral angle:CA:C', (234.11299999999997, 192.76399999999998, 201.108)), ('B', '544', 13, 'backbone clash\nDihedral angle:N:CA\ncablam Outlier', (231.159, 192.251, 198.798)), ('B', '545', 13, 'cablam Outlier', (229.6, 195.7, 199.2)), ('B', '546', 13, 'smoc Outlier', (231.292, 197.14499999999998, 202.292)), ('B', '122', 14, 'backbone clash\nDihedral angle:CA:C\nsmoc Outlier', (279.79599999999994, 239.011, 188.317)), ('B', '123', 14, 'Dihedral angle:N:CA', (282.014, 241.64, 189.875)), ('B', '124', 14, 'backbone clash', (280.238, 242.454, 188.898)), ('B', '125', 14, 'smoc Outlier', (275.948, 242.67399999999998, 189.60399999999998)), ('B', '1058', 15, 'cablam Outlier', (236.7, 238.4, 241.3)), ('B', '1060', 15, 'smoc Outlier', (236.97, 236.38100000000003, 248.291)), ('B', '597', 15, 'side-chain clash', (241.568, 233.782, 248.014)), ('B', '729', 15, 'smoc Outlier', (232.58100000000002, 234.996, 243.343)), ('B', '1082', 16, 'smoc Outlier', (231.33700000000002, 203.768, 292.502)), ('B', '1084', 16, 'cablam Outlier', (228.8, 204.4, 298.1)), ('B', '1126', 16, 'cablam Outlier', (227.3, 200.4, 289.8)), ('B', '1132', 16, 'Rotamer', (232.755, 201.221, 286.429)), ('B', '105', 17, 'smoc Outlier', (272.404, 226.424, 187.955)), ('B', '118', 17, 'side-chain clash', (274.43, 228.308, 183.493)), ('B', '135', 17, 'side-chain clash', (274.43, 228.308, 183.493)), ('B', '470', 18, 'smoc Outlier', (212.17399999999998, 189.001, 150.14499999999998)), ('B', '490', 18, 'smoc Outlier', (214.915, 190.24299999999997, 143.906)), ('B', '492', 18, 'smoc Outlier', (219.005, 190.08700000000002, 147.931)), ('B', '1072', 19, 'smoc Outlier', (248.617, 214.738, 273.974)), ('B', '1109', 19, 'cablam Outlier', (242.3, 220.1, 277.0)), ('B', '715', 19, 'smoc Outlier', (245.55700000000002, 216.918, 274.43499999999995)), ('B', '722', 20, 'side-chain clash', (247.009, 230.187, 257.606)), ('B', '723', 20, 'Rotamer', (244.21200000000007, 228.66, 256.906)), ('B', '934', 20, 'side-chain clash', (247.009, 230.187, 257.606)), ('B', '1094', 21, 'Rotamer', (235.766, 212.53299999999993, 281.392)), ('B', '1096', 21, 'smoc Outlier', (241.037, 210.0, 283.752)), ('B', '1098', 21, 'cablam Outlier', (247.5, 209.3, 285.7)), ('B', '374', 22, 'smoc Outlier', (240.727, 190.575, 166.025)), ('B', '376', 22, 'side-chain clash', (236.723, 194.786, 162.743)), ('B', '435', 22, 'side-chain clash', (236.723, 194.786, 162.743)), ('B', '595', 23, 'side-chain clash', (251.007, 207.653, 221.471)), ('B', '612', 23, 'side-chain clash', (255.418, 205.502, 223.429)), ('B', '651', 23, 'side-chain clash', (255.418, 205.502, 223.429)), ('B', '849', 24, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (244.284, 241.02200000000002, 222.977)), ('B', '850', 24, 'Dihedral angle:N:CA', (243.10299999999998, 243.944, 225.089)), ('B', '852', 24, 'side-chain clash', (243.815, 241.876, 220.066)), ('B', '481', 25, 'smoc Outlier', (202.76999999999998, 191.545, 142.33800000000002)), ('B', '483', 25, 'smoc Outlier', (206.668, 188.584, 139.80700000000002)), ('B', '484', 25, 'cablam Outlier', (210.2, 189.4, 138.8)), ('B', '1306', 26, 'smoc Outlier', (262.459, 230.565, 234.141)), ('B', '603', 26, 'Rotamer', (261.29, 225.907, 233.623)), ('B', '1309', 27, 'smoc Outlier', (239.61599999999999, 194.55700000000002, 277.97799999999995)), ('B', '709', 27, 'side-chain clash', (239.91, 198.546, 276.352)), ('B', '205', 28, 'side-chain clash', (268.627, 236.773, 199.654)), ('B', '226', 28, 'side-chain clash', (268.627, 236.773, 199.654)), ('B', '654', 29, 'Dihedral angle:CB:CG:CD:OE1', (261.15900000000005, 205.23999999999998, 235.11899999999997)), ('B', '694', 29, 'smoc Outlier', (256.02799999999996, 206.76999999999998, 237.517)), ('B', '403', 30, 'smoc Outlier', (233.339, 191.636, 153.031)), ('B', '505', 30, 'smoc Outlier', (236.524, 190.925, 148.985)), ('B', '360', 31, 'side-chain clash', (221.905, 189.332, 185.264)), ('B', '523', 31, 'side-chain clash', (221.905, 189.332, 185.264)), ('B', '1043', 32, 'cablam Outlier', (235.6, 226.6, 258.1)), ('B', '128', 32, 'side-chain clash', (235.437, 227.064, 253.023)), ('B', '378', 33, 'smoc Outlier', (236.753, 199.95800000000003, 168.08)), ('B', '379', 33, 'smoc Outlier', (234.689, 201.168, 171.05)), ('B', '532', 34, 'backbone clash', (244.018, 186.097, 201.298)), ('B', '533', 34, 'backbone clash', (244.018, 186.097, 201.298)), ('B', '599', 35, 'side-chain clash', (257.546, 216.332, 228.026)), ('B', '608', 35, 'side-chain clash', (257.546, 216.332, 228.026)), ('B', '705', 36, 'backbone clash', (244.021, 202.069, 269.144)), ('B', '707', 36, 'backbone clash', (244.021, 202.069, 269.144)), ('B', '112', 37, 'cablam CA Geom Outlier', (270.8, 221.9, 176.2)), ('B', '113', 37, 'cablam Outlier', (267.4, 220.9, 174.7)), ('B', '65', 38, 'side-chain clash', (276.222, 219.855, 197.304)), ('B', '84', 38, 'side-chain clash', (276.222, 219.855, 197.304)), ('B', '915', 39, 'side-chain clash', (245.194, 229.122, 278.594)), ('B', '919', 39, 'side-chain clash', (245.194, 229.122, 278.594)), ('B', '382', 40, 'side-chain clash', (229.542, 203.675, 175.269)), ('B', '430', 40, 'side-chain clash\nsmoc Outlier', (229.542, 203.675, 175.269)), ('B', '384', 41, 'side-chain clash\nsmoc Outlier', (234.61, 197.461, 177.579)), ('B', '387', 41, 'side-chain clash', (234.61, 197.461, 177.579)), ('B', '100', 42, 'side-chain clash', (238.616, 227.159, 222.672)), ('B', '242', 42, 'side-chain clash', (238.616, 227.159, 222.672)), ('B', '518', 43, 'smoc Outlier', (216.601, 199.873, 181.85700000000003)), ('B', '519', 43, 'cablam Outlier\nsmoc Outlier', (214.3, 200.5, 184.8)), ('B', '749', 44, 'side-chain clash\nsmoc Outlier', (227.615, 240.657, 205.702)), ('B', '977', 44, 'side-chain clash', (227.615, 240.657, 205.702)), ('B', '1010', 45, 'smoc Outlier', (229.347, 227.61599999999999, 227.60999999999999)), ('B', '1012', 45, 'smoc Outlier', (225.695, 230.036, 230.853)), ('B', '279', 46, 'smoc Outlier', (257.02299999999997, 237.623, 215.85600000000002)), ('B', '285', 46, 'smoc Outlier', (260.82, 236.224, 213.89200000000002)), ('B', '355', 47, 'smoc Outlier', (221.309, 189.24499999999998, 167.947)), ('B', '357', 47, 'smoc Outlier', (221.04, 188.847, 174.489)), ('C', '382', 1, 'side-chain clash\nbackbone clash', (231.322, 210.24, 226.083)), ('C', '387', 1, 'side-chain clash\nsmoc Outlier', (231.322, 210.24, 226.083)), ('C', '553', 1, 'backbone clash\nside-chain clash', (232.638, 212.773, 219.882)), ('C', '554', 1, 'backbone clash\nside-chain clash', (232.638, 212.773, 219.882)), ('C', '736', 1, 'side-chain clash', (233.091, 209.654, 222.01)), ('C', '738', 1, 'Rotamer', (236.15399999999994, 214.576, 217.18699999999998)), ('C', '858', 1, 'side-chain clash', (233.091, 209.654, 222.01)), ('C', '959', 1, 'side-chain clash', (230.23, 207.764, 222.995)), ('C', '117', 2, 'side-chain clash\nsmoc Outlier', (223.451, 203.245, 262.19)), ('C', '45', 2, 'side-chain clash', (224.397, 206.246, 269.037)), ('C', '47', 2, 'side-chain clash', (224.397, 206.246, 269.037)), ('C', '533', 2, 'side-chain clash', (225.685, 202.227, 263.537)), ('C', '585', 2, 'side-chain clash', (225.685, 202.227, 263.537)), ('C', '802', 2, 'side-chain clash', (230.56, 199.339, 262.295)), ('C', '805', 2, 'side-chain clash', (230.56, 199.339, 262.295)), ('C', '393', 3, 'side-chain clash', (200.814, 240.716, 195.073)), ('C', '515', 3, 'Rotamer', (203.293, 236.801, 188.858)), ('C', '517', 3, 'Rotamer\ncablam Outlier', (202.25500000000005, 235.316, 194.891)), ('C', '518', 3, 'cablam CA Geom Outlier', (199.6, 235.6, 197.6)), ('C', '519', 3, 'side-chain clash\ncablam Outlier', (200.814, 240.716, 195.073)), ('C', '520', 3, 'side-chain clash\ncablam CA Geom Outlier', (195.209, 242.024, 197.599)), ('C', '521', 3, 'side-chain clash', (195.209, 242.024, 197.599)), ('C', '329', 4, 'side-chain clash', (192.054, 230.818, 192.829)), ('C', '332', 4, 'backbone clash', (190.414, 233.84, 184.892)), ('C', '361', 4, 'backbone clash', (190.414, 233.84, 184.892)), ('C', '391', 4, 'side-chain clash\nbackbone clash\nsmoc Outlier', (195.105, 233.295, 190.266)), ('C', '524', 4, 'backbone clash\nsmoc Outlier', (195.105, 233.295, 190.266)), ('C', '525', 4, 'smoc Outlier', (193.35100000000003, 231.617, 188.708)), ('C', '527', 4, 'cablam Outlier', (191.4, 225.7, 185.9)), ('C', '28', 5, 'side-chain clash', (189.052, 187.304, 207.635)), ('C', '29', 5, 'backbone clash', (192.817, 183.028, 210.593)), ('C', '30', 5, 'backbone clash', (192.817, 183.028, 210.593)), ('C', '31', 5, 'side-chain clash', (196.537, 186.773, 208.452)), ('C', '61', 5, 'side-chain clash', (189.052, 187.304, 207.635)), ('C', '62', 5, 'side-chain clash', (196.537, 186.773, 208.452)), ('C', '289', 6, 'smoc Outlier', (205.98600000000002, 193.265, 218.365)), ('C', '291', 6, 'smoc Outlier', (204.296, 198.76399999999998, 216.74099999999999)), ('C', '293', 6, 'cablam Outlier', (198.7, 197.0, 217.1)), ('C', '297', 6, 'smoc Outlier', (202.74399999999997, 197.469, 221.845)), ('C', '298', 6, 'smoc Outlier', (203.334, 201.132, 220.997)), ('C', '301', 6, 'smoc Outlier', (208.39800000000002, 199.61499999999998, 220.637)), ('C', '763', 7, 'smoc Outlier', (234.751, 219.96800000000002, 222.02200000000002)), ('C', '767', 7, 'smoc Outlier', (235.369, 216.834, 227.55100000000002)), ('C', '770', 7, 'side-chain clash', (234.751, 214.665, 234.955)), ('C', '771', 7, 'smoc Outlier', (237.195, 214.35800000000003, 233.076)), ('C', '774', 7, 'side-chain clash', (234.751, 214.665, 234.955)), ('C', '484', 8, 'cablam Outlier\nsmoc Outlier', (225.5, 261.3, 165.3)), ('C', '485', 8, 'smoc Outlier', (228.877, 260.327, 163.93200000000002)), ('C', '486', 8, 'cablam Outlier\nsmoc Outlier', (232.3, 259.1, 165.1)), ('C', '489', 8, 'Dihedral angle:CA:C', (226.01299999999998, 257.018, 168.484)), ('C', '490', 8, 'Dihedral angle:N:CA', (222.33200000000002, 256.43299999999994, 168.26899999999998)), ('C', '611', 9, 'side-chain clash', (197.239, 210.812, 233.008)), ('C', '666', 9, 'side-chain clash\ncablam Outlier\nsmoc Outlier', (197.239, 210.812, 233.008)), ('C', '667', 9, 'cablam Outlier', (198.4, 214.5, 237.4)), ('C', '671', 9, 'smoc Outlier', (197.137, 208.583, 240.55)), ('C', '1094', 10, 'smoc Outlier', (210.817, 219.873, 282.16)), ('C', '1095', 10, 'smoc Outlier', (208.478, 219.506, 285.11400000000003)), ('C', '1096', 10, 'smoc Outlier', (206.093, 216.569, 284.794)), ('C', '1098', 10, 'cablam Outlier', (202.1, 211.4, 287.1)), ('C', '752', 11, 'side-chain clash', (234.612, 219.927, 199.878)), ('C', '986', 11, 'side-chain clash', (234.259, 215.478, 192.447)), ('C', '987', 11, 'side-chain clash', (234.259, 215.478, 192.447)), ('C', '990', 11, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (232.198, 217.68800000000002, 198.647)), ('C', '118', 12, 'side-chain clash', (196.089, 213.182, 273.402)), ('C', '120', 12, 'side-chain clash', (196.089, 213.182, 273.402)), ('C', '703', 12, 'side-chain clash', (200.09, 211.341, 263.497)), ('C', '705', 12, 'smoc Outlier', (197.77399999999997, 215.809, 267.929)), ('C', '641', 13, 'smoc Outlier', (184.655, 203.16299999999998, 231.503)), ('C', '642', 13, 'side-chain clash', (187.336, 206.112, 227.776)), ('C', '649', 13, 'smoc Outlier', (190.64, 211.85800000000003, 229.283)), ('C', '651', 13, 'side-chain clash', (187.336, 206.112, 227.776)), ('C', '130', 14, 'side-chain clash', (211.776, 187.473, 186.383)), ('C', '229', 14, 'side-chain clash', (213.565, 187.374, 188.536)), ('C', '231', 14, 'side-chain clash', (211.776, 187.473, 186.383)), ('C', '111', 15, 'cablam Outlier', (197.6, 187.2, 178.7)), ('C', '134', 15, 'smoc Outlier', (200.063, 182.875, 177.02800000000002)), ('C', '135', 15, 'smoc Outlier', (198.003, 181.49800000000002, 179.914)), ('C', '811', 16, 'side-chain clash', (236.944, 190.566, 249.467)), ('C', '812', 16, 'side-chain clash\ncablam Outlier', (236.944, 190.566, 249.467)), ('C', '813', 16, 'cablam Outlier', (240.0, 194.1, 247.3)), ('C', '122', 17, 'Dihedral angle:CA:C\nsmoc Outlier', (206.876, 170.25, 188.567)), ('C', '123', 17, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (207.041, 167.19, 190.772)), ('C', '124', 17, 'Dihedral angle:N:CA', (210.77499999999998, 167.287, 191.354)), ('C', '1036', 18, 'cablam Outlier', (228.1, 214.8, 264.5)), ('C', '531', 18, 'backbone clash\nside-chain clash', (224.185, 217.435, 269.382)), ('C', '532', 18, 'backbone clash\nside-chain clash', (224.185, 217.435, 269.382)), ('C', '376', 19, 'side-chain clash', (213.42, 230.195, 174.977)), ('C', '435', 19, 'side-chain clash', (213.42, 230.195, 174.977)), ('C', '436', 19, 'smoc Outlier', (211.19299999999998, 229.869, 170.51899999999998)), ('C', '309', 20, 'smoc Outlier', (207.74499999999998, 197.963, 234.13299999999998)), ('C', '310', 20, 'cablam CA Geom Outlier', (205.1, 200.1, 235.6)), ('C', '600', 20, 'cablam Outlier', (201.0, 198.3, 235.6)), ('C', '194', 21, 'smoc Outlier', (206.476, 187.455, 197.655)), ('C', '201', 21, 'side-chain clash', (208.531, 184.988, 193.606)), ('C', '203', 21, 'side-chain clash', (208.531, 184.988, 193.606)), ('C', '1041', 22, 'Dihedral angle:CA:CB:CG:OD1', (217.059, 215.511, 258.48699999999997)), ('C', '1043', 22, 'cablam Outlier', (221.7, 212.8, 258.3)), ('C', '1045', 22, 'cablam Outlier', (215.2, 210.8, 260.2)), ('C', '676', 23, 'side-chain clash\nsmoc Outlier', (191.854, 193.308, 240.769)), ('C', '690', 23, 'side-chain clash', (191.854, 193.308, 240.769)), ('C', '541', 24, 'smoc Outlier', (190.605, 223.86700000000002, 203.054)), ('C', '549', 24, 'cablam CA Geom Outlier', (193.7, 222.0, 207.6)), ('C', '401', 25, 'side-chain clash', (210.187, 237.223, 168.348)), ('C', '509', 25, 'side-chain clash', (210.187, 237.223, 168.348)), ('C', '713', 26, 'smoc Outlier', (204.306, 213.656, 275.90299999999996)), ('C', '714', 26, 'smoc Outlier', (207.731, 212.295, 276.84200000000004)), ('C', '127', 27, 'side-chain clash', (213.171, 175.631, 184.553)), ('C', '171', 27, 'side-chain clash', (213.171, 175.631, 184.553)), ('C', '53', 28, 'side-chain clash', (209.705, 195.341, 207.679)), ('C', '55', 28, 'side-chain clash', (209.705, 195.341, 207.679)), ('C', '326', 29, 'side-chain clash', (183.536, 221.95, 203.828)), ('C', '534', 29, 'side-chain clash', (183.536, 221.95, 203.828)), ('C', '590', 30, 'Dihedral angle:CA:C', (191.346, 220.71699999999998, 215.094)), ('C', '591', 30, 'Dihedral angle:N:CA', (192.19, 219.195, 218.42000000000002)), ('C', '1081', 31, 'smoc Outlier', (206.642, 225.71099999999998, 290.51599999999996)), ('C', '1087', 31, 'smoc Outlier', (209.33800000000002, 230.70899999999997, 290.97499999999997)), ('C', '979', 32, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (230.23999999999998, 205.371, 199.594)), ('C', '983', 32, 'smoc Outlier', (230.512, 207.055, 193.978)), ('C', '358', 33, 'side-chain clash', (198.384, 237.705, 183.484)), ('C', '395', 33, 'side-chain clash', (198.384, 237.705, 183.484)), ('C', '237', 34, 'side-chain clash', (193.38, 188.649, 187.252)), ('C', '83', 34, 'side-chain clash', (193.38, 188.649, 187.252)), ('C', '354', 35, 'side-chain clash', (206.198, 242.176, 177.759)), ('C', '398', 35, 'side-chain clash', (206.198, 242.176, 177.759)), ('C', '894', 36, 'smoc Outlier', (242.91299999999998, 210.515, 269.889)), ('C', '895', 36, 'side-chain clash', (243.369, 205.811, 269.413)), ('C', '383', 37, 'backbone clash', (205.468, 226.988, 189.426)), ('C', '384', 37, 'side-chain clash', (202.841, 227.131, 187.04)), ('C', '749', 38, 'side-chain clash\nsmoc Outlier', (235.051, 212.007, 205.509)), ('C', '977', 38, 'side-chain clash', (235.051, 212.007, 205.509)), ('C', '855', 39, 'side-chain clash', (236.485, 199.568, 216.048)), ('C', '856', 39, 'cablam CA Geom Outlier', (234.5, 205.0, 216.7)), ('C', '560', 40, 'side-chain clash', (192.538, 248.498, 205.42)), ('C', '562', 40, 'side-chain clash', (192.538, 248.498, 205.42)), ('C', '41', 41, 'cablam Outlier', (221.0, 189.5, 205.6)), ('C', '42', 41, 'smoc Outlier', (222.55100000000002, 191.095, 208.74399999999997)), ('C', '320', 42, 'backbone clash\nside-chain clash', (190.061, 214.413, 212.233)), ('C', '321', 42, 'backbone clash\nside-chain clash', (190.061, 214.413, 212.233)), ('C', '477', 43, 'smoc Outlier', (235.71699999999998, 263.402, 174.295)), ('C', '478', 43, 'smoc Outlier', (234.007, 265.377, 171.504))]
data['omega'] = [('A', ' 123 ', 'ALA', None, (184.814, 267.30099999999993, 190.61)), ('B', ' 815 ', 'ARG', None, (243.03700000000015, 249.18799999999996, 251.23699999999997))]
data['cablam'] = [('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (212.3, 258.8, 197.5)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (210.3, 264.1, 185.3)), ('A', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-S--', (205.4, 268.7, 179.9)), ('A', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (196.4, 277.0, 210.9)), ('A', '218', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (198.0, 266.9, 216.2)), ('A', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (253.4, 203.2, 166.0)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (248.4, 198.1, 166.2)), ('A', '521', 'PRO', ' beta sheet', 'bend\nSSS--', (251.8, 243.3, 195.6)), ('A', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (239.2, 251.2, 185.4)), ('A', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (244.3, 248.0, 195.4)), ('A', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TTT', (233.3, 262.6, 226.3)), ('A', '618', 'THR', 'check CA trace,carbonyls, peptide', 'turn\n-TTT-', (234.8, 264.0, 223.0)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (225.3, 252.3, 235.9)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (228.7, 250.9, 236.7)), ('A', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nSTT-H', (201.0, 218.1, 209.6)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nG-TTT', (217.2, 211.0, 217.1)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (198.4, 228.8, 272.3)), ('A', '987', 'PRO', 'check CA trace,carbonyls, peptide', 'helix\n-HHHH', (212.8, 218.0, 193.8)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (216.7, 231.8, 258.6)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (205.5, 227.6, 242.0)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (240.7, 235.2, 298.1)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (227.5, 231.1, 281.9)), ('A', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (226.8, 249.5, 286.7)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'beta bridge\nTTB--', (219.8, 239.9, 277.9)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', ' \nEE-S-', (240.2, 228.4, 288.0)), ('A', '34', 'ARG', 'check CA trace', ' \n-S--B', (201.5, 261.4, 210.9)), ('A', '215', 'ASP', 'check CA trace', 'bend\nSSS--', (197.9, 273.6, 210.0)), ('A', '220', 'PHE', 'check CA trace', ' \nS---B', (197.6, 259.9, 214.8)), ('A', '293', 'LEU', 'check CA trace', 'turn\nTTTSH', (213.4, 259.5, 216.9)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (212.6, 251.7, 235.2)), ('A', '520', 'ALA', 'check CA trace', 'bend\n-SSS-', (249.6, 240.9, 197.6)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (236.0, 251.6, 206.6)), ('B', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (266.4, 219.9, 194.6)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (261.4, 220.1, 197.3)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (266.6, 218.8, 185.0)), ('B', '113', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (267.4, 220.9, 174.7)), ('B', '231', 'ILE', ' beta sheet', 'turn\nETT--', (259.7, 231.5, 185.1)), ('B', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (210.2, 189.4, 138.8)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (211.7, 194.6, 134.1)), ('B', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (214.3, 200.5, 184.8)), ('B', '527', 'PRO', 'check CA trace,carbonyls, peptide', ' \nE----', (234.7, 190.1, 186.7)), ('B', '528', 'LYS', ' beta sheet', ' \n-----', (235.8, 192.2, 189.6)), ('B', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (231.2, 192.3, 198.8)), ('B', '545', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (229.6, 195.7, 199.2)), ('B', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (225.1, 200.6, 217.6)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (248.3, 209.4, 235.0)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (245.5, 207.1, 235.9)), ('B', '814', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (241.3, 250.9, 251.2)), ('B', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (229.2, 236.7, 261.1)), ('B', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (231.0, 230.7, 264.6)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (235.6, 226.6, 258.1)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (236.7, 238.4, 241.3)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (228.8, 204.4, 298.1)), ('B', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (247.5, 209.3, 285.7)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (242.3, 220.1, 277.0)), ('B', '1126', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTT', (227.3, 200.4, 289.8)), ('B', '34', 'ARG', 'check CA trace', ' \n-S--E', (268.5, 227.9, 210.9)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (270.8, 221.9, 176.2)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (239.7, 199.4, 208.0)), ('B', '797', 'PHE', 'check CA trace', 'bend\n--STT', (242.9, 244.0, 271.0)), ('B', '811', 'LYS', 'check CA trace', 'bend\nTTSSS', (248.0, 252.9, 251.0)), ('B', '812', 'PRO', 'check CA trace', 'bend\nTSSSS', (246.1, 251.9, 247.9)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (221.0, 189.5, 205.6)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (202.4, 196.0, 197.6)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (200.1, 192.8, 185.0)), ('C', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (197.6, 187.2, 178.7)), ('C', '218', 'GLN', 'check CA trace,carbonyls, peptide', ' \n---S-', (199.2, 179.9, 216.3)), ('C', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (198.7, 197.0, 217.1)), ('C', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (225.5, 261.3, 165.3)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (232.3, 259.1, 165.1)), ('C', '517', 'LEU', 'check CA trace,carbonyls, peptide', ' \n---SS', (202.3, 235.3, 194.9)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (199.7, 238.9, 199.5)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (191.4, 225.7, 185.9)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (201.0, 198.3, 235.6)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (198.7, 210.9, 236.4)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (198.4, 214.5, 237.4)), ('C', '756', 'TYR', 'check CA trace,carbonyls, peptide', 'helix-3\nGGGTT', (235.2, 224.9, 210.6)), ('C', '812', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (238.5, 190.6, 246.6)), ('C', '813', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (240.0, 194.1, 247.3)), ('C', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (228.1, 214.8, 264.5)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (221.7, 212.8, 258.3)), ('C', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (215.2, 210.8, 260.2)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (208.0, 230.0, 299.0)), ('C', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (217.7, 221.4, 281.9)), ('C', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (202.1, 211.4, 287.1)), ('C', '34', 'ARG', 'check CA trace', ' \n-S--E', (202.8, 185.1, 211.3)), ('C', '310', 'LYS', 'check CA trace', 'strand\n-EEEE', (205.1, 200.1, 235.6)), ('C', '518', 'LEU', 'check CA trace', 'bend\n--SSS', (199.6, 235.6, 197.6)), ('C', '520', 'ALA', 'check CA trace', 'bend\nSSS--', (196.3, 240.4, 198.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (193.7, 222.0, 207.6)), ('C', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (234.5, 205.0, 216.7))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11119/6z97/Model_validation_1/validation_cootdata/molprobity_probe6z97_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

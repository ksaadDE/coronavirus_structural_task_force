
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' B 617  CYS  SG ', ' B 642  VAL  CG1', -0.84, (189.186, 133.488, 160.507)), (' A 617  CYS  SG ', ' A 642  VAL  CG1', -0.794, (172.661, 199.29, 162.143)), (' A 617  CYS  SG ', ' A 642  VAL HG12', -0.701, (173.331, 199.713, 163.062)), (' B 617  CYS  SG ', ' B 642  VAL HG11', -0.654, (189.334, 132.496, 160.463)), (' C 599  THR HG22', ' C 601  GLY  H  ', -0.632, (134.691, 137.452, 169.951)), (' C 617  CYS  SG ', ' C 642  VAL  CG1', -0.595, (120.847, 151.165, 164.315)), (' A1032  CYS  CB ', ' A1043  CYS  HG ', -0.576, (152.847, 165.772, 194.828)), (' B1032  CYS  HG ', ' B1043  CYS  HG ', -0.551, (170.086, 163.958, 193.628)), (' A 122  ASN  ND2', ' A 124  THR  OG1', -0.533, (124.254, 205.232, 123.163)), (' B1032  CYS  SG ', ' B1043  CYS  SG ', -0.532, (170.958, 164.542, 193.459)), (' C1032  CYS  SG ', ' C1043  CYS  SG ', -0.494, (160.689, 151.005, 194.402)), (' A 117  LEU HD23', ' A 130  VAL HG22', -0.487, (140.67, 196.739, 120.291)), (' C 617  CYS  SG ', ' C 642  VAL HG11', -0.471, (120.384, 151.395, 164.084)), (' B1032  CYS  CB ', ' B1043  CYS  HG ', -0.464, (170.562, 165.382, 193.501)), (' B 617  CYS  SG ', ' B 642  VAL HG13', -0.458, (189.009, 133.682, 160.766)), (' A1032  CYS  HB2', ' A1043  CYS  HG ', -0.45, (152.993, 165.56, 194.818)), (' A1032  CYS  HG ', ' A1043  CYS  HB3', -0.447, (153.02, 167.768, 195.537)), (' A1032  CYS  HG ', ' A1043  CYS  CB ', -0.436, (153.503, 168.001, 195.356)), (' A1028  LYS  O  ', ' A1032  CYS  HB3', -0.419, (151.138, 163.952, 193.507)), (' B1032  CYS  HG ', ' B1043  CYS  CB ', -0.418, (170.793, 163.57, 194.079)), (' B  28  TYR  HB3', ' B  61  ASN  OD1', -0.418, (209.544, 145.768, 143.097)), (' A1082  CYS  CB ', ' A1126  CYS  HG ', -0.414, (182.254, 172.189, 227.498)), (' A 710  ASN  HB3', ' A1305  NAG  H82', -0.413, (180.726, 181.162, 216.467)), (' B1032  CYS  HG ', ' B1043  CYS  HB2', -0.41, (170.758, 163.489, 194.338)), (' A 234  ASN  HB2', ' C 465  GLU  OE2', -0.41, (151.992, 192.975, 120.79)), (' A  44  ARG  O  ', ' A 283  GLY  HA2', -0.408, (133.009, 184.984, 150.442)), (' A 382  VAL HG11', ' A 387  LEU HD23', -0.407, (173.436, 173.468, 123.608)), (' A1076  THR  HB ', ' A1097  SER  HB3', -0.406, (173.56, 183.741, 220.926)), (' C 710  ASN  HB3', ' C1305  NAG  H82', -0.405, (137.649, 164.645, 218.861))]
data['cbeta'] = [('A', ' 571 ', 'ASP', ' ', 0.2738435722452771, (179.459, 170.171, 143.978)), ('A', ' 649 ', 'CYS', ' ', 0.28245839036447307, (172.80699999999993, 195.18300000000005, 162.783)), ('C', ' 198 ', 'ASP', ' ', 0.35589710213619247, (145.892, 137.542, 130.22500000000002)), ('C', ' 487 ', 'ASN', ' ', 0.29877474419023503, (170.649, 194.339, 105.202))]
data['smoc'] = [('A', 43, u'PHE', 0.6321345782305005, (133.015, 182.134, 145.74899999999997)), ('A', 117, u'LEU', 0.6523388081695748, (141.965, 199.79399999999998, 121.04700000000001)), ('A', 128, u'ILE', 0.7355677926502695, (134.653, 198.694, 121.883)), ('A', 136, u'CYS', 0.789552661045278, (143.77399999999997, 212.298, 116.374)), ('A', 143, u'VAL', 0.7261244891918164, (128.33, 216.534, 121.43400000000001)), ('A', 186, u'PHE', 0.78227055148214, (132.51899999999998, 215.38600000000002, 142.966)), ('A', 198, u'ASP', 0.6817386693185168, (148.02700000000002, 186.04299999999998, 126.816)), ('A', 211, u'ASN', 0.7821028352970251, (131.707, 212.25, 151.11899999999997)), ('A', 214, u'ARG', 0.7803348326953007, (139.92200000000003, 216.843, 147.503)), ('A', 223, u'LEU', 0.6540296119717955, (136.777, 195.845, 142.11299999999997)), ('A', 270, u'LEU', 0.5542294982789566, (150.07, 197.476, 138.816)), ('A', 285, u'ILE', 0.6316078550921654, (136.596, 190.944, 150.14299999999997)), ('A', 293, u'LEU', 0.5730193881243502, (154.665, 196.94299999999998, 152.04299999999998)), ('A', 319, u'ARG', 0.7169631649425493, (168.955, 189.732, 149.969)), ('A', 340, u'GLU', 0.805731995639462, (183.29299999999998, 172.033, 105.815)), ('A', 346, u'ARG', 0.7341458616792496, (181.9, 163.55, 99.856)), ('A', 365, u'TYR', 0.75873169079501, (174.191, 177.38500000000002, 116.12799999999999)), ('A', 369, u'TYR', 0.7209942397428287, (168.833, 174.907, 113.753)), ('A', 372, u'ALA', 0.7907244273237309, (165.38500000000002, 174.712, 106.104)), ('A', 373, u'SER', 0.7950969165615606, (168.068, 172.153, 104.97)), ('A', 405, u'ASP', 0.806616856778909, (164.436, 154.194, 108.30799999999999)), ('A', 415, u'THR', 0.7313545005054668, (169.724, 149.21399999999997, 119.636)), ('A', 417, u'LYS', 0.7941618147382042, (172.045, 147.16299999999998, 113.15199999999999)), ('A', 423, u'TYR', 0.7847547250023565, (177.972, 153.835, 115.313)), ('A', 444, u'LYS', 0.7817609461771673, (172.21499999999997, 156.72299999999998, 91.41100000000002)), ('A', 445, u'VAL', 0.7479029169342855, (170.18200000000002, 154.925, 88.67399999999999)), ('A', 475, u'ALA', 0.7508315155354014, (177.42000000000002, 132.971, 110.92)), ('A', 477, u'SER', 0.7183657390190836, (179.066, 126.149, 113.33)), ('A', 483, u'VAL', 0.7807480198302426, (187.489, 132.594, 103.074)), ('A', 493, u'GLN', 0.7960082310960298, (177.35000000000002, 145.399, 102.74300000000001)), ('A', 500, u'THR', 0.6997937211042755, (163.272, 156.05100000000002, 92.973)), ('A', 501, u'ASN', 0.78193137557211, (163.35000000000002, 154.323, 96.44000000000001)), ('A', 505, u'TYR', 0.801192999934392, (165.26, 153.316, 101.695)), ('A', 517, u'LEU', 0.6619534155505278, (182.343, 171.35700000000003, 129.064)), ('A', 519, u'HIS', 0.4097334668385912, (186.31, 170.64899999999997, 134.871)), ('A', 520, u'ALA', 0.6694067928217995, (188.569, 172.49200000000002, 132.32200000000003)), ('A', 524, u'VAL', 0.7406267258129078, (184.363, 176.70899999999997, 121.397)), ('A', 533, u'LEU', 0.6941410124681305, (183.88700000000003, 193.125, 134.83800000000002)), ('A', 542, u'ASN', 0.7220241166477092, (178.22299999999998, 184.38400000000001, 133.146)), ('A', 549, u'THR', 0.66962113818053, (174.722, 185.58800000000002, 140.805)), ('A', 570, u'ALA', 0.6323840528789347, (177.895, 171.597, 148.171)), ('A', 571, u'ASP', 0.6558155876761967, (179.752, 171.48700000000002, 144.732)), ('A', 577, u'ARG', 0.7470513613057811, (189.42700000000002, 182.88600000000002, 136.759)), ('A', 582, u'LEU', 0.7985179821696188, (193.74099999999999, 185.666, 134.23999999999998)), ('A', 590, u'CYS', 0.624256955298752, (173.651, 187.853, 146.989)), ('A', 597, u'VAL', 0.6206931203736601, (160.28, 191.02700000000002, 163.11899999999997)), ('A', 608, u'VAL', 0.62426132846385, (158.045, 196.889, 165.042)), ('A', 649, u'CYS', 0.6459836180328166, (171.95800000000003, 194.286, 163.69899999999998)), ('A', 650, u'LEU', 0.6593041849929124, (168.651, 195.404, 165.366)), ('A', 668, u'ALA', 0.6242442826888456, (172.712, 186.475, 173.541)), ('A', 699, u'LEU', 0.6172528255328621, (168.63, 187.394, 186.002)), ('A', 713, u'ALA', 0.559125309516732, (168.4, 182.813, 211.20499999999998)), ('A', 715, u'PRO', 0.5593170135144757, (161.635, 181.585, 211.258)), ('A', 737, u'ASP', 0.5770440395857658, (140.738, 156.93800000000002, 156.286)), ('A', 819, u'GLU', 0.499771567774967, (136.863, 172.653, 187.89600000000002)), ('A', 854, u'LYS', 0.5761235357704759, (138.24399999999997, 168.124, 157.626)), ('A', 870, u'ILE', 0.5082641096296129, (137.001, 162.252, 185.252)), ('A', 901, u'GLN', 0.4406009866606957, (146.02800000000002, 164.586, 209.82600000000002)), ('A', 924, u'ALA', 0.5113731179716915, (142.925, 177.277, 208.589)), ('A', 942, u'ALA', 0.6040440055445679, (143.037, 182.63, 180.97899999999998)), ('A', 948, u'LEU', 0.5286826001074294, (146.512, 172.85700000000003, 177.869)), ('A', 962, u'LEU', 0.5261904421530459, (146.772, 168.24899999999997, 156.425)), ('A', 966, u'LEU', 0.534493896764829, (144.617, 168.748, 149.453)), ('A', 968, u'SER', 0.5103589503552771, (148.231, 171.434, 146.317)), ('A', 994, u'ASP', 0.5054471062133562, (150.091, 159.375, 140.52800000000002)), ('A', 997, u'ILE', 0.5167233308188112, (148.94899999999998, 160.076, 145.166)), ('A', 1011, u'GLN', 0.518286223046995, (151.64499999999998, 162.88500000000002, 165.753)), ('A', 1012, u'LEU', 0.5049098334226032, (153.835, 159.941, 166.934)), ('A', 1015, u'ALA', 0.4787722046840645, (152.129, 161.71399999999997, 171.526)), ('A', 1018, u'ILE', 0.4213349304847994, (152.01899999999998, 163.82100000000003, 176.078)), ('A', 1019, u'ARG', 0.45397855257656494, (152.82500000000002, 160.311, 177.439)), ('A', 1029, u'MET', 0.46809441892616355, (149.038, 161.806, 191.77499999999998)), ('A', 1077, u'THR', 0.5451869103005702, (174.484, 179.877, 217.783)), ('A', 1105, u'THR', 0.5859148636972893, (164.816, 175.417, 219.476)), ('A', 1302, u'NAG', 0.5488963887031163, (165.151, 190.466, 210.95100000000002)), ('A', 1307, u'NAG', 0.48592098964462155, (180.77299999999997, 193.993, 166.189)), ('A', 1308, u'NAG', 0.70229403394195, (175.471, 169.819, 100.565)), ('A', 1311, u'NAG', 0.6142740123684077, (152.789, 208.848, 148.923)), ('B', 35, u'GLY', 0.7211871516667362, (202.196, 158.803, 142.08)), ('B', 42, u'VAL', 0.7697624171312734, (189.162, 172.686, 140.40200000000002)), ('B', 44, u'ARG', 0.7012821820169969, (189.37, 173.296, 146.77299999999997)), ('B', 66, u'HIS', 0.7544812612236768, (218.63299999999998, 151.60899999999998, 133.42600000000002)), ('B', 93, u'ALA', 0.7552364973776845, (210.183, 158.186, 137.647)), ('B', 111, u'ASP', 0.7793482087868745, (206.43, 150.389, 113.16)), ('B', 113, u'LYS', 0.7413250164304509, (200.14, 150.45700000000002, 110.005)), ('B', 139, u'PRO', 0.7226876872376915, (214.843, 159.48000000000002, 116.696)), ('B', 164, u'ASN', 0.7268110916352658, (204.405, 161.1, 107.851)), ('B', 165, u'ASN', 0.7391791018757895, (200.542, 160.88200000000003, 108.195)), ('B', 186, u'PHE', 0.7393320538177435, (220.306, 160.787, 141.441)), ('B', 198, u'ASP', 0.6483831453204787, (189.797, 157.431, 126.233)), ('B', 214, u'ARG', 0.7280464912118787, (217.914, 155.538, 144.092)), ('B', 223, u'LEU', 0.6770997672912968, (201.993, 165.835, 140.288)), ('B', 231, u'ILE', 0.6495225354910883, (195.681, 162.98600000000002, 119.546)), ('B', 242, u'LEU', 0.7459008087063537, (217.95700000000002, 156.999, 126.295)), ('B', 267, u'VAL', 0.7364787197564262, (207.77899999999997, 151.88600000000002, 135.82800000000003)), ('B', 270, u'LEU', 0.6901240273907626, (197.883, 152.74699999999999, 137.507)), ('B', 285, u'ILE', 0.5790904582441724, (196.95100000000002, 168.389, 148.148)), ('B', 291, u'CYS', 0.6436283808476936, (190.923, 153.17499999999998, 150.502)), ('B', 298, u'GLU', 0.6125654752355663, (189.01399999999998, 151.707, 154.595)), ('B', 308, u'VAL', 0.7067321175289264, (190.548, 157.57299999999998, 164.07899999999998)), ('B', 340, u'GLU', 0.665573951940284, (157.478, 116.458, 107.24400000000001)), ('B', 344, u'ALA', 0.6737603589333104, (159.2, 114.498, 102.09400000000001)), ('B', 354, u'ASN', 0.6877094834268944, (151.77499999999998, 123.651, 100.26100000000001)), ('B', 357, u'ARG', 0.7416950643679918, (150.85100000000003, 125.73, 110.103)), ('B', 360, u'ASN', 0.759317826969626, (151.701, 124.614, 120.157)), ('B', 368, u'LEU', 0.7763148402138835, (167.994, 125.008, 109.483)), ('B', 382, u'VAL', 0.78770611450058, (165.631, 139.22299999999998, 112.403)), ('B', 387, u'LEU', 0.809854269162115, (164.967, 132.849, 116.396)), ('B', 401, u'VAL', 0.7294000870589304, (159.435, 123.877, 93.20100000000001)), ('B', 403, u'ARG', 0.7108607831078803, (163.64499999999998, 127.25, 88.38)), ('B', 410, u'ILE', 0.7162191396450757, (161.538, 135.025, 96.51)), ('B', 413, u'GLY', 0.7508345807711027, (157.70999999999998, 143.055, 97.472)), ('B', 417, u'LYS', 0.6941112985265254, (156.349, 135.54, 86.96400000000001)), ('B', 441, u'LEU', 0.7395173219181933, (165.21899999999997, 114.887, 92.17999999999999)), ('B', 446, u'GLY', 0.4972989809585182, (163.261, 114.21600000000001, 77.87499999999999)), ('B', 449, u'TYR', 0.6161229150387932, (155.787, 117.095, 83.512)), ('B', 459, u'SER', 0.6712670828665914, (145.336, 140.535, 87.208)), ('B', 466, u'ARG', 0.6169435762514534, (146.637, 131.32000000000002, 96.94200000000001)), ('B', 468, u'ILE', 0.4948253628628218, (144.721, 127.504, 92.624)), ('B', 470, u'THR', 0.34934031539463856, (142.972, 126.94000000000001, 86.036)), ('B', 478, u'THR', 0.34323514131127975, (135.797, 135.975, 71.315)), ('B', 482, u'GLY', 0.2650989790631796, (135.48600000000002, 127.081, 78.85)), ('B', 500, u'THR', 0.6233668030165881, (171.38200000000003, 118.81400000000001, 81.452)), ('B', 501, u'ASN', 0.6764726700624917, (169.834, 122.342, 81.94600000000001)), ('B', 505, u'TYR', 0.7031820797212732, (166.67, 126.53, 84.265)), ('B', 516, u'GLU', 0.7337610291406623, (153.131, 136.377, 113.921)), ('B', 519, u'HIS', 0.718328398507443, (147.55, 139.319, 121.897)), ('B', 551, u'VAL', 0.7137861890700214, (172.762, 127.921, 147.99)), ('B', 571, u'ASP', 0.646507543656987, (156.448, 136.15, 150.166)), ('B', 574, u'ASP', 0.6561905265161098, (162.593, 129.475, 150.017)), ('B', 619, u'GLU', 0.5952542558247194, (182.85500000000002, 131.61299999999997, 154.37800000000001)), ('B', 668, u'ALA', 0.5976380588228863, (177.71099999999998, 137.904, 172.665)), ('B', 699, u'LEU', 0.6473553944426996, (181.256, 141.309, 185.255)), ('B', 713, u'ALA', 0.5440296555878256, (179.61299999999997, 144.30200000000002, 210.29399999999998)), ('B', 742, u'ILE', 0.5245322731341003, (166.062, 173.77299999999997, 147.85700000000003)), ('B', 748, u'GLU', 0.6216272260175559, (161.99800000000002, 179.187, 138.266)), ('B', 770, u'ILE', 0.5089499139250862, (163.063, 172.85100000000003, 168.61399999999998)), ('B', 773, u'GLU', 0.49485133643659995, (162.70499999999998, 174.541, 173.502)), ('B', 774, u'GLN', 0.4642922909001552, (166.537, 174.79299999999998, 173.989)), ('B', 800, u'PHE', 0.5221269858631097, (185.92200000000003, 173.446, 203.954)), ('B', 813, u'SER', 0.4535932499449958, (183.146, 185.11599999999999, 181.88700000000003)), ('B', 819, u'GLU', 0.526635378696886, (184.078, 175.49800000000002, 185.124)), ('B', 822, u'LEU', 0.5378900362860092, (184.963, 171.974, 181.73)), ('B', 870, u'ILE', 0.5001170664915798, (174.695, 180.61399999999998, 183.10399999999998)), ('B', 873, u'TYR', 0.5347953427749239, (173.168, 181.28, 187.995)), ('B', 874, u'THR', 0.4551450871933562, (175.553, 178.435, 189.05700000000002)), ('B', 877, u'LEU', 0.5249848971376944, (172.93800000000002, 178.36800000000002, 193.45000000000002)), ('B', 880, u'GLY', 0.46279890988072975, (172.947, 180.038, 198.467)), ('B', 916, u'LEU', 0.5163201498348654, (180.94, 165.506, 212.467)), ('B', 930, u'ALA', 0.5011111346731509, (188.369, 165.01, 196.96800000000002)), ('B', 950, u'ASP', 0.5536427931627306, (178.664, 163.496, 171.565)), ('B', 975, u'SER', 0.5605692556995935, (172.905, 168.731, 140.756)), ('B', 979, u'ASP', 0.5740269948800271, (173.417, 174.01, 134.82700000000003)), ('B', 980, u'ILE', 0.6114521408437812, (169.809, 172.89700000000002, 134.24899999999997)), ('B', 1005, u'GLN', 0.4823381471483128, (162.33700000000002, 166.313, 155.79299999999998)), ('B', 1017, u'GLU', 0.5183486804477057, (166.094, 162.955, 174.102)), ('B', 1023, u'ASN', 0.4723179095150885, (164.112, 167.464, 182.82500000000002)), ('B', 1031, u'GLU', 0.4815661539435792, (166.35700000000003, 167.448, 194.768)), ('B', 1062, u'PHE', 0.4584996681219705, (177.018, 168.05, 189.404)), ('B', 1087, u'ALA', 0.5901135697703037, (162.765, 141.94299999999998, 226.454)), ('B', 1121, u'PHE', 0.5830598704510878, (162.503, 150.21499999999997, 225.15)), ('B', 1306, u'NAG', 0.5965905947919731, (195.542, 133.89800000000002, 178.872)), ('B', 1310, u'NAG', 0.6462338363049055, (208.012, 140.072, 143.092)), ('C', 44, u'ARG', 0.6757139000735475, (153.042, 127.37499999999999, 151.54299999999998)), ('C', 81, u'ASN', 0.714349816204782, (121.012, 121.27499999999999, 129.26999999999998)), ('C', 106, u'PHE', 0.7498097836111828, (132.345, 127.298, 125.41000000000001)), ('C', 117, u'LEU', 0.7209796183474992, (136.136, 125.263, 122.87799999999999)), ('C', 122, u'ASN', 0.7878501069812757, (135.58200000000002, 109.971, 124.953)), ('C', 142, u'GLY', 0.7661373772282598, (124.16799999999999, 108.55499999999999, 122.315)), ('C', 143, u'VAL', 0.7420020833768023, (123.228, 106.377, 125.36)), ('C', 165, u'ASN', 0.52498476430391, (139.999, 128.526, 113.353)), ('C', 166, u'CYS', 0.6804947126644912, (141.939, 125.58, 114.906)), ('C', 186, u'PHE', 0.7089012479617073, (125.161, 108.62799999999999, 144.252)), ('C', 213, u'VAL', 0.6831986034269488, (121.507, 112.643, 147.106)), ('C', 214, u'ARG', 0.6881347060961088, (119.902, 116.05199999999999, 146.11299999999997)), ('C', 263, u'ALA', 0.7465947083584863, (121.754, 113.41100000000002, 136.34)), ('C', 266, u'TYR', 0.7004698519686281, (124.86, 122.582, 139.865)), ('C', 275, u'PHE', 0.5948151308867469, (139.816, 134.95000000000002, 150.66899999999998)), ('C', 279, u'TYR', 0.6792511277195227, (147.593, 126.016, 154.353)), ('C', 297, u'SER', 0.514402013448246, (134.883, 137.32500000000002, 158.542)), ('C', 340, u'GLU', 0.785420571195341, (131.89200000000002, 178.536, 109.34400000000001)), ('C', 346, u'ARG', 0.8094544254832473, (138.92200000000003, 180.796, 102.351)), ('C', 388, u'ASN', 0.684336070338681, (131.54, 165.8, 124.531)), ('C', 403, u'ARG', 0.8003638555577339, (153.121, 174.36100000000002, 104.7)), ('C', 410, u'ILE', 0.7288678257571559, (151.686, 174.638, 116.151)), ('C', 423, u'TYR', 0.7355641348646237, (151.363, 182.40200000000002, 115.848)), ('C', 431, u'GLY', 0.67143216469758, (142.656, 173.135, 123.521)), ('C', 445, u'VAL', 0.7960652467017807, (149.56, 175.877, 88.812)), ('C', 458, u'LYS', 0.812923610378256, (162.341, 192.76899999999998, 115.807)), ('C', 464, u'PHE', 0.7103066558920358, (148.012, 184.757, 121.031)), ('C', 466, u'ARG', 0.7283097025587882, (148.501, 189.137, 116.24600000000001)), ('C', 468, u'ILE', 0.7305524561386071, (149.73299999999998, 192.70999999999998, 110.687)), ('C', 471, u'GLU', 0.7645076012778393, (157.025, 198.495, 107.793)), ('C', 477, u'SER', 0.7942894639157009, (173.63, 198.18200000000002, 109.048)), ('C', 484, u'GLU', 0.7548105533890349, (163.591, 198.24899999999997, 100.57)), ('C', 493, u'GLN', 0.841310922782788, (157.0, 186.218, 102.263)), ('C', 502, u'GLY', 0.8363161546126638, (156.206, 167.335, 97.788)), ('C', 503, u'VAL', 0.8188927399031067, (154.17, 166.666, 100.99000000000001)), ('C', 510, u'VAL', 0.7684237763740784, (144.817, 174.56, 110.579)), ('C', 511, u'VAL', 0.7054547157973725, (142.136, 175.165, 113.225)), ('C', 544, u'ASN', 0.6493085298725262, (128.40200000000002, 171.971, 133.737)), ('C', 559, u'PHE', 0.6479100671917166, (127.074, 184.515, 145.122)), ('C', 585, u'LEU', 0.6357225677976085, (122.973, 174.90200000000002, 146.444)), ('C', 590, u'CYS', 0.6070435909939791, (127.582, 161.64, 152.064)), ('C', 641, u'ASN', 0.684575548784718, (118.952, 145.35700000000003, 168.053)), ('C', 649, u'CYS', 0.47740253665399096, (124.956, 153.88000000000002, 166.093)), ('C', 664, u'ILE', 0.5984498271393899, (135.372, 146.033, 175.944)), ('C', 666, u'ILE', 0.5449379629630033, (133.16299999999998, 151.444, 173.031)), ('C', 695, u'TYR', 0.6434237679082927, (126.163, 149.572, 179.271)), ('C', 699, u'LEU', 0.6869660370256584, (134.11899999999997, 153.503, 188.112)), ('C', 712, u'ILE', 0.5731729956635929, (140.21299999999997, 157.315, 214.24899999999997)), ('C', 713, u'ALA', 0.4990305713190848, (140.641, 153.904, 212.584)), ('C', 760, u'CYS', 0.47827239957046397, (172.192, 154.653, 152.547)), ('C', 763, u'LEU', 0.44960671248758827, (169.88600000000002, 155.01399999999998, 157.464)), ('C', 774, u'GLN', 0.4622576345776384, (170.054, 148.548, 173.502)), ('C', 777, u'ASN', 0.40517797389947385, (169.796, 150.33100000000002, 178.248)), ('C', 781, u'VAL', 0.4487572307396919, (169.58200000000002, 148.303, 184.632)), ('C', 871, u'ALA', 0.5196151229616423, (171.333, 136.18, 185.304)), ('C', 885, u'GLY', 0.46151029569621677, (170.42800000000003, 144.844, 203.077)), ('C', 926, u'GLN', 0.6246087769575852, (153.016, 135.405, 204.792)), ('C', 949, u'GLN', 0.651740937339468, (155.523, 140.004, 174.36100000000002)), ('C', 950, u'ASP', 0.6378307298912308, (154.22899999999998, 143.267, 172.755)), ('C', 962, u'LEU', 0.5222725880682422, (159.54899999999998, 145.87, 155.484)), ('C', 979, u'ASP', 0.5947805951956822, (161.83800000000002, 140.869, 135.238)), ('C', 996, u'LEU', 0.5219480472915373, (161.227, 150.59, 142.655)), ('C', 1003, u'SER', 0.4763582483406363, (159.646, 151.839, 152.632)), ('C', 1025, u'ALA', 0.4415250883863023, (163.765, 150.13299999999998, 185.36700000000002)), ('C', 1049, u'LEU', 0.47461091869486144, (159.771, 146.859, 202.54899999999998)), ('C', 1054, u'GLN', 0.5088819078893547, (164.379, 138.71499999999997, 188.17)), ('C', 1081, u'ILE', 0.5768876885098324, (145.373, 165.664, 226.965)), ('C', 1087, u'ALA', 0.5420903821176605, (148.654, 170.129, 227.572)), ('C', 1094, u'VAL', 0.5384944516336971, (148.394, 158.99800000000002, 218.64899999999997)), ('C', 1105, u'THR', 0.5789561084659631, (149.55200000000002, 153.772, 220.21099999999998)), ('C', 1145, u'LEU', 0.7748915554503971, (160.71599999999998, 159.11299999999997, 245.046)), ('C', 1305, u'NAG', 0.5426926582154302, (138.524, 166.05800000000002, 219.336)), ('C', 1308, u'NAG', 0.7068780537063618, (131.612, 170.606, 110.691)), ('C', 1309, u'NAG', 0.6205146884499784, (149.64, 118.242, 158.504)), ('C', 1310, u'NAG', 0.7481432281665602, (115.394, 129.86700000000002, 146.49))]
data['rota'] = [('A', '  96 ', 'GLU', 0.26294278447012676, (133.104, 212.867, 139.26)), ('A', ' 233 ', 'ILE', 0.02417311651483748, (146.901, 193.032, 120.62000000000003)), ('A', ' 347 ', 'PHE', 0.21598212616134502, (180.508, 161.763, 102.96100000000001)), ('A', ' 602 ', 'THR', 0.006871274700295383, (148.916, 194.452, 167.371)), ('A', ' 603 ', 'ASN', 0.04363557684974782, (146.217, 196.304, 169.39300000000003)), ('A', ' 604 ', 'THR', 0.24730094124428675, (149.036, 197.929, 171.45700000000002)), ('A', ' 617 ', 'CYS', 0.059926553697598646, (175.011, 197.128, 160.742)), ('A', '1118 ', 'ASP', 0.0491016736280635, (166.33499999999992, 165.607, 228.392)), ('B', ' 458 ', 'LYS', 0.1330165456049683, (143.349, 138.698, 84.44800000000001)), ('B', ' 605 ', 'SER', 0.12947119295270906, (198.903, 152.118, 167.125)), ('B', ' 617 ', 'CYS', 0.11634398187313924, (185.301, 131.772, 158.95700000000002)), ('B', ' 649 ', 'CYS', 0.21063335654592646, (184.584, 135.367, 162.496)), ('B', ' 657 ', 'ASN', 0.2108839246464627, (191.28099999999995, 133.561, 178.144)), ('B', ' 709 ', 'ASN', 0.048662800470462994, (172.23999999999995, 134.772, 211.972)), ('B', ' 710 ', 'ASN', 0.04496609628980766, (174.56799999999996, 136.23400000000007, 214.67)), ('B', ' 820 ', 'ASP', 0.20577023518652568, (187.087, 176.753, 183.08300000000003)), ('C', ' 332 ', 'ILE', 0.04013865510887335, (120.974, 175.443, 125.042)), ('C', ' 602 ', 'THR', 0.005287752710749668, (135.955, 133.221, 169.14100000000002)), ('C', ' 604 ', 'THR', 0.008087669993983582, (132.958, 132.231, 173.76900000000003)), ('C', ' 617 ', 'CYS', 0.07171265790632751, (121.29900000000006, 155.083, 162.818)), ('C', ' 619 ', 'GLU', 0.03391054847008127, (121.90400000000004, 156.704, 157.91400000000002)), ('C', ' 649 ', 'CYS', 0.0, (124.95600000000006, 153.88, 166.093)), ('C', '1092 ', 'GLU', 0.19289079123347738, (155.351, 159.516, 218.489))]
data['clusters'] = [('A', '363', 1, 'Dihedral angle:CA:C', (179.906, 179.036, 116.729)), ('A', '364', 1, 'Dihedral angle:N:CA', (176.5, 180.38700000000003, 115.777)), ('A', '365', 1, 'smoc Outlier', (174.191, 177.38500000000002, 116.12799999999999)), ('A', '369', 1, 'smoc Outlier', (168.833, 174.907, 113.753)), ('A', '382', 1, 'side-chain clash', (173.436, 173.468, 123.608)), ('A', '387', 1, 'side-chain clash', (173.436, 173.468, 123.608)), ('A', '390', 1, 'Dihedral angle:CA:C', (177.122, 178.172, 126.085)), ('A', '391', 1, 'Dihedral angle:N:CA', (180.85700000000003, 177.509, 125.70700000000001)), ('A', '524', 1, 'smoc Outlier', (184.363, 176.70899999999997, 121.397)), ('A', '525', 1, 'Dihedral angle:CA:C', (182.076, 179.657, 122.27199999999999)), ('A', '526', 1, 'Dihedral angle:N:CA', (178.638, 180.993, 121.4)), ('A', '220', 2, 'cablam CA Geom Outlier', (138.6, 199.5, 151.1)), ('A', '221', 2, 'cablam Outlier', (136.2, 198.2, 148.3)), ('A', '223', 2, 'smoc Outlier', (136.777, 195.845, 142.11299999999997)), ('A', '293', 2, 'cablam CA Geom Outlier\nsmoc Outlier', (154.7, 196.9, 152.0)), ('A', '294', 2, 'Bond angle:CA:CB:CG', (156.578, 196.706, 155.36800000000002)), ('A', '298', 2, 'Dihedral angle:CB:CG:CD:OE1', (155.377, 190.47, 155.74299999999997)), ('A', '32', 2, 'cablam Outlier', (146.2, 204.2, 150.4)), ('A', '34', 2, 'Planar group:CD:NE:CZ:NH1:NH2', (142.66899999999998, 201.436, 146.787)), ('A', '58', 2, 'Bond angle:CA:CB:CG', (149.62, 199.9, 148.993)), ('A', '186', 3, 'smoc Outlier', (132.51899999999998, 215.38600000000002, 142.966)), ('A', '188', 3, 'Dihedral angle:CA:C', (130.91899999999998, 209.42200000000003, 142.518)), ('A', '189', 3, 'Dihedral angle:N:CA', (134.24099999999999, 207.612, 142.485)), ('A', '207', 3, 'Bond angle:CA:CB:CG', (131.40200000000002, 202.539, 141.535)), ('A', '95', 3, 'Dihedral angle:CA:C', (136.101, 211.51, 141.095)), ('A', '96', 3, 'Rotamer\nDihedral angle:N:CA', (133.10399999999998, 212.86700000000002, 139.26)), ('A', '97', 3, 'Dihedral angle:CA:C', (129.601, 214.44899999999998, 139.154)), ('A', '98', 3, 'Dihedral angle:N:CA', (129.281, 215.237, 135.429)), ('A', '106', 4, 'Bond angle:CA:CB:CG', (145.33200000000002, 201.82700000000003, 124.127)), ('A', '117', 4, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (141.965, 199.79399999999998, 121.04700000000001)), ('A', '118', 4, 'Dihedral angle:N:CA', (139.14499999999998, 202.277, 121.319)), ('A', '128', 4, 'smoc Outlier', (134.653, 198.694, 121.883)), ('A', '131', 4, 'Dihedral angle:CA:C', (141.772, 198.86, 114.225)), ('A', '132', 4, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (144.99, 200.192, 112.67699999999999)), ('A', '515', 5, 'Bond angle:CA:CB:CG', (179.65, 168.63899999999998, 123.12499999999999)), ('A', '516', 5, 'Dihedral angle:CB:CG:CD:OE1', (181.668, 168.71099999999998, 126.37499999999999)), ('A', '517', 5, 'smoc Outlier', (182.343, 171.35700000000003, 129.064)), ('A', '518', 5, 'Dihedral angle:CA:C', (184.612, 169.627, 131.595)), ('A', '519', 5, 'Bond angle:CB:CG:CD2\nDihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (186.31, 170.64899999999997, 134.871)), ('A', '520', 5, 'smoc Outlier', (188.569, 172.49200000000002, 132.32200000000003)), ('A', '613', 6, 'Bond angle:OE1:CD:NE2', (170.316, 187.873, 161.817)), ('A', '614', 6, 'cablam Outlier', (174.1, 187.4, 161.8)), ('A', '617', 6, 'Rotamer\nside-chain clash', (173.331, 199.713, 163.062)), ('A', '642', 6, 'side-chain clash', (173.331, 199.713, 163.062)), ('A', '649', 6, 'C-beta\nBond angle:C\nsmoc Outlier', (171.95800000000003, 194.286, 163.69899999999998)), ('A', '650', 6, 'Bond angle:N:CA\nsmoc Outlier', (168.651, 195.404, 165.366)), ('A', '1071', 7, 'Bond angle:OE1:CD:NE2', (159.512, 186.425, 209.829)), ('A', '1072', 7, 'Dihedral angle:CB:CG:CD:OE1', (163.02100000000002, 185.132, 210.662)), ('A', '1302', 7, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (165.151, 190.466, 210.95100000000002)), ('A', '713', 7, 'smoc Outlier', (168.4, 182.813, 211.20499999999998)), ('A', '715', 7, 'smoc Outlier', (161.635, 181.585, 211.258)), ('A', '283', 8, 'side-chain clash', (133.009, 184.984, 150.442)), ('A', '285', 8, 'smoc Outlier', (136.596, 190.944, 150.14299999999997)), ('A', '41', 8, 'cablam Outlier', (135.4, 183.9, 139.6)), ('A', '43', 8, 'smoc Outlier', (133.015, 182.134, 145.74899999999997)), ('A', '44', 8, 'side-chain clash', (133.009, 184.984, 150.442)), ('A', '403', 9, 'Dihedral angle:CD:NE:CZ:NH1', (168.95600000000002, 154.99, 105.006)), ('A', '405', 9, 'smoc Outlier', (164.436, 154.194, 108.30799999999999)), ('A', '500', 9, 'smoc Outlier', (163.272, 156.05100000000002, 92.973)), ('A', '501', 9, 'smoc Outlier', (163.35000000000002, 154.323, 96.44000000000001)), ('A', '505', 9, 'smoc Outlier', (165.26, 153.316, 101.695)), ('A', '1011', 10, 'smoc Outlier', (151.64499999999998, 162.88500000000002, 165.753)), ('A', '1012', 10, 'smoc Outlier', (153.835, 159.941, 166.934)), ('A', '1015', 10, 'smoc Outlier', (152.129, 161.71399999999997, 171.526)), ('A', '1018', 10, 'smoc Outlier', (152.01899999999998, 163.82100000000003, 176.078)), ('A', '1019', 10, 'smoc Outlier', (152.82500000000002, 160.311, 177.439)), ('A', '317', 11, 'Dihedral angle:CA:C', (165.71099999999998, 186.374, 154.037)), ('A', '318', 11, 'Dihedral angle:N:CA', (167.071, 189.85000000000002, 153.346)), ('A', '319', 11, 'smoc Outlier', (168.955, 189.732, 149.969)), ('A', '549', 11, 'cablam CA Geom Outlier\nsmoc Outlier', (174.7, 185.6, 140.8)), ('A', '590', 11, 'smoc Outlier', (173.651, 187.853, 146.989)), ('A', '1036', 12, 'cablam Outlier', (153.5, 163.5, 201.4)), ('A', '1041', 12, 'Bond angle:CA:CB:CG', (160.183, 171.266, 194.339)), ('A', '1043', 12, 'cablam Outlier', (155.0, 169.3, 194.8)), ('A', '1048', 12, 'Bond angle:CB:CG:CD2', (155.001, 169.967, 200.983)), ('A', '1064', 12, 'Bond angle:CB:CG:CD2', (149.88600000000002, 172.062, 196.04299999999998)), ('A', '346', 13, 'smoc Outlier', (181.9, 163.55, 99.856)), ('A', '347', 13, 'Rotamer', (180.508, 161.763, 102.96100000000001)), ('A', '348', 13, 'Dihedral angle:CA:C', (181.512, 158.646, 105.0)), ('A', '349', 13, 'Dihedral angle:N:CA', (180.30100000000002, 155.02700000000002, 104.93400000000001)), ('A', '962', 14, 'smoc Outlier', (146.772, 168.24899999999997, 156.425)), ('A', '965', 14, 'Bond angle:OE1:CD:NE2', (147.596, 170.167, 151.46200000000002)), ('A', '966', 14, 'smoc Outlier', (144.617, 168.748, 149.453)), ('A', '968', 14, 'smoc Outlier', (148.231, 171.434, 146.317)), ('A', '121', 15, 'Dihedral angle:CA:C', (130.795, 205.035, 126.681)), ('A', '122', 15, 'side-chain clash\nDihedral angle:CA:C\nDihedral angle:N:CA', (127.722, 206.889, 125.364)), ('A', '123', 15, 'Dihedral angle:N:CA', (125.21400000000001, 206.339, 128.189)), ('A', '124', 15, 'side-chain clash', (124.254, 205.232, 123.163)), ('A', '270', 16, 'smoc Outlier', (150.07, 197.476, 138.816)), ('A', '88', 16, 'cablam Outlier', (152.4, 195.8, 133.2)), ('A', '90', 16, 'Dihedral angle:CA:C', (146.91299999999998, 200.22899999999998, 135.039)), ('A', '91', 16, 'Dihedral angle:N:CA', (144.671, 201.27299999999997, 137.88100000000003)), ('A', '1058', 17, 'Bond angle:CB:CG:CD2', (142.895, 167.266, 178.336)), ('A', '731', 17, 'Dihedral angle:CA:C', (145.424, 164.566, 173.026)), ('A', '732', 17, 'Dihedral angle:N:CA', (142.30100000000002, 164.611, 170.869)), ('A', '948', 17, 'smoc Outlier', (146.512, 172.85700000000003, 177.869)), ('A', '1092', 18, 'cablam Outlier', (166.4, 167.4, 217.8)), ('A', '1105', 18, 'Dihedral angle:CA:C\nsmoc Outlier', (164.816, 175.417, 219.476)), ('A', '1106', 18, 'Bond angle:OE1:CD:NE2\nDihedral angle:N:CA', (163.316, 173.126, 216.844)), ('A', '1107', 18, 'Dihedral angle:CD:NE:CZ:NH1', (165.10399999999998, 173.994, 213.545)), ('A', '600', 19, 'Ramachandran\ncablam Outlier', (154.233, 193.944, 170.895)), ('A', '602', 19, 'Rotamer', (148.916, 194.452, 167.371)), ('A', '603', 19, 'Rotamer', (146.217, 196.304, 169.39300000000003)), ('A', '604', 19, 'Rotamer', (149.036, 197.929, 171.45700000000002)), ('A', '130', 20, 'side-chain clash', (151.992, 192.975, 120.79)), ('A', '1310', 20, 'Planar group:C2:C7:C8:N2:O7', (156.411, 191.009, 122.053)), ('A', '233', 20, 'Rotamer', (146.901, 193.032, 120.62000000000003)), ('A', '577', 21, 'smoc Outlier', (189.42700000000002, 182.88600000000002, 136.759)), ('A', '581', 21, 'Dihedral angle:CA:C\ncablam Outlier', (192.68, 188.24599999999998, 131.617)), ('A', '582', 21, 'Dihedral angle:N:CA\nsmoc Outlier', (193.74099999999999, 185.666, 134.23999999999998)), ('A', '108', 22, 'cablam Outlier', (151.9, 201.0, 120.8)), ('A', '110', 22, 'Ramachandran\nDihedral angle:CA:C', (148.671, 205.151, 118.187)), ('A', '111', 22, 'Dihedral angle:N:CA', (149.412, 206.162, 114.562)), ('A', '444', 23, 'smoc Outlier', (172.21499999999997, 156.72299999999998, 91.41100000000002)), ('A', '445', 23, 'smoc Outlier', (170.18200000000002, 154.925, 88.67399999999999)), ('A', '447', 23, 'cablam Outlier', (171.9, 151.7, 92.6)), ('A', '868', 24, 'Dihedral angle:CB:CG:CD:OE1', (131.77899999999997, 163.64899999999997, 184.32600000000002)), ('A', '870', 24, 'smoc Outlier', (137.001, 162.252, 185.252)), ('A', '873', 24, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (137.608, 160.20399999999998, 190.009)), ('A', '940', 25, 'Dihedral angle:CA:C', (140.406, 186.76, 186.218)), ('A', '941', 25, 'Dihedral angle:N:CA', (142.895, 185.43200000000002, 183.627)), ('A', '942', 25, 'smoc Outlier', (143.037, 182.63, 180.97899999999998)), ('A', '1306', 26, 'Planar group:C2:C7:C8:N2:O7', (169.76299999999998, 204.736, 177.967)), ('A', '655', 26, 'Bond angle:CB:CG:CD2', (168.77299999999997, 200.568, 173.38100000000003)), ('A', '214', 27, 'cablam CA Geom Outlier\nsmoc Outlier', (139.9, 216.8, 147.5)), ('A', '215', 27, 'Bond angle:CA:CB:CG\ncablam CA Geom Outlier', (141.538, 213.495, 146.42200000000003)), ('A', '1054', 28, 'Bond angle:OE1:CD:NE2', (141.23499999999999, 169.11599999999999, 189.889)), ('A', '819', 28, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (136.863, 172.653, 187.89600000000002)), ('A', '994', 29, 'smoc Outlier', (150.091, 159.375, 140.52800000000002)), ('A', '997', 29, 'smoc Outlier', (148.94899999999998, 160.076, 145.166)), ('A', '372', 30, 'smoc Outlier', (165.38500000000002, 174.712, 106.104)), ('A', '373', 30, 'smoc Outlier', (168.068, 172.153, 104.97)), ('A', '924', 31, 'smoc Outlier', (142.925, 177.277, 208.589)), ('A', '926', 31, 'Bond angle:OE1:CD:NE2', (145.697, 181.05800000000002, 205.686)), ('A', '1083', 32, 'Bond angle:CB:CG:CD2\ncablam Outlier', (178.98000000000002, 171.758, 231.32600000000002)), ('A', '1084', 32, 'cablam Outlier', (181.0, 169.6, 233.9)), ('A', '597', 33, 'smoc Outlier', (160.28, 191.02700000000002, 163.11899999999997)), ('A', '608', 33, 'smoc Outlier', (158.045, 196.889, 165.042)), ('A', '796', 34, 'Bond angle:CA:CB:CG', (133.61299999999997, 169.228, 210.35800000000003)), ('A', '797', 34, 'cablam Outlier', (137.2, 169.6, 209.0)), ('A', '901', 35, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (146.02800000000002, 164.586, 209.82600000000002)), ('A', '904', 35, 'Bond angle:CA:CB:CG', (151.036, 164.434, 211.033)), ('A', '570', 36, 'smoc Outlier', (177.895, 171.597, 148.171)), ('A', '571', 36, 'C-beta\nsmoc Outlier', (179.459, 170.171, 143.978)), ('A', '329', 37, 'Bond angle:CA:CB:CG', (183.454, 184.666, 127.16)), ('A', '331', 37, 'cablam Outlier', (188.2, 187.1, 123.0)), ('A', '854', 38, 'smoc Outlier', (138.24399999999997, 168.124, 157.626)), ('A', '856', 38, 'cablam CA Geom Outlier', (138.1, 164.3, 153.6)), ('A', '736', 39, 'Dihedral angle:CA:C', (142.041, 159.041, 159.18800000000002)), ('A', '737', 39, 'Dihedral angle:N:CA\nsmoc Outlier', (140.738, 156.93800000000002, 156.286)), ('A', '553', 40, 'Dihedral angle:CA:C', (186.039, 190.45600000000002, 144.064)), ('A', '554', 40, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA', (189.761, 190.16299999999998, 143.465)), ('B', '1043', 1, 'cablam CA Geom Outlier', (172.9, 161.8, 193.1)), ('B', '1048', 1, 'Bond angle:CB:CG:CD2', (174.14499999999998, 161.88400000000001, 199.777)), ('B', '1054', 1, 'Bond angle:OE1:CD:NE2', (179.07899999999998, 173.694, 187.67499999999998)), ('B', '1062', 1, 'smoc Outlier', (177.018, 168.05, 189.404)), ('B', '1064', 1, 'Bond angle:CB:CG:CD2', (177.942, 164.997, 194.323)), ('B', '819', 1, 'smoc Outlier', (184.078, 175.49800000000002, 185.124)), ('B', '820', 1, 'Rotamer', (187.087, 176.753, 183.08300000000003)), ('B', '822', 1, 'smoc Outlier', (184.963, 171.974, 181.73)), ('B', '870', 1, 'smoc Outlier', (174.695, 180.61399999999998, 183.10399999999998)), ('B', '873', 1, 'smoc Outlier', (173.168, 181.28, 187.995)), ('B', '874', 1, 'smoc Outlier', (175.553, 178.435, 189.05700000000002)), ('B', '877', 1, 'smoc Outlier', (172.93800000000002, 178.36800000000002, 193.45000000000002)), ('B', '880', 1, 'smoc Outlier', (172.947, 180.038, 198.467)), ('B', '220', 2, 'cablam CA Geom Outlier', (204.2, 162.7, 149.4)), ('B', '267', 2, 'smoc Outlier', (207.77899999999997, 151.88600000000002, 135.82800000000003)), ('B', '270', 2, 'smoc Outlier', (197.883, 152.74699999999999, 137.507)), ('B', '34', 2, 'cablam CA Geom Outlier', (204.1, 158.3, 145.4)), ('B', '35', 2, 'smoc Outlier', (202.196, 158.803, 142.08)), ('B', '88', 2, 'cablam Outlier', (195.5, 151.6, 131.8)), ('B', '90', 2, 'Dihedral angle:CA:C', (201.872, 154.602, 133.73299999999998)), ('B', '91', 2, 'Dihedral angle:N:CA', (203.661, 156.26399999999998, 136.60399999999998)), ('B', '93', 2, 'smoc Outlier', (210.183, 158.186, 137.647)), ('B', '108', 3, 'cablam Outlier', (201.0, 149.6, 119.6)), ('B', '110', 3, 'cablam Outlier', (205.8, 151.1, 116.9)), ('B', '111', 3, 'cablam Outlier\nsmoc Outlier', (206.4, 150.4, 113.2)), ('B', '112', 3, 'Bond angle:C\ncablam CA Geom Outlier', (203.84, 151.57299999999998, 110.559)), ('B', '113', 3, 'Bond angle:N:CA\nsmoc Outlier', (200.14, 150.45700000000002, 110.005)), ('B', '131', 3, 'Dihedral angle:CA:C', (203.74099999999999, 160.084, 112.755)), ('B', '132', 3, 'Dihedral angle:N:CA', (203.237, 156.60899999999998, 111.24000000000001)), ('B', '164', 3, 'smoc Outlier', (204.405, 161.1, 107.851)), ('B', '165', 3, 'smoc Outlier', (200.542, 160.88200000000003, 108.195)), ('B', '1307', 4, 'Planar group:C2:C7:C8:N2:O7', (179.85700000000003, 128.977, 163.41299999999998)), ('B', '617', 4, 'Rotamer\nside-chain clash', (189.009, 133.682, 160.766)), ('B', '642', 4, 'side-chain clash', (189.009, 133.682, 160.766)), ('B', '643', 4, 'Bond angle:CA:CB:CG', (188.946, 133.05700000000002, 165.73899999999998)), ('B', '644', 4, 'Bond angle:OE1:CD:NE2', (185.21699999999998, 132.16, 165.53)), ('B', '649', 4, 'Rotamer\nBond angle:C', (184.584, 135.36700000000002, 162.496)), ('B', '650', 4, 'Bond angle:N:CA', (187.227, 137.67, 164.094)), ('B', '1069', 5, 'Dihedral angle:CA:C', (181.553, 153.98600000000002, 205.21599999999998)), ('B', '1070', 5, 'Dihedral angle:N:CA', (185.186, 152.777, 205.166)), ('B', '718', 5, 'Dihedral angle:CA:C', (184.272, 156.965, 206.784)), ('B', '719', 5, 'Dihedral angle:N:CA', (185.499, 158.67499999999998, 203.61599999999999)), ('B', '926', 5, 'Bond angle:OE1:CD:NE2', (188.79, 164.634, 202.971)), ('B', '930', 5, 'smoc Outlier', (188.369, 165.01, 196.96800000000002)), ('B', '197', 6, 'Ramachandran', (191.828, 158.538, 129.359)), ('B', '198', 6, 'Ramachandran\ncablam Outlier\nsmoc Outlier', (189.797, 157.43100000000007, 126.23300000000002)), ('B', '200', 6, 'cablam Outlier', (192.5, 162.4, 124.7)), ('B', '227', 6, 'Dihedral angle:CA:C', (199.001, 168.86200000000002, 128.74499999999998)), ('B', '228', 6, 'Dihedral angle:N:CA', (195.894, 167.108, 127.49900000000001)), ('B', '231', 6, 'smoc Outlier', (195.681, 162.98600000000002, 119.546)), ('B', '308', 7, 'smoc Outlier', (190.548, 157.57299999999998, 164.07899999999998)), ('B', '600', 7, 'Ramachandran\nBond angle:N:CA:C', (192.599, 151.23499999999999, 169.507)), ('B', '601', 7, 'Dihedral angle:CA:C', (193.812, 154.809, 168.96)), ('B', '602', 7, 'Dihedral angle:N:CA', (195.448, 155.42700000000002, 165.572)), ('B', '605', 7, 'Rotamer', (198.903, 152.118, 167.125)), ('B', '607', 7, 'Bond angle:OE1:CD:NE2', (197.225, 147.535, 164.21499999999997)), ('B', '1305', 8, 'Planar group:C2:C7:C8:N2:O7', (169.961, 133.85800000000003, 216.375)), ('B', '707', 8, 'Dihedral angle:CA:C', (176.548, 136.097, 206.512)), ('B', '708', 8, 'Dihedral angle:N:CA', (175.29299999999998, 134.32600000000002, 209.665)), ('B', '709', 8, 'Rotamer', (172.23999999999995, 134.772, 211.972)), ('B', '710', 8, 'Rotamer', (174.56799999999996, 136.23400000000007, 214.67)), ('B', '135', 9, 'Dihedral angle:CA:C', (212.395, 154.151, 113.67799999999998)), ('B', '136', 9, 'Dihedral angle:N:CA', (214.18800000000002, 152.094, 116.338)), ('B', '137', 9, 'cablam Outlier', (214.9, 153.7, 119.8)), ('B', '138', 9, 'Ramachandran\nBond angle:CA:C', (217.007, 156.654, 118.381)), ('B', '139', 9, 'Bond angle:N\nsmoc Outlier', (214.843, 159.48000000000002, 116.696)), ('B', '536', 10, 'cablam Outlier', (175.7, 123.1, 148.5)), ('B', '539', 10, 'Dihedral angle:CA:C', (175.24899999999997, 129.83700000000002, 142.546)), ('B', '540', 10, 'Dihedral angle:N:CA', (173.19, 132.154, 140.389)), ('B', '549', 10, 'cablam CA Geom Outlier', (171.0, 133.6, 143.7)), ('B', '551', 10, 'smoc Outlier', (172.762, 127.921, 147.99)), ('B', '403', 11, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (163.64499999999998, 127.25, 88.38)), ('B', '500', 11, 'smoc Outlier', (171.38200000000003, 118.81400000000001, 81.452)), ('B', '501', 11, 'smoc Outlier', (169.834, 122.342, 81.94600000000001)), ('B', '505', 11, 'smoc Outlier', (166.67, 126.53, 84.265)), ('B', '506', 11, 'Bond angle:OE1:CD:NE2', (167.38500000000002, 123.691, 86.792)), ('B', '1091', 12, 'Dihedral angle:CA:C', (165.58700000000002, 152.70999999999998, 220.92700000000002)), ('B', '1092', 12, 'Dihedral angle:N:CA\ncablam Outlier', (167.824, 153.75, 218.077)), ('B', '1105', 12, 'Dihedral angle:CA:C', (175.726, 151.58200000000002, 218.692)), ('B', '1106', 12, 'Bond angle:OE1:CD:NE2\nDihedral angle:N:CA', (174.27599999999998, 153.791, 215.98600000000002)), ('B', '1121', 12, 'smoc Outlier', (162.503, 150.21499999999997, 225.15)), ('B', '186', 13, 'smoc Outlier', (220.306, 160.787, 141.441)), ('B', '212', 13, 'cablam Outlier', (221.3, 160.1, 146.2)), ('B', '214', 13, 'smoc Outlier', (217.914, 155.538, 144.092)), ('B', '216', 13, 'cablam Outlier', (212.4, 156.2, 145.5)), ('B', '1306', 14, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (195.542, 133.89800000000002, 178.872)), ('B', '654', 14, 'Dihedral angle:CB:CG:CD:OE1', (194.671, 137.154, 169.73399999999998)), ('B', '655', 14, 'Bond angle:CB:CG:CD2', (192.202, 135.086, 171.81)), ('B', '657', 14, 'Rotamer', (191.28099999999995, 133.561, 178.144)), ('B', '1308', 15, 'Planar group:C2:C7:C8:N2:O7', (160.446, 116.45100000000001, 132.701)), ('B', '581', 15, 'Dihedral angle:CA:C', (164.319, 115.616, 138.127)), ('B', '582', 15, 'Dihedral angle:N:CA', (161.41, 116.386, 140.463)), ('B', '583', 15, 'Dihedral angle:CB:CG:CD:OE1', (163.417, 116.827, 143.74499999999998)), ('B', '1310', 16, 'Planar group:C2:C7:C8:N2:O7\nsmoc Outlier', (208.012, 140.072, 143.092)), ('B', '28', 16, 'side-chain clash', (209.544, 145.768, 143.097)), ('B', '29', 16, 'Bond angle:CA:CB:CG2', (211.476, 148.937, 144.345)), ('B', '61', 16, 'side-chain clash', (209.544, 145.768, 143.097)), ('B', '291', 17, 'smoc Outlier', (190.923, 153.17499999999998, 150.502)), ('B', '293', 17, 'cablam CA Geom Outlier', (195.3, 149.5, 151.0)), ('B', '298', 17, 'smoc Outlier', (189.01399999999998, 151.707, 154.595)), ('B', '58', 17, 'Bond angle:CA:CB:CG', (200.091, 152.69299999999998, 147.52100000000002)), ('B', '1303', 18, 'Planar group:C2:C7:C8:N2:O7', (190.447, 178.48200000000003, 202.803)), ('B', '797', 18, 'cablam Outlier', (183.3, 177.7, 206.2)), ('B', '800', 18, 'smoc Outlier', (185.92200000000003, 173.446, 203.954)), ('B', '666', 19, 'cablam Outlier', (182.2, 142.9, 170.0)), ('B', '667', 19, 'cablam Outlier', (178.9, 141.2, 171.2)), ('B', '668', 19, 'smoc Outlier', (177.71099999999998, 137.904, 172.665)), ('B', '770', 20, 'smoc Outlier', (163.063, 172.85100000000003, 168.61399999999998)), ('B', '773', 20, 'smoc Outlier', (162.70499999999998, 174.541, 173.502)), ('B', '774', 20, 'smoc Outlier', (166.537, 174.79299999999998, 173.989)), ('B', '263', 21, 'Dihedral angle:CA:C', (219.88600000000002, 157.496, 134.373)), ('B', '264', 21, 'Dihedral angle:N:CA', (217.97299999999998, 154.73899999999998, 136.171)), ('B', '66', 21, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (218.63299999999998, 151.60899999999998, 133.42600000000002)), ('B', '413', 22, 'smoc Outlier', (157.70999999999998, 143.055, 97.472)), ('B', '414', 22, 'Bond angle:OE1:CD:NE2', (159.18, 141.431, 94.28)), ('B', '427', 22, 'Bond angle:CA:CB:CG', (157.51899999999998, 144.526, 100.936)), ('B', '1083', 23, 'Bond angle:CB:CG:CD2', (166.676, 141.63899999999998, 231.86)), ('B', '1087', 23, 'smoc Outlier', (162.765, 141.94299999999998, 226.454)), ('B', '1125', 23, 'Bond angle:CA:CB:CG', (158.454, 138.6, 228.03)), ('B', '742', 24, 'smoc Outlier', (166.062, 173.77299999999997, 147.85700000000003)), ('B', '744', 24, 'Ramachandran', (168.633, 179.486, 146.115)), ('B', '745', 24, 'cablam Outlier', (168.1, 182.7, 143.9)), ('B', '466', 25, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (146.637, 131.32000000000002, 96.94200000000001)), ('B', '468', 25, 'smoc Outlier', (144.721, 127.504, 92.624)), ('B', '470', 25, 'smoc Outlier', (142.972, 126.94000000000001, 86.036)), ('B', '41', 26, 'cablam Outlier', (191.3, 171.5, 137.4)), ('B', '42', 26, 'smoc Outlier', (189.162, 172.686, 140.40200000000002)), ('B', '44', 26, 'smoc Outlier', (189.37, 173.296, 146.77299999999997)), ('B', '340', 27, 'smoc Outlier', (157.478, 116.458, 107.24400000000001)), ('B', '344', 27, 'smoc Outlier', (159.2, 114.498, 102.09400000000001)), ('B', '408', 28, 'Dihedral angle:CD:NE:CZ:NH1', (165.784, 135.843, 93.133)), ('B', '410', 28, 'smoc Outlier', (161.538, 135.025, 96.51)), ('B', '531', 29, 'Dihedral angle:CA:C', (172.875, 123.191, 132.63899999999998)), ('B', '532', 29, 'Dihedral angle:N:CA', (173.848, 120.55499999999999, 135.178)), ('B', '360', 30, 'Dihedral angle:CA:C\nsmoc Outlier', (151.701, 124.614, 120.157)), ('B', '361', 30, 'Dihedral angle:N:CA', (155.39800000000002, 123.56400000000001, 119.824)), ('B', '387', 31, 'smoc Outlier', (164.967, 132.849, 116.396)), ('B', '389', 31, 'Bond angle:CA:CB:CG', (165.062, 132.899, 121.67599999999999)), ('B', '515', 32, 'Bond angle:CA:CB:CG', (155.77399999999997, 134.58800000000002, 111.80199999999999)), ('B', '516', 32, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (153.131, 136.377, 113.921)), ('B', '1002', 33, 'Bond angle:OE1:CD:NE2', (163.147, 164.61499999999998, 151.151)), ('B', '1005', 33, 'smoc Outlier', (162.33700000000002, 166.313, 155.79299999999998)), ('B', '458', 34, 'Rotamer', (143.349, 138.698, 84.44800000000001)), ('B', '459', 34, 'smoc Outlier', (145.336, 140.535, 87.208)), ('B', '855', 35, 'Bond angle:CA:CB:CG', (175.815, 179.8, 152.38600000000002)), ('B', '856', 35, 'cablam Outlier', (172.9, 177.3, 151.8)), ('B', '979', 36, 'smoc Outlier', (173.417, 174.01, 134.82700000000003)), ('B', '980', 36, 'smoc Outlier', (169.809, 172.89700000000002, 134.24899999999997)), ('B', '736', 37, 'Dihedral angle:CA:C', (166.625, 176.762, 157.736)), ('B', '737', 37, 'Dihedral angle:N:CA', (165.137, 178.785, 154.874)), ('B', '478', 38, 'smoc Outlier', (135.797, 135.975, 71.315)), ('B', '486', 38, 'cablam CA Geom Outlier', (141.5, 133.7, 69.6)), ('C', '186', 1, 'smoc Outlier', (125.161, 108.62799999999999, 144.252)), ('C', '188', 1, 'Bond angle:CA:CB:CG\nDihedral angle:CA:C', (130.686, 110.661, 144.238)), ('C', '189', 1, 'Dihedral angle:N:CA', (130.45600000000002, 114.45100000000001, 144.05100000000002)), ('C', '207', 1, 'Bond angle:CB:CG:CD2', (136.24099999999999, 114.228, 143.35100000000003)), ('C', '213', 1, 'smoc Outlier', (121.507, 112.643, 147.106)), ('C', '214', 1, 'smoc Outlier', (119.902, 116.05199999999999, 146.11299999999997)), ('C', '95', 1, 'Dihedral angle:CA:C', (126.51, 113.95100000000001, 142.05100000000002)), ('C', '96', 1, 'Dihedral angle:N:CA', (127.363, 110.821, 140.1)), ('C', '97', 1, 'Dihedral angle:CA:C', (127.581, 106.982, 139.969)), ('C', '98', 1, 'Dihedral angle:N:CA', (126.804, 106.354, 136.25)), ('C', '111', 2, 'Bond angle:C', (128.123, 127.167, 116.819)), ('C', '112', 2, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (129.82200000000003, 127.199, 113.32499999999999)), ('C', '131', 2, 'Dihedral angle:CA:C', (137.1, 124.396, 115.96000000000001)), ('C', '132', 2, 'Dihedral angle:N:CA', (134.189, 126.456, 114.606)), ('C', '165', 2, 'smoc Outlier', (139.999, 128.526, 113.353)), ('C', '166', 2, 'smoc Outlier', (141.939, 125.58, 114.906)), ('C', '168', 2, 'Dihedral angle:CA:C', (144.771, 124.293, 119.298)), ('C', '169', 2, 'Dihedral angle:N:CA', (143.91899999999998, 120.59, 119.74000000000001)), ('C', '1307', 3, 'Planar group:C2:C7:C8:N2:O7', (122.74400000000001, 161.346, 166.625)), ('C', '616', 3, 'Bond angle:C', (123.323, 158.29, 163.136)), ('C', '617', 3, 'Rotamer\nside-chain clash\nBond angle:CA:CB:SG\nBond angle:N:CA', (121.299, 155.083, 162.818)), ('C', '619', 3, 'Rotamer', (121.90400000000004, 156.704, 157.91400000000002)), ('C', '642', 3, 'side-chain clash', (120.384, 151.395, 164.084)), ('C', '644', 3, 'Bond angle:OE1:CD:NE2', (122.332, 155.141, 169.323)), ('C', '649', 3, 'Rotamer\nsmoc Outlier', (124.95600000000006, 153.88, 166.093)), ('C', '536', 4, 'Ramachandran\ncablam Outlier', (118.41399999999997, 166.153, 150.469)), ('C', '537', 4, 'Dihedral angle:CA:C', (119.303, 162.60999999999999, 149.183)), ('C', '538', 4, 'Dihedral angle:N:CA', (122.87599999999999, 161.454, 148.686)), ('C', '539', 4, 'Dihedral angle:CA:C', (123.33, 161.698, 144.86100000000002)), ('C', '540', 4, 'Dihedral angle:N:CA', (125.923, 161.71899999999997, 142.111)), ('C', '549', 4, 'cablam CA Geom Outlier', (129.0, 162.9, 144.9)), ('C', '590', 4, 'smoc Outlier', (127.582, 161.64, 152.064)), ('C', '357', 5, 'Dihedral angle:CD:NE:CZ:NH1', (134.286, 183.102, 118.91900000000001)), ('C', '394', 5, 'Dihedral angle:CA:C', (133.69899999999998, 180.184, 125.212)), ('C', '395', 5, 'Dihedral angle:N:CA', (135.806, 178.442, 122.573)), ('C', '516', 5, 'Dihedral angle:CB:CG:CD:OE1', (138.333, 178.532, 128.455)), ('C', '518', 5, 'Dihedral angle:CA:C', (137.523, 179.537, 133.431)), ('C', '519', 5, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (134.656, 179.48100000000002, 135.914)), ('C', '520', 5, 'Dihedral angle:N:CA', (132.286, 182.08100000000002, 134.472)), ('C', '1069', 6, 'Dihedral angle:CA:C', (147.58100000000002, 147.11399999999998, 207.12)), ('C', '1070', 6, 'Dihedral angle:N:CA', (144.748, 144.55200000000002, 207.39600000000002)), ('C', '1071', 6, 'Bond angle:OE1:CD:NE2', (142.15200000000002, 144.65200000000002, 210.284)), ('C', '718', 6, 'Dihedral angle:CA:C', (148.92700000000002, 143.33100000000002, 208.611)), ('C', '719', 6, 'Dihedral angle:N:CA', (149.60999999999999, 141.256, 205.499)), ('C', '926', 6, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (153.016, 135.405, 204.792)), ('C', '1081', 7, 'smoc Outlier', (145.373, 165.664, 226.965)), ('C', '1083', 7, 'Bond angle:CB:CG:CD2', (146.91, 166.996, 233.278)), ('C', '1087', 7, 'smoc Outlier', (148.654, 170.129, 227.572)), ('C', '1135', 7, 'Dihedral angle:CA:C', (143.38400000000001, 162.415, 231.93200000000002)), ('C', '1136', 7, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (146.083, 161.281, 234.36)), ('C', '1137', 7, 'Dihedral angle:N:CA', (149.62, 161.26299999999998, 232.94299999999998)), ('C', '310', 8, 'cablam Outlier', (138.0, 139.7, 172.9)), ('C', '599', 8, 'side-chain clash\nBond angle:CA:C', (133.76299999999998, 140.43, 169.68800000000002)), ('C', '600', 8, 'Bond angle:N\ncablam CA Geom Outlier', (133.207, 138.334, 172.934)), ('C', '601', 8, 'side-chain clash', (134.691, 137.452, 169.951)), ('C', '602', 8, 'Rotamer', (135.955, 133.221, 169.14100000000002)), ('C', '604', 8, 'Rotamer', (132.958, 132.231, 173.76900000000003)), ('C', '1002', 9, 'Bond angle:OE1:CD:NE2', (160.595, 155.306, 151.23499999999999)), ('C', '1003', 9, 'smoc Outlier', (159.646, 151.839, 152.632)), ('C', '1007', 9, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (160.86200000000002, 151.542, 159.041)), ('C', '1011', 9, 'Bond angle:OE1:CD:NE2', (162.39700000000002, 152.196, 165.035)), ('C', '962', 9, 'smoc Outlier', (159.54899999999998, 145.87, 155.484)), ('C', '965', 9, 'Bond angle:OE1:CD:NE2', (157.026, 145.863, 150.724)), ('C', '1019', 10, 'Dihedral angle:CD:NE:CZ:NH1', (164.889, 153.95100000000002, 176.6)), ('C', '1025', 10, 'smoc Outlier', (163.765, 150.13299999999998, 185.36700000000002)), ('C', '774', 10, 'smoc Outlier', (170.054, 148.548, 173.502)), ('C', '777', 10, 'smoc Outlier', (169.796, 150.33100000000002, 178.248)), ('C', '781', 10, 'smoc Outlier', (169.58200000000002, 148.303, 184.632)), ('C', '1092', 11, 'Rotamer', (155.351, 159.516, 218.489)), ('C', '1094', 11, 'smoc Outlier', (148.394, 158.99800000000002, 218.64899999999997)), ('C', '1105', 11, 'Dihedral angle:CA:C\nsmoc Outlier', (149.55200000000002, 153.772, 220.21099999999998)), ('C', '1106', 11, 'Dihedral angle:N:CA', (152.004, 153.853, 217.334)), ('C', '423', 12, 'smoc Outlier', (151.363, 182.40200000000002, 115.848)), ('C', '464', 12, 'smoc Outlier', (148.012, 184.757, 121.031)), ('C', '466', 12, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (148.501, 189.137, 116.24600000000001)), ('C', '468', 12, 'smoc Outlier', (149.73299999999998, 192.70999999999998, 110.687)), ('C', '293', 13, 'cablam CA Geom Outlier', (130.7, 137.4, 154.0)), ('C', '297', 13, 'smoc Outlier', (134.883, 137.32500000000002, 158.542)), ('C', '298', 13, 'Dihedral angle:CB:CG:CD:OE1', (136.176, 140.877, 157.95600000000002)), ('C', '58', 13, 'Bond angle:CA:CB:CG', (130.38000000000002, 131.453, 150.591)), ('C', '1043', 14, 'cablam Outlier', (157.4, 149.9, 194.5)), ('C', '1048', 14, 'Bond angle:CB:CG:CD2', (157.572, 149.32100000000003, 200.631)), ('C', '1049', 14, 'smoc Outlier', (159.771, 146.859, 202.54899999999998)), ('C', '1064', 14, 'Bond angle:CB:CG:CD2', (157.983, 144.189, 195.317)), ('C', '86', 15, 'cablam Outlier', (129.9, 132.2, 131.6)), ('C', '88', 15, 'cablam Outlier', (133.9, 136.0, 134.9)), ('C', '90', 15, 'Dihedral angle:CA:C', (131.944, 129.08800000000002, 136.48100000000002)), ('C', '91', 15, 'Dihedral angle:N:CA', (131.85100000000003, 126.595, 139.32200000000003)), ('C', '477', 16, 'smoc Outlier', (173.63, 198.18200000000002, 109.048)), ('C', '486', 16, 'cablam Outlier', (170.3, 195.4, 100.7)), ('C', '487', 16, 'C-beta', (170.649, 194.339, 105.202)), ('C', '1305', 17, 'smoc Outlier', (138.524, 166.05800000000002, 219.336)), ('C', '465', 17, 'side-chain clash', (137.649, 164.645, 218.861)), ('C', '664', 18, 'smoc Outlier', (135.372, 146.033, 175.944)), ('C', '666', 18, 'cablam Outlier\nsmoc Outlier', (133.2, 151.4, 173.0)), ('C', '760', 19, 'smoc Outlier', (172.192, 154.653, 152.547)), ('C', '763', 19, 'smoc Outlier', (169.88600000000002, 155.01399999999998, 157.464)), ('C', '661', 20, 'Dihedral angle:CB:CG:CD:OE1', (133.476, 147.60999999999999, 185.05200000000002)), ('C', '699', 20, 'smoc Outlier', (134.11899999999997, 153.503, 188.112)), ('C', '691', 21, 'Dihedral angle:CA:C', (124.049, 138.259, 173.92200000000003)), ('C', '692', 21, 'Dihedral angle:N:CA', (126.57, 141.07, 173.55100000000002)), ('C', '329', 22, 'Bond angle:CA:CB:CG', (123.75, 171.742, 131.99800000000002)), ('C', '544', 22, 'smoc Outlier', (128.40200000000002, 171.971, 133.737)), ('C', '408', 23, 'Dihedral angle:CD:NE:CZ:NH1', (155.142, 170.756, 114.181)), ('C', '410', 23, 'smoc Outlier', (151.686, 174.638, 116.151)), ('C', '969', 24, 'Bond angle:CA:CB:CG', (155.131, 147.759, 142.221)), ('C', '996', 24, 'smoc Outlier', (161.227, 150.59, 142.655)), ('C', '712', 25, 'smoc Outlier', (140.21299999999997, 157.315, 214.24899999999997)), ('C', '713', 25, 'smoc Outlier', (140.641, 153.904, 212.584)), ('C', '263', 26, 'smoc Outlier', (121.754, 113.41100000000002, 136.34)), ('C', '66', 26, 'Bond angle:CB:CG:CD2', (118.70700000000001, 117.581, 136.177)), ('C', '122', 27, 'Bond angle:C\nsmoc Outlier', (135.58200000000002, 109.971, 124.953)), ('C', '123', 27, 'Bond angle:N:CA\ncablam Outlier', (134.797, 107.046, 127.37799999999999)), ('C', '707', 28, 'Dihedral angle:CA:C', (134.725, 160.49800000000002, 209.31)), ('C', '708', 28, 'Dihedral angle:N:CA', (134.069, 162.48700000000002, 212.51299999999998)), ('C', '279', 29, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH\nsmoc Outlier', (147.593, 126.016, 154.353)), ('C', '44', 29, 'smoc Outlier', (153.042, 127.37499999999999, 151.54299999999998)), ('C', '796', 30, 'Bond angle:CA:CB:CG', (169.756, 130.786, 207.976)), ('C', '797', 30, 'cablam Outlier', (167.4, 133.7, 206.9)), ('C', '510', 31, 'smoc Outlier', (144.817, 174.56, 110.579)), ('C', '511', 31, 'smoc Outlier', (142.136, 175.165, 113.225)), ('C', '388', 32, 'smoc Outlier', (131.54, 165.8, 124.531)), ('C', '527', 32, 'cablam Outlier', (125.7, 167.4, 123.7)), ('C', '581', 33, 'Dihedral angle:CA:C', (117.071, 178.061, 137.8)), ('C', '582', 33, 'Ramachandran\nDihedral angle:N:CA', (119.811, 180.17299999999997, 139.341)), ('C', '106', 34, 'Bond angle:CA:CB:CG\nsmoc Outlier', (132.345, 127.298, 125.41000000000001)), ('C', '117', 34, 'smoc Outlier', (136.136, 125.263, 122.87799999999999)), ('C', '885', 35, 'smoc Outlier', (170.42800000000003, 144.844, 203.077)), ('C', '901', 35, 'Bond angle:OE1:CD:NE2', (167.437, 143.736, 208.314)), ('C', '220', 36, 'cablam CA Geom Outlier', (135.6, 121.8, 152.8)), ('C', '34', 36, 'cablam CA Geom Outlier', (132.5, 124.9, 148.5)), ('C', '502', 37, 'smoc Outlier', (156.206, 167.335, 97.788)), ('C', '503', 37, 'smoc Outlier', (154.17, 166.666, 100.99000000000001)), ('C', '228', 38, 'Dihedral angle:CA:C', (145.963, 125.429, 131.70999999999998)), ('C', '229', 38, 'Dihedral angle:N:CA', (145.435, 125.90700000000001, 127.979)), ('C', '949', 39, 'smoc Outlier', (155.523, 140.004, 174.36100000000002)), ('C', '950', 39, 'smoc Outlier', (154.22899999999998, 143.267, 172.755)), ('C', '40', 40, 'Bond angle:CA:CB:CG', (148.721, 129.63899999999998, 142.27399999999997)), ('C', '41', 40, 'cablam Outlier', (151.4, 126.9, 141.7)), ('C', '142', 41, 'smoc Outlier', (124.16799999999999, 108.55499999999999, 122.315)), ('C', '143', 41, 'smoc Outlier', (123.228, 106.377, 125.36)), ('F', '2', 1, 'Planar group:C2:C7:C8:N2:O7', (143.153, 149.376, 234.366))]
data['rama'] = [('A', ' 110 ', 'LEU', 0.03846358014515156, (148.671, 205.15100000000007, 118.187)), ('A', ' 600 ', 'PRO', 0.031543308474783364, (154.233, 193.944, 170.895)), ('B', ' 138 ', 'ASP', 0.03432004489090027, (217.007, 156.65400000000005, 118.38100000000003)), ('B', ' 197 ', 'ILE', 0.03328136925291756, (191.828, 158.538, 129.359)), ('B', ' 198 ', 'ASP', 0.015654969806205513, (189.797, 157.43100000000007, 126.23300000000002)), ('B', ' 600 ', 'PRO', 0.03842417768264245, (192.59899999999993, 151.23500000000007, 169.507)), ('B', ' 744 ', 'GLY', 0.054936362913684554, (168.633, 179.486, 146.115)), ('C', ' 112 ', 'SER', 0.0008370123804020782, (129.822, 127.199, 113.325)), ('C', ' 536 ', 'ASN', 0.034990221952360345, (118.41399999999997, 166.153, 150.469)), ('C', ' 582 ', 'LEU', 0.03619895576737205, (119.811, 180.17300000000006, 139.341))]
data['cablam'] = [('A', '32', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (146.2, 204.2, 150.4)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (135.4, 183.9, 139.6)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (152.4, 195.8, 133.2)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (151.9, 201.0, 120.8)), ('A', '221', 'SER', 'check CA trace,carbonyls, peptide', ' \nS---B', (136.2, 198.2, 148.3)), ('A', '331', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (188.2, 187.1, 123.0)), ('A', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (171.9, 151.7, 92.6)), ('A', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (179.1, 126.1, 113.3)), ('A', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (186.3, 170.6, 134.9)), ('A', '581', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (192.7, 188.2, 131.6)), ('A', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (154.2, 193.9, 170.9)), ('A', '614', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nEES--', (174.1, 187.4, 161.8)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.3, 188.4, 171.0)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (137.2, 169.6, 209.0)), ('A', '1036', 'GLN', 'check CA trace,carbonyls, peptide', ' \nSS---', (153.5, 163.5, 201.4)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (155.0, 169.3, 194.8)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (179.0, 171.8, 231.3)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (181.0, 169.6, 233.9)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (166.4, 167.4, 217.8)), ('A', '132', 'GLU', 'check CA trace', ' \nEE---', (145.0, 200.2, 112.7)), ('A', '214', 'ARG', 'check CA trace', 'bend\n--SS-', (139.9, 216.8, 147.5)), ('A', '215', 'ASP', 'check CA trace', 'bend\n-SS--', (141.5, 213.5, 146.4)), ('A', '220', 'PHE', 'check CA trace', ' \n-S---', (138.6, 199.5, 151.1)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (154.7, 196.9, 152.0)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (174.7, 185.6, 140.8)), ('A', '856', 'ASN', 'check CA trace', 'turn\n-TTTE', (138.1, 164.3, 153.6)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (191.3, 171.5, 137.4)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (195.5, 151.6, 131.8)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (201.0, 149.6, 119.6)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (205.8, 151.1, 116.9)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (206.4, 150.4, 113.2)), ('B', '137', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S-G', (214.9, 153.7, 119.8)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (189.8, 157.4, 126.2)), ('B', '200', 'TYR', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (192.5, 162.4, 124.7)), ('B', '212', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (221.3, 160.1, 146.2)), ('B', '216', 'LEU', ' beta sheet', ' \n-S--S', (212.4, 156.2, 145.5)), ('B', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (175.7, 123.1, 148.5)), ('B', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (161.4, 127.7, 134.6)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (182.2, 142.9, 170.0)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (178.9, 141.2, 171.2)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nTSS-H', (168.1, 182.7, 143.9)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (183.3, 177.7, 206.2)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (172.9, 177.3, 151.8)), ('B', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nHHSS-', (161.8, 180.4, 200.8)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (167.8, 153.8, 218.1)), ('B', '34', 'ARG', 'check CA trace', ' \nTT---', (204.1, 158.3, 145.4)), ('B', '112', 'SER', 'check CA trace', 'bend\nSSSSS', (203.8, 151.6, 110.6)), ('B', '220', 'PHE', 'check CA trace', ' \nS----', (204.2, 162.7, 149.4)), ('B', '293', 'LEU', 'check CA trace', 'helix-3\nGGG-H', (195.3, 149.5, 151.0)), ('B', '484', 'GLU', 'check CA trace', ' \nTS-BT', (141.2, 128.2, 74.4)), ('B', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (141.5, 133.7, 69.6)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (171.0, 133.6, 143.7)), ('B', '1043', 'CYS', 'check CA trace', 'bend\nTSSSS', (172.9, 161.8, 193.1)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (151.4, 126.9, 141.7)), ('C', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (129.9, 132.2, 131.6)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (133.9, 136.0, 134.9)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (130.3, 133.4, 122.0)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (129.8, 127.2, 113.3)), ('C', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (134.8, 107.0, 127.4)), ('C', '135', 'PHE', ' beta sheet', ' \n----S', (127.6, 120.0, 115.0)), ('C', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (138.0, 139.7, 172.9)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (170.3, 195.4, 100.7)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (125.7, 167.4, 123.7)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (118.4, 166.2, 150.5)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (133.2, 151.4, 173.0)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (167.4, 133.7, 206.9)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (157.4, 149.9, 194.5)), ('C', '34', 'ARG', 'check CA trace', ' \nTT---', (132.5, 124.9, 148.5)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (135.6, 121.8, 152.8)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (130.7, 137.4, 154.0)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (129.0, 162.9, 144.9)), ('C', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (133.2, 138.3, 172.9))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-23550/7lwm/Model_validation_1/validation_cootdata/molprobity_probe7lwm_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)


from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['probe'] = [(' A 811  LYS  NZ ', ' A 820  ASP  OD2', -0.827, (192.944, 150.235, 186.239)), (' B 811  LYS  NZ ', ' B 820  ASP  OD2', -0.823, (134.91, 136.021, 186.554)), (' C 811  LYS  NZ ', ' C 820  ASP  OD2', -0.817, (151.629, 193.206, 186.334)), (' A 557  LYS  NZ ', ' A 574  ASP  OD2', -0.741, (134.871, 137.315, 149.679)), (' B 557  LYS  NZ ', ' B 574  ASP  OD2', -0.738, (152.77, 191.926, 149.44)), (' C 557  LYS  NZ ', ' C 574  ASP  OD2', -0.737, (191.728, 149.568, 149.632)), (' B 328  ARG HH21', ' B 533  LEU  HB2', -0.716, (140.904, 196.983, 136.348)), (' A 328  ARG HH21', ' A 533  LEU  HB2', -0.709, (136.8, 125.209, 135.917)), (' C 328  ARG HH21', ' C 533  LEU  HB2', -0.697, (201.363, 157.532, 136.405)), (' C 391  CYS  HB2', ' C 525  CYS  HA ', -0.645, (188.672, 152.718, 125.536)), (' A 391  CYS  HB2', ' A 525  CYS  HA ', -0.644, (139.07, 138.59, 126.077)), (' B 391  CYS  HB2', ' B 525  CYS  HA ', -0.62, (151.609, 188.067, 125.945)), (' B 804  GLN  OE1', ' B 935  GLN  NE2', -0.595, (132.845, 142.293, 193.215)), (' B 448  ASN  HB3', ' B 497  PHE  HB2', -0.588, (169.609, 175.069, 96.543)), (' A 448  ASN  HB3', ' A 497  PHE  HB2', -0.58, (141.839, 160.845, 96.677)), (' C 804  GLN  OE1', ' C 935  GLN  NE2', -0.577, (157.977, 191.875, 193.111)), (' C 448  ASN  HB3', ' C 497  PHE  HB2', -0.571, (167.654, 143.656, 96.69)), (' B 193  VAL  HB ', ' B 204  TYR  HB2', -0.569, (119.877, 154.282, 137.456)), (' A 804  GLN  OE1', ' A 935  GLN  NE2', -0.568, (188.414, 145.284, 193.082)), (' C 193  VAL  HB ', ' C 204  TYR  HB2', -0.559, (175.421, 197.254, 137.241)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.559, (184.486, 127.89, 137.263)), (' A  64  TRP  HD1', ' A 266  TYR  HE1', -0.556, (184.201, 110.135, 141.627)), (' A 329  PHE  O  ', ' A 580  GLN  NE2', -0.552, (135.326, 128.813, 129.8)), (' C 328  ARG  NH1', ' C 580  GLN  OE1', -0.548, (200.852, 155.32, 131.917)), (' B  64  TRP  HD1', ' B 266  TYR  HE1', -0.545, (104.575, 163.375, 141.843)), (' A 815  ARG  HD2', ' A 823  PHE  HE2', -0.545, (187.648, 155.361, 182.733)), (' A 328  ARG  NH1', ' A 580  GLN  OE1', -0.543, (134.99, 126.274, 131.568)), (' C  64  TRP  HD1', ' C 266  TYR  HE1', -0.541, (190.628, 206.285, 141.827)), (' C 858  LEU HD23', ' C 959  LEU HD22', -0.54, (153.486, 176.075, 159.505)), (' B 815  ARG  HD2', ' B 823  PHE  HE2', -0.539, (141.954, 137.476, 183.13)), (' B 328  ARG  NH1', ' B 580  GLN  OE1', -0.539, (142.939, 197.542, 131.767)), (' B 438  SER  HB3', ' B 509  ARG  HG3', -0.537, (162.273, 176.987, 102.541)), (' B 329  PHE  O  ', ' B 580  GLN  NE2', -0.536, (145.12, 196.245, 129.563)), (' C 815  ARG  HD2', ' C 823  PHE  HE2', -0.536, (149.735, 186.311, 182.728)), (' A 858  LEU HD23', ' A 959  LEU HD22', -0.534, (176.964, 156.804, 159.956)), (' A 438  SER  HB3', ' A 509  ARG  HG3', -0.533, (143.09, 153.125, 102.934)), (' C 329  PHE  O  ', ' C 580  GLN  NE2', -0.532, (198.647, 154.235, 129.617)), (' C  93  ALA  HB1', ' C 189  LEU HD11', -0.528, (182.566, 205.997, 141.875)), (' C 393  THR  O  ', ' C 523  THR  OG1', -0.523, (188.546, 144.934, 124.947)), (' B  31  SER  OG ', ' B  60  SER  N  ', -0.522, (115.155, 165.961, 147.537)), (' C 438  SER  HB3', ' C 509  ARG  HG3', -0.521, (173.821, 148.905, 103.073)), (' A1039  ARG  NE ', ' B1031  GLU  OE2', -0.52, (160.239, 156.543, 193.362)), (' B 858  LEU HD23', ' B 959  LEU HD22', -0.519, (148.447, 146.159, 160.038)), (' B 980  ILE HG23', ' B 984  LEU HD12', -0.519, (151.281, 148.139, 133.637)), (' A  93  ALA  HB1', ' A 189  LEU HD11', -0.518, (188.404, 116.924, 141.817)), (' B 393  THR  O  ', ' B 523  THR  OG1', -0.518, (158.262, 192.143, 124.926)), (' C 726  ILE HG12', ' C1061  VAL HG22', -0.516, (160.063, 179.364, 184.92)), (' B  93  ALA  HB1', ' B 189  LEU HD11', -0.515, (108.196, 156.438, 141.827)), (' A 726  ILE HG12', ' A1061  VAL HG22', -0.515, (176.359, 149.262, 184.907)), (' C  31  SER  OG ', ' C  60  SER  N  ', -0.514, (187.408, 195.309, 147.675)), (' B 726  ILE HG12', ' B1061  VAL HG22', -0.514, (142.542, 150.266, 184.9)), (' A  31  SER  OG ', ' A  60  SER  N  ', -0.513, (176.705, 117.991, 147.703)), (' A 393  THR  O  ', ' A 523  THR  OG1', -0.511, (132.306, 142.314, 124.903)), (' C 980  ILE HG23', ' C 984  LEU HD12', -0.509, (154.067, 172.669, 133.67)), (' A 277  LEU HD22', ' A 285  ILE HD13', -0.509, (183.41, 132.595, 147.894)), (' C 277  LEU HD22', ' C 285  ILE HD13', -0.505, (171.632, 193.517, 148.181)), (' B1041  ASP  HB2', ' C1030  SER  HB3', -0.504, (150.079, 165.146, 193.311)), (' A 980  ILE HG23', ' A 984  LEU HD12', -0.503, (173.702, 158.579, 134.115)), (' B 277  LEU HD22', ' B 285  ILE HD13', -0.5, (124.639, 152.669, 147.893)), (' B 826  VAL  HB ', ' B1057  PRO  HG2', -0.497, (139.718, 144.853, 177.676)), (' C 452  LEU  HA ', ' C 494  SER  HA ', -0.496, (164.6, 136.524, 102.502)), (' C 826  VAL  HB ', ' C1057  PRO  HG2', -0.496, (156.89, 184.46, 177.646)), (' B 452  LEU  HA ', ' B 494  SER  HA ', -0.496, (177.395, 175.449, 102.465)), (' A 826  VAL  HB ', ' A1057  PRO  HG2', -0.495, (182.629, 149.919, 177.575)), (' B1039  ARG  NE ', ' C1031  GLU  OE2', -0.493, (156.096, 161.118, 193.342)), (' C 143  VAL  HB ', ' C 245  HIS  HA ', -0.492, (187.954, 220.837, 126.697)), (' A 143  VAL  HB ', ' A 245  HIS  HA ', -0.49, (198.373, 104.816, 126.638)), (' A 703  ASN  ND2', ' B 787  GLN  OE1', -0.489, (158.468, 131.896, 198.937)), (' C  33  THR  OG1', ' C 219  GLY  O  ', -0.489, (179.221, 200.761, 151.491)), (' C 902  MET  HE1', ' C1049  LEU HD13', -0.487, (160.19, 176.926, 205.043)), (' B 143  VAL  HB ', ' B 245  HIS  HA ', -0.487, (92.811, 153.772, 126.528)), (' A 231  ILE HD12', ' A 233  ILE HD12', -0.486, (180.816, 127.394, 122.7)), (' A 985  CYS  HB3', ' C 383  CYS  HB3', -0.485, (175.149, 162.407, 125.849)), (' A 452  LEU  HA ', ' A 494  SER  HA ', -0.485, (137.549, 166.784, 102.864)), (' A  33  THR  OG1', ' A 219  GLY  O  ', -0.484, (185.477, 122.177, 151.529)), (' A 902  MET  HE1', ' A1049  LEU HD13', -0.483, (173.99, 150.631, 205.016)), (' A 201  PHE  HB3', ' A 229  LEU  HB2', -0.48, (183.731, 130.877, 126.488)), (' C 516  GLU  OE2', ' C 518  LEU HD12', -0.479, (181.699, 140.764, 130.234)), (' C 736  VAL HG22', ' C 858  LEU  HG ', -0.478, (150.819, 174.542, 158.295)), (' B 196  ASN HD21', ' B 235  ILE HD12', -0.476, (121.843, 160.245, 126.651)), (' B 902  MET  HE1', ' B1049  LEU HD13', -0.476, (144.633, 152.101, 205.112)), (' B 736  VAL HG22', ' B 858  LEU  HG ', -0.475, (151.459, 144.505, 158.263)), (' C 201  PHE  HB3', ' C 229  LEU  HB2', -0.475, (173.385, 194.984, 126.477)), (' B 229  LEU  HB3', ' B 231  ILE HG23', -0.475, (122.276, 152.658, 124.165)), (' C 196  ASN HD21', ' C 235  ILE HD12', -0.473, (179.527, 192.537, 126.417)), (' B 383  CYS  HB3', ' C 985  CYS  HB3', -0.473, (149.675, 171.981, 126.019)), (' B 201  PHE  HB3', ' B 229  LEU  HB2', -0.473, (122.554, 153.875, 126.593)), (' B 231  ILE HD12', ' B 233  ILE HD12', -0.473, (120.939, 157.342, 122.282)), (' A 196  ASN HD21', ' A 235  ILE HD12', -0.472, (178.271, 126.204, 126.589)), (' A 383  CYS  HB3', ' B 985  CYS  HB3', -0.472, (153.925, 145.321, 125.615)), (' A 201  PHE  N  ', ' A 229  LEU  O  ', -0.471, (182.11, 132.384, 127.134)), (' A 736  VAL HG22', ' A 858  LEU  HG ', -0.47, (176.638, 160.405, 158.402)), (' C 201  PHE  N  ', ' C 229  LEU  O  ', -0.47, (172.204, 192.747, 127.142)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.47, (166.169, 153.036, 190.934)), (' A 516  GLU  OE2', ' A 518  LEU HD12', -0.469, (132.364, 150.078, 129.844)), (' C 231  ILE HD12', ' C 233  ILE HD12', -0.466, (177.027, 194.223, 122.649)), (' A1031  GLU  OE2', ' C1039  ARG  NE ', -0.465, (162.385, 161.758, 193.534)), (' B1028  LYS  NZ ', ' B1042  PHE  O  ', -0.465, (150.821, 157.552, 191.42)), (' A 229  LEU  HB3', ' A 231  ILE HG23', -0.464, (184.237, 130.673, 123.866)), (' B 516  GLU  OE2', ' B 518  LEU HD12', -0.464, (165.164, 188.131, 130.173)), (' B 703  ASN  ND2', ' C 787  GLN  OE1', -0.463, (136.267, 174.542, 199.104)), (' A 310  LYS  NZ ', ' A 663  ASP  OD1', -0.462, (168.615, 131.708, 176.578)), (' C 229  LEU  HB3', ' C 231  ILE HG23', -0.461, (172.314, 195.599, 124.2)), (' B 444  LYS  O  ', ' B 447  GLY  N  ', -0.461, (169.93, 173.76, 91.109)), (' A1030  SER  HB3', ' C1041  ASP  HB2', -0.459, (169.184, 165.401, 193.464)), (' A 444  LYS  O  ', ' A 447  GLY  N  ', -0.459, (142.679, 161.246, 91.39)), (' A  92  PHE  HB3', ' A 192  PHE  HB2', -0.456, (186.13, 121.062, 135.99)), (' C  92  PHE  HB3', ' C 192  PHE  HB2', -0.455, (180.546, 202.024, 136.026)), (' B 357  ARG  HG3', ' B 396  TYR  HE1', -0.455, (164.066, 190.556, 120.93)), (' C 310  LYS  NZ ', ' C 663  ASP  OD1', -0.454, (179.465, 181.685, 176.731)), (' C 444  LYS  O  ', ' C 447  GLY  N  ', -0.454, (167.021, 144.228, 91.237)), (' B  33  THR  OG1', ' B 219  GLY  O  ', -0.454, (114.288, 156.317, 151.613)), (' C1028  LYS  NZ ', ' C1042  PHE  O  ', -0.453, (162.283, 168.541, 190.945)), (' C 743  CYS  HB3', ' C 749  CYS  HB3', -0.451, (146.159, 171.292, 143.426)), (' A  35  GLY  HA3', ' A  56  LEU  HB3', -0.451, (179.839, 124.076, 144.118)), (' C  35  GLY  HA3', ' C  56  LEU  HB3', -0.449, (180.266, 195.326, 143.96)), (' A 787  GLN  OE1', ' C 703  ASN  ND2', -0.448, (184.552, 172.631, 198.9)), (' C 103  GLY  HA3', ' C 241  LEU HD12', -0.447, (182.416, 207.574, 125.42)), (' B1086  LYS  HB3', ' B1122  VAL HG13', -0.446, (160.712, 175.562, 229.023)), (' A1086  LYS  HB3', ' A1122  VAL HG13', -0.446, (145.822, 152.738, 229.127)), (' B  35  GLY  HA3', ' B  56  LEU  HB3', -0.446, (118.746, 159.722, 144.146)), (' A 103  GLY  HA3', ' A 241  LEU HD12', -0.446, (189.58, 116.133, 125.031)), (' B  92  PHE  HB3', ' B 192  PHE  HB2', -0.446, (113.187, 156.267, 135.935)), (' A1041  ASP  HB2', ' B1030  SER  HB3', -0.443, (160.418, 148.882, 193.589)), (' B 103  GLY  HA3', ' B 241  LEU HD12', -0.443, (107.018, 155.39, 125.407)), (' C 374  PHE  HA ', ' C 436  TRP  HB3', -0.441, (174.307, 156.091, 107.796)), (' A 374  PHE  HA ', ' A 436  TRP  HB3', -0.441, (149.149, 148.817, 107.718)), (' A 357  ARG  HG3', ' A 396  TYR  HE1', -0.44, (130.681, 147.644, 120.931)), (' A 129  LYS  HE2', ' A 169  GLU  OE2', -0.438, (193.675, 125.046, 116.685)), (' A 743  CYS  HB3', ' A 749  CYS  HB3', -0.438, (176.463, 165.824, 143.433)), (' C 357  ARG  HG3', ' C 396  TYR  HE1', -0.436, (184.722, 140.425, 120.94)), (' C1086  LYS  HB3', ' C1122  VAL HG13', -0.436, (172.856, 151.079, 229.069)), (' B 374  PHE  HA ', ' B 436  TRP  HB3', -0.435, (155.982, 174.445, 107.663)), (' B 596  SER  OG ', ' B 613  GLN  NE2', -0.435, (137.66, 173.066, 163.913)), (' C 129  LYS  HE2', ' C 169  GLU  OE2', -0.433, (172.39, 206.584, 116.537)), (' B 201  PHE  N  ', ' B 229  LEU  O  ', -0.433, (125.424, 154.055, 127.065)), (' A 189  LEU  HB2', ' A 210  ILE HD13', -0.43, (192.126, 116.529, 144.728)), (' B 562  PHE  HD2', ' C  41  LYS  HG2', -0.429, (163.655, 195.794, 137.904)), (' B1129  VAL HG13', ' C 917  TYR  HB3', -0.429, (157.59, 180.589, 218.422)), (' C 596  SER  OG ', ' C 613  GLN  NE2', -0.428, (182.344, 171.782, 163.772)), (' A 344  ALA  HB3', ' A 347  PHE  HE1', -0.428, (136.576, 148.79, 105.718)), (' B 129  LYS  HE2', ' B 169  GLU  OE2', -0.427, (112.611, 147.623, 116.582)), (' B 725  GLU  OE2', ' B1028  LYS  HE3', -0.427, (149.117, 156.851, 188.375)), (' B 189  LEU  HB2', ' B 210  ILE HD13', -0.427, (106.036, 153.302, 144.728)), (' A 596  SER  OG ', ' A 613  GLN  NE2', -0.427, (159.185, 133.912, 163.687)), (' B 344  ALA  HB3', ' B 347  PHE  HE1', -0.427, (161.797, 185.198, 105.725)), (' C 344  ALA  HB3', ' C 347  PHE  HE1', -0.426, (180.809, 145.216, 105.705)), (' B1011  GLN  OE1', ' B1014  ARG  NH1', -0.425, (150.909, 152.975, 165.961)), (' A 917  TYR  HB3', ' C1129  VAL HG13', -0.425, (178.806, 151.269, 218.456)), (' A 725  GLU  OE2', ' A1028  LYS  HE3', -0.425, (167.702, 152.036, 188.298)), (' C 189  LEU  HB2', ' C 210  ILE HD13', -0.424, (181.084, 209.427, 144.673)), (' A 316  SER  OG ', ' A 317  ASN  N  ', -0.424, (160.938, 133.095, 154.535)), (' C 725  GLU  OE2', ' C1028  LYS  HE3', -0.424, (162.199, 170.155, 188.192)), (' C 316  SER  OG ', ' C 317  ASN  N  ', -0.423, (182.369, 174.1, 154.446)), (' B 316  SER  OG ', ' B 317  ASN  N  ', -0.423, (136.035, 172.072, 154.526)), (' C1011  GLN  OE1', ' C1014  ARG  NH1', -0.421, (158.291, 170.771, 165.892)), (' B 738  CYS  SG ', ' B 764  ASN  ND2', -0.418, (160.997, 142.722, 156.044)), (' A 796  ASP  N  ', ' A 796  ASP  OD1', -0.418, (190.177, 156.239, 207.802)), (' A1011  GLN  OE1', ' A1014  ARG  NH1', -0.417, (170.19, 155.841, 165.726)), (' B 707  TYR  HB3', ' C 792  PRO  HG3', -0.414, (143.191, 183.82, 205.395)), (' C 725  GLU  OE1', ' C1064  HIS  NE2', -0.414, (161.741, 172.921, 191.072)), (' A 738  CYS  SG ', ' A 764  ASN  ND2', -0.414, (173.67, 169.199, 155.666)), (' C1077  THR  OG1', ' C1078  ALA  N  ', -0.413, (180.689, 161.931, 218.439)), (' B1077  THR  OG1', ' B1078  ALA  N  ', -0.412, (147.312, 177.047, 218.306)), (' A1077  THR  OG1', ' A1078  ALA  N  ', -0.412, (151.19, 140.548, 218.474)), (' C 738  CYS  SG ', ' C 764  ASN  ND2', -0.41, (144.608, 167.014, 155.691)), (' B 566  GLY  O  ', ' B 574  ASP  N  ', -0.41, (153.458, 189.04, 145.574)), (' A 656  VAL HG12', ' A 658  ASN  H  ', -0.407, (159.54, 119.276, 181.167)), (' C 802  PHE  HD1', ' C 805  ILE HD11', -0.406, (153.998, 183.789, 198.696)), (' B1074  ASN  OD1', ' C 895  GLN  NE2', -0.406, (138.085, 176.596, 211.086)), (' B 858  LEU HD21', ' B 962  LEU HD23', -0.404, (149.61, 147.022, 157.73)), (' C 656  VAL HG12', ' C 658  ASN  H  ', -0.403, (194.883, 179.798, 181.161)), (' B 725  GLU  OE1', ' B1064  HIS  NE2', -0.402, (147.572, 155.02, 191.177)), (' A 566  GLY  O  ', ' A 574  ASP  N  ', -0.402, (137.48, 139.62, 145.633)), (' C 201  PHE  O  ', ' C 229  LEU  N  ', -0.401, (170.948, 195.162, 128.144)), (' A 802  PHE  HD1', ' A 805  ILE HD11', -0.401, (183.477, 152.644, 198.661)), (' C 229  LEU  HA ', ' C 229  LEU HD23', -0.401, (169.457, 196.361, 125.219)), (' A 858  LEU HD21', ' A 962  LEU HD23', -0.4, (175.5, 157.076, 157.224)), (' B 656  VAL HG12', ' B 658  ASN  H  ', -0.4, (124.68, 180.85, 180.956))]
data['smoc'] = [('A', 44, u'ARG', 0.8783448612331489, (187.349, 142.865, 148.501)), ('A', 53, u'ASP', 0.8382545119137736, (174.875, 133.48700000000002, 141.098)), ('A', 84, u'LEU', 0.8172307769685148, (176.053, 114.236, 130.47299999999998)), ('A', 87, u'ASN', 0.8159270197185107, (171.26399999999998, 122.085, 132.44299999999998)), ('A', 92, u'PHE', 0.8213697306991579, (184.02200000000002, 119.34400000000001, 137.485)), ('A', 111, u'ASP', 0.804333538356062, (179.13, 115.397, 115.21000000000001)), ('A', 113, u'LYS', 0.7733798141725854, (176.74499999999998, 119.736, 112.895)), ('A', 114, u'THR', 0.8170078923598202, (176.996, 122.489, 115.529)), ('A', 117, u'LEU', 0.8091334068431463, (184.42600000000002, 123.338, 122.21400000000001)), ('A', 118, u'LEU', 0.8059593869443855, (187.507, 121.111, 122.32499999999999)), ('A', 137, u'ASN', 0.7240549441747861, (181.771, 107.57199999999999, 118.339)), ('A', 165, u'ASN', 0.7137798762278073, (183.689, 126.663, 110.035)), ('A', 194, u'PHE', 0.7761033747573881, (182.015, 125.51100000000001, 133.26899999999998)), ('A', 213, u'VAL', 0.7861582968510469, (192.262, 108.535, 146.511)), ('A', 214, u'ARG', 0.7414187041446565, (188.563, 107.962, 147.297)), ('A', 221, u'SER', 0.8289851460929166, (189.672, 126.32199999999999, 148.786)), ('A', 223, u'LEU', 0.785813613643699, (188.25, 129.006, 142.671)), ('A', 233, u'ILE', 0.7522875175424114, (177.35000000000002, 128.22899999999998, 121.593)), ('A', 245, u'HIS', 0.733345935346442, (197.416, 103.57799999999999, 127.21100000000001)), ('A', 275, u'PHE', 0.8332497778968728, (175.972, 132.55100000000002, 149.137)), ('A', 289, u'VAL', 0.8538185040617224, (177.26999999999998, 129.661, 153.62)), ('A', 313, u'TYR', 0.8496802889703915, (165.602, 134.88000000000002, 164.798)), ('A', 319, u'ARG', 0.8941268135674523, (154.629, 130.253, 151.181)), ('A', 324, u'GLU', 0.9067641963951033, (148.68800000000002, 124.033, 138.728)), ('A', 328, u'ARG', 0.900266486191567, (139.04399999999998, 129.985, 132.72299999999998)), ('A', 332, u'ILE', 0.9002910413426489, (132.092, 130.95600000000002, 123.191)), ('A', 346, u'ARG', 0.831300520560342, (134.79399999999998, 151.96800000000002, 101.5)), ('A', 356, u'LYS', 0.894628175359389, (131.553, 149.44299999999998, 115.17699999999999)), ('A', 357, u'ARG', 0.8683533503756731, (130.76299999999998, 147.54, 118.35199999999999)), ('A', 360, u'ASN', 0.8964649109023023, (130.38200000000003, 138.24399999999997, 122.077)), ('A', 370, u'ASN', 0.8660903523216911, (151.648, 139.22, 112.383)), ('A', 371, u'SER', 0.8614496902774929, (150.415, 140.725, 109.103)), ('A', 382, u'VAL', 0.8783938216495628, (148.171, 147.407, 126.436)), ('A', 389, u'ASP', 0.8538618001777161, (145.59, 136.36700000000002, 127.312)), ('A', 390, u'LEU', 0.8819265806873363, (143.99200000000002, 139.664, 128.35500000000002)), ('A', 407, u'VAL', 0.8500969103230178, (148.471, 159.916, 111.67099999999999)), ('A', 414, u'GLN', 0.8646734830922331, (148.768, 165.316, 120.715)), ('A', 437, u'ASN', 0.860188129991596, (148.26899999999998, 153.35200000000003, 103.452)), ('A', 444, u'LYS', 0.8052253649943979, (142.21299999999997, 158.43800000000002, 92.077)), ('A', 492, u'LEU', 0.7964071120872493, (134.078, 172.05700000000002, 106.03)), ('A', 509, u'ARG', 0.8548251414538248, (143.626, 153.914, 106.29400000000001)), ('A', 516, u'GLU', 0.8657330859386457, (136.86100000000002, 148.88100000000003, 127.6)), ('A', 518, u'LEU', 0.8640707388745434, (135.371, 148.069, 133.0)), ('A', 519, u'HIS', 0.8648348530229603, (134.975, 145.29, 135.55800000000002)), ('A', 525, u'CYS', 0.8906761618125476, (137.92800000000003, 137.191, 124.95)), ('A', 554, u'GLU', 0.8648503913753367, (132.85100000000003, 127.40700000000001, 147.61299999999997)), ('A', 558, u'LYS', 0.8815518249639329, (125.17499999999998, 135.51299999999998, 146.92100000000002)), ('A', 561, u'PRO', 0.8874607209265505, (123.20100000000001, 138.56, 138.556)), ('A', 562, u'PHE', 0.8827465135907144, (125.05199999999999, 141.634, 137.24699999999999)), ('A', 565, u'PHE', 0.8709538706333594, (134.01299999999998, 140.44299999999998, 141.198)), ('A', 571, u'ASP', 0.8112112736096388, (141.33100000000002, 146.418, 146.38700000000003)), ('A', 574, u'ASP', 0.8649822545928039, (138.186, 138.363, 147.212)), ('A', 590, u'CYS', 0.9033719711631893, (147.576, 130.185, 149.797)), ('A', 597, u'VAL', 0.8418380757097962, (164.61499999999998, 129.782, 163.57299999999998)), ('A', 616, u'ASN', 0.8634433981934301, (148.811, 124.48700000000001, 162.056)), ('A', 620, u'VAL', 0.8277393720785806, (154.16, 121.71400000000001, 156.491)), ('A', 641, u'ASN', 0.8523352592328215, (159.176, 116.21000000000001, 167.82600000000002)), ('A', 646, u'ARG', 0.8493817868979855, (149.561, 129.059, 170.201)), ('A', 661, u'GLU', 0.8294722923059775, (162.71099999999998, 129.88100000000003, 183.608)), ('A', 666, u'ILE', 0.7983779887542982, (158.71499999999997, 131.9, 171.778)), ('A', 702, u'GLU', 0.9006848394277145, (155.312, 128.46200000000002, 194.77499999999998)), ('A', 738, u'CYS', 0.7119772148202381, (174.20999999999998, 165.96, 153.846)), ('A', 741, u'TYR', 0.8193845963897994, (176.872, 161.88700000000003, 151.493)), ('A', 742, u'ILE', 0.7873234962189378, (174.41899999999998, 162.315, 148.627)), ('A', 748, u'GLU', 0.8495026454031674, (176.595, 168.255, 138.70299999999997)), ('A', 749, u'CYS', 0.7785177706376324, (174.853, 166.49800000000002, 141.584)), ('A', 770, u'ILE', 0.8358465865008587, (170.91899999999998, 165.532, 169.259)), ('A', 773, u'GLU', 0.7974876201749838, (172.006, 167.31, 174.411)), ('A', 774, u'GLN', 0.8052317047796019, (174.403, 164.363, 174.493)), ('A', 781, u'VAL', 0.7697135174391134, (173.991, 163.061, 185.49800000000002)), ('A', 802, u'PHE', 0.825356241189594, (186.534, 151.49200000000002, 199.678)), ('A', 813, u'SER', 0.8412522604645646, (193.85800000000003, 158.005, 183.728)), ('A', 858, u'LEU', 0.8249780478522851, (179.829, 160.533, 158.463)), ('A', 867, u'ASP', 0.8378875514805093, (186.67899999999997, 160.06, 180.281)), ('A', 870, u'ILE', 0.8085235181133714, (183.97, 161.809, 184.259)), ('A', 896, u'ILE', 0.7713898610114923, (181.085, 163.01299999999998, 209.89700000000002)), ('A', 902, u'MET', 0.7652636648159632, (175.58800000000002, 154.437, 208.686)), ('A', 905, u'ARG', 0.7892584564444833, (171.33800000000002, 155.401, 207.36)), ('A', 906, u'PHE', 0.7806543800886034, (169.959, 152.697, 209.63899999999998)), ('A', 915, u'VAL', 0.7467322914876373, (172.191, 147.347, 215.529)), ('A', 930, u'ALA', 0.8354077649131078, (180.01399999999998, 142.24499999999998, 198.766)), ('A', 936, u'ASP', 0.8777527431812099, (183.873, 138.291, 190.023)), ('A', 943, u'SER', 0.849132962154333, (176.706, 139.916, 179.53)), ('A', 950, u'ASP', 0.8316172595808138, (173.39000000000001, 147.684, 173.092)), ('A', 961, u'THR', 0.8575416702993235, (173.02200000000002, 150.36200000000002, 157.34)), ('A', 968, u'SER', 0.8727453409467227, (171.86800000000002, 150.51299999999998, 145.963)), ('A', 979, u'ASP', 0.8114382406463777, (179.894, 156.333, 136.592)), ('A', 983, u'ARG', 0.8353393580172253, (178.722, 157.504, 130.786)), ('A', 1010, u'GLN', 0.8309557064944332, (165.77299999999997, 156.67499999999998, 163.931)), ('A', 1031, u'GLU', 0.7740352288660657, (167.923, 160.92100000000002, 195.15)), ('A', 1049, u'LEU', 0.7904028137873408, (171.257, 152.598, 202.578)), ('A', 1051, u'SER', 0.7599044490600086, (174.79299999999998, 154.207, 196.51899999999998)), ('A', 1082, u'CYS', 0.8160911688252843, (145.553, 145.13, 229.038)), ('A', 1087, u'ALA', 0.7333721539601954, (145.26999999999998, 149.29, 226.555)), ('A', 1105, u'THR', 0.744684376715017, (160.625, 144.767, 219.873)), ('A', 1147, u'SER', 0.8497068332398425, (162.89800000000002, 152.08100000000002, 248.122)), ('B', 41, u'LYS', 0.8567798073520438, (129.197, 145.76899999999998, 139.27499999999998)), ('B', 69, u'HIS', 0.7396904399429002, (91.504, 164.137, 134.012)), ('B', 80, u'ASP', 0.778435024268873, (100.85, 166.077, 130.789)), ('B', 104, u'TRP', 0.786705144701035, (110.37899999999999, 157.267, 126.811)), ('B', 118, u'LEU', 0.7732001466979362, (112.363, 154.976, 122.359)), ('B', 122, u'ASN', 0.7768113474624869, (103.958, 146.87, 125.79)), ('B', 134, u'GLN', 0.750986594748288, (108.813, 160.661, 112.929)), ('B', 142, u'GLY', 0.7046193334015484, (96.268, 154.20499999999998, 122.56700000000001)), ('B', 143, u'VAL', 0.7305089167820235, (94.489, 151.76299999999998, 124.859)), ('B', 165, u'ASN', 0.757645286383908, (119.073, 155.476, 110.06400000000001)), ('B', 172, u'SER', 0.8150128956297756, (113.505, 141.344, 125.32799999999999)), ('B', 194, u'PHE', 0.8208475112646358, (118.928, 157.55, 133.29399999999998)), ('B', 207, u'HIS', 0.8302886090349142, (110.68799999999999, 147.95800000000003, 141.476)), ('B', 211, u'ASN', 0.8140318791045492, (101.071, 151.248, 149.546)), ('B', 214, u'ARG', 0.7869739261971206, (100.46700000000001, 160.697, 147.32600000000002)), ('B', 223, u'LEU', 0.8381213660442532, (118.838, 150.423, 142.70999999999998)), ('B', 233, u'ILE', 0.7675954899879467, (123.61, 160.20399999999998, 121.609)), ('B', 235, u'ILE', 0.8040954470586649, (120.829, 164.309, 124.986)), ('B', 266, u'TYR', 0.8031803559816153, (108.798, 162.49200000000002, 139.094)), ('B', 267, u'VAL', 0.8098967235062696, (111.86, 164.183, 137.62)), ('B', 277, u'LEU', 0.8495050059783514, (127.319, 153.577, 151.07)), ('B', 297, u'SER', 0.8111214842368226, (126.712, 164.559, 157.237)), ('B', 301, u'CYS', 0.8295518367663508, (131.816, 161.159, 155.701)), ('B', 313, u'TYR', 0.8272602408061309, (135.27499999999998, 167.134, 164.79299999999998)), ('B', 319, u'ARG', 0.8617340033836695, (136.754, 178.92100000000002, 151.15)), ('B', 333, u'THR', 0.8710514056460794, (147.007, 197.261, 119.758)), ('B', 336, u'CYS', 0.8950269583560078, (153.423, 191.525, 115.796)), ('B', 347, u'PHE', 0.8280272502355641, (166.287, 183.39100000000002, 104.70700000000001)), ('B', 372, u'ALA', 0.8733429019535023, (148.589, 173.872, 107.422)), ('B', 383, u'CYS', 0.8541880546587773, (152.345, 173.359, 124.84400000000001)), ('B', 388, u'ASN', 0.86750804121825, (147.04899999999998, 183.21699999999998, 123.512)), ('B', 389, u'ASP', 0.808009092979296, (146.55800000000002, 183.635, 127.265)), ('B', 390, u'LEU', 0.8791017051252394, (150.212, 183.37, 128.30700000000002)), ('B', 414, u'GLN', 0.861612496193488, (170.02200000000002, 166.377, 120.69)), ('B', 421, u'TYR', 0.8276120459674124, (178.756, 173.02100000000002, 115.44400000000002)), ('B', 437, u'ASN', 0.831861698635165, (159.905, 172.762, 103.42)), ('B', 444, u'LYS', 0.7989451004948972, (167.333, 175.435, 92.035)), ('B', 462, u'LYS', 0.7932056489063046, (177.68, 177.502, 123.256)), ('B', 467, u'ASP', 0.8060813517277777, (179.73, 181.315, 114.113)), ('B', 489, u'TYR', 0.7973760490062392, (191.36800000000002, 172.111, 105.32799999999999)), ('B', 490, u'PHE', 0.8281520774496339, (188.30100000000002, 174.27299999999997, 105.932)), ('B', 501, u'ASN', 0.834331187551862, (166.89600000000002, 166.039, 95.769)), ('B', 519, u'HIS', 0.8712407789983422, (159.601, 188.374, 135.494)), ('B', 540, u'ASN', 0.884536921247313, (139.93, 185.532, 139.82700000000003)), ('B', 548, u'GLY', 0.8818264080308613, (145.507, 183.17399999999998, 140.623)), ('B', 554, u'GLU', 0.8793934194965132, (145.191, 199.191, 147.534)), ('B', 562, u'PHE', 0.8693587131591131, (161.405, 198.797, 137.159)), ('B', 565, u'PHE', 0.8669237922444014, (155.89000000000001, 191.64499999999998, 141.129)), ('B', 571, u'ASP', 0.8035614636976347, (157.40200000000002, 182.33, 146.33700000000002)), ('B', 585, u'LEU', 0.8995104333985345, (147.85200000000003, 196.271, 144.297)), ('B', 590, u'CYS', 0.8519879979392125, (140.225, 185.05800000000002, 149.752)), ('B', 597, u'VAL', 0.8145698501222118, (131.354, 170.539, 163.563)), ('B', 617, u'CYS', 0.8673906253105462, (130.894, 186.698, 161.966)), ('B', 619, u'GLU', 0.8324016980304306, (132.251, 186.315, 156.054)), ('B', 620, u'VAL', 0.816861918080969, (129.6, 183.61299999999997, 156.455)), ('B', 641, u'ASN', 0.8726437273580644, (122.331, 182.05, 167.798)), ('B', 666, u'ILE', 0.8044788492726386, (136.146, 174.60299999999998, 171.757)), ('B', 671, u'CYS', 0.849331204882624, (133.17899999999997, 174.728, 175.983)), ('B', 697, u'MET', 0.849939252211643, (133.69299999999998, 177.131, 181.365)), ('B', 707, u'TYR', 0.8424082800500431, (142.048, 181.812, 207.69)), ('B', 720, u'ILE', 0.8110620885850146, (138.86, 155.32100000000003, 203.257)), ('B', 734, u'THR', 0.8417113338896071, (152.525, 143.423, 165.11299999999997)), ('B', 738, u'CYS', 0.7582047242032214, (157.863, 144.1, 153.876)), ('B', 760, u'CYS', 0.7697567586975923, (162.866, 145.82800000000003, 153.758)), ('B', 801, u'ASN', 0.8396191585169356, (136.71299999999997, 141.298, 202.55)), ('B', 878, u'LEU', 0.7923831061112959, (148.281, 140.495, 195.814)), ('B', 901, u'GLN', 0.7400403105378164, (149.617, 145.849, 208.923)), ('B', 909, u'ILE', 0.7324813139038947, (150.79, 158.966, 207.516)), ('B', 936, u'ASP', 0.8825500368450746, (129.095, 149.66299999999998, 190.05800000000002)), ('B', 942, u'ALA', 0.8558504588563509, (131.953, 151.86800000000002, 179.76899999999998)), ('B', 979, u'ASP', 0.8300989045972653, (146.67299999999997, 143.963, 136.62800000000001)), ('B', 983, u'ARG', 0.8254832658894561, (148.26999999999998, 144.379, 130.82100000000003)), ('B', 985, u'CYS', 0.8702166911904673, (155.01299999999998, 145.095, 128.61599999999999)), ('B', 988, u'GLU', 0.8634894597757853, (156.638, 149.95200000000003, 130.26)), ('B', 996, u'LEU', 0.7878804928537918, (153.651, 151.70299999999997, 143.474)), ('B', 1055, u'SER', 0.8294651173451222, (145.394, 142.95100000000002, 185.399)), ('B', 1082, u'CYS', 0.7737120444806475, (154.22299999999998, 179.493, 228.996)), ('B', 1094, u'VAL', 0.7467340390588194, (149.595, 170.83800000000002, 217.88100000000003)), ('B', 1105, u'THR', 0.767749809386138, (146.35800000000003, 166.60899999999998, 219.863)), ('B', 1107, u'ARG', 0.788022718179868, (147.63899999999998, 166.556, 213.425)), ('B', 1123, u'SER', 0.8244919959191965, (162.88100000000003, 175.4, 224.74299999999997)), ('B', 1133, u'VAL', 0.7609106407386583, (149.653, 181.622, 225.454)), ('B', 1144, u'GLU', 0.8941033856851915, (153.39800000000002, 160.507, 242.73)), ('B', 1147, u'SER', 0.8127185670470919, (151.567, 161.039, 248.121)), ('C', 45, u'SER', 0.8694506416103429, (160.34, 193.82600000000002, 151.883)), ('C', 53, u'ASP', 0.808030792171638, (174.914, 186.003, 141.095)), ('C', 63, u'THR', 0.8076879381803186, (191.95700000000002, 200.097, 140.394)), ('C', 80, u'ASP', 0.8081319407681785, (194.66899999999998, 207.575, 130.767)), ('C', 104, u'TRP', 0.7760853602135952, (182.282, 203.71499999999997, 126.779)), ('C', 105, u'ILE', 0.8098755217704746, (183.74699999999999, 201.464, 124.065)), ('C', 113, u'LYS', 0.8100365841970394, (185.879, 194.503, 112.891)), ('C', 118, u'LEU', 0.8019653333175569, (179.312, 203.134, 122.32499999999999)), ('C', 136, u'CYS', 0.7919687434627587, (190.803, 206.24499999999998, 116.586)), ('C', 137, u'ASN', 0.761360527495292, (193.904, 204.935, 118.335)), ('C', 142, u'GLY', 0.7727118021577087, (186.68200000000002, 217.463, 122.52199999999999)), ('C', 165, u'ASN', 0.7769065454012796, (176.40800000000002, 197.055, 110.034)), ('C', 194, u'PHE', 0.8094480285756416, (178.24899999999997, 196.176, 133.267)), ('C', 202, u'LYS', 0.8372367481927856, (172.478, 194.594, 131.685)), ('C', 203, u'ILE', 0.8535717138640212, (173.33200000000002, 198.086, 132.92100000000002)), ('C', 204, u'TYR', 0.8456719411209233, (172.975, 198.54299999999998, 136.678)), ('C', 211, u'ASN', 0.7976383560966362, (181.69, 214.815, 149.499)), ('C', 213, u'VAL', 0.8097469207483557, (187.834, 213.533, 146.51)), ('C', 214, u'ARG', 0.7822893646606071, (190.18, 210.61599999999999, 147.295)), ('C', 218, u'GLN', 0.8389550174964355, (182.435, 204.535, 153.24499999999998)), ('C', 223, u'LEU', 0.8106405729879022, (172.10899999999998, 199.82600000000002, 142.672)), ('C', 233, u'ILE', 0.7736296647603049, (178.224, 190.77899999999997, 121.59)), ('C', 270, u'LEU', 0.8193541892245755, (182.435, 190.77299999999997, 139.38800000000003)), ('C', 309, u'GLU', 0.8928848664656754, (174.60299999999998, 184.823, 168.767)), ('C', 319, u'ARG', 0.8557091416532497, (187.839, 170.08200000000002, 151.17)), ('C', 332, u'ILE', 0.8808733998883137, (198.48700000000002, 150.218, 123.17199999999998)), ('C', 333, u'THR', 0.8842978790070873, (198.64399999999998, 151.997, 119.815)), ('C', 346, u'ARG', 0.8027244697460494, (178.931, 142.06, 101.485)), ('C', 347, u'PHE', 0.8497115944640863, (177.016, 142.20299999999997, 104.751)), ('C', 365, u'TYR', 0.8819922141815338, (184.562, 156.82700000000003, 117.823)), ('C', 376, u'THR', 0.8699643526324405, (170.371, 157.477, 112.218)), ('C', 380, u'TYR', 0.8577353980508527, (170.68, 154.059, 124.07199999999999)), ('C', 383, u'CYS', 0.8470544531356154, (175.265, 159.318, 124.863)), ('C', 389, u'ASP', 0.8474411589921397, (187.055, 159.20299999999997, 127.298)), ('C', 390, u'LEU', 0.8352527021625373, (184.999, 156.171, 128.342)), ('C', 437, u'ASN', 0.8342518641299486, (170.997, 153.038, 103.44200000000001)), ('C', 444, u'LYS', 0.8341166275931795, (169.61599999999999, 145.253, 92.066)), ('C', 447, u'GLY', 0.812523831415703, (165.812, 142.003, 92.34100000000001)), ('C', 492, u'LEU', 0.758745148381688, (161.89200000000002, 131.39700000000002, 106.018)), ('C', 505, u'TYR', 0.8229293253371665, (161.742, 149.155, 101.087)), ('C', 509, u'ARG', 0.8670039954987101, (172.833, 148.73499999999999, 106.282)), ('C', 516, u'GLU', 0.8653052775348754, (180.58, 145.38800000000003, 127.585)), ('C', 518, u'LEU', 0.8724662924496042, (182.03, 144.501, 132.985)), ('C', 519, u'HIS', 0.8521661366628334, (184.636, 145.547, 135.54299999999998)), ('C', 533, u'LEU', 0.8818297811029112, (201.461, 159.099, 137.74699999999999)), ('C', 552, u'LEU', 0.893957544536855, (196.936, 157.635, 145.146)), ('C', 562, u'PHE', 0.8726267509253554, (192.76299999999998, 138.78, 137.227)), ('C', 565, u'PHE', 0.8465807064176497, (189.316, 147.135, 141.181)), ('C', 571, u'ASP', 0.7707941665344754, (180.484, 150.485, 146.374)), ('C', 587, u'ILE', 0.8791883640292878, (192.591, 155.585, 146.656)), ('C', 590, u'CYS', 0.8853239582730313, (191.423, 164.008, 149.784)), ('C', 597, u'VAL', 0.8085842563829175, (183.259, 178.963, 163.566)), ('C', 614, u'ASP', 0.8622059043549526, (189.09, 166.306, 162.92100000000002)), ('C', 620, u'VAL', 0.8632624680542109, (195.471, 173.944, 156.47899999999998)), ('C', 646, u'ARG', 0.8409362655491381, (191.41299999999998, 166.286, 170.18800000000002)), ('C', 666, u'ILE', 0.8244729183985433, (184.377, 172.79299999999998, 171.76899999999998)), ('C', 692, u'ILE', 0.8584983189970036, (189.35000000000002, 184.61899999999997, 172.111)), ('C', 699, u'LEU', 0.8260880943055816, (185.069, 171.21699999999998, 186.955)), ('C', 714, u'ILE', 0.7863997331459784, (177.105, 170.646, 212.689)), ('C', 729, u'VAL', 0.8107275073092155, (154.22, 172.499, 179.754)), ('C', 738, u'CYS', 0.7249956968321323, (147.126, 169.191, 153.848)), ('C', 742, u'ILE', 0.7701716244670094, (150.177, 171.195, 148.629)), ('C', 743, u'CYS', 0.8136316496089755, (147.656, 172.184, 145.95200000000003)), ('C', 748, u'GLU', 0.8487764929726671, (143.941, 170.112, 138.706)), ('C', 755, u'GLN', 0.8752944377520607, (145.509, 159.296, 143.997)), ('C', 800, u'PHE', 0.8005222211879567, (156.0, 186.909, 205.575)), ('C', 802, u'PHE', 0.8203326766506766, (153.51, 187.086, 199.68200000000002)), ('C', 819, u'GLU', 0.7983740033622347, (153.875, 186.42600000000002, 186.424)), ('C', 876, u'ALA', 0.8106363266997583, (144.005, 178.474, 193.812)), ('C', 877, u'LEU', 0.7552947014626504, (147.14899999999997, 176.36700000000002, 194.086)), ('C', 880, u'GLY', 0.8033569574033164, (145.76399999999998, 176.751, 199.395)), ('C', 884, u'SER', 0.8275521265690001, (145.761, 175.526, 204.278)), ('C', 900, u'MET', 0.7655434561620994, (152.48200000000003, 176.85800000000003, 212.41899999999998)), ('C', 901, u'GLN', 0.73746496008523, (152.694, 175.534, 208.894)), ('C', 912, u'THR', 0.7591057078741923, (163.032, 170.77299999999997, 215.718)), ('C', 942, u'ALA', 0.8325705519764243, (166.766, 187.791, 179.73999999999998)), ('C', 977, u'LEU', 0.8570685292348736, (151.804, 175.73999999999998, 140.783)), ('C', 979, u'ASP', 0.8698751348143177, (152.617, 178.93, 136.594)), ('C', 983, u'ARG', 0.846217619220476, (152.187, 177.33100000000002, 130.788)), ('C', 987, u'PRO', 0.8744385102139081, (149.547, 165.575, 129.42200000000003)), ('C', 994, u'ASP', 0.810829191608331, (153.662, 165.038, 140.383)), ('C', 1008, u'VAL', 0.8231381931335491, (154.796, 166.10399999999998, 161.383)), ('C', 1012, u'LEU', 0.7933611929793694, (155.40200000000002, 164.069, 167.102)), ('C', 1015, u'ALA', 0.8051730042931412, (155.531, 166.869, 171.44899999999998)), ('C', 1019, u'ARG', 0.8213602371334331, (154.68800000000002, 165.568, 177.38000000000002)), ('C', 1030, u'SER', 0.778508859911808, (151.651, 167.336, 193.10999999999999)), ('C', 1031, u'GLU', 0.765662278206191, (154.646, 166.254, 195.14899999999997)), ('C', 1034, u'LEU', 0.7583220508015455, (150.784, 170.171, 197.453)), ('C', 1060, u'VAL', 0.7717153197609994, (155.165, 176.753, 184.52800000000002)), ('C', 1062, u'PHE', 0.7618694016399794, (158.153, 177.156, 190.412)), ('C', 1082, u'CYS', 0.7791644339619302, (179.516, 154.766, 229.02700000000002)), ('C', 1087, u'ALA', 0.7828515411388621, (176.055, 152.442, 226.54399999999998)), ('C', 1095, u'PHE', 0.8058597874812973, (176.771, 163.63, 220.71699999999998)), ('C', 1105, u'THR', 0.7745628572669688, (172.29299999999998, 168.004, 219.86700000000002)), ('C', 1147, u'SER', 0.8540033075412741, (164.83200000000002, 166.31, 248.118))]
data['rota'] = [('A', ' 391 ', 'CYS', 0.15781564176314283, (140.31300000000005, 139.833, 127.572)), ('B', ' 391 ', 'CYS', 0.15495697474156722, (152.2, 186.468, 127.516)), ('C', ' 391 ', 'CYS', 0.1567969759893661, (186.69000000000005, 152.9, 127.557))]
data['clusters'] = [('A', '192', 1, 'side-chain clash', (186.13, 121.062, 135.99)), ('A', '193', 1, 'side-chain clash', (184.486, 127.89, 137.263)), ('A', '194', 1, 'smoc Outlier', (182.015, 125.51100000000001, 133.26899999999998)), ('A', '204', 1, 'side-chain clash', (184.486, 127.89, 137.263)), ('A', '220', 1, 'cablam CA Geom Outlier', (188.0, 124.5, 151.7)), ('A', '221', 1, 'smoc Outlier', (189.672, 126.32199999999999, 148.786)), ('A', '223', 1, 'smoc Outlier', (188.25, 129.006, 142.671)), ('A', '92', 1, 'side-chain clash\nsmoc Outlier', (186.13, 121.062, 135.99)), ('A', '813', 2, 'smoc Outlier', (193.85800000000003, 158.005, 183.728)), ('A', '815', 2, 'side-chain clash', (187.648, 155.361, 182.733)), ('A', '823', 2, 'side-chain clash', (187.648, 155.361, 182.733)), ('A', '867', 2, 'smoc Outlier', (186.67899999999997, 160.06, 180.281)), ('A', '870', 2, 'smoc Outlier', (183.97, 161.809, 184.259)), ('A', '874', 2, 'Dihedral angle:CA:C\ncablam Outlier', (182.63, 160.142, 190.238)), ('A', '875', 2, 'Dihedral angle:N:CA', (185.41299999999998, 160.782, 192.665)), ('A', '1049', 3, 'smoc Outlier', (171.257, 152.598, 202.578)), ('A', '219', 3, 'backbone clash\nside-chain clash', (173.99, 150.631, 205.016)), ('A', '33', 3, 'backbone clash\nside-chain clash', (173.99, 150.631, 205.016)), ('A', '902', 3, 'smoc Outlier', (175.58800000000002, 154.437, 208.686)), ('A', '905', 3, 'smoc Outlier', (171.33800000000002, 155.401, 207.36)), ('A', '906', 3, 'smoc Outlier', (169.959, 152.697, 209.63899999999998)), ('A', '356', 4, 'smoc Outlier', (131.553, 149.44299999999998, 115.17699999999999)), ('A', '357', 4, 'side-chain clash\nsmoc Outlier', (130.681, 147.644, 120.931)), ('A', '360', 4, 'smoc Outlier', (130.38200000000003, 138.24399999999997, 122.077)), ('A', '393', 4, 'side-chain clash\ncablam Outlier', (132.306, 142.314, 124.903)), ('A', '396', 4, 'side-chain clash', (130.681, 147.644, 120.931)), ('A', '523', 4, 'side-chain clash', (132.306, 142.314, 124.903)), ('A', '741', 5, 'smoc Outlier', (176.872, 161.88700000000003, 151.493)), ('A', '742', 5, 'smoc Outlier', (174.41899999999998, 162.315, 148.627)), ('A', '743', 5, 'side-chain clash', (176.463, 165.824, 143.433)), ('A', '748', 5, 'smoc Outlier', (176.595, 168.255, 138.70299999999997)), ('A', '749', 5, 'side-chain clash\nsmoc Outlier', (176.463, 165.824, 143.433)), ('A', '856', 5, 'cablam Outlier', (181.4, 159.7, 153.2)), ('A', '213', 6, 'smoc Outlier', (192.262, 108.535, 146.511)), ('A', '214', 6, 'smoc Outlier', (188.563, 107.962, 147.297)), ('A', '215', 6, 'cablam Outlier', (186.6, 111.1, 147.8)), ('A', '266', 6, 'side-chain clash', (184.201, 110.135, 141.627)), ('A', '64', 6, 'side-chain clash', (184.201, 110.135, 141.627)), ('A', '389', 7, 'smoc Outlier', (145.59, 136.36700000000002, 127.312)), ('A', '390', 7, 'smoc Outlier', (143.99200000000002, 139.664, 128.35500000000002)), ('A', '391', 7, 'Rotamer\nside-chain clash', (139.07, 138.59, 126.077)), ('A', '525', 7, 'side-chain clash\nsmoc Outlier', (139.07, 138.59, 126.077)), ('A', '544', 7, 'cablam Outlier', (138.7, 136.5, 132.4)), ('A', '103', 8, 'side-chain clash', (189.58, 116.133, 125.031)), ('A', '106', 8, 'cablam Outlier', (180.8, 120.3, 124.5)), ('A', '117', 8, 'smoc Outlier', (184.42600000000002, 123.338, 122.21400000000001)), ('A', '118', 8, 'smoc Outlier', (187.507, 121.111, 122.32499999999999)), ('A', '241', 8, 'side-chain clash', (189.58, 116.133, 125.031)), ('A', '374', 9, 'side-chain clash', (149.149, 148.817, 107.718)), ('A', '436', 9, 'side-chain clash', (149.149, 148.817, 107.718)), ('A', '437', 9, 'smoc Outlier', (148.26899999999998, 153.35200000000003, 103.452)), ('A', '438', 9, 'side-chain clash', (143.09, 153.125, 102.934)), ('A', '509', 9, 'side-chain clash\nsmoc Outlier', (143.09, 153.125, 102.934)), ('A', '196', 10, 'side-chain clash', (153.925, 145.321, 125.615)), ('A', '235', 10, 'side-chain clash', (153.925, 145.321, 125.615)), ('A', '382', 10, 'smoc Outlier', (148.171, 147.407, 126.436)), ('A', '383', 10, 'Dihedral angle:CA:C\ncablam Outlier', (151.583, 146.52, 124.87299999999999)), ('A', '384', 10, 'Dihedral angle:N:CA', (149.99200000000002, 144.168, 122.369)), ('A', '108', 11, 'cablam Outlier', (174.4, 119.8, 121.6)), ('A', '110', 11, 'cablam Outlier', (178.7, 116.9, 118.7)), ('A', '111', 11, 'cablam Outlier\nsmoc Outlier', (179.1, 115.4, 115.2)), ('A', '113', 11, 'smoc Outlier', (176.74499999999998, 119.736, 112.895)), ('A', '114', 11, 'smoc Outlier', (176.996, 122.489, 115.529)), ('A', '83', 12, 'Bond angle:C', (176.999, 112.161, 127.336)), ('A', '84', 12, 'Bond angle:N:CA\nsmoc Outlier', (176.053, 114.236, 130.47299999999998)), ('A', '86', 12, 'Dihedral angle:CA:C\ncablam Outlier', (174.497, 120.61, 131.196)), ('A', '87', 12, 'Dihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (171.26399999999998, 122.085, 132.44299999999998)), ('A', '88', 12, 'cablam Outlier', (172.4, 125.1, 134.5)), ('A', '444', 13, 'backbone clash\nsmoc Outlier', (142.679, 161.246, 91.39)), ('A', '447', 13, 'backbone clash', (142.679, 161.246, 91.39)), ('A', '448', 13, 'side-chain clash', (141.839, 160.845, 96.677)), ('A', '497', 13, 'side-chain clash', (141.839, 160.845, 96.677)), ('A', '328', 14, 'side-chain clash\nsmoc Outlier', (134.99, 126.274, 131.568)), ('A', '329', 14, 'side-chain clash', (135.326, 128.813, 129.8)), ('A', '533', 14, 'side-chain clash', (136.8, 125.209, 135.917)), ('A', '580', 14, 'side-chain clash', (134.99, 126.274, 131.568)), ('A', '275', 15, 'smoc Outlier', (175.972, 132.55100000000002, 149.137)), ('A', '289', 15, 'smoc Outlier', (177.26999999999998, 129.661, 153.62)), ('A', '291', 15, 'cablam Outlier', (171.5, 130.4, 151.9)), ('A', '293', 15, 'cablam Outlier', (170.9, 124.5, 152.9)), ('A', '313', 16, 'smoc Outlier', (165.602, 134.88000000000002, 164.798)), ('A', '597', 16, 'smoc Outlier', (164.61499999999998, 129.782, 163.57299999999998)), ('A', '599', 16, 'Dihedral angle:CA:C', (168.655, 128.459, 167.946)), ('A', '600', 16, 'Dihedral angle:N:CA', (171.206, 128.44899999999998, 170.71699999999998)), ('A', '31', 17, 'backbone clash\nDihedral angle:CA:C', (180.14399999999998, 117.39, 147.792)), ('A', '32', 17, 'Dihedral angle:N:CA', (181.218, 118.783, 151.17399999999998)), ('A', '34', 17, 'cablam CA Geom Outlier', (183.2, 122.5, 147.0)), ('A', '60', 17, 'backbone clash', (176.705, 117.991, 147.703)), ('A', '557', 18, 'side-chain clash', (134.871, 137.315, 149.679)), ('A', '565', 18, 'smoc Outlier', (134.01299999999998, 140.44299999999998, 141.198)), ('A', '566', 18, 'backbone clash', (137.48, 139.62, 145.633)), ('A', '574', 18, 'side-chain clash\nbackbone clash\nsmoc Outlier', (137.48, 139.62, 145.633)), ('A', '736', 19, 'side-chain clash', (176.638, 160.405, 158.402)), ('A', '858', 19, 'side-chain clash\nsmoc Outlier', (175.5, 157.076, 157.224)), ('A', '959', 19, 'side-chain clash', (176.964, 156.804, 159.956)), ('A', '962', 19, 'side-chain clash', (175.5, 157.076, 157.224)), ('A', '344', 20, 'side-chain clash', (136.576, 148.79, 105.718)), ('A', '346', 20, 'smoc Outlier', (134.79399999999998, 151.96800000000002, 101.5)), ('A', '347', 20, 'side-chain clash', (136.576, 148.79, 105.718)), ('A', '143', 21, 'side-chain clash', (158.468, 131.896, 198.937)), ('A', '245', 21, 'side-chain clash\nsmoc Outlier', (158.468, 131.896, 198.937)), ('A', '702', 21, 'smoc Outlier', (155.312, 128.46200000000002, 194.77499999999998)), ('A', '1082', 22, 'smoc Outlier', (145.553, 145.13, 229.038)), ('A', '1084', 22, 'cablam Outlier', (144.7, 147.7, 234.6)), ('A', '1087', 22, 'smoc Outlier', (145.26999999999998, 149.29, 226.555)), ('A', '1043', 23, 'cablam Outlier', (167.5, 151.8, 194.5)), ('A', '596', 23, 'side-chain clash', (167.702, 152.036, 188.298)), ('A', '613', 23, 'side-chain clash', (167.702, 152.036, 188.298)), ('A', '1057', 24, 'cablam Outlier', (181.4, 153.9, 178.5)), ('A', '980', 24, 'side-chain clash', (182.629, 149.919, 177.575)), ('A', '984', 24, 'side-chain clash', (182.629, 149.919, 177.575)), ('A', '770', 25, 'smoc Outlier', (170.91899999999998, 165.532, 169.259)), ('A', '773', 25, 'smoc Outlier', (172.006, 167.31, 174.411)), ('A', '774', 25, 'smoc Outlier', (174.403, 164.363, 174.493)), ('A', '616', 26, 'smoc Outlier', (148.811, 124.48700000000001, 162.056)), ('A', '617', 26, 'cablam Outlier', (150.9, 121.3, 162.0)), ('A', '620', 26, 'smoc Outlier', (154.16, 121.71400000000001, 156.491)), ('A', '201', 27, 'side-chain clash\nbackbone clash', (182.11, 132.384, 127.134)), ('A', '229', 27, 'side-chain clash\nbackbone clash', (184.237, 130.673, 123.866)), ('A', '231', 27, 'side-chain clash', (184.237, 130.673, 123.866)), ('A', '189', 28, 'side-chain clash', (192.126, 116.529, 144.728)), ('A', '210', 28, 'side-chain clash', (192.126, 116.529, 144.728)), ('A', '666', 29, 'cablam Outlier\nsmoc Outlier', (158.7, 131.9, 171.8)), ('A', '667', 29, 'cablam Outlier', (155.3, 133.3, 172.6)), ('A', '310', 30, 'side-chain clash\ncablam CA Geom Outlier', (168.615, 131.708, 176.578)), ('A', '663', 30, 'side-chain clash', (168.615, 131.708, 176.578)), ('A', '738', 31, 'side-chain clash\nsmoc Outlier', (173.67, 169.199, 155.666)), ('A', '764', 31, 'side-chain clash', (173.67, 169.199, 155.666)), ('A', '452', 32, 'side-chain clash', (137.549, 166.784, 102.864)), ('A', '494', 32, 'side-chain clash', (137.549, 166.784, 102.864)), ('A', '570', 33, 'cablam Outlier', (142.7, 146.5, 150.0)), ('A', '571', 33, 'smoc Outlier', (141.33100000000002, 146.418, 146.38700000000003)), ('A', '811', 34, 'side-chain clash', (192.944, 150.235, 186.239)), ('A', '820', 34, 'side-chain clash', (192.944, 150.235, 186.239)), ('A', '277', 35, 'side-chain clash', (183.41, 132.595, 147.894)), ('A', '285', 35, 'side-chain clash', (183.41, 132.595, 147.894)), ('A', '804', 36, 'side-chain clash', (188.414, 145.284, 193.082)), ('A', '935', 36, 'side-chain clash', (188.414, 145.284, 193.082)), ('A', '129', 37, 'side-chain clash', (193.675, 125.046, 116.685)), ('A', '169', 37, 'side-chain clash', (193.675, 125.046, 116.685)), ('A', '35', 38, 'side-chain clash', (184.552, 172.631, 198.9)), ('A', '56', 38, 'side-chain clash', (184.552, 172.631, 198.9)), ('A', '412', 39, 'cablam Outlier', (146.7, 160.5, 123.5)), ('A', '414', 39, 'smoc Outlier', (148.768, 165.316, 120.715)), ('A', '370', 40, 'smoc Outlier', (151.648, 139.22, 112.383)), ('A', '371', 40, 'smoc Outlier', (150.415, 140.725, 109.103)), ('A', '979', 41, 'smoc Outlier', (179.894, 156.333, 136.592)), ('A', '983', 41, 'smoc Outlier', (178.722, 157.504, 130.786)), ('A', '316', 42, 'backbone clash', (160.938, 133.095, 154.535)), ('A', '317', 42, 'backbone clash', (160.938, 133.095, 154.535)), ('A', '516', 43, 'side-chain clash\nsmoc Outlier', (132.364, 150.078, 129.844)), ('A', '518', 43, 'side-chain clash\nsmoc Outlier', (132.364, 150.078, 129.844)), ('A', '656', 44, 'side-chain clash', (159.54, 119.276, 181.167)), ('A', '658', 44, 'side-chain clash', (159.54, 119.276, 181.167)), ('A', '1031', 45, 'smoc Outlier', (167.923, 160.92100000000002, 195.15)), ('A', '1034', 45, 'cablam Outlier', (173.2, 162.3, 197.5)), ('A', '561', 46, 'smoc Outlier', (123.20100000000001, 138.56, 138.556)), ('A', '562', 46, 'smoc Outlier', (125.05199999999999, 141.634, 137.24699999999999)), ('A', '802', 47, 'side-chain clash\nsmoc Outlier', (183.477, 152.644, 198.661)), ('A', '805', 47, 'side-chain clash', (183.477, 152.644, 198.661)), ('B', '219', 1, 'backbone clash', (114.288, 156.317, 151.613)), ('B', '220', 1, 'cablam CA Geom Outlier', (115.1, 152.9, 151.7)), ('B', '31', 1, 'backbone clash\nDihedral angle:CA:C', (112.84400000000001, 163.266, 147.80800000000002)), ('B', '32', 1, 'Dihedral angle:N:CA', (113.51400000000001, 161.646, 151.194)), ('B', '33', 1, 'backbone clash', (114.288, 156.317, 151.613)), ('B', '34', 1, 'cablam CA Geom Outlier', (115.7, 158.1, 147.0)), ('B', '35', 1, 'side-chain clash', (118.746, 159.722, 144.146)), ('B', '56', 1, 'side-chain clash', (118.746, 159.722, 144.146)), ('B', '60', 1, 'backbone clash', (115.155, 165.961, 147.537)), ('B', '310', 2, 'cablam CA Geom Outlier', (130.5, 163.1, 171.1)), ('B', '313', 2, 'smoc Outlier', (135.27499999999998, 167.134, 164.79299999999998)), ('B', '596', 2, 'side-chain clash', (137.66, 173.066, 163.913)), ('B', '597', 2, 'smoc Outlier', (131.354, 170.539, 163.563)), ('B', '599', 2, 'Dihedral angle:CA:C', (128.189, 167.712, 167.944)), ('B', '600', 2, 'Dihedral angle:N:CA', (126.905, 165.515, 170.72)), ('B', '613', 2, 'side-chain clash', (137.66, 173.066, 163.913)), ('B', '388', 3, 'smoc Outlier', (147.04899999999998, 183.21699999999998, 123.512)), ('B', '389', 3, 'smoc Outlier', (146.55800000000002, 183.635, 127.265)), ('B', '390', 3, 'smoc Outlier', (150.212, 183.37, 128.30700000000002)), ('B', '391', 3, 'Rotamer\nside-chain clash', (151.609, 188.067, 125.945)), ('B', '525', 3, 'side-chain clash', (151.609, 188.067, 125.945)), ('B', '544', 3, 'cablam Outlier', (150.1, 189.5, 132.3)), ('B', '1055', 4, 'smoc Outlier', (145.394, 142.95100000000002, 185.399)), ('B', '815', 4, 'side-chain clash', (141.954, 137.476, 183.13)), ('B', '823', 4, 'side-chain clash', (141.954, 137.476, 183.13)), ('B', '874', 4, 'Dihedral angle:CA:C\ncablam Outlier', (148.63299999999998, 139.8, 190.282)), ('B', '875', 4, 'Dihedral angle:N:CA', (147.795, 137.075, 192.71499999999997)), ('B', '878', 4, 'smoc Outlier', (148.281, 140.495, 195.814)), ('B', '192', 5, 'side-chain clash', (113.187, 156.267, 135.935)), ('B', '193', 5, 'side-chain clash', (119.877, 154.282, 137.456)), ('B', '194', 5, 'smoc Outlier', (118.928, 157.55, 133.29399999999998)), ('B', '204', 5, 'side-chain clash', (119.877, 154.282, 137.456)), ('B', '223', 5, 'smoc Outlier', (118.838, 150.423, 142.70999999999998)), ('B', '92', 5, 'side-chain clash', (113.187, 156.267, 135.935)), ('B', '1043', 6, 'cablam Outlier', (149.0, 157.1, 194.5)), ('B', '129', 6, 'side-chain clash', (149.117, 156.851, 188.375)), ('B', '169', 6, 'side-chain clash', (149.117, 156.851, 188.375)), ('B', '858', 6, 'side-chain clash', (147.572, 155.02, 191.177)), ('B', '962', 6, 'side-chain clash', (147.572, 155.02, 191.177)), ('B', '103', 7, 'side-chain clash', (107.018, 155.39, 125.407)), ('B', '104', 7, 'smoc Outlier', (110.37899999999999, 157.267, 126.811)), ('B', '106', 7, 'cablam Outlier', (115.0, 161.2, 124.5)), ('B', '118', 7, 'smoc Outlier', (112.363, 154.976, 122.359)), ('B', '241', 7, 'side-chain clash', (107.018, 155.39, 125.407)), ('B', '374', 8, 'side-chain clash', (155.982, 174.445, 107.663)), ('B', '436', 8, 'side-chain clash', (155.982, 174.445, 107.663)), ('B', '437', 8, 'smoc Outlier', (159.905, 172.762, 103.42)), ('B', '438', 8, 'side-chain clash', (162.273, 176.987, 102.541)), ('B', '509', 8, 'side-chain clash', (162.273, 176.987, 102.541)), ('B', '979', 9, 'smoc Outlier', (146.67299999999997, 143.963, 136.62800000000001)), ('B', '980', 9, 'side-chain clash', (151.281, 148.139, 133.637)), ('B', '983', 9, 'smoc Outlier', (148.26999999999998, 144.379, 130.82100000000003)), ('B', '984', 9, 'side-chain clash', (151.281, 148.139, 133.637)), ('B', '988', 9, 'smoc Outlier', (156.638, 149.95200000000003, 130.26)), ('B', '83', 10, 'Bond angle:C', (109.87899999999999, 168.563, 127.343)), ('B', '84', 10, 'Bond angle:N:CA', (112.151, 168.35000000000002, 130.47899999999998)), ('B', '86', 10, 'Dihedral angle:CA:C\ncablam Outlier', (118.44800000000001, 166.507, 131.202)), ('B', '87', 10, 'Dihedral angle:N:CA\ncablam Outlier', (121.34400000000001, 168.57, 132.44299999999998)), ('B', '88', 10, 'cablam Outlier', (123.4, 166.1, 134.5)), ('B', '214', 11, 'smoc Outlier', (100.46700000000001, 160.697, 147.32600000000002)), ('B', '215', 11, 'cablam Outlier', (104.2, 160.8, 147.8)), ('B', '266', 11, 'side-chain clash\nsmoc Outlier', (104.575, 163.375, 141.843)), ('B', '64', 11, 'side-chain clash', (104.575, 163.375, 141.843)), ('B', '666', 12, 'cablam Outlier\nsmoc Outlier', (136.1, 174.6, 171.8)), ('B', '667', 12, 'cablam Outlier', (139.1, 176.8, 172.6)), ('B', '671', 12, 'smoc Outlier', (133.17899999999997, 174.728, 175.983)), ('B', '697', 12, 'smoc Outlier', (133.69299999999998, 177.131, 181.365)), ('B', '108', 13, 'cablam Outlier', (117.8, 167.0, 121.6)), ('B', '110', 13, 'cablam Outlier', (113.1, 164.7, 118.7)), ('B', '111', 13, 'cablam Outlier', (111.6, 165.1, 115.2)), ('B', '134', 13, 'smoc Outlier', (108.813, 160.661, 112.929)), ('B', '444', 14, 'backbone clash\nsmoc Outlier', (169.93, 173.76, 91.109)), ('B', '447', 14, 'backbone clash', (169.93, 173.76, 91.109)), ('B', '448', 14, 'side-chain clash', (169.609, 175.069, 96.543)), ('B', '497', 14, 'side-chain clash', (169.609, 175.069, 96.543)), ('B', '540', 15, 'smoc Outlier', (139.93, 185.532, 139.82700000000003)), ('B', '547', 15, 'cablam Outlier', (146.9, 183.4, 137.1)), ('B', '548', 15, 'smoc Outlier', (145.507, 183.17399999999998, 140.623)), ('B', '549', 15, 'cablam CA Geom Outlier', (142.7, 184.0, 143.0)), ('B', '328', 16, 'side-chain clash', (142.939, 197.542, 131.767)), ('B', '329', 16, 'side-chain clash', (145.12, 196.245, 129.563)), ('B', '533', 16, 'side-chain clash', (140.904, 196.983, 136.348)), ('B', '580', 16, 'side-chain clash', (145.12, 196.245, 129.563)), ('B', '291', 17, 'cablam Outlier', (128.4, 164.3, 151.9)), ('B', '293', 17, 'cablam Outlier', (123.6, 167.7, 152.9)), ('B', '297', 17, 'smoc Outlier', (126.712, 164.559, 157.237)), ('B', '301', 17, 'smoc Outlier', (131.816, 161.159, 155.701)), ('B', '557', 18, 'side-chain clash', (152.77, 191.926, 149.44)), ('B', '565', 18, 'smoc Outlier', (155.89000000000001, 191.64499999999998, 141.129)), ('B', '566', 18, 'backbone clash', (153.458, 189.04, 145.574)), ('B', '574', 18, 'side-chain clash\nbackbone clash', (153.458, 189.04, 145.574)), ('B', '707', 19, 'smoc Outlier', (142.048, 181.812, 207.69)), ('B', '738', 19, 'side-chain clash\nsmoc Outlier', (143.191, 183.82, 205.395)), ('B', '764', 19, 'side-chain clash', (143.191, 183.82, 205.395)), ('B', '1057', 20, 'cablam Outlier', (143.8, 144.0, 178.5)), ('B', '277', 20, 'side-chain clash\nsmoc Outlier', (139.718, 144.853, 177.676)), ('B', '285', 20, 'side-chain clash', (139.718, 144.853, 177.676)), ('B', '1094', 21, 'smoc Outlier', (149.595, 170.83800000000002, 217.88100000000003)), ('B', '1105', 21, 'smoc Outlier', (146.35800000000003, 166.60899999999998, 219.863)), ('B', '1107', 21, 'smoc Outlier', (147.63899999999998, 166.556, 213.425)), ('B', '617', 22, 'cablam Outlier\nsmoc Outlier', (130.9, 186.7, 162.0)), ('B', '619', 22, 'smoc Outlier', (132.251, 186.315, 156.054)), ('B', '620', 22, 'smoc Outlier', (129.6, 183.61299999999997, 156.455)), ('B', '1082', 23, 'smoc Outlier', (154.22299999999998, 179.493, 228.996)), ('B', '1084', 23, 'cablam Outlier', (156.9, 178.9, 234.5)), ('B', '1133', 23, 'smoc Outlier', (149.653, 181.622, 225.454)), ('B', '196', 24, 'side-chain clash', (144.633, 152.101, 205.112)), ('B', '235', 24, 'side-chain clash\nsmoc Outlier', (144.633, 152.101, 205.112)), ('B', '720', 24, 'smoc Outlier', (138.86, 155.32100000000003, 203.257)), ('B', '142', 25, 'smoc Outlier', (96.268, 154.20499999999998, 122.56700000000001)), ('B', '143', 25, 'side-chain clash\nsmoc Outlier', (92.811, 153.772, 126.528)), ('B', '245', 25, 'side-chain clash', (92.811, 153.772, 126.528)), ('B', '736', 26, 'side-chain clash', (151.459, 144.505, 158.263)), ('B', '856', 26, 'cablam Outlier', (148.8, 141.0, 153.3)), ('B', '959', 26, 'side-chain clash', (148.447, 146.159, 160.038)), ('B', '201', 27, 'side-chain clash\nbackbone clash', (163.655, 195.794, 137.904)), ('B', '229', 27, 'side-chain clash\nbackbone clash', (163.655, 195.794, 137.904)), ('B', '562', 27, 'smoc Outlier', (161.405, 198.797, 137.159)), ('B', '1144', 28, 'smoc Outlier', (153.39800000000002, 160.507, 242.73)), ('B', '1147', 28, 'smoc Outlier', (151.567, 161.039, 248.121)), ('B', '189', 29, 'side-chain clash', (106.036, 153.302, 144.728)), ('B', '210', 29, 'side-chain clash', (106.036, 153.302, 144.728)), ('B', '758', 30, 'cablam Outlier', (167.8, 147.3, 153.0)), ('B', '760', 30, 'smoc Outlier', (162.866, 145.82800000000003, 153.758)), ('B', '452', 31, 'side-chain clash', (177.395, 175.449, 102.465)), ('B', '494', 31, 'side-chain clash', (177.395, 175.449, 102.465)), ('B', '570', 32, 'cablam Outlier', (156.8, 181.1, 149.9)), ('B', '571', 32, 'smoc Outlier', (157.40200000000002, 182.33, 146.33700000000002)), ('B', '489', 33, 'smoc Outlier', (191.36800000000002, 172.111, 105.32799999999999)), ('B', '490', 33, 'smoc Outlier', (188.30100000000002, 174.27299999999997, 105.932)), ('B', '344', 34, 'side-chain clash', (161.797, 185.198, 105.725)), ('B', '347', 34, 'side-chain clash\nsmoc Outlier', (161.797, 185.198, 105.725)), ('B', '811', 35, 'side-chain clash', (134.91, 136.021, 186.554)), ('B', '820', 35, 'side-chain clash', (134.91, 136.021, 186.554)), ('B', '804', 36, 'side-chain clash', (132.845, 142.293, 193.215)), ('B', '935', 36, 'side-chain clash', (132.845, 142.293, 193.215)), ('B', '412', 37, 'cablam Outlier', (166.9, 170.5, 123.5)), ('B', '414', 37, 'smoc Outlier', (170.02200000000002, 166.377, 120.69)), ('B', '316', 38, 'backbone clash', (136.035, 172.072, 154.526)), ('B', '317', 38, 'backbone clash', (136.035, 172.072, 154.526)), ('B', '393', 39, 'side-chain clash\ncablam Outlier', (158.262, 192.143, 124.926)), ('B', '523', 39, 'side-chain clash', (158.262, 192.143, 124.926)), ('B', '357', 40, 'side-chain clash', (164.066, 190.556, 120.93)), ('B', '396', 40, 'side-chain clash', (164.066, 190.556, 120.93)), ('B', '383', 41, 'Dihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (152.345, 173.359, 124.84400000000001)), ('B', '384', 41, 'Dihedral angle:N:CA', (151.10399999999998, 175.90800000000002, 122.336)), ('B', '516', 42, 'side-chain clash', (136.267, 174.542, 199.104)), ('B', '518', 42, 'side-chain clash', (136.267, 174.542, 199.104)), ('B', '656', 43, 'side-chain clash', (124.68, 180.85, 180.956)), ('B', '658', 43, 'side-chain clash', (124.68, 180.85, 180.956)), ('B', '554', 44, 'smoc Outlier', (145.191, 199.191, 147.534)), ('B', '585', 44, 'smoc Outlier', (147.85200000000003, 196.271, 144.297)), ('B', '231', 45, 'side-chain clash', (120.939, 157.342, 122.282)), ('B', '233', 45, 'side-chain clash\nsmoc Outlier', (120.939, 157.342, 122.282)), ('C', '103', 1, 'side-chain clash', (182.416, 207.574, 125.42)), ('C', '104', 1, 'smoc Outlier', (182.282, 203.71499999999997, 126.779)), ('C', '105', 1, 'smoc Outlier', (183.74699999999999, 201.464, 124.065)), ('C', '106', 1, 'cablam Outlier', (183.4, 197.7, 124.5)), ('C', '118', 1, 'smoc Outlier', (179.312, 203.134, 122.32499999999999)), ('C', '192', 1, 'side-chain clash', (180.546, 202.024, 136.026)), ('C', '193', 1, 'side-chain clash', (175.421, 197.254, 137.241)), ('C', '194', 1, 'smoc Outlier', (178.24899999999997, 196.176, 133.267)), ('C', '196', 1, 'side-chain clash', (179.527, 192.537, 126.417)), ('C', '201', 1, 'side-chain clash\nbackbone clash', (170.948, 195.162, 128.144)), ('C', '202', 1, 'smoc Outlier', (172.478, 194.594, 131.685)), ('C', '203', 1, 'smoc Outlier', (173.33200000000002, 198.086, 132.92100000000002)), ('C', '204', 1, 'side-chain clash\nsmoc Outlier', (175.421, 197.254, 137.241)), ('C', '223', 1, 'smoc Outlier', (172.10899999999998, 199.82600000000002, 142.672)), ('C', '229', 1, 'side-chain clash\nbackbone clash', (169.457, 196.361, 125.219)), ('C', '231', 1, 'side-chain clash', (172.314, 195.599, 124.2)), ('C', '233', 1, 'side-chain clash\nsmoc Outlier', (177.027, 194.223, 122.649)), ('C', '235', 1, 'side-chain clash', (179.527, 192.537, 126.417)), ('C', '241', 1, 'side-chain clash', (182.416, 207.574, 125.42)), ('C', '92', 1, 'side-chain clash', (180.546, 202.024, 136.026)), ('C', '218', 2, 'smoc Outlier', (182.435, 204.535, 153.24499999999998)), ('C', '220', 2, 'cablam CA Geom Outlier', (176.2, 201.9, 151.7)), ('C', '270', 2, 'smoc Outlier', (182.435, 190.77299999999997, 139.38800000000003)), ('C', '31', 2, 'backbone clash\nDihedral angle:CA:C', (186.22299999999998, 198.611, 147.788)), ('C', '32', 2, 'Dihedral angle:N:CA', (184.48100000000002, 198.844, 151.171)), ('C', '34', 2, 'cablam CA Geom Outlier', (180.3, 198.7, 147.0)), ('C', '35', 2, 'side-chain clash', (180.266, 195.326, 143.96)), ('C', '56', 2, 'side-chain clash', (180.266, 195.326, 143.96)), ('C', '60', 2, 'backbone clash', (187.408, 195.309, 147.675)), ('C', '83', 2, 'Bond angle:C', (192.317, 198.506, 127.331)), ('C', '84', 2, 'Bond angle:N:CA', (190.995, 196.64899999999997, 130.467)), ('C', '86', 2, 'Dihedral angle:CA:C\ncablam Outlier', (186.252, 192.11499999999998, 131.19)), ('C', '87', 2, 'Dihedral angle:N:CA\ncablam Outlier', (186.591, 188.577, 132.437)), ('C', '88', 2, 'cablam Outlier', (183.4, 188.1, 134.5)), ('C', '1043', 3, 'cablam Outlier', (162.8, 170.4, 194.5)), ('C', '1060', 3, 'smoc Outlier', (155.165, 176.753, 184.52800000000002)), ('C', '1062', 3, 'smoc Outlier', (158.153, 177.156, 190.412)), ('C', '189', 3, 'side-chain clash', (162.199, 170.155, 188.192)), ('C', '210', 3, 'side-chain clash', (162.199, 170.155, 188.192)), ('C', '438', 3, 'side-chain clash', (160.063, 179.364, 184.92)), ('C', '509', 3, 'side-chain clash\nsmoc Outlier', (160.063, 179.364, 184.92)), ('C', '729', 3, 'smoc Outlier', (154.22, 172.499, 179.754)), ('C', '792', 3, 'side-chain clash', (161.741, 172.921, 191.072)), ('C', '211', 4, 'smoc Outlier', (181.69, 214.815, 149.499)), ('C', '213', 4, 'smoc Outlier', (187.834, 213.533, 146.51)), ('C', '214', 4, 'smoc Outlier', (190.18, 210.61599999999999, 147.295)), ('C', '215', 4, 'cablam Outlier', (188.4, 207.3, 147.8)), ('C', '266', 4, 'side-chain clash', (190.628, 206.285, 141.827)), ('C', '63', 4, 'smoc Outlier', (191.95700000000002, 200.097, 140.394)), ('C', '64', 4, 'side-chain clash', (190.628, 206.285, 141.827)), ('C', '874', 5, 'Dihedral angle:CA:C\ncablam Outlier', (147.96800000000002, 179.383, 190.242)), ('C', '875', 5, 'Dihedral angle:N:CA', (146.02200000000002, 181.47299999999998, 192.67)), ('C', '876', 5, 'smoc Outlier', (144.005, 178.474, 193.812)), ('C', '877', 5, 'smoc Outlier', (147.14899999999997, 176.36700000000002, 194.086)), ('C', '880', 5, 'smoc Outlier', (145.76399999999998, 176.751, 199.395)), ('C', '884', 5, 'smoc Outlier', (145.761, 175.526, 204.278)), ('C', '389', 6, 'smoc Outlier', (187.055, 159.20299999999997, 127.298)), ('C', '390', 6, 'smoc Outlier', (184.999, 156.171, 128.342)), ('C', '391', 6, 'Rotamer\nside-chain clash', (188.672, 152.718, 125.536)), ('C', '525', 6, 'side-chain clash', (188.672, 152.718, 125.536)), ('C', '544', 6, 'cablam Outlier', (190.4, 153.2, 132.3)), ('C', '977', 7, 'smoc Outlier', (151.804, 175.73999999999998, 140.783)), ('C', '979', 7, 'smoc Outlier', (152.617, 178.93, 136.594)), ('C', '980', 7, 'side-chain clash', (154.067, 172.669, 133.67)), ('C', '983', 7, 'smoc Outlier', (152.187, 177.33100000000002, 130.788)), ('C', '984', 7, 'side-chain clash', (154.067, 172.669, 133.67)), ('C', '444', 8, 'backbone clash\nsmoc Outlier', (167.021, 144.228, 91.237)), ('C', '447', 8, 'backbone clash\nsmoc Outlier', (167.021, 144.228, 91.237)), ('C', '448', 8, 'side-chain clash', (167.654, 143.656, 96.69)), ('C', '497', 8, 'side-chain clash', (167.654, 143.656, 96.69)), ('C', '1008', 9, 'smoc Outlier', (154.796, 166.10399999999998, 161.383)), ('C', '1012', 9, 'smoc Outlier', (155.40200000000002, 164.069, 167.102)), ('C', '1015', 9, 'smoc Outlier', (155.531, 166.869, 171.44899999999998)), ('C', '1019', 9, 'smoc Outlier', (154.68800000000002, 165.568, 177.38000000000002)), ('C', '328', 10, 'side-chain clash', (200.852, 155.32, 131.917)), ('C', '329', 10, 'side-chain clash', (198.647, 154.235, 129.617)), ('C', '533', 10, 'side-chain clash\nsmoc Outlier', (201.363, 157.532, 136.405)), ('C', '580', 10, 'side-chain clash', (198.647, 154.235, 129.617)), ('C', '374', 11, 'side-chain clash', (174.307, 156.091, 107.796)), ('C', '376', 11, 'smoc Outlier', (170.371, 157.477, 112.218)), ('C', '436', 11, 'side-chain clash', (174.307, 156.091, 107.796)), ('C', '437', 11, 'smoc Outlier', (170.997, 153.038, 103.44200000000001)), ('C', '309', 12, 'smoc Outlier', (174.60299999999998, 184.823, 168.767)), ('C', '597', 12, 'smoc Outlier', (183.259, 178.963, 163.566)), ('C', '599', 12, 'Dihedral angle:CA:C', (182.38600000000002, 183.123, 167.939)), ('C', '600', 12, 'Dihedral angle:N:CA', (181.121, 185.336, 170.71099999999998)), ('C', '108', 13, 'cablam Outlier', (187.0, 192.4, 121.5)), ('C', '110', 13, 'cablam Outlier', (187.4, 197.6, 118.7)), ('C', '111', 13, 'cablam Outlier', (188.4, 198.7, 115.2)), ('C', '113', 13, 'smoc Outlier', (185.879, 194.503, 112.891)), ('C', '552', 14, 'smoc Outlier', (196.936, 157.635, 145.146)), ('C', '557', 14, 'side-chain clash', (191.728, 149.568, 149.632)), ('C', '574', 14, 'side-chain clash', (191.728, 149.568, 149.632)), ('C', '587', 14, 'smoc Outlier', (192.591, 155.585, 146.656)), ('C', '736', 15, 'side-chain clash', (150.819, 174.542, 158.295)), ('C', '856', 15, 'cablam Outlier', (149.0, 178.5, 153.2)), ('C', '858', 15, 'side-chain clash', (150.819, 174.542, 158.295)), ('C', '959', 15, 'side-chain clash', (153.486, 176.075, 159.505)), ('C', '742', 16, 'smoc Outlier', (150.177, 171.195, 148.629)), ('C', '743', 16, 'side-chain clash\nsmoc Outlier', (146.159, 171.292, 143.426)), ('C', '748', 16, 'smoc Outlier', (143.941, 170.112, 138.706)), ('C', '749', 16, 'side-chain clash', (146.159, 171.292, 143.426)), ('C', '1057', 17, 'cablam Outlier', (154.0, 181.5, 178.5)), ('C', '452', 17, 'side-chain clash', (156.89, 184.46, 177.646)), ('C', '494', 17, 'side-chain clash', (156.89, 184.46, 177.646)), ('C', '344', 18, 'side-chain clash', (180.809, 145.216, 105.705)), ('C', '346', 18, 'smoc Outlier', (178.931, 142.06, 101.485)), ('C', '347', 18, 'side-chain clash\nsmoc Outlier', (180.809, 145.216, 105.705)), ('C', '815', 19, 'side-chain clash', (149.735, 186.311, 182.728)), ('C', '819', 19, 'smoc Outlier', (153.875, 186.42600000000002, 186.424)), ('C', '823', 19, 'side-chain clash', (149.735, 186.311, 182.728)), ('C', '1082', 20, 'smoc Outlier', (179.516, 154.766, 229.02700000000002)), ('C', '1084', 20, 'cablam Outlier', (177.7, 152.8, 234.5)), ('C', '1087', 20, 'smoc Outlier', (176.055, 152.442, 226.54399999999998)), ('C', '142', 21, 'smoc Outlier', (186.68200000000002, 217.463, 122.52199999999999)), ('C', '143', 21, 'side-chain clash', (187.954, 220.837, 126.697)), ('C', '245', 21, 'side-chain clash', (187.954, 220.837, 126.697)), ('C', '1030', 22, 'smoc Outlier', (151.651, 167.336, 193.10999999999999)), ('C', '1031', 22, 'smoc Outlier', (154.646, 166.254, 195.14899999999997)), ('C', '1034', 22, 'cablam Outlier\nsmoc Outlier', (150.8, 170.2, 197.5)), ('C', '666', 23, 'cablam Outlier\nsmoc Outlier', (184.4, 172.8, 171.8)), ('C', '667', 23, 'cablam Outlier', (184.8, 169.1, 172.6)), ('C', '310', 24, 'side-chain clash\ncablam CA Geom Outlier', (179.465, 181.685, 176.731)), ('C', '663', 24, 'side-chain clash', (179.465, 181.685, 176.731)), ('C', '738', 25, 'side-chain clash\nsmoc Outlier', (144.608, 167.014, 155.691)), ('C', '764', 25, 'side-chain clash', (144.608, 167.014, 155.691)), ('C', '219', 26, 'backbone clash\nside-chain clash', (160.19, 176.926, 205.043)), ('C', '33', 26, 'backbone clash\nside-chain clash', (160.19, 176.926, 205.043)), ('C', '136', 27, 'smoc Outlier', (190.803, 206.24499999999998, 116.586)), ('C', '137', 27, 'smoc Outlier', (193.904, 204.935, 118.335)), ('C', '570', 28, 'cablam Outlier', (179.7, 151.6, 150.0)), ('C', '571', 28, 'smoc Outlier', (180.484, 150.485, 146.374)), ('C', '811', 29, 'side-chain clash', (151.629, 193.206, 186.334)), ('C', '820', 29, 'side-chain clash', (151.629, 193.206, 186.334)), ('C', '277', 30, 'side-chain clash', (171.632, 193.517, 148.181)), ('C', '285', 30, 'side-chain clash', (171.632, 193.517, 148.181)), ('C', '804', 31, 'side-chain clash', (157.977, 191.875, 193.111)), ('C', '935', 31, 'side-chain clash', (157.977, 191.875, 193.111)), ('C', '129', 32, 'side-chain clash', (172.39, 206.584, 116.537)), ('C', '169', 32, 'side-chain clash', (172.39, 206.584, 116.537)), ('C', '332', 33, 'smoc Outlier', (198.48700000000002, 150.218, 123.17199999999998)), ('C', '333', 33, 'smoc Outlier', (198.64399999999998, 151.997, 119.815)), ('C', '291', 34, 'cablam Outlier', (179.3, 184.6, 151.9)), ('C', '293', 34, 'cablam Outlier', (184.7, 187.0, 152.9)), ('C', '596', 35, 'side-chain clash', (182.344, 171.782, 163.772)), ('C', '613', 35, 'side-chain clash', (182.344, 171.782, 163.772)), ('C', '316', 36, 'backbone clash', (182.369, 174.1, 154.446)), ('C', '317', 36, 'backbone clash', (182.369, 174.1, 154.446)), ('C', '393', 37, 'side-chain clash\ncablam Outlier', (188.546, 144.934, 124.947)), ('C', '523', 37, 'side-chain clash', (188.546, 144.934, 124.947)), ('C', '357', 38, 'side-chain clash', (184.722, 140.425, 120.94)), ('C', '396', 38, 'side-chain clash', (184.722, 140.425, 120.94)), ('C', '383', 39, 'side-chain clash\nDihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (175.265, 159.318, 124.863)), ('C', '384', 39, 'Dihedral angle:N:CA', (178.096, 159.117, 122.35799999999999)), ('C', '900', 40, 'smoc Outlier', (152.48200000000003, 176.85800000000003, 212.41899999999998)), ('C', '901', 40, 'smoc Outlier', (152.694, 175.534, 208.894)), ('C', '516', 41, 'side-chain clash\nsmoc Outlier', (181.699, 140.764, 130.234)), ('C', '518', 41, 'side-chain clash\nsmoc Outlier', (181.699, 140.764, 130.234)), ('C', '617', 42, 'cablam Outlier', (197.5, 171.3, 162.0)), ('C', '620', 42, 'smoc Outlier', (195.471, 173.944, 156.47899999999998)), ('C', '656', 43, 'side-chain clash', (194.883, 179.798, 181.161)), ('C', '658', 43, 'side-chain clash', (194.883, 179.798, 181.161)), ('C', '1095', 44, 'smoc Outlier', (176.771, 163.63, 220.71699999999998)), ('C', '1105', 44, 'smoc Outlier', (172.29299999999998, 168.004, 219.86700000000002)), ('C', '802', 45, 'side-chain clash\nsmoc Outlier', (153.998, 183.789, 198.696)), ('C', '805', 45, 'side-chain clash', (153.998, 183.789, 198.696))]
data['omega'] = [('A', '  87 ', 'ASN', None, (172.433, 121.203, 132.38)), ('A', ' 384 ', 'PRO', None, (150.94200000000006, 145.149, 122.931)), ('B', '  87 ', 'ASN', None, (119.99500000000003, 168.0, 132.382)), ('B', ' 384 ', 'PRO', None, (151.478, 174.59600000000006, 122.90000000000002)), ('C', '  87 ', 'ASN', None, (186.77100000000004, 190.031, 132.374)), ('C', ' 384 ', 'PRO', None, (176.77200000000005, 159.449, 122.921))]
data['cablam'] = [('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (187.1, 140.3, 139.2)), ('A', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (174.5, 120.6, 131.2)), ('A', '87', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (171.3, 122.1, 132.4)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (172.4, 125.1, 134.5)), ('A', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS--E', (197.2, 113.4, 133.7)), ('A', '106', 'PHE', ' beta sheet', 'strand\nEEEES', (180.8, 120.3, 124.5)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (174.4, 119.8, 121.6)), ('A', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (178.7, 116.9, 118.7)), ('A', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (179.1, 115.4, 115.2)), ('A', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (186.6, 111.1, 147.8)), ('A', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (171.5, 130.4, 151.9)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (170.9, 124.5, 152.9)), ('A', '383', 'CYS', 'check CA trace,carbonyls, peptide', ' \nSS-GG', (151.6, 146.5, 124.9)), ('A', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (134.1, 143.6, 127.6)), ('A', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\n-STT-', (146.7, 160.5, 123.5)), ('A', '521', 'PRO', ' beta sheet', ' \nSS---', (130.6, 140.5, 132.5)), ('A', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (138.7, 136.5, 132.4)), ('A', '547', 'THR', ' beta sheet', 'strand\nTEE--', (145.6, 136.8, 137.2)), ('A', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (142.7, 146.5, 150.0)), ('A', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (150.9, 121.3, 162.0)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (158.7, 131.9, 171.8)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (155.3, 133.3, 172.6)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nG-TTH', (166.5, 172.9, 153.0)), ('A', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (181.4, 159.7, 153.2)), ('A', '874', 'THR', ' alpha helix', 'helix\nHHHHH', (182.6, 160.1, 190.2)), ('A', '890', 'ALA', 'check CA trace,carbonyls, peptide', 'helix\nHHHSS', (172.1, 170.1, 200.5)), ('A', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (173.2, 162.3, 197.5)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (167.5, 151.8, 194.5)), ('A', '1057', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (181.4, 153.9, 178.5)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (144.7, 147.7, 234.6)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (157.8, 152.1, 218.0)), ('A', '34', 'ARG', 'check CA trace', ' \n-S---', (183.2, 122.5, 147.0)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (188.0, 124.5, 151.7)), ('A', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (171.5, 132.8, 171.1)), ('A', '549', 'THR', 'check CA trace', ' \nE--EE', (147.2, 132.8, 143.1)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (129.2, 145.8, 139.3)), ('B', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (118.4, 166.5, 131.2)), ('B', '87', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (121.3, 168.6, 132.4)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (123.4, 166.1, 134.5)), ('B', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS--E', (100.8, 150.4, 133.7)), ('B', '106', 'PHE', ' beta sheet', 'strand\nEEEES', (115.0, 161.2, 124.5)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (117.8, 167.0, 121.6)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (113.1, 164.7, 118.7)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (111.6, 165.1, 115.2)), ('B', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (104.2, 160.8, 147.8)), ('B', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (128.4, 164.3, 151.9)), ('B', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (123.6, 167.7, 152.9)), ('B', '383', 'CYS', 'check CA trace,carbonyls, peptide', ' \nSS-GG', (152.3, 173.4, 124.8)), ('B', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (158.6, 189.9, 127.5)), ('B', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\n-STT-', (166.9, 170.5, 123.5)), ('B', '521', 'PRO', ' beta sheet', ' \nSS---', (157.7, 194.5, 132.4)), ('B', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (150.1, 189.5, 132.3)), ('B', '547', 'THR', ' beta sheet', 'strand\nTEE--', (146.9, 183.4, 137.1)), ('B', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (156.8, 181.1, 149.9)), ('B', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (130.9, 186.7, 162.0)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (136.1, 174.6, 171.8)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (139.1, 176.8, 172.6)), ('B', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nG-TTH', (167.8, 147.3, 153.0)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (148.8, 141.0, 153.3)), ('B', '874', 'THR', ' alpha helix', 'helix\nHHHHH', (148.6, 139.8, 190.3)), ('B', '890', 'ALA', 'check CA trace,carbonyls, peptide', 'helix\nHHHSS', (162.6, 144.0, 200.5)), ('B', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (155.2, 146.9, 197.5)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (149.0, 157.1, 194.5)), ('B', '1057', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (143.8, 144.0, 178.5)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (156.9, 178.9, 234.5)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (154.1, 165.4, 218.0)), ('B', '34', 'ARG', 'check CA trace', ' \n-S---', (115.7, 158.1, 147.0)), ('B', '220', 'PHE', 'check CA trace', ' \nSS---', (115.1, 152.9, 151.7)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (130.5, 163.1, 171.1)), ('B', '549', 'THR', 'check CA trace', ' \nE--EE', (142.7, 184.0, 143.0)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (162.9, 193.2, 139.2)), ('C', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (186.3, 192.1, 131.2)), ('C', '87', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nE-TT-', (186.6, 188.6, 132.4)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (183.4, 188.1, 134.5)), ('C', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS--E', (181.2, 215.4, 133.7)), ('C', '106', 'PHE', ' beta sheet', 'strand\nEEEES', (183.4, 197.7, 124.5)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (187.0, 192.4, 121.5)), ('C', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (187.4, 197.6, 118.7)), ('C', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (188.4, 198.7, 115.2)), ('C', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (188.4, 207.3, 147.8)), ('C', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (179.3, 184.6, 151.9)), ('C', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (184.7, 187.0, 152.9)), ('C', '383', 'CYS', 'check CA trace,carbonyls, peptide', ' \nSS-GG', (175.3, 159.3, 124.9)), ('C', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (186.5, 145.7, 127.6)), ('C', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\n-STT-', (165.6, 148.1, 123.5)), ('C', '521', 'PRO', ' beta sheet', ' \nSS---', (190.9, 144.1, 132.4)), ('C', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (190.4, 153.2, 132.3)), ('C', '547', 'THR', ' beta sheet', 'strand\nTEE--', (186.7, 159.0, 137.2)), ('C', '570', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\n-TTS-', (179.7, 151.6, 150.0)), ('C', '617', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (197.5, 171.3, 162.0)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (184.4, 172.8, 171.8)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (184.8, 169.1, 172.6)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nG-TTH', (144.9, 159.0, 153.0)), ('C', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (149.0, 178.5, 153.2)), ('C', '874', 'THR', ' alpha helix', 'helix\nHHHHH', (148.0, 179.4, 190.2)), ('C', '890', 'ALA', 'check CA trace,carbonyls, peptide', 'helix\nHHHSS', (144.6, 165.2, 200.5)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (150.8, 170.2, 197.5)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (162.8, 170.4, 194.5)), ('C', '1057', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (154.0, 181.5, 178.5)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (177.7, 152.8, 234.5)), ('C', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (167.4, 161.9, 218.0)), ('C', '34', 'ARG', 'check CA trace', ' \n-S---', (180.3, 198.7, 147.0)), ('C', '220', 'PHE', 'check CA trace', ' \nSS---', (176.2, 201.9, 151.7)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (177.2, 183.4, 171.0)), ('C', '549', 'THR', 'check CA trace', ' \nE--EE', (189.3, 162.3, 143.1))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-21997/6x29/Model_validation_1/validation_cootdata/molprobity_probe6x29_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

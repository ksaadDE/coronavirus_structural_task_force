# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('A', ' 505 ', 'PRO', None, (137.22599999999997, 105.18500000000002, 143.98))]
data['rota'] = []
data['cbeta'] = []
data['probe'] = [(' A 358  ASP  H  ', ' A 534  ASN HD21', -0.758, (150.661, 100.829, 128.354)), (' A 200  GLY  HA2', ' A 230  GLY  H  ', -0.741, (137.487, 113.432, 84.671)), (' A 341  VAL HG21', ' B 103  LEU HD21', -0.723, (137.367, 89.395, 134.185)), (' A  95  ALA  HB2', ' A 188  LYS  HB3', -0.712, (121.725, 111.783, 94.634)), (' A 576  LEU HD11', ' A 686  THR HG22', -0.707, (143.47, 124.002, 133.957)), (' A 200  GLY  HA3', ' A 227  PRO  HA ', -0.694, (136.554, 113.091, 82.084)), (' D 147  PHE  HB3', ' D 154  TRP  HB2', -0.678, (83.917, 120.169, 157.804)), (' A 411  LYS  HG2', ' C  18  GLN HE22', -0.67, (118.55, 117.365, 155.681)), (' A 615  MET  HB2', ' A 766  PHE  HE2', -0.664, (126.628, 143.459, 122.94)), (' A 206  THR  OG1', ' A 209  ASN  ND2', -0.661, (126.473, 125.193, 93.926)), (' A 170  ASP  OD2', ' A 173  ARG  NH2', -0.66, (107.109, 114.304, 118.708)), (' D 177  SER  HB3', ' D 182  TRP  HH2', -0.655, (80.579, 110.22, 175.719)), (' A  28  THR HG22', ' A  54  CYS  HA ', -0.651, (109.612, 132.753, 89.496)), (' A 831  TYR  HB3', ' A 868  PRO  HB2', -0.646, (127.52, 149.047, 144.138)), (' A 705  ASN  ND2', ' A 788  TYR  OH ', -0.644, (127.46, 129.107, 112.259)), (' A 531  THR  O  ', ' A 657  ASN  ND2', -0.639, (148.356, 109.283, 128.811)), (' A 256  HIS  ND1', ' A 260  ASP  O  ', -0.635, (116.638, 99.403, 109.533)), (' A 631  ARG  NH2', ' A 684  ASP  OD1', -0.635, (137.912, 118.922, 131.599)), (' A  11  VAL HG23', ' A 115  SER  HB3', -0.633, (110.238, 124.356, 82.249)), (' A 366  LEU HD22', ' A 374  TYR  HE2', -0.626, (149.708, 95.206, 139.026)), (' A 653  TYR  O  ', ' A 657  ASN  ND2', -0.611, (147.008, 109.643, 127.824)), (' A 344  THR HG23', ' A 359  VAL HG11', -0.609, (147.244, 96.339, 127.821)), (' D 160  VAL  HB ', ' D 185  ILE  HB ', -0.601, (86.88, 107.248, 162.101)), (' A 684  ASP  HB3', ' A 687  THR  HB ', -0.6, (136.456, 121.246, 134.579)), (' A 469  LEU  O  ', ' A 473  VAL HG23', -0.592, (139.073, 125.067, 114.903)), (' A 758  LEU HD12', ' A 759  SER  H  ', -0.592, (135.854, 133.425, 134.423)), (' A 583  ARG  NH2', ' A 590  GLY  O  ', -0.59, (144.185, 139.045, 139.234)), (' A 257  VAL  HB ', ' A 263  LYS  HD3', -0.59, (117.417, 93.674, 107.199)), (' A 414  ASN  OD1', ' A 415  PHE  N  ', -0.589, (117.882, 129.059, 160.249)), (' A 746  TYR  OH ', ' A 750  ARG  NH1', -0.589, (144.088, 139.921, 121.822)), (' C  58  VAL HG22', ' D 119  ILE HG12', -0.583, (101.214, 116.685, 156.18)), (' A 372  LEU HD23', ' B  87  MET  HE1', -0.582, (145.287, 104.14, 143.939)), (' A 568  ASN  OD1', ' A 654  ARG  NH2', -0.581, (145.481, 115.593, 131.978)), (' A  90  LEU HD13', ' A 192  PHE  CE1', -0.579, (126.919, 115.282, 87.981)), (' A 851  ASP  HA ', ' A 855  MET  HB3', -0.579, (128.612, 134.033, 163.886)), (' A 416  ASN  HB2', ' C   8  CYS  SG ', -0.578, (113.653, 133.518, 160.03)), (' A 203  GLY  HA3', ' A 222  PHE  HD1', -0.573, (132.641, 122.055, 88.798)), (' A  80  TYR  HE1', ' A 101  PHE  HB3', -0.573, (119.393, 123.607, 76.877)), (' A 410  VAL  HB ', ' A 444  GLN  H  ', -0.567, (116.504, 119.12, 149.165)), (' B 162  ALA  HB2', ' B 183  PRO  HD2', -0.567, (111.081, 105.062, 146.325)), (' A 426  LYS  HE2', ' A 886  GLN HE22', -0.563, (119.053, 151.436, 162.281)), (' A  34  ALA  HA ', ' A  47  LYS  HA ', -0.561, (120.151, 133.329, 101.321)), (' A 203  GLY  HA3', ' A 222  PHE  CD1', -0.56, (133.1, 121.431, 88.719)), (' A 870  THR  HA ', ' A 878  ALA  HA ', -0.56, (123.31, 152.653, 150.639)), (' A 132  ARG HH12', ' A 243  PRO  HG2', -0.558, (127.164, 123.825, 109.913)), (' A 468  GLN  HA ', ' A 731  LEU HD22', -0.558, (135.602, 127.408, 109.165)), (' A  96  VAL HG13', ' A 219  PHE  HE2', -0.558, (122.384, 116.791, 86.816)), (' A 836  ARG HH22', ' A 840  ALA  HB2', -0.556, (124.266, 135.775, 150.355)), (' B  83  VAL  O  ', ' B  87  MET  HG3', -0.554, (145.815, 100.734, 149.259)), (' A 120  THR HG21', ' A 212  LEU  HB2', -0.554, (113.74, 118.838, 99.333)), (' A  86  ILE HG23', ' A 201  ILE HD12', -0.553, (130.954, 118.181, 83.279)), (' A  27  SER  HA ', ' A  54  CYS  HB2', -0.553, (110.216, 133.89, 86.487)), (' A 346  TYR  HE2', ' A 537  PRO  HB3', -0.552, (138.266, 104.882, 130.125)), (' A 189  THR HG21', ' A 237  TYR  CZ ', -0.55, (125.287, 116.865, 99.037)), (' A 102  PHE  HE1', ' A 115  SER  HB2', -0.548, (112.283, 123.963, 80.959)), (' D 134  ASP  N  ', ' D 134  ASP  OD1', -0.547, (88.041, 114.456, 173.093)), (' B  90  MET  O  ', ' B  94  MET  HG2', -0.545, (138.634, 93.724, 145.413)), (' A 239  SER  OG ', ' A 465  ASP  OD1', -0.544, (132.706, 123.084, 107.437)), (' A 739  THR  O  ', ' A 743  ASN  ND2', -0.544, (148.757, 135.972, 110.776)), (' A 210  GLN  HG2', ' A 211  ASP  H  ', -0.543, (119.45, 118.304, 96.433)), (' A  54  CYS  HB3', ' A  72  VAL HG13', -0.543, (110.482, 130.67, 85.574)), (' C   9  THR  HA ', ' C  12  VAL HG22', -0.54, (109.679, 129.286, 160.276)), (' A 119  LEU  O  ', ' A 120  THR HG23', -0.539, (112.924, 118.76, 96.012)), (' A  97  ALA  HB2', ' A 215  ASN  HB3', -0.538, (117.41, 116.927, 90.995)), (' A 331  ARG HH11', ' A 344  THR HG21', -0.535, (146.414, 93.974, 126.672)), (' A 478  LYS  HG3', ' A 742  VAL HG12', -0.535, (145.424, 134.265, 114.415)), (' C   6  VAL HG13', ' C  52  MET  HE2', -0.533, (103.431, 131.466, 156.172)), (' A 116  ARG  HE ', ' A 217  TYR  HD2', -0.532, (118.87, 124.107, 88.563)), (' A  55  ARG  HB3', ' A  69  TYR  CD2', -0.532, (108.679, 127.357, 92.898)), (' D 109  ASN  HB3', ' D 114  CYS  HB2', -0.531, (91.335, 120.345, 166.716)), (' D 180  LEU HD13', ' D 184  LEU HD21', -0.528, (83.868, 106.622, 170.734)), (' B 154  TRP  HB3', ' B 188  ALA  HB1', -0.528, (115.757, 88.309, 137.94)), (' A 390  ASP  OD2', ' A 674  TYR  OH ', -0.527, (120.386, 104.879, 138.893)), (' C  11  VAL HG22', ' C  36  HIS  HE1', -0.526, (112.81, 127.604, 153.705)), (" G   1    C  H2'", ' G   2    A  C8 ', -0.525, (132.329, 134.944, 149.927)), (' A 876  GLU  N  ', ' A 876  GLU  OE2', -0.525, (115.096, 153.419, 150.093)), (' A 254  GLU  HA ', ' A 259  THR HG22', -0.523, (122.771, 100.952, 107.386)), (' D  89  THR  O  ', ' D  93  THR HG23', -0.523, (109.068, 130.395, 169.889)), (' A  30  VAL HG11', ' A  55  ARG  HD3', -0.521, (111.064, 130.757, 94.72)), (' A  89  LEU  HG ', ' A 201  ILE HD11', -0.519, (131.869, 115.433, 81.571)), (' D 149  TYR  HB3', ' D 154  TRP  CD1', -0.519, (87.835, 121.842, 159.063)), (' A  73  LYS  O  ', ' A 113  HIS  HB2', -0.519, (114.474, 131.009, 81.311)), (' C  16  VAL HG11', ' D  91  LEU HD22', -0.519, (108.489, 123.722, 163.33)), (' A  55  ARG  HB3', ' A  69  TYR  HD2', -0.518, (109.155, 126.971, 93.449)), (' A  60  ASP  N  ', ' A  64  ASN  O  ', -0.516, (98.913, 118.285, 93.385)), (' A 136  GLU  HB3', ' A 793  PHE  HZ ', -0.516, (113.907, 131.658, 120.347)), (' A 279  ARG HH21', ' A 318  SER  HB3', -0.516, (132.507, 105.742, 116.547)), (' A 836  ARG  NH2', ' A 840  ALA  HB2', -0.515, (124.126, 135.75, 149.904)), (' A 493  VAL HG23', ' A 573  GLN  HG3', -0.513, (150.719, 121.826, 139.08)), (' A 408  GLN  N  ', ' A 408  GLN  OE1', -0.513, (120.379, 110.311, 147.59)), (' A 723  LEU HD21', ' A 745  PHE  HD1', -0.508, (138.035, 139.195, 109.629)), (' A  69  TYR  CE1', ' A 121  LYS  HG2', -0.508, (107.183, 123.542, 95.807)), (' C  18  GLN  NE2', ' C  23  GLU  OE1', -0.507, (117.168, 115.469, 156.269)), (' A 133  HIS  HA ', ' A 784  SER  HB2', -0.502, (121.138, 131.022, 113.854)), (' B 132  ILE HG21', ' B 138  TYR  HB2', -0.498, (107.614, 99.111, 138.541)), (' D 143  ASP  N  ', ' D 143  ASP  OD1', -0.497, (78.169, 121.694, 163.002)), (' A 304  ASP  HB2', ' A 636  LEU HD22', -0.496, (145.046, 118.785, 119.05)), (' A 506  PHE  HB3', ' A 515  TYR  CE2', -0.495, (142.496, 108.526, 146.867)), (' A 127  LEU HD13', ' A 145  ILE HG21', -0.495, (114.678, 121.056, 106.56)), (' A 188  LYS  HD2', ' A 214  GLY  HA3', -0.495, (118.639, 112.682, 96.238)), (' A 867  TYR  HB2', ' A 921  TYR  HB3', -0.495, (132.107, 148.746, 151.706)), (' A 235  ASP  OD1', ' A 236  SER  N  ', -0.494, (134.316, 123.218, 100.292)), (' A 642  HIS  O  ', ' A 651  ARG  NH1', -0.494, (152.806, 120.299, 121.181)), (' D 117  LEU HD21', ' D 131  VAL  HB ', -0.494, (92.09, 111.243, 165.189)), (' A 758  LEU HD23', ' A 813  CYS  SG ', -0.492, (133.529, 136.816, 136.667)), (' A 153  ASP  OD1', ' A 154  ASP  N  ', -0.492, (100.403, 120.148, 111.742)), (' A 273  TYR  HB3', ' B 116  PRO  HG3', -0.491, (134.457, 95.823, 122.682)), (' A  95  ALA  HB1', ' A 216  TRP  HD1', -0.49, (122.766, 114.462, 93.382)), (' A 592  SER  O  ', ' A 597  GLY  HA3', -0.49, (139.638, 144.664, 140.492)), (' A 503  GLY  O  ', ' A 507  ASN  N  ', -0.488, (138.076, 108.238, 146.954)), (" F   3    U  O2'", " F   4    C  O5'", -0.488, (149.323, 133.416, 165.928)), (' A  89  LEU HD12', ' A 199  ALA  HB1', -0.486, (131.658, 111.578, 82.205)), (' A 619  TYR  HB2', ' A 622  CYS  HB2', -0.486, (126.495, 127.634, 129.324)), (' A 224  GLN  NE2', ' A 225  THR  O  ', -0.486, (136.385, 115.692, 78.984)), (' A 876  GLU  O  ', ' A 880  VAL HG23', -0.484, (118.372, 149.39, 151.316)), (' A 707  LEU  O  ', ' A 724  GLN  NE2', -0.484, (130.378, 138.595, 105.618)), (" G   1    C  H2'", ' G   2    A  H8 ', -0.481, (131.974, 134.474, 150.034)), (' A 503  GLY  HA3', ' A 561  SER  HA ', -0.481, (138.378, 110.494, 142.561)), (' A 528  PHE  O  ', ' A 531  THR HG22', -0.48, (151.678, 110.156, 132.271)), (' A 388  LEU HD22', ' A 672  SER  HB2', -0.48, (123.685, 101.051, 138.914)), (' A 239  SER  OG ', ' A 467  ARG  HB2', -0.479, (134.172, 123.504, 106.597)), (' A 433  SER  OG ', ' A 435  VAL  O  ', -0.478, (110.786, 145.199, 150.857)), (' A 785  VAL  HA ', ' A 788  TYR  CE1', -0.476, (125.063, 129.122, 115.606)), (' A 615  MET  HB2', ' A 766  PHE  CE2', -0.475, (126.701, 143.877, 122.593)), (' D  95  LEU HD22', ' D 103  LEU HD11', -0.475, (101.579, 129.079, 162.469)), (' F  -2    U  OP1', " F  -3    G  O2'", -0.475, (142.085, 128.503, 139.387)), (' A 128  VAL HG12', ' A 132  ARG  HD2', -0.474, (123.894, 125.098, 107.653)), (' A  90  LEU HD13', ' A 192  PHE  HE1', -0.474, (127.09, 115.088, 87.972)), (' A  29  ASP  HB2', ' A  51  THR  HA ', -0.47, (114.416, 137.814, 91.259)), (' A 857  GLU  HA ', ' A 860  VAL HG12', -0.468, (133.881, 139.46, 158.846)), (' A 717  ASP  OD1', ' A 718  LYS  N  ', -0.467, (135.554, 149.367, 103.268)), (' A 160  LYS  HD3', ' A 161  ASP  H  ', -0.467, (106.464, 128.852, 122.478)), (' A 490  ALA  O  ', ' A 493  VAL HG12', -0.466, (154.387, 119.287, 141.791)), (' A  20  THR  N  ', ' A  57  GLN  O  ', -0.465, (101.637, 123.856, 88.63)), (' A 917  GLU  N  ', ' A 917  GLU  OE1', -0.464, (134.118, 152.088, 162.887)), (' A 185  ALA  HB1', ' A 210  GLN HE22', -0.463, (121.47, 115.291, 99.452)), (' A  99  HIS  NE2', ' A 217  TYR  HA ', -0.461, (120.967, 120.417, 88.177)), (' D 173  SER  O  ', ' D 177  SER  OG ', -0.46, (77.003, 111.297, 175.798)), (' A 440  PHE  CZ ', ' C   7  LYS  HD3', -0.459, (111.036, 133.792, 150.589)), (' D 132  ILE HG21', ' D 138  TYR  HB2', -0.457, (84.66, 116.344, 169.67)), (' A 689  TYR  O  ', ' A 693  VAL HG23', -0.455, (139.363, 127.683, 128.457)), (' A 439  HIS  HB3', ' A 548  ILE HD11', -0.453, (119.511, 133.638, 149.339)), (' C  14  LEU HD22', ' C  36  HIS  CG ', -0.45, (110.906, 123.397, 152.793)), (' B 149  TYR  O  ', ' B 154  TRP  NE1', -0.45, (117.953, 89.568, 132.403)), (' A 132  ARG  NH1', ' A 243  PRO  HG2', -0.45, (126.774, 123.815, 110.083)), (' A  55  ARG  HE ', ' A  69  TYR  HD2', -0.45, (109.491, 126.83, 93.92)), (' A 778  SER  H  ', ' A 781  ASN  HB2', -0.449, (125.171, 138.708, 116.463)), (' A 708  LEU  HA ', ' A 724  GLN HE21', -0.448, (130.152, 136.887, 104.773)), (' C   2  LYS  HA ', ' C   2  LYS  HD3', -0.446, (103.653, 138.972, 157.543)), (' A 820  VAL HG22', ' A 821  LYS  H  ', -0.445, (130.415, 157.852, 143.431)), (' A 520  SER  O  ', ' A 524  GLN  HG3', -0.444, (155.387, 111.286, 143.598)), (' D 182  TRP  N  ', ' D 183  PRO  HD2', -0.443, (88.372, 106.949, 172.862)), (' A 692  SER  O  ', ' A 696  ILE HG13', -0.443, (136.794, 131.996, 125.622)), (" G   0    A  H2'", ' G   1    C  C6 ', -0.442, (134.156, 132.833, 153.967)), (' D 182  TRP  O  ', ' D 184  LEU  HG ', -0.442, (85.99, 109.662, 170.3)), (' A 480  PHE  O  ', ' A 641  LYS  NZ ', -0.442, (148.627, 130.664, 123.703)), (' A 619  TYR  CD2', ' A 786  LEU HD21', -0.439, (126.31, 129.433, 124.554)), (' A 474  GLU  OE2', ' A 640  ARG  NH2', -0.439, (145.579, 125.116, 115.0)), (' A  57  GLN  NE2', ' A  65  LEU  HB3', -0.439, (101.447, 122.665, 95.412)), (' A 421  ASP  O  ', ' A 425  SER  OG ', -0.438, (113.826, 144.186, 165.045)), (' A 356  ASN  ND2', ' A 535  VAL  H  ', -0.437, (146.199, 103.046, 127.832)), (' A 821  LYS  NZ ', ' A 824  ASP  OD2', -0.437, (133.75, 166.252, 142.842)), (' C  32  CYS  SG ', ' C  58  VAL HG11', -0.436, (105.377, 117.054, 156.439)), (' A   8  LEU HD12', ' A  19  LEU  HB2', -0.435, (102.275, 124.226, 84.562)), (' A 484  ASP  OD1', ' A 485  GLY  N  ', -0.435, (154.677, 128.681, 128.621)), (' A 134  PHE  H  ', ' A 784  SER  HB2', -0.434, (120.374, 130.835, 114.353)), (' A 100  ASP  HB2', ' A 117  GLN HE21', -0.434, (113.098, 117.956, 81.996)), (' A 753  PHE  CZ ', ' A 764  VAL HG11', -0.433, (130.606, 141.246, 121.081)), (' A  87  TYR  CZ ', ' A  91  LYS  HG3', -0.433, (120.298, 114.885, 81.71)), (' A 684  ASP  O  ', " F  -4    U  O2'", -0.432, (138.952, 122.361, 138.15)), (' A  82  HIS  O  ', ' A  86  ILE HG12', -0.432, (128.995, 122.04, 81.244)), (' A 853  THR  HB ', ' A 854  LEU HD12', -0.431, (133.491, 132.136, 169.18)), (' A 598  TRP  NE1', ' A 817  THR  OG1', -0.431, (130.521, 146.706, 137.503)), (' A 116  ARG  HB3', ' A 119  LEU  CD1', -0.431, (114.797, 121.61, 88.591)), (' C   3  MET  HE1', ' C  48  ALA  HB2', -0.431, (103.401, 132.959, 150.536)), (' A  80  TYR  CE1', ' A 101  PHE  HB3', -0.431, (119.727, 124.066, 77.402)), (' A 518  SER  O  ', ' B  80  ARG  NH1', -0.431, (154.782, 106.9, 148.669)), (' A 619  TYR  HD2', ' A 786  LEU HD21', -0.431, (125.943, 129.2, 124.186)), (' B 177  SER  OG ', ' B 178  PRO  HD3', -0.431, (98.65, 103.018, 142.394)), (' C   9  THR  OG1', ' C  52  MET  HE1', -0.43, (105.227, 131.373, 158.408)), (' A  44  GLY  HA2', ' A 708  LEU HD22', -0.43, (130.929, 133.752, 103.551)), (' A  33  ARG  NH2', ' A  55  ARG HH12', -0.43, (110.883, 129.325, 98.338)), (' A 197  ARG  HA ', ' A 230  GLY  O  ', -0.43, (136.212, 113.158, 88.574)), (' A 119  LEU  HB3', ' A 211  ASP  OD2', -0.43, (115.512, 121.322, 93.524)), (' A 328  PRO  HG2', ' A 378  PRO  HG2', -0.428, (136.067, 101.341, 132.808)), (' A 357  GLN  NE2', ' A 653  TYR  OH ', -0.428, (150.285, 103.794, 122.306)), (' A 312  ASN HD22', ' A 629  MET  HG3', -0.428, (133.204, 117.481, 115.761)), (' A 329  LEU  O  ', ' A 343  SER  HA ', -0.428, (140.683, 97.469, 130.033)), (' A 850  THR  O  ', ' A 852  GLY  N  ', -0.427, (127.423, 132.561, 166.001)), (' B 161  ASP  HA ', ' B 184  LEU  HA ', -0.427, (110.828, 100.096, 145.807)), (' A  19  LEU  HA ', ' A  58  GLU  HA ', -0.426, (102.195, 121.689, 88.377)), (' A 542  MET  HB2', ' A 542  MET  HE3', -0.425, (128.857, 113.262, 138.917)), (' A 194  ASP  OD1', ' A 198  ASN  ND2', -0.425, (133.356, 106.458, 90.519)), (' A 431  GLU  HA ', ' C   1  SER  H1 ', -0.423, (104.355, 144.79, 153.901)), (' D 114  CYS  HA ', ' D 131  VAL  O  ', -0.422, (90.892, 115.486, 167.613)), (' A 658  GLU  O  ', ' A 662  VAL HG12', -0.42, (138.919, 114.307, 130.491)), (' B 132  ILE  O  ', ' B 183  PRO  HA ', -0.419, (110.666, 103.165, 141.73)), (' A 393  THR HG22', ' A 454  ASP  HB2', -0.417, (118.01, 111.207, 135.368)), (' D  95  LEU HD22', ' D 103  LEU HD21', -0.417, (101.753, 129.824, 162.81)), (' B 111  ARG  HB2', ' B 111  ARG  HE ', -0.417, (140.4, 88.468, 116.994)), (' A 595  TYR  OH ', ' F   1    C  OP1', -0.415, (142.259, 144.937, 151.031)), (' B 132  ILE HG23', ' B 137  THR  OG1', -0.415, (108.947, 101.174, 136.837)), (' A 603  LYS  HA ', ' A 603  LYS  HD2', -0.415, (136.891, 151.912, 130.661)), (' D 154  TRP  HB3', ' D 188  ALA  HB1', -0.415, (84.798, 117.853, 156.586)), (' A 356  ASN  HB3', ' A 534  ASN  ND2', -0.415, (149.174, 101.008, 128.625)), (' D  87  MET  HB2', ' D  87  MET  HE2', -0.415, (115.716, 124.868, 165.372)), (' A 829  LEU  HA ', ' A 829  LEU HD23', -0.415, (133.111, 150.346, 142.113)), (' A  24  THR HG22', ' A  25  GLY  N  ', -0.414, (103.686, 135.996, 84.9)), (' A  73  LYS  HD2', ' A  75  HIS  HE1', -0.414, (118.8, 129.071, 86.848)), (' A 365  ARG HH12', ' A 367  SER  HB3', -0.413, (156.152, 98.121, 142.089)), (' A 105  ARG  HB3', ' A 110  MET  H  ', -0.413, (112.024, 134.999, 70.994)), (' A  95  ALA  O  ', ' A 216  TRP  HB2', -0.413, (122.492, 115.984, 91.419)), (' A 189  THR HG22', ' A 216  TRP  HE1', -0.412, (124.871, 115.672, 96.507)), (' A 532  LYS  HG2', ' A 654  ARG  HG2', -0.41, (150.727, 112.761, 127.997)), (' B  85  SER  O  ', ' B  89  THR HG23', -0.41, (144.62, 94.836, 151.557)), (' A 837  ILE  O  ', ' A 884  TYR  OH ', -0.41, (122.617, 140.184, 153.457)), (' A 478  LYS  HA ', ' A 481  ASP  OD2', -0.409, (147.329, 134.12, 119.059)), (' A 375  ALA  HB3', ' B  87  MET  HE2', -0.409, (143.361, 101.509, 143.745)), (' A 478  LYS  HB3', ' A 478  LYS  HE3', -0.406, (145.511, 136.198, 117.84)), (' A 798  LYS  HB2', ' A 798  LYS  HE3', -0.404, (119.123, 134.187, 129.592)), (' A 440  PHE  HA ', ' A 843  PHE  HE2', -0.404, (116.678, 132.04, 151.776)), (' A 864  ILE  HA ', ' A 921  TYR  HD1', -0.404, (133.231, 146.227, 153.037)), (' A 136  GLU  HB3', ' A 793  PHE  CZ ', -0.403, (113.74, 131.461, 120.339)), (' A 695  ASN  HB3', ' A 757  ILE HG21', -0.403, (134.794, 133.175, 127.267)), (' A 802  GLU  OE2', ' A 804  ASP  N  ', -0.403, (122.757, 151.81, 127.871)), (' A  38  TYR  OH ', ' A 729  GLU  OE2', -0.401, (138.791, 132.682, 96.49)), (' A 314  ASN  HA ', ' A 317  PHE  HB2', -0.4, (133.181, 108.298, 113.541))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

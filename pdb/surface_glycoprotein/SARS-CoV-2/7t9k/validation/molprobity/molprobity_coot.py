# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('B', ' 337 ', 'PRO', 0.012130800326392728, (209.392, 242.291, 221.92500000000004))]
data['omega'] = []
data['rota'] = [('C', ' 913 ', 'GLN', 0.2884363012297494, (201.32599999999994, 213.806, 119.894))]
data['cbeta'] = []
data['probe'] = [(' C 142  ASP  HB2', ' C 156  GLU  HB3', -0.695, (180.101, 259.79, 215.64)), (' B 130  VAL  HB ', ' B 168  PHE  HB3', -0.649, (236.452, 187.413, 215.658)), (' B 856  LYS  HD3', ' B 966  LEU HD12', -0.647, (211.617, 184.508, 183.845)), (' B  46  SER  HA ', ' B 279  TYR  O  ', -0.646, (231.63, 183.133, 178.557)), (' B 156  GLU  OE2', ' B 158  ARG  NH1', -0.633, (263.229, 189.828, 219.128)), (' C 156  GLU  OE2', ' C 158  ARG  NH1', -0.625, (177.037, 258.102, 219.145)), (' E 170  SER  OG ', ' E 174  LYS  NZ ', -0.603, (237.911, 243.304, 299.873)), (' A 572  THR HG22', ' B 856  LYS  HE3', -0.598, (215.316, 181.898, 184.023)), (' C  51  THR  O  ', ' C 274  THR  HA ', -0.595, (188.417, 226.639, 188.085)), (' B 327  VAL  H  ', ' B 531  THR  HB ', -0.595, (221.617, 230.596, 200.345)), (' A 156  GLU  OE2', ' A 158  ARG  NH1', -0.594, (161.771, 149.946, 219.613)), (' E  85  LEU HD12', ' E  94  LYS  HG3', -0.593, (205.211, 219.53, 271.033)), (' B  26  PRO  HB3', ' B  65  PHE  HE1', -0.59, (253.541, 204.965, 200.441)), (' D  85  LEU HD12', ' D  94  LYS  HG3', -0.588, (215.853, 182.971, 272.226)), (' E 169  ARG HH22', ' E 271  TRP  HA ', -0.588, (240.337, 232.773, 289.838)), (' D 170  SER  OG ', ' D 174  LYS  NZ ', -0.584, (224.847, 143.76, 300.043)), (' A 105  ILE  HB ', ' A 239  GLN  HB2', -0.58, (174.699, 159.231, 210.951)), (' C 821  LEU HD11', ' C 939  SER  HB3', -0.577, (200.2, 231.433, 148.728)), (' C  22  THR  O  ', ' C  78  ARG  NH1', -0.577, (163.629, 250.172, 203.673)), (' E 475  LYS  NZ ', ' E 495  GLU  OE1', -0.574, (231.339, 231.198, 306.064)), (' B 142  ASP  HB2', ' B 156  GLU  HB3', -0.572, (262.223, 186.534, 215.905)), (' C 278  LYS  HE3', ' C 287  ASP  HB2', -0.568, (191.321, 236.84, 177.854)), (' A 978  ASN  ND2', ' C 547  LYS  O  ', -0.567, (176.645, 201.489, 195.507)), (' B 659  SER  HB3', ' B 698  SER  HB3', -0.562, (229.71, 216.465, 150.328)), (' B 762  GLN  OE1', ' B 765  ARG  NH1', -0.56, (190.029, 189.14, 175.567)), (' B  64  TRP  HE1', ' B 264  ALA  HB1', -0.559, (256.933, 197.296, 195.176)), (' B 970  PHE  O  ', ' B 995  ARG  NH2', -0.553, (206.855, 198.128, 193.855)), (' B  78  ARG  NH2', ' B  80  ASP  OD1', -0.548, (258.456, 203.695, 202.891)), (' B 126  VAL HG13', ' B 174  PRO  HA ', -0.546, (248.12, 179.813, 205.465)), (' C 985  ASP  N  ', ' C 985  ASP  OD1', -0.544, (208.198, 209.68, 207.264)), (' B 821  LEU HD11', ' B 939  SER  HB2', -0.54, (227.428, 183.809, 148.608)), (' B  22  THR  O  ', ' B  78  ARG  NH1', -0.539, (261.757, 205.743, 204.3)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.539, (178.33, 228.774, 179.693)), (' A 756  TYR  OH ', ' A 994  ASP  OD1', -0.536, (195.644, 205.404, 193.256)), (' E  44  SER  HB3', ' E 351  LEU HD22', -0.536, (223.556, 238.753, 262.042)), (' A 821  LEU HD11', ' A 939  SER  HB3', -0.536, (172.835, 184.157, 148.667)), (' A 294  ASP  N  ', ' A 294  ASP  OD1', -0.534, (186.411, 166.779, 179.965)), (' A 383  SER  HB3', ' A 386  LYS  HG2', -0.533, (210.606, 174.977, 220.835)), (' A  22  THR  O  ', ' A  78  ARG  NH1', -0.533, (174.573, 142.628, 203.162)), (' D 288  LYS  HE3', ' D 289  PRO  HD2', -0.532, (191.902, 129.884, 270.305)), (' D 261  CYS  HB2', ' D 488  VAL  HB ', -0.527, (203.454, 145.058, 299.62)), (' D 482  ARG  NH1', ' D 608  THR  O  ', -0.525, (202.991, 148.45, 304.196)), (' C  40  ASP  N  ', ' C  40  ASP  OD1', -0.524, (196.462, 232.355, 192.061)), (' C 226  LEU  HG ', ' C 227  VAL HG23', -0.521, (195.042, 243.528, 202.09)), (' D  44  SER  HB3', ' D 351  LEU HD22', -0.52, (225.235, 158.653, 262.368)), (' B1074  ASN  OD1', ' C 895  GLN  NE2', -0.52, (222.272, 214.975, 124.128)), (' C  93  ALA  HB3', ' C 266  TYR  HB2', -0.52, (178.54, 244.772, 194.291)), (' D 475  LYS  NZ ', ' D 495  GLU  OE1', -0.518, (216.866, 153.767, 306.577)), (' B 383  SER  HB3', ' B 386  LYS  HG2', -0.518, (215.696, 220.559, 220.024)), (' A  78  ARG  NH2', ' A  80  ASP  OD1', -0.517, (174.279, 146.975, 202.292)), (' A 856  LYS  HZ2', ' C 570  ALA  HB3', -0.517, (178.91, 195.695, 185.455)), (' A1086  LYS  HD2', ' A1122  VAL HG11', -0.516, (212.938, 193.575, 105.072)), (' C 289  VAL HG13', ' C 297  SER  HB3', -0.515, (183.619, 230.114, 179.533)), (' C 323  THR  OG1', ' C 324  GLU  OE1', -0.512, (163.879, 211.688, 194.985)), (' B 599  THR  HB ', ' B 608  VAL HG12', -0.512, (234.097, 204.978, 169.84)), (' E 288  LYS  HE3', ' E 289  PRO  HD2', -0.512, (263.788, 220.685, 269.358)), (' B 294  ASP  N  ', ' B 294  ASP  OD1', -0.511, (236.114, 204.037, 179.954)), (' B 437  ASN  ND2', ' B 506  GLN  OE1', -0.507, (223.078, 236.33, 242.868)), (' D  80  ALA  O  ', ' D 101  GLN  NE2', -0.506, (224.165, 182.442, 273.307)), (' A 599  THR  HB ', ' A 608  VAL HG12', -0.506, (187.808, 168.629, 169.799)), (' E  80  ALA  O  ', ' E 101  GLN  NE2', -0.504, (202.749, 227.122, 272.405)), (' A 189  LEU  HB3', ' A 208  THR  HB ', -0.5, (163.976, 162.639, 190.784)), (' C 722  VAL HG22', ' C1065  VAL HG22', -0.499, (200.503, 220.554, 136.744)), (' D 462  MET  HE3', ' D 468  ILE HD11', -0.499, (210.236, 161.194, 297.296)), (' C 858  LEU HD21', ' C 962  LEU HD23', -0.497, (208.008, 214.753, 177.415)), (' C 656  VAL HG12', ' C 658  ASN  H  ', -0.496, (165.837, 221.843, 154.203)), (' E 462  MET  HE3', ' E 468  ILE HD11', -0.494, (227.804, 222.579, 296.41)), (' C 127  VAL HG21', ' C1302  NAG  H62', -0.493, (192.507, 251.375, 214.816)), (' D 152  MET  O  ', ' D 161  ARG  NH1', -0.492, (211.178, 135.491, 287.572)), (' A  97  LYS  HG2', ' A 186  PHE  HD1', -0.491, (160.919, 152.331, 194.922)), (' B 193  VAL HG23', ' B 223  LEU HD22', -0.49, (241.634, 190.678, 194.954)), (' C1086  LYS  HD2', ' C1122  VAL HG11', -0.488, (188.072, 191.801, 105.11)), (' B 324  GLU  H  ', ' B 539  VAL HG12', -0.486, (225.974, 226.229, 193.255)), (' D 169  ARG HH22', ' D 271  TRP  HA ', -0.485, (214.126, 146.01, 290.608)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.485, (249.685, 195.875, 194.53)), (' A 393  THR HG21', ' A 518  LEU  HB2', -0.484, (225.509, 188.143, 218.6)), (' A 125  ASN HD22', ' A 171  VAL HG13', -0.483, (159.348, 170.696, 213.439)), (' C  78  ARG  NH2', ' C  80  ASP  OD1', -0.482, (167.24, 248.543, 202.592)), (' A 289  VAL HG13', ' A 297  SER  HB3', -0.481, (183.219, 170.84, 179.794)), (' A 474  GLN  NE2', ' A 478  LYS  O  ', -0.48, (232.989, 194.596, 261.568)), (' A 128  ILE HD13', ' A 170  TYR  HD2', -0.48, (166.256, 172.707, 210.103)), (' B 722  VAL HG22', ' B1065  VAL HG22', -0.48, (217.964, 190.058, 136.948)), (' A  46  SER  HA ', ' A 279  TYR  O  ', -0.479, (170.635, 181.841, 180.135)), (' B 561  PRO  HA ', ' B 577  ARG HH12', -0.478, (205.197, 242.81, 193.36)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.478, (181.326, 226.026, 162.785)), (' A 570  ALA  HB1', ' B 963  VAL HG11', -0.477, (216.14, 183.983, 180.702)), (' A  64  TRP  HE1', ' A 264  ALA  HB1', -0.477, (170.235, 151.83, 194.694)), (' D 148  LEU  HA ', ' D 151  ILE HG22', -0.477, (218.637, 135.757, 286.46)), (' A 142  ASP  HB2', ' A 156  GLU  HB3', -0.476, (159.593, 152.344, 215.735)), (' E 261  CYS  HB2', ' E 488  VAL  HB ', -0.476, (245.201, 223.112, 298.861)), (' B 374  PHE  HA ', ' B 436  TRP  HB3', -0.474, (220.206, 234.822, 233.089)), (' A 126  VAL HG23', ' A 174  PRO  HA ', -0.471, (160.044, 167.948, 206.592)), (' E  21  ILE HD13', ' E  87  GLU  HG3', -0.469, (195.301, 218.888, 269.053)), (' D 527  GLU  OE2', ' D 586  ASN  ND2', -0.469, (189.371, 156.279, 272.762)), (' A 139  PRO  HB3', ' A 159  VAL HG13', -0.469, (170.428, 157.427, 215.547)), (' A1029  MET  HB2', ' A1029  MET  HE2', -0.469, (186.414, 201.015, 146.491)), (' C 659  SER  HB3', ' C 698  SER  HB3', -0.468, (171.542, 217.157, 150.166)), (' B 656  VAL HG12', ' B 658  ASN  H  ', -0.467, (236.442, 218.483, 154.249)), (' B  36  VAL HG23', ' B 222  ALA  HA ', -0.466, (239.816, 189.332, 188.244)), (' C  48  LEU  HB3', ' C 276  LEU HD11', -0.465, (193.214, 228.815, 179.314)), (' C 320  VAL HG13', ' C 590  CYS  HB3', -0.465, (169.732, 209.394, 186.458)), (' E 527  GLU  OE2', ' E 586  ASN  ND2', -0.465, (241.228, 206.827, 271.041)), (' A 914  ASN  ND2', ' A1111  GLU  OE2', -0.464, (188.959, 188.39, 115.497)), (' D 457  GLU  HG2', ' D 512  PHE  HB3', -0.464, (211.332, 158.57, 285.24)), (' B 401  VAL HG22', ' B 509  ARG  HG2', -0.463, (213.239, 239.498, 238.59)), (' B 189  LEU  HB3', ' B 208  THR  HB ', -0.459, (251.385, 187.073, 190.417)), (' C 858  LEU HD23', ' C 959  LEU HD22', -0.459, (208.675, 216.08, 175.254)), (' E 148  LEU  HA ', ' E 151  ILE HG22', -0.459, (247.22, 241.621, 286.432)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.459, (173.183, 170.446, 197.369)), (' A1048  HIS  HA ', ' A1066  THR HG22', -0.459, (190.239, 191.063, 135.681)), (' A 978  ASN  HB3', ' C 547  LYS  HB2', -0.458, (177.22, 201.927, 198.454)), (' B  97  LYS  HG2', ' B 186  PHE  HD1', -0.458, (261.233, 189.49, 194.849)), (' C 724  THR HG23', ' C 934  ILE HD12', -0.457, (197.796, 222.388, 144.255)), (' A 401  VAL HG22', ' A 509  ARG  HG2', -0.457, (229.422, 168.158, 239.056)), (' C 129  LYS  NZ ', ' C 160  TYR  OH ', -0.457, (188.579, 248.08, 219.322)), (' E 260  GLY  HA3', ' E 612  PRO  HD3', -0.456, (249.667, 221.262, 301.01)), (' E 332  MET  HB3', ' E 332  MET  HE2', -0.456, (235.534, 243.09, 260.197)), (' B1040  VAL HG21', ' C1035  GLY  HA3', -0.456, (207.764, 206.564, 136.072)), (' C  38  TYR  HB2', ' C 225  PRO  HD3', -0.455, (195.097, 238.259, 193.051)), (' A1074  ASN  OD1', ' B 895  GLN  NE2', -0.454, (202.111, 173.501, 124.013)), (' B1086  LYS  HD2', ' B1122  VAL HG11', -0.454, (199.238, 214.677, 105.202)), (' C  14  GLN  HB3', ' C 158  ARG  HE ', -0.454, (177.002, 254.732, 222.586)), (' B 289  VAL HG13', ' B 297  SER  HB3', -0.454, (234.19, 198.898, 179.504)), (' B 127  VAL HG22', ' B 171  VAL HG22', -0.453, (245.512, 179.555, 213.468)), (' A 731  MET  HG3', ' A1018  ILE HG13', -0.452, (188.097, 198.599, 162.444)), (' A 856  LYS  NZ ', ' C 568  ASP  OD2', -0.452, (176.32, 196.156, 185.793)), (' A 736  VAL HG11', ' A1004  LEU HD11', -0.451, (186.604, 203.446, 178.729)), (' B  52  GLN  OE1', ' B 274  THR  OG1', -0.45, (227.096, 200.11, 188.34)), (' A  96  GLU  O  ', ' A 188  ASN  HB2', -0.45, (160.538, 157.673, 195.732)), (' E 381  TYR  HD1', ' E 558  LEU  HG ', -0.449, (228.662, 221.306, 262.154)), (' B 193  VAL  HB ', ' B 204  TYR  HB2', -0.449, (239.438, 189.599, 196.855)), (' A 310  LYS  HG3', ' A 600  PRO  HA ', -0.449, (186.738, 170.794, 163.575)), (' C 192  PHE  HA ', ' C 204  TYR  O  ', -0.448, (188.573, 242.488, 197.254)), (' B 736  VAL HG11', ' B1004  LEU HD11', -0.448, (203.865, 186.343, 178.831)), (' A 722  VAL HG22', ' A1065  VAL HG22', -0.448, (182.473, 190.09, 136.81)), (' E 152  MET  O  ', ' E 161  ARG  NH1', -0.447, (250.785, 234.883, 287.009)), (' C  21  ARG  NH2', ' C 138  ASP  OD2', -0.446, (170.281, 249.846, 211.737)), (' B 329  PHE  CD2', ' B 528  LYS  HB3', -0.446, (214.877, 231.847, 206.389)), (' D 479  GLU  HA ', ' D 482  ARG  HD2', -0.445, (205.6, 151.463, 301.792)), (' B 756  TYR  OH ', ' B 994  ASP  OD1', -0.444, (197.826, 193.274, 192.674)), (' A 358  ILE  HB ', ' A 395  VAL  HB ', -0.444, (227.742, 177.819, 222.671)), (' C 128  ILE HD13', ' C 170  TYR  HD2', -0.444, (195.582, 244.222, 209.02)), (' E 535  HIS  NE2', ' E 538  PRO  O  ', -0.444, (247.528, 209.033, 264.59)), (' C 599  THR  HB ', ' C 608  VAL HG12', -0.443, (178.785, 226.595, 169.804)), (' B 191  GLU  O  ', ' B 205  SER  HA ', -0.442, (243.879, 187.271, 196.353)), (' D 168  TRP  HE1', ' D 502  SER  HB2', -0.442, (220.177, 145.982, 290.268)), (' A 934  ILE  HA ', ' A 934  ILE HD13', -0.442, (180.042, 184.175, 143.586)), (' A 659  SER  HB3', ' A 698  SER  HB3', -0.442, (199.204, 166.602, 150.33)), (' B 127  VAL HG21', ' B1302  NAG  H62', -0.44, (247.691, 179.928, 215.312)), (' D 332  MET  HB3', ' D 332  MET  HE2', -0.44, (223.818, 146.216, 260.493)), (' A 656  VAL HG12', ' A 658  ASN  H  ', -0.44, (197.86, 159.587, 154.158)), (' B 358  ILE  HB ', ' B 395  VAL  HB ', -0.439, (205.505, 234.303, 222.056)), (' C 916  LEU HD22', ' C 923  ILE HD13', -0.438, (200.088, 219.743, 124.618)), (' C  89  GLY  HA3', ' C 270  LEU HD12', -0.438, (184.015, 233.017, 198.962)), (' D 524  GLN  HB3', ' D 574  VAL HG11', -0.438, (196.598, 162.467, 271.569)), (' C 229  LEU  HG ', ' C 231  ILE HG23', -0.437, (193.251, 237.239, 210.065)), (' B 192  PHE  HA ', ' B 204  TYR  O  ', -0.437, (242.708, 188.315, 197.902)), (' B 736  VAL HG22', ' B 858  LEU HD23', -0.436, (206.459, 184.105, 176.779)), (' B 125  ASN HD22', ' B 171  VAL HG13', -0.436, (246.035, 177.185, 211.721)), (' A  40  ASP  N  ', ' A  40  ASP  OD1', -0.435, (175.172, 181.196, 193.312)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.435, (232.478, 202.739, 163.173)), (' C 756  TYR  OH ', ' C 994  ASP  OD1', -0.434, (207.591, 201.064, 193.341)), (' E 574  VAL HG23', ' E 576  ALA  H  ', -0.433, (228.708, 206.913, 269.538)), (' D 230  PHE  HA ', ' D 233  ILE  HB ', -0.433, (197.207, 157.6, 286.374)), (' B  39  PRO  HG3', ' B  55  PHE  HZ ', -0.432, (231.808, 191.401, 190.649)), (' C 612  TYR  O  ', ' C 648  GLY  HA3', -0.432, (171.713, 212.103, 171.472)), (' B 731  MET  HG3', ' B1018  ILE HG13', -0.431, (207.395, 190.596, 162.263)), (' A 128  ILE HG21', ' A 229  LEU HD13', -0.431, (170.128, 172.131, 211.258)), (' E 307  ILE HG23', ' E 369  PHE  HD1', -0.429, (245.856, 230.714, 258.52)), (' A 412  PRO  HB3', ' A 427  ASP  HA ', -0.428, (213.931, 184.289, 235.702)), (' A 278  LYS  HB2', ' A 278  LYS  HE3', -0.428, (174.925, 176.992, 179.124)), (' A 790  LYS  HB3', ' A 790  LYS  HE2', -0.428, (168.526, 206.682, 138.251)), (' A 374  PHE  HA ', ' A 436  TRP  HB3', -0.428, (221.836, 164.059, 233.808)), (' A  48  LEU  HB3', ' A 276  LEU HD11', -0.427, (179.568, 179.867, 180.31)), (' C 532  ASN  OD1', ' C 533  LEU  N  ', -0.426, (158.343, 203.178, 200.101)), (' E 326  GLY  O  ', ' E 330  ASN  ND2', -0.426, (229.227, 239.167, 252.136)), (' B 996  LEU  HA ', ' B 996  LEU HD23', -0.426, (206.899, 192.054, 191.684)), (' E 168  TRP  CD1', ' E 270  MET  HE2', -0.426, (240.323, 238.987, 290.763)), (' C  34  ARG  NH2', ' C 221  SER  OG ', -0.426, (186.171, 245.14, 187.622)), (' C  64  TRP  HE1', ' C 264  ALA  HB1', -0.425, (173.709, 250.088, 195.005)), (' D  97  LEU  HA ', ' D  97  LEU HD23', -0.425, (221.666, 179.245, 269.95)), (' E 582  ARG HH12', ' E 585  LEU  HB2', -0.424, (240.655, 206.823, 278.846)), (' E 460  ARG  HA ', ' E 463  VAL HG12', -0.423, (225.37, 226.887, 292.292)), (' A 707  TYR  HB3', ' B 792  PRO  HG3', -0.423, (210.539, 173.226, 129.685)), (' D 260  GLY  HA3', ' D 612  PRO  HD3', -0.423, (199.419, 142.202, 301.913)), (' C1048  HIS  HA ', ' C1066  THR HG22', -0.422, (197.509, 213.15, 135.866)), (' B 612  TYR  O  ', ' B 648  GLY  HA3', -0.422, (225.278, 218.089, 171.881)), (' E 458  LYS  HD2', ' E 462  MET  HE2', -0.422, (228.696, 220.279, 294.179)), (' C  97  LYS  HG2', ' C 186  PHE  HD1', -0.421, (178.421, 258.247, 194.963)), (' A 354  ASN  O  ', ' A 398  ASP  HA ', -0.421, (230.093, 177.824, 233.122)), (' B 418  ILE  HA ', ' B 422  ASN HD22', -0.421, (204.916, 229.75, 245.241)), (' B 724  THR HG23', ' B 934  ILE HD12', -0.42, (221.257, 191.076, 143.975)), (' D 574  VAL HG23', ' D 576  ALA  H  ', -0.42, (194.89, 167.304, 271.533)), (' A 903  ALA  HB2', ' A 916  LEU HD12', -0.419, (183.633, 194.992, 122.226)), (' D 460  ARG  HD3', ' D 506  VAL HG23', -0.419, (217.104, 158.319, 289.238)), (' B 201  PHE  HB3', ' B 229  LEU  HB2', -0.419, (235.768, 187.848, 207.741)), (' D 458  LYS  HD2', ' D 462  MET  HE2', -0.419, (207.841, 161.529, 295.609)), (' D 381  TYR  HD1', ' D 558  LEU  HG ', -0.418, (207.382, 161.943, 263.381)), (' E 457  GLU  HG2', ' E 512  PHE  HB3', -0.418, (229.644, 225.411, 284.625)), (' B 934  ILE  HA ', ' B 934  ILE HD13', -0.418, (224.129, 190.576, 143.518)), (' C  68  ILE HG22', ' C  78  ARG  HB2', -0.417, (168.083, 254.783, 200.589)), (' B  27  ALA  HB3', ' B  64  TRP  HB3', -0.417, (255.268, 203.433, 195.148)), (' E 460  ARG  HD3', ' E 506  VAL HG23', -0.417, (227.574, 230.774, 288.59)), (' D 557  MET  HB3', ' D 557  MET  HE3', -0.416, (202.606, 164.276, 263.933)), (' E 482  ARG  NH1', ' E 608  THR  O  ', -0.416, (242.215, 221.684, 303.516)), (' D 178  PRO  HA ', ' D 181  GLU  HB2', -0.415, (227.253, 158.111, 298.68)), (' D 528  ALA  HB2', ' D 574  VAL HG12', -0.415, (194.846, 162.519, 268.371)), (' A  93  ALA  HB3', ' A 266  TYR  HB2', -0.415, (172.507, 158.994, 194.972)), (' B  46  SER  CA ', ' B 279  TYR  O  ', -0.415, (230.765, 182.728, 178.852)), (' D 535  HIS  NE2', ' D 538  PRO  O  ', -0.414, (188.236, 150.026, 266.283)), (' D 524  GLN HE21', ' D 574  VAL HG21', -0.414, (195.993, 164.733, 272.647)), (' B 322  PRO  HG3', ' B 549  THR HG21', -0.414, (221.782, 221.269, 191.32)), (' C  27  ALA  HB3', ' C  64  TRP  HB3', -0.414, (169.463, 245.63, 194.819)), (' A 907  ASN HD22', ' C1107  ARG HH22', -0.413, (190.829, 199.663, 121.196)), (' E 528  ALA  HB2', ' E 574  VAL HG12', -0.413, (232.937, 209.428, 266.906)), (' D 326  GLY  O  ', ' D 330  ASN  ND2', -0.413, (222.725, 153.678, 252.475)), (' A 722  VAL  HA ', ' A1064  HIS  O  ', -0.412, (184.768, 188.48, 138.536)), (' E 162  LEU HD13', ' E 265  HIS  CE1', -0.412, (248.86, 233.745, 297.167)), (' C 996  LEU  HA ', ' C 996  LEU HD23', -0.412, (203.755, 209.672, 191.872)), (' C  48  LEU HD21', ' C 306  PHE  HD1', -0.411, (191.586, 231.217, 176.62)), (' C 717  ASN  ND2', ' C1071  GLN  OE1', -0.411, (187.674, 223.781, 124.84)), (' D 460  ARG  HA ', ' D 463  VAL HG12', -0.41, (215.179, 161.677, 293.435)), (' E 230  PHE  HA ', ' E 233  ILE  HB ', -0.41, (236.371, 212.887, 285.003)), (' B 411  ALA  HB3', ' B 414  GLN  HG3', -0.41, (210.923, 221.349, 239.023)), (' B 903  ALA  HB2', ' B 916  LEU HD12', -0.408, (212.518, 188.29, 122.245)), (' E 144  LEU  HA ', ' E 148  LEU  HB2', -0.408, (242.785, 242.734, 285.785)), (' B  48  LEU  HB3', ' B 276  LEU HD11', -0.407, (228.614, 191.535, 179.642)), (' D 529  LEU HD11', ' D 554  LEU HD22', -0.407, (200.149, 158.434, 262.43)), (' A1035  GLY  HA3', ' C1040  VAL HG21', -0.407, (190.776, 203.412, 136.219)), (' C 913  GLN  H  ', ' C 913  GLN  HG2', -0.407, (201.489, 211.321, 119.109)), (' E 156  LEU HD11', ' E 281  LEU HD21', -0.406, (258.049, 231.236, 286.528)), (' B  37  TYR  OH ', ' B  54  LEU  O  ', -0.406, (234.102, 194.493, 195.219)), (' A 437  ASN  ND2', ' A 506  GLN  OE1', -0.406, (222.567, 160.72, 243.361)), (' C1086  LYS  HB2', ' C1086  LYS  HE2', -0.406, (185.922, 194.205, 103.422)), (' C 736  VAL HG11', ' C1004  LEU HD11', -0.406, (210.157, 210.0, 178.886)), (' B1086  LYS  HB2', ' B1086  LYS  HE2', -0.405, (202.25, 215.605, 103.473)), (' C  52  GLN  HB2', ' C 274  THR HG22', -0.405, (188.201, 223.427, 188.841)), (' B 742  ILE  O  ', ' B1000  ARG  NH1', -0.404, (206.153, 185.46, 189.674)), (' A 425  LEU  HA ', ' A 425  LEU HD23', -0.404, (220.887, 183.141, 235.641)), (' A 192  PHE  HA ', ' A 204  TYR  O  ', -0.404, (170.244, 168.532, 198.452)), (' E 183  TYR  OH ', ' E 509  ASP  OD1', -0.403, (222.447, 233.03, 285.888)), (' B 866  THR  H  ', ' B 869  MET  HE3', -0.403, (206.274, 173.941, 155.93)), (' B 722  VAL  HA ', ' B1064  HIS  O  ', -0.403, (217.962, 192.479, 138.567)), (' D 252  TYR  HA ', ' D 253  PRO  HD3', -0.403, (202.329, 129.647, 295.585)), (' A 895  GLN  NE2', ' C1074  ASN  OD1', -0.403, (176.207, 211.805, 124.101)), (' D 156  LEU HD11', ' D 281  LEU HD21', -0.403, (204.399, 130.521, 286.997)), (' D 168  TRP  CD1', ' D 270  MET  HE2', -0.402, (219.193, 142.683, 291.034)), (' A 418  ILE  HA ', ' A 422  ASN HD22', -0.402, (224.99, 179.992, 246.229)), (' E 524  GLN HE21', ' E 574  VAL HG21', -0.402, (230.965, 209.619, 271.173)), (' C 776  LYS  NZ ', ' C 780  GLU  OE2', -0.402, (213.594, 202.304, 154.172)), (' A 724  THR HG23', ' A 934  ILE HD12', -0.401, (182.099, 186.602, 144.215)), (' B 141  LEU HD22', ' B 157  PHE  CD1', -0.4, (256.323, 186.102, 214.231)), (' E 178  PRO  HA ', ' E 181  GLU  HB2', -0.4, (223.312, 238.848, 297.826))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

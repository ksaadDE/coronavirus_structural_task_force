
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "fdr",
               "fsc","diffmap","cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "fdr": "Backbone position score (FDR)",
                  "fsc": "Local density fit (FSC)",
                  "diffmap": "Model-map difference",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "fdr" : ["Chain", "Residue", "Name", "Score"],
                 "fsc" : ["Chain", "Residue", "Name", "Score"],
                 "diffmap" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fdr" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "fsc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "diffmap" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "fdr","fsc","diffmap","cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "Validation To-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['fdr'] = []
data['fsc'] = []
data['diffmap'] = []
data['jpred'] = []
data['rota'] = [('A', ' 214 ', 'ARG', 0.16100168227697684, (303.166, 250.90599999999995, 254.911)), ('C', ' 214 ', 'ARG', 0.22358546655224248, (214.62900000000005, 192.023, 248.668))]
data['clusters'] = [('A', '391', 1, 'Dihedral angle:CA:C', (248.155, 272.623, 272.866)), ('A', '392', 1, 'Dihedral angle:N:CA', (244.465, 273.317, 272.714)), ('A', '517', 1, 'smoc Outlier', (242.69, 270.513, 268.715)), ('A', '518', 1, 'smoc Outlier', (243.72, 272.453, 265.59)), ('A', '519', 1, 'smoc Outlier', (240.345, 274.17900000000003, 265.15000000000003)), ('A', '520', 1, 'smoc Outlier', (241.305, 277.66, 266.42599999999993)), ('A', '521', 1, 'smoc Outlier', (244.231, 279.59, 267.954)), ('A', '101', 2, 'smoc Outlier', (298.562, 242.176, 269.819)), ('A', '102', 2, 'side-chain clash', (302.12, 239.153, 270.758)), ('A', '190', 2, 'side-chain clash', (300.112, 238.778, 264.408)), ('A', '96', 2, 'side-chain clash', (300.112, 238.778, 264.408)), ('A', '99', 2, 'backbone clash\nside-chain clash', (302.12, 239.153, 270.758)), ('A', '1111', 3, 'smoc Outlier', (265.242, 248.45600000000002, 181.02700000000002)), ('A', '1112', 3, 'smoc Outlier', (265.66200000000003, 250.656, 177.937)), ('A', '138', 3, 'side-chain clash\nbackbone clash', (263.053, 244.639, 181.823)), ('A', '21', 3, 'side-chain clash\nbackbone clash', (263.053, 244.639, 181.823)), ('A', '218', 4, 'smoc Outlier', (296.419, 245.84, 249.319)), ('A', '219', 4, 'smoc Outlier', (293.967, 242.95100000000002, 249.26999999999998)), ('A', '221', 4, 'side-chain clash', (290.921, 240.878, 254.331)), ('A', '34', 4, 'side-chain clash\ncablam Outlier\nsmoc Outlier', (290.921, 240.878, 254.331)), ('A', '265', 5, 'side-chain clash', (298.341, 251.088, 270.877)), ('A', '79', 5, 'cablam Outlier', (303.2, 252.5, 272.9)), ('A', '80', 5, 'side-chain clash\nDihedral angle:CA:C', (299.503, 253.248, 272.02299999999997)), ('A', '81', 5, 'Dihedral angle:N:CA', (297.131, 251.71599999999998, 274.525)), ('A', '192', 6, 'side-chain clash', (291.291, 237.597, 265.285)), ('A', '205', 6, 'side-chain clash', (291.291, 237.597, 265.285)), ('A', '206', 6, 'smoc Outlier', (290.685, 236.02200000000002, 260.619)), ('A', '207', 6, 'smoc Outlier', (294.424, 235.36200000000002, 260.305)), ('A', '86', 7, 'Dihedral angle:CA:C\ncablam Outlier', (283.264, 252.618, 271.373)), ('A', '87', 7, 'Dihedral angle:N:CA\nsmoc Outlier', (279.565, 253.653, 271.04400000000004)), ('A', '88', 7, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (278.622, 251.238, 268.184)), ('A', '89', 7, 'Dihedral angle:N:CA', (281.16400000000004, 248.58700000000002, 267.314)), ('A', '782', 8, 'smoc Outlier', (252.45700000000002, 228.167, 213.208)), ('A', '784', 8, 'smoc Outlier', (249.277, 227.697, 208.623)), ('A', '785', 8, 'smoc Outlier', (249.192, 224.464, 206.564)), ('A', '786', 8, 'smoc Outlier', (247.134, 221.284, 206.343)), ('A', '156', 9, 'side-chain clash\nsmoc Outlier', (306.082, 241.924, 284.267)), ('A', '157', 9, 'smoc Outlier', (300.668, 239.07899999999998, 283.41999999999996)), ('A', '158', 9, 'side-chain clash', (306.082, 241.924, 284.267)), ('A', '255', 9, 'smoc Outlier', (307.372, 247.653, 285.254)), ('A', '1038', 10, 'smoc Outlier', (252.05, 244.71299999999997, 198.792)), ('A', '1039', 10, 'smoc Outlier', (252.003, 246.45800000000003, 202.191)), ('A', '973', 10, 'side-chain clash\nbackbone clash\nsmoc Outlier', (252.127, 243.974, 193.463)), ('A', '992', 10, 'side-chain clash\nbackbone clash', (252.127, 243.974, 193.463)), ('A', '676', 11, 'smoc Outlier', (286.209, 261.13599999999997, 222.777)), ('A', '689', 11, 'smoc Outlier', (290.546, 260.474, 226.48800000000003)), ('A', '690', 11, 'smoc Outlier', (286.841, 259.573, 226.44299999999998)), ('A', '1091', 12, 'smoc Outlier', (251.499, 252.15, 179.56)), ('A', '1092', 12, 'cablam CA Geom Outlier\nsmoc Outlier', (253.8, 251.3, 182.5)), ('A', '1121', 12, 'smoc Outlier', (248.762, 254.755, 175.107)), ('A', '797', 13, 'cablam Outlier', (266.7, 225.6, 193.4)), ('A', '798', 13, 'side-chain clash', (268.217, 229.988, 189.048)), ('A', '920', 13, 'side-chain clash', (268.217, 229.988, 189.048)), ('A', '293', 14, 'cablam Outlier', (280.5, 255.5, 248.3)), ('A', '294', 14, 'smoc Outlier', (279.724, 256.967, 244.912)), ('A', '295', 14, 'smoc Outlier', (276.777, 257.322, 242.503)), ('A', '850', 15, 'smoc Outlier', (262.964, 223.906, 236.43)), ('A', '851', 15, 'smoc Outlier', (261.84900000000005, 222.69, 239.88000000000002)), ('A', '852', 15, 'smoc Outlier', (263.34400000000005, 225.79399999999998, 241.547)), ('A', '477', 16, 'smoc Outlier', (200.863, 252.548, 285.83)), ('A', '478', 16, 'smoc Outlier', (199.88400000000001, 254.258, 289.103)), ('A', '486', 16, 'cablam CA Geom Outlier', (203.5, 252.1, 294.3)), ('A', '942', 17, 'smoc Outlier', (273.57599999999996, 237.89600000000002, 221.30800000000002)), ('A', '943', 17, 'smoc Outlier', (271.307, 240.915, 221.88800000000003)), ('A', '944', 17, 'smoc Outlier', (269.675, 240.464, 218.45700000000002)), ('A', '214', 18, 'Rotamer\ncablam CA Geom Outlier\nsmoc Outlier', (303.166, 250.90599999999995, 254.911)), ('A', '215', 18, 'cablam CA Geom Outlier', (299.5, 252.0, 255.3)), ('A', '1146', 19, 'smoc Outlier', (255.914, 247.533, 153.51399999999998)), ('A', '1147', 19, 'smoc Outlier', (257.078, 243.893, 153.629)), ('A', '666', 20, 'cablam Outlier', (268.3, 262.8, 228.9)), ('A', '667', 20, 'cablam Outlier', (265.0, 264.5, 228.1)), ('A', '738', 21, 'side-chain clash', (243.597, 228.94, 243.311)), ('A', '764', 21, 'side-chain clash', (243.597, 228.94, 243.311)), ('A', '345', 22, 'smoc Outlier', (238.58200000000002, 272.924, 299.004)), ('A', '346', 22, 'smoc Outlier', (235.226, 271.46, 297.902)), ('A', '340', 23, 'side-chain clash', (237.441, 274.727, 291.048)), ('A', '356', 23, 'side-chain clash', (237.441, 274.727, 291.048)), ('A', '281', 24, 'smoc Outlier', (280.46599999999995, 228.58700000000002, 244.69)), ('A', '282', 24, 'smoc Outlier', (282.244, 227.65800000000002, 247.946)), ('A', '287', 25, 'backbone clash', (283.54, 243.044, 246.45)), ('A', '288', 25, 'backbone clash', (283.54, 243.044, 246.45)), ('A', '717', 26, 'backbone clash', (271.524, 246.831, 191.052)), ('A', '718', 26, 'backbone clash', (271.524, 246.831, 191.052)), ('A', '122', 27, 'cablam Outlier', (298.9, 234.3, 275.9)), ('A', '123', 27, 'cablam Outlier', (300.1, 232.0, 273.1)), ('A', '273', 28, 'smoc Outlier', (275.601, 250.497, 255.994)), ('A', '52', 28, 'smoc Outlier', (272.42699999999996, 245.88200000000003, 256.335)), ('A', '533', 29, 'smoc Outlier', (261.065, 283.22799999999995, 263.161)), ('A', '535', 29, 'smoc Outlier', (262.131, 282.99299999999994, 256.506)), ('A', '416', 30, 'smoc Outlier', (225.38100000000003, 253.288, 283.97599999999994)), ('A', '417', 30, 'cablam Outlier', (224.0, 255.5, 286.8)), ('A', '197', 31, 'smoc Outlier', (273.90599999999995, 244.159, 269.601)), ('A', '198', 31, 'smoc Outlier', (271.621, 244.562, 272.63599999999997)), ('A', '982', 32, 'smoc Outlier', (253.089, 229.67899999999997, 267.947)), ('A', '983', 32, 'smoc Outlier', (253.12800000000001, 233.105, 269.629)), ('A', '113', 33, 'smoc Outlier', (282.815, 249.975, 289.263)), ('A', '114', 33, 'smoc Outlier', (280.97799999999995, 247.624, 286.873)), ('A', '773', 34, 'smoc Outlier', (245.58700000000002, 230.782, 225.154)), ('A', '776', 34, 'smoc Outlier', (246.625, 228.61899999999997, 220.83200000000002)), ('A', '427', 35, 'smoc Outlier', (231.007, 258.77299999999997, 271.729)), ('A', '428', 35, 'smoc Outlier', (233.22899999999998, 261.249, 269.832)), ('A', '388', 36, 'smoc Outlier', (253.491, 269.506, 276.303)), ('A', '527', 36, 'cablam Outlier', (255.7, 275.2, 278.9)), ('A', '559', 37, 'side-chain clash', (246.551, 283.692, 256.871)), ('A', '584', 37, 'side-chain clash', (246.551, 283.692, 256.871)), ('A', '445', 38, 'smoc Outlier', (232.563, 261.23099999999994, 310.769)), ('A', '446', 38, 'cablam Outlier', (229.3, 259.7, 309.4)), ('A', '641', 39, 'smoc Outlier', (281.587, 270.116, 234.671)), ('A', '642', 39, 'smoc Outlier', (278.559, 271.855, 236.207)), ('A', '644', 40, 'smoc Outlier', (272.457, 272.622, 232.80200000000002)), ('A', '645', 40, 'smoc Outlier', (270.107, 270.955, 230.311)), ('A', '603', 41, 'smoc Outlier', (283.234, 247.045, 230.866)), ('A', '604', 41, 'smoc Outlier', (283.92299999999994, 250.465, 229.256)), ('A', '572', 42, 'smoc Outlier', (247.813, 270.121, 252.17)), ('A', '573', 42, 'smoc Outlier', (249.33700000000002, 272.782, 254.40200000000002)), ('A', '178', 43, 'backbone clash\nside-chain clash\nsmoc Outlier', (241.383, 271.507, 249.447)), ('A', '569', 43, 'smoc Outlier', (244.478, 272.373, 245.626)), ('A', '745', 44, 'cablam Outlier\nsmoc Outlier', (251.2, 224.4, 256.7)), ('A', '747', 44, 'smoc Outlier', (245.134, 225.07399999999998, 259.553)), ('A', '657', 45, 'smoc Outlier', (277.469, 272.29599999999994, 220.51)), ('A', '658', 45, 'smoc Outlier', (277.67, 269.69, 217.73999999999998)), ('A', '481', 46, 'smoc Outlier', (201.394, 262.742, 292.178)), ('A', '482', 46, 'smoc Outlier', (204.866, 264.037, 293.053)), ('A', '501', 47, 'smoc Outlier', (234.68200000000002, 251.68, 304.037)), ('A', '502', 47, 'smoc Outlier', (236.454, 249.678, 301.367)), ('A', '226', 48, 'smoc Outlier', (285.624, 232.82800000000003, 266.65500000000003)), ('A', '227', 48, 'smoc Outlier', (283.53299999999996, 233.18800000000002, 269.848)), ('A', '741', 49, 'backbone clash', (254.848, 235.263, 245.64)), ('A', '962', 49, 'backbone clash', (254.848, 235.263, 245.64)), ('A', '861', 50, 'smoc Outlier', (253.48700000000002, 223.74299999999997, 232.817)), ('A', '862', 50, 'smoc Outlier', (255.1, 222.51, 229.571)), ('A', '231', 51, 'cablam Outlier', (277.0, 238.9, 278.1)), ('A', '233', 51, 'smoc Outlier', (276.53099999999995, 244.78, 279.34700000000004)), ('A', '951', 52, 'side-chain clash', (258.658, 235.755, 229.333)), ('A', '955', 52, 'side-chain clash', (258.658, 235.755, 229.333)), ('A', '1057', 53, 'smoc Outlier', (262.246, 229.792, 221.654)), ('A', '1058', 53, 'cablam CA Geom Outlier', (258.8, 231.2, 222.5)), ('C', '102', 1, 'side-chain clash\nbackbone clash', (244.048, 241.484, 192.672)), ('C', '1035', 1, 'smoc Outlier', (235.777, 246.202, 198.19)), ('C', '1037', 1, 'smoc Outlier', (241.17299999999997, 242.517, 200.024)), ('C', '1038', 1, 'smoc Outlier', (244.73499999999999, 242.17499999999998, 198.738)), ('C', '1039', 1, 'smoc Outlier', (245.83100000000002, 240.681, 202.086)), ('C', '910', 1, 'smoc Outlier', (245.415, 237.15800000000002, 188.657)), ('C', '911', 1, 'smoc Outlier', (242.51299999999998, 235.20399999999998, 187.105)), ('C', '99', 1, 'side-chain clash\nbackbone clash', (244.048, 241.484, 192.672)), ('C', '191', 2, 'side-chain clash', (216.907, 206.463, 253.794)), ('C', '193', 2, 'side-chain clash', (220.204, 208.796, 257.685)), ('C', '223', 2, 'side-chain clash', (217.815, 210.423, 257.494)), ('C', '33', 2, 'cablam Outlier', (221.9, 206.5, 247.3)), ('C', '34', 2, 'cablam CA Geom Outlier\nsmoc Outlier', (220.3, 206.4, 250.8)), ('C', '35', 2, 'cablam Outlier', (221.5, 208.6, 253.7)), ('C', '91', 2, 'side-chain clash', (220.204, 208.796, 257.685)), ('C', '268', 3, 'smoc Outlier', (224.757, 202.48600000000002, 258.541)), ('C', '269', 3, 'smoc Outlier', (227.442, 204.79299999999998, 259.902)), ('C', '86', 3, 'Dihedral angle:CA:C\ncablam Outlier', (227.53, 204.625, 267.584)), ('C', '87', 3, 'Dihedral angle:N:CA', (230.496, 207.02800000000002, 268.062)), ('C', '88', 3, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (229.354, 209.696, 265.513)), ('C', '89', 3, 'Dihedral angle:N:CA', (225.839, 209.36, 264.188)), ('C', '1090', 4, 'smoc Outlier', (254.339, 236.01899999999998, 179.406)), ('C', '1091', 4, 'smoc Outlier', (252.18200000000002, 239.069, 180.02)), ('C', '1092', 4, 'cablam Outlier\nsmoc Outlier', (249.6, 237.0, 182.0)), ('C', '1093', 4, 'smoc Outlier', (250.0, 233.36100000000002, 183.06)), ('C', '1119', 4, 'smoc Outlier', (250.048, 237.93200000000002, 174.82200000000003)), ('C', '100', 5, 'backbone clash', (208.103, 196.803, 261.322)), ('C', '243', 5, 'smoc Outlier', (208.135, 193.91899999999998, 267.558)), ('C', '244', 5, 'side-chain clash', (211.746, 189.586, 267.493)), ('C', '79', 5, 'side-chain clash', (211.746, 189.586, 267.493)), ('C', '96', 5, 'backbone clash', (208.103, 196.803, 261.322)), ('C', '738', 6, 'side-chain clash', (229.582, 253.555, 242.508)), ('C', '759', 6, 'smoc Outlier', (237.206, 253.731, 245.08800000000002)), ('C', '762', 6, 'smoc Outlier', (235.70899999999997, 255.45000000000002, 240.01299999999998)), ('C', '764', 6, 'side-chain clash', (229.582, 253.555, 242.508)), ('C', '545', 7, 'smoc Outlier', (268.384, 224.592, 265.606)), ('C', '547', 7, 'smoc Outlier', (262.91999999999996, 222.157, 262.224)), ('C', '548', 7, 'smoc Outlier', (260.78499999999997, 221.495, 259.178)), ('C', '549', 7, 'cablam CA Geom Outlier', (259.3, 219.0, 256.8)), ('C', '848', 8, 'backbone clash', (215.37, 235.837, 235.691)), ('C', '849', 8, 'backbone clash', (215.37, 235.837, 235.691)), ('C', '850', 8, 'smoc Outlier', (217.48000000000002, 239.466, 235.046)), ('C', '851', 8, 'smoc Outlier', (215.347, 240.872, 237.876)), ('C', '780', 9, 'side-chain clash', (232.721, 250.708, 210.521)), ('C', '782', 9, 'smoc Outlier', (227.95200000000003, 248.42800000000003, 210.755)), ('C', '783', 9, 'smoc Outlier', (227.183, 252.162, 210.379)), ('C', '784', 9, 'side-chain clash\nsmoc Outlier', (232.721, 250.708, 210.521)), ('C', '25', 10, 'smoc Outlier', (227.836, 187.066, 261.082)), ('C', '27', 10, 'smoc Outlier', (226.95100000000002, 190.467, 256.38)), ('C', '28', 10, 'smoc Outlier', (226.98200000000003, 193.64, 254.272)), ('C', '286', 11, 'smoc Outlier', (215.339, 214.99200000000002, 243.869)), ('C', '287', 11, 'backbone clash', (221.244, 213.516, 243.395)), ('C', '288', 11, 'backbone clash', (221.244, 213.516, 243.395)), ('C', '973', 12, 'side-chain clash\nsmoc Outlier', (231.202, 240.047, 261.528)), ('C', '974', 12, 'smoc Outlier', (226.99, 238.14899999999997, 259.357)), ('C', '992', 12, 'side-chain clash', (231.202, 240.047, 261.528)), ('C', '314', 13, 'smoc Outlier', (241.82000000000002, 220.471, 237.538)), ('C', '316', 13, 'smoc Outlier', (242.62, 218.439, 243.393)), ('C', '317', 13, 'smoc Outlier', (246.291, 218.707, 244.389)), ('C', '797', 14, 'cablam Outlier', (222.2, 238.5, 189.1)), ('C', '798', 14, 'smoc Outlier', (223.52200000000002, 236.035, 186.52800000000002)), ('C', '799', 14, 'smoc Outlier', (221.865, 232.96, 188.05800000000002)), ('C', '445', 15, 'smoc Outlier', (273.93499999999995, 209.297, 321.592)), ('C', '446', 15, 'smoc Outlier', (273.199, 212.38400000000001, 323.682)), ('C', '447', 15, 'cablam Outlier', (272.6, 214.8, 320.8)), ('C', '332', 16, 'smoc Outlier', (274.881, 215.507, 275.369)), ('C', '333', 16, 'cablam CA Geom Outlier\nsmoc Outlier', (277.9, 214.4, 277.4)), ('C', '334', 16, 'cablam Outlier', (279.6, 216.2, 280.3)), ('C', '454', 17, 'backbone clash', (272.602, 234.7, 311.475)), ('C', '468', 17, 'smoc Outlier', (275.52299999999997, 233.44899999999998, 308.65700000000004)), ('C', '469', 17, 'backbone clash', (272.602, 234.7, 311.475)), ('C', '173', 18, 'smoc Outlier', (200.099, 213.29399999999998, 269.42199999999997)), ('C', '174', 18, 'smoc Outlier', (197.82500000000002, 210.218, 269.477)), ('C', '175', 18, 'smoc Outlier', (197.198, 207.999, 266.46799999999996)), ('C', '741', 19, 'backbone clash', (229.361, 240.481, 244.037)), ('C', '962', 19, 'backbone clash', (229.361, 240.481, 244.037)), ('C', '964', 19, 'smoc Outlier', (227.64499999999998, 235.268, 244.697)), ('C', '1110', 20, 'smoc Outlier', (244.36100000000002, 225.586, 182.14899999999997)), ('C', '1111', 20, 'smoc Outlier', (243.17299999999997, 227.02700000000002, 178.818)), ('C', '1112', 20, 'smoc Outlier', (245.041, 225.96800000000002, 175.651)), ('C', '214', 21, 'Rotamer\ncablam CA Geom Outlier', (214.62900000000005, 192.023, 248.668)), ('C', '215', 21, 'smoc Outlier', (217.662, 193.84, 250.122)), ('C', '1146', 22, 'smoc Outlier', (248.35700000000003, 239.248, 152.42100000000002)), ('C', '1147', 22, 'smoc Outlier', (244.786, 240.606, 152.646)), ('C', '666', 23, 'cablam Outlier', (247.8, 217.3, 228.1)), ('C', '667', 23, 'cablam Outlier', (251.2, 218.8, 227.4)), ('C', '661', 24, 'smoc Outlier', (244.54399999999998, 215.07299999999998, 215.76)), ('C', '662', 24, 'smoc Outlier', (244.61399999999998, 216.534, 219.266)), ('C', '281', 25, 'smoc Outlier', (210.51399999999998, 224.099, 242.89000000000001)), ('C', '282', 25, 'smoc Outlier', (208.849, 222.692, 246.04299999999998)), ('C', '676', 26, 'smoc Outlier', (236.781, 203.164, 219.806)), ('C', '689', 26, 'smoc Outlier', (233.48200000000003, 199.701, 223.13899999999998)), ('C', '393', 27, 'side-chain clash', (272.801, 228.062, 282.639)), ('C', '523', 27, 'side-chain clash', (272.801, 228.062, 282.639)), ('C', '1098', 28, 'smoc Outlier', (250.84, 219.403, 175.98600000000002)), ('C', '1099', 28, 'smoc Outlier', (253.602, 217.647, 173.994)), ('C', '261', 29, 'smoc Outlier', (207.433, 188.63, 261.42999999999995)), ('C', '262', 29, 'smoc Outlier', (208.82100000000003, 189.38000000000002, 257.99099999999993)), ('C', '619', 30, 'smoc Outlier', (248.10999999999999, 206.511, 244.541)), ('C', '620', 30, 'smoc Outlier', (246.726, 204.759, 241.407)), ('C', '536', 31, 'smoc Outlier', (265.128, 210.32600000000002, 250.463)), ('C', '537', 31, 'smoc Outlier', (261.749, 210.23999999999998, 252.212)), ('C', '237', 32, 'side-chain clash', (227.611, 196.273, 270.318)), ('C', '83', 32, 'side-chain clash', (227.611, 196.273, 270.318)), ('C', '428', 33, 'smoc Outlier', (258.376, 230.879, 290.762)), ('C', '429', 33, 'smoc Outlier', (259.957, 227.635, 292.007)), ('C', '520', 34, 'smoc Outlier', (271.639, 235.61499999999998, 280.405)), ('C', '521', 34, 'smoc Outlier', (270.43799999999993, 232.836, 278.067)), ('C', '1016', 35, 'smoc Outlier', (239.464, 245.83200000000002, 225.136)), ('C', '1017', 35, 'smoc Outlier', (239.60299999999998, 242.227, 223.911)), ('C', '389', 36, 'side-chain clash', (262.799, 216.694, 276.518)), ('C', '528', 36, 'side-chain clash\nsmoc Outlier', (262.799, 216.694, 276.518)), ('C', '328', 37, 'side-chain clash', (275.007, 211.717, 265.004)), ('C', '580', 37, 'side-chain clash', (275.007, 211.717, 265.004)), ('C', '305', 38, 'smoc Outlier', (227.286, 221.476, 238.55800000000002)), ('C', '306', 38, 'smoc Outlier', (225.341, 218.266, 237.98200000000003)), ('C', '380', 39, 'smoc Outlier', (256.02299999999997, 221.416, 292.749)), ('C', '381', 39, 'cablam Outlier\nsmoc Outlier', (254.7, 221.6, 289.2)), ('C', '108', 40, 'backbone clash', (227.116, 208.249, 277.327)), ('C', '234', 40, 'backbone clash', (227.116, 208.249, 277.327)), ('C', '458', 41, 'smoc Outlier', (264.368, 240.268, 313.20099999999996)), ('C', '459', 41, 'smoc Outlier', (263.009, 239.98700000000002, 309.633)), ('C', '656', 42, 'smoc Outlier', (248.542, 204.447, 221.07899999999998)), ('C', '658', 42, 'smoc Outlier', (249.687, 206.195, 216.032)), ('C', '862', 43, 'smoc Outlier', (220.09, 247.738, 226.593)), ('C', '864', 43, 'smoc Outlier', (221.761, 251.55100000000002, 221.66)), ('C', '1058', 44, 'cablam Outlier', (226.5, 241.1, 219.7)), ('C', '731', 44, 'smoc Outlier', (229.73499999999999, 243.17899999999997, 224.88400000000001)), ('C', '481', 45, 'smoc Outlier', (274.802, 243.567, 325.853)), ('C', '482', 45, 'smoc Outlier', (276.14300000000003, 240.58700000000002, 323.907)), ('C', '157', 46, 'smoc Outlier', (206.305, 196.95200000000003, 277.92199999999997)), ('C', '159', 46, 'smoc Outlier', (212.003, 197.515, 276.52299999999997)), ('C', '164', 47, 'backbone clash\nsmoc Outlier', (214.485, 207.678, 289.502)), ('C', '165', 47, 'backbone clash', (214.485, 207.678, 289.502)), ('C', '727', 48, 'smoc Outlier', (233.412, 237.51399999999998, 214.901)), ('C', '947', 48, 'smoc Outlier', (232.39000000000001, 232.517, 219.08800000000002)), ('C', '744', 49, 'smoc Outlier', (222.003, 247.38000000000002, 250.71899999999997)), ('C', '745', 49, 'cablam Outlier\nsmoc Outlier', (219.5, 249.7, 252.5)), ('C', '40', 50, 'smoc Outlier', (218.694, 223.472, 257.704)), ('C', '41', 50, 'smoc Outlier', (215.26899999999998, 225.13899999999998, 257.474)), ('C', '474', 51, 'backbone clash', (267.293, 245.355, 324.572)), ('C', '478', 51, 'backbone clash', (267.293, 245.355, 324.572)), ('B', '265', 1, 'side-chain clash', (208.821, 290.747, 264.57)), ('B', '78', 1, 'side-chain clash', (203.795, 291.446, 260.636)), ('B', '80', 1, 'side-chain clash', (203.795, 291.446, 260.636)), ('B', '81', 1, 'cablam Outlier', (207.8, 289.3, 267.5)), ('B', '82', 1, 'smoc Outlier', (205.93800000000002, 286.082, 268.18)), ('B', '83', 1, 'smoc Outlier', (207.33800000000002, 282.79799999999994, 269.45799999999997)), ('B', '84', 1, 'smoc Outlier', (208.55200000000002, 280.45, 266.7)), ('B', '86', 1, 'Dihedral angle:CA:C\ncablam Outlier', (213.57, 276.404, 266.741)), ('B', '87', 1, 'Dihedral angle:N:CA', (214.10399999999998, 272.58799999999997, 266.54400000000004)), ('B', '88', 1, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (217.206, 272.64500000000004, 264.245)), ('B', '89', 1, 'Dihedral angle:N:CA', (219.042, 275.90799999999996, 263.812)), ('B', '182', 2, 'smoc Outlier', (216.78, 307.49299999999994, 256.872)), ('B', '183', 2, 'smoc Outlier', (214.853, 308.345, 253.71299999999997)), ('B', '184', 2, 'smoc Outlier', (214.539, 306.45799999999997, 250.447)), ('B', '185', 2, 'cablam Outlier', (214.9, 302.7, 250.1)), ('B', '261', 2, 'smoc Outlier', (210.77299999999997, 302.868, 262.407)), ('B', '262', 2, 'cablam Outlier', (210.6, 301.2, 259.0)), ('B', '95', 2, 'Dihedral angle:CA:C', (216.39000000000001, 294.72799999999995, 255.107)), ('B', '96', 2, 'Dihedral angle:N:CA', (216.605, 297.857, 257.215)), ('B', '97', 2, 'cablam Outlier', (216.9, 301.6, 257.4)), ('B', '391', 3, 'Dihedral angle:CA:C', (214.9, 237.334, 270.64200000000005)), ('B', '392', 3, 'Dihedral angle:N:CA', (216.534, 233.947, 270.887)), ('B', '393', 3, 'side-chain clash', (213.372, 228.884, 272.3)), ('B', '518', 3, 'cablam Outlier\nsmoc Outlier', (218.5, 234.1, 264.5)), ('B', '519', 3, 'smoc Outlier', (218.923, 230.529, 263.345)), ('B', '520', 3, 'smoc Outlier', (215.509, 229.003, 264.184)), ('B', '521', 3, 'smoc Outlier', (211.983, 230.01399999999998, 265.28799999999995)), ('B', '523', 3, 'side-chain clash', (213.372, 228.884, 272.3)), ('B', '193', 4, 'side-chain clash', (222.585, 281.915, 258.489)), ('B', '33', 4, 'cablam Outlier', (220.6, 282.4, 247.7)), ('B', '34', 4, 'cablam CA Geom Outlier', (220.7, 283.5, 251.3)), ('B', '35', 4, 'cablam Outlier', (221.5, 281.2, 254.2)), ('B', '91', 4, 'side-chain clash', (222.585, 281.915, 258.489)), ('B', '108', 5, 'backbone clash\nside-chain clash', (257.643, 207.796, 289.734)), ('B', '234', 5, 'backbone clash\nside-chain clash', (257.643, 207.796, 289.734)), ('B', '486', 5, 'cablam Outlier', (254.5, 211.4, 294.6)), ('B', '973', 5, 'side-chain clash', (257.638, 207.637, 290.524)), ('B', '992', 5, 'side-chain clash', (257.638, 207.637, 290.524)), ('B', '343', 6, 'smoc Outlier', (216.611, 234.069, 292.712)), ('B', '345', 6, 'smoc Outlier', (217.154, 229.20999999999998, 297.134)), ('B', '346', 6, 'smoc Outlier', (220.395, 227.343, 296.34000000000003)), ('B', '347', 6, 'smoc Outlier', (222.35600000000002, 227.009, 293.107)), ('B', '280', 7, 'backbone clash', (238.474, 284.49, 246.723)), ('B', '281', 7, 'smoc Outlier', (241.424, 283.98499999999996, 243.836)), ('B', '282', 7, 'smoc Outlier', (240.996, 285.93699999999995, 247.094)), ('B', '283', 7, 'backbone clash', (238.474, 284.49, 246.723)), ('B', '101', 8, 'side-chain clash', (219.057, 296.971, 267.145)), ('B', '102', 8, 'backbone clash\nside-chain clash', (219.057, 296.971, 267.145)), ('B', '121', 8, 'backbone clash', (220.736, 294.331, 271.144)), ('B', '243', 8, 'smoc Outlier', (213.99, 298.805, 268.875)), ('B', '292', 9, 'smoc Outlier', (218.64899999999997, 269.36, 246.065)), ('B', '293', 9, 'cablam Outlier\nsmoc Outlier', (216.8, 272.0, 244.0)), ('B', '294', 9, 'smoc Outlier', (216.44, 270.452, 240.5)), ('B', '295', 9, 'smoc Outlier', (218.038, 267.673, 238.403)), ('B', '1058', 10, 'cablam CA Geom Outlier\nsmoc Outlier', (250.9, 263.9, 221.6)), ('B', '728', 10, 'smoc Outlier', (247.242, 259.73599999999993, 219.002)), ('B', '731', 10, 'side-chain clash', (252.113, 258.616, 224.844)), ('B', '774', 10, 'side-chain clash', (252.113, 258.616, 224.844)), ('B', '645', 11, 'smoc Outlier', (209.73, 255.33800000000002, 226.172)), ('B', '646', 11, 'smoc Outlier', (211.168, 251.859, 225.687)), ('B', '668', 11, 'smoc Outlier', (216.77899999999997, 250.497, 223.27899999999997)), ('B', '675', 12, 'smoc Outlier', (215.718, 271.22499999999997, 218.564)), ('B', '676', 12, 'smoc Outlier', (213.068, 273.707, 217.44299999999998)), ('B', '689', 12, 'smoc Outlier', (211.47299999999998, 278.2, 220.758)), ('B', '37', 13, 'side-chain clash\nbackbone clash', (221.713, 230.787, 247.724)), ('B', '53', 13, 'side-chain clash\nbackbone clash', (221.713, 230.787, 247.724)), ('B', '569', 13, 'smoc Outlier', (219.86, 233.376, 243.617)), ('B', '527', 14, 'cablam Outlier\nsmoc Outlier', (207.3, 242.0, 275.8)), ('B', '528', 14, 'smoc Outlier', (207.333, 242.978, 272.07599999999996)), ('B', '529', 14, 'smoc Outlier', (203.68800000000002, 243.26399999999998, 271.057)), ('B', '848', 15, 'backbone clash', (248.127, 274.556, 238.327)), ('B', '849', 15, 'backbone clash', (248.127, 274.556, 238.327)), ('B', '850', 15, 'smoc Outlier', (251.26999999999998, 271.805, 237.65800000000002)), ('B', '144', 16, 'side-chain clash\nDihedral angle:CA:C', (213.344, 308.563, 275.09)), ('B', '145', 16, 'Dihedral angle:N:CA', (213.026, 312.251, 274.325)), ('B', '247', 16, 'smoc Outlier', (209.067, 311.35400000000004, 272.745)), ('B', '561', 17, 'smoc Outlier', (206.141, 222.30200000000002, 257.9)), ('B', '563', 17, 'side-chain clash', (208.522, 226.546, 258.51)), ('B', '577', 17, 'side-chain clash', (208.522, 226.546, 258.51)), ('B', '231', 18, 'cablam Outlier', (226.5, 277.7, 277.5)), ('B', '232', 18, 'cablam Outlier', (225.0, 274.1, 277.4)), ('B', '233', 18, 'smoc Outlier', (221.224, 274.47299999999996, 277.30400000000003)), ('B', '214', 19, 'Dihedral angle:CA:C\ncablam Outlier', (210.657, 295.335, 248.045)), ('B', '215', 19, 'Dihedral angle:N:CA\ncablam Outlier', (211.38000000000002, 292.527, 250.45600000000002)), ('B', '1145', 20, 'smoc Outlier', (246.55200000000002, 247.99200000000002, 154.725)), ('B', '1146', 20, 'smoc Outlier', (243.45800000000003, 249.665, 153.24399999999997)), ('B', '738', 21, 'side-chain clash\nbackbone clash', (247.441, 262.116, 254.991)), ('B', '764', 21, 'side-chain clash\nbackbone clash', (247.441, 262.116, 254.991)), ('B', '137', 22, 'smoc Outlier', (204.687, 289.459, 276.747)), ('B', '15', 22, 'smoc Outlier', (205.545, 292.853, 280.777)), ('B', '148', 23, 'cablam CA Geom Outlier', (216.9, 318.1, 270.2)), ('B', '149', 23, 'smoc Outlier', (220.164, 316.41799999999995, 269.239)), ('B', '19', 24, 'smoc Outlier', (198.429, 297.885, 271.712)), ('B', '20', 24, 'smoc Outlier', (199.189, 299.33299999999997, 268.247)), ('B', '287', 25, 'backbone clash\nsmoc Outlier', (226.641, 280.41, 243.573)), ('B', '288', 25, 'backbone clash', (226.641, 280.41, 243.573)), ('B', '988', 26, 'smoc Outlier', (248.16299999999998, 253.71899999999997, 268.26599999999996)), ('B', '991', 26, 'smoc Outlier', (247.311, 251.55100000000002, 263.362)), ('B', '717', 27, 'backbone clash', (233.86, 265.549, 188.528)), ('B', '718', 27, 'backbone clash\nsmoc Outlier', (233.86, 265.549, 188.528)), ('B', '801', 28, 'side-chain clash', (247.59, 274.389, 196.031)), ('B', '928', 28, 'side-chain clash', (247.59, 274.389, 196.031)), ('B', '532', 29, 'smoc Outlier', (199.08800000000002, 244.33200000000002, 261.95599999999996)), ('B', '533', 29, 'smoc Outlier', (200.30100000000002, 243.035, 258.584)), ('B', '370', 30, 'smoc Outlier', (218.238, 248.83200000000002, 285.284)), ('B', '372', 30, 'smoc Outlier', (220.22899999999998, 247.85700000000003, 291.227)), ('B', '113', 31, 'smoc Outlier', (211.655, 277.739, 284.749)), ('B', '114', 31, 'smoc Outlier', (215.075, 277.051, 283.184)), ('B', '797', 32, 'cablam Outlier', (254.5, 271.7, 192.2)), ('B', '798', 32, 'smoc Outlier', (251.92100000000002, 271.506, 189.41)), ('B', '427', 33, 'smoc Outlier', (235.94299999999998, 230.911, 272.621)), ('B', '428', 33, 'smoc Outlier', (233.04399999999998, 231.975, 270.35400000000004)), ('B', '246', 34, 'backbone clash', (203.427, 306.257, 272.811)), ('B', '257', 34, 'backbone clash\nsmoc Outlier', (203.427, 306.257, 272.811)), ('B', '374', 35, 'side-chain clash', (221.225, 240.053, 287.494)), ('B', '434', 35, 'side-chain clash', (221.225, 240.053, 287.494)), ('B', '1002', 36, 'smoc Outlier', (245.71399999999997, 251.178, 246.24599999999998)), ('B', '1005', 36, 'smoc Outlier', (247.812, 250.577, 242.07299999999998)), ('B', '603', 37, 'smoc Outlier', (225.38000000000002, 277.705, 227.08200000000002)), ('B', '604', 37, 'smoc Outlier', (222.194, 276.801, 225.138)), ('B', '884', 38, 'cablam Outlier', (261.0, 262.5, 195.3)), ('B', '886', 38, 'smoc Outlier', (257.40599999999995, 257.504, 196.96)), ('B', '657', 39, 'smoc Outlier', (207.221, 260.258, 215.26399999999998)), ('B', '658', 39, 'smoc Outlier', (209.847, 261.457, 212.77599999999998)), ('B', '754', 40, 'smoc Outlier', (258.633, 248.697, 253.646)), ('B', '756', 40, 'cablam Outlier', (254.5, 245.8, 252.0)), ('B', '466', 41, 'smoc Outlier', (230.14499999999998, 218.187, 283.12)), ('B', '467', 41, 'smoc Outlier', (232.85500000000002, 215.842, 284.441)), ('B', '205', 42, 'backbone clash', (229.128, 285.326, 261.452)), ('B', '224', 42, 'backbone clash', (229.128, 285.326, 261.452)), ('B', '741', 43, 'backbone clash', (246.874, 260.497, 244.98)), ('B', '962', 43, 'backbone clash', (246.874, 260.497, 244.98)), ('B', '40', 44, 'backbone clash\nsmoc Outlier', (237.383, 276.489, 259.495)), ('B', '41', 44, 'backbone clash', (237.383, 276.489, 259.495)), ('B', '943', 45, 'smoc Outlier', (236.30800000000002, 269.77299999999997, 219.38200000000003)), ('B', '944', 45, 'smoc Outlier', (237.554, 268.057, 216.198))]
data['probe'] = [(' B 193  VAL HG23', ' B 223  LEU HD22', -0.699, (224.851, 283.593, 258.407)), (' A  96  GLU  OE1', ' A 190  ARG  NH1', -0.699, (300.112, 238.778, 264.408)), (' C1011  GLN  OE1', ' C1014  ARG  NH1', -0.688, (233.359, 240.498, 231.684)), (' A 741  TYR  OH ', ' A 962  LEU  O  ', -0.671, (254.848, 235.263, 245.64)), (' C 193  VAL HG23', ' C 223  LEU HD22', -0.661, (217.815, 210.423, 257.494)), (' C 393  THR  O  ', ' C 523  THR  OG1', -0.661, (272.801, 228.062, 282.639)), (' A  80  ASP  O  ', ' A 265  TYR  OH ', -0.659, (298.341, 251.088, 270.877)), (' C 389  ASP  OD1', ' C 528  LYS  NZ ', -0.654, (262.799, 216.694, 276.518)), (' B 912  THR  OG1', ' B1106  GLN  NE2', -0.654, (241.851, 254.154, 181.794)), (' B  80  ASP  O  ', ' B 265  TYR  OH ', -0.642, (208.821, 290.747, 264.57)), (' B 108  THR  OG1', ' B 234  ASN  O  ', -0.635, (215.784, 274.189, 275.951)), (' A 340  GLU  O  ', ' A 356  LYS  NZ ', -0.633, (237.441, 274.727, 291.048)), (' B 478  THR  HG1', ' C 369  TYR  HH ', -0.621, (257.643, 207.796, 289.734)), (' C 328  ARG  NH2', ' C 580  GLN  OE1', -0.615, (275.007, 211.717, 265.004)), (' C  83  VAL  O  ', ' C 237  ARG  NH2', -0.612, (227.611, 196.273, 270.318)), (' A  99  ASN  ND2', ' A 178  ASP  O  ', -0.603, (304.228, 234.842, 266.011)), (' A 571  ASP  OD1', ' B  44  ARG  NH1', -0.598, (241.383, 271.507, 249.447)), (' B 393  THR  O  ', ' B 523  THR  OG1', -0.595, (213.372, 228.884, 272.3)), (' A 951  VAL  O  ', ' A 955  ASN  ND2', -0.593, (258.658, 235.755, 229.333)), (' A 738  CYS  SG ', ' A 764  ASN  ND2', -0.57, (243.597, 228.94, 243.311)), (' B 741  TYR  OH ', ' B 962  LEU  O  ', -0.568, (246.874, 260.497, 244.98)), (' A1028  LYS  O  ', ' A1032  CYS  N  ', -0.564, (253.648, 237.096, 205.125)), (' B  37  TYR  OH ', ' B  53  ASP  OD2', -0.562, (227.286, 274.718, 259.203)), (' C  96  GLU  OE1', ' C 100  ILE  N  ', -0.548, (208.103, 196.803, 261.322)), (' C 738  CYS  SG ', ' C 764  ASN  ND2', -0.541, (229.582, 253.555, 242.508)), (' A  21  ARG  NE ', ' A 138  ASP  OD2', -0.538, (301.979, 253.185, 279.916)), (' A 975  SER  O  ', ' A1000  ARG  NH2', -0.532, (254.657, 234.87, 255.822)), (' B 908  GLY  O  ', ' B1038  LYS  NZ ', -0.529, (245.584, 250.363, 192.163)), (' C 108  THR  OG1', ' C 234  ASN  O  ', -0.521, (227.116, 208.249, 277.327)), (' B 571  ASP  OD1', ' C  44  ARG  NH1', -0.519, (221.713, 230.787, 247.724)), (' B 246  ARG  NH1', ' B 257  GLY  O  ', -0.509, (203.427, 306.257, 272.811)), (' B  78  ARG  NE ', ' B  80  ASP  OD2', -0.507, (203.795, 291.446, 260.636)), (' B 738  CYS  SG ', ' B 764  ASN  ND2', -0.501, (257.777, 253.579, 244.216)), (' B 975  SER  O  ', ' B1000  ARG  NH2', -0.5, (247.441, 262.116, 254.991)), (' A 914  ASN  ND2', ' A1111  GLU  OE1', -0.493, (263.053, 244.639, 181.823)), (' B  91  TYR  HD1', ' B 193  VAL HG22', -0.492, (222.585, 281.915, 258.489)), (' C 780  GLU  O  ', ' C 784  GLN  NE2', -0.492, (232.721, 250.708, 210.521)), (' B 563  GLN  O  ', ' B 577  ARG  NH1', -0.489, (208.522, 226.546, 258.51)), (' B1054  GLN  N  ', ' B1061  VAL  O  ', -0.489, (249.714, 265.16, 209.362)), (' C  91  TYR  OH ', ' C 191  GLU  OE1', -0.487, (216.907, 206.463, 253.794)), (' B 280  ASN  OD1', ' B 283  GLY  N  ', -0.479, (238.474, 284.49, 246.723)), (' A 559  PHE  CD2', ' A 584  ILE HD12', -0.472, (246.551, 283.692, 256.871)), (' B 731  MET  N  ', ' B 774  GLN  OE1', -0.47, (252.113, 258.616, 224.844)), (' B 973  ILE  N  ', ' B 992  GLN  OE1', -0.468, (242.432, 257.468, 261.894)), (' C  91  TYR  HD1', ' C 193  VAL HG22', -0.468, (220.204, 208.796, 257.685)), (' A 798  GLY  O  ', ' A 920  GLN  NE2', -0.466, (268.217, 229.988, 189.048)), (' A 287  ASP  OD1', ' A 288  ALA  N  ', -0.463, (283.54, 243.044, 246.45)), (' A  34  ARG  NH1', ' A 221  SER  OG ', -0.462, (290.921, 240.878, 254.331)), (' C 287  ASP  OD1', ' C 288  ALA  N  ', -0.46, (221.244, 213.516, 243.395)), (' B 478  THR  OG1', ' C 369  TYR  OH ', -0.459, (257.638, 207.637, 290.524)), (' C 474  GLN  NE2', ' C 478  THR  O  ', -0.457, (267.293, 245.355, 324.572)), (' B 287  ASP  OD1', ' B 288  ALA  N  ', -0.457, (226.641, 280.41, 243.573)), (' A 973  ILE  N  ', ' A 992  GLN  OE1', -0.448, (251.15, 241.099, 262.288)), (' C 973  ILE  N  ', ' C 992  GLN  OE1', -0.448, (231.202, 240.047, 261.528)), (' B  40  ASP  OD1', ' B  41  LYS  N  ', -0.443, (237.383, 276.489, 259.495)), (' C 454  ARG  NH2', ' C 469  SER  O  ', -0.442, (272.602, 234.7, 311.475)), (' B 102  ARG  O  ', ' B 121  ASN  N  ', -0.439, (220.736, 294.331, 271.144)), (' C 741  TYR  OH ', ' C 962  LEU  O  ', -0.436, (229.361, 240.481, 244.037)), (' C 848  ASP  OD1', ' C 849  LEU  N  ', -0.436, (215.37, 235.837, 235.691)), (' A 908  GLY  O  ', ' A1038  LYS  NZ ', -0.432, (252.127, 243.974, 193.463)), (' C  99  ASN  O  ', ' C 102  ARG  NH2', -0.431, (205.966, 198.874, 264.206)), (' C 908  GLY  O  ', ' C1038  LYS  NZ ', -0.428, (244.048, 241.484, 192.672)), (' A1135  ASN  OD1', ' A1136  THR  N  ', -0.426, (260.333, 261.206, 168.156)), (' B 144  TYR  OH ', ' B 158  ARG  NH2', -0.425, (211.029, 303.713, 280.273)), (' B 205  SER  N  ', ' B 224  GLU  O  ', -0.425, (229.128, 285.326, 261.452)), (' C 164  ASN  OD1', ' C 165  ASN  N  ', -0.423, (214.485, 207.678, 289.502)), (' B 101  ILE  O  ', ' B 102  ARG  NE ', -0.421, (219.057, 296.971, 267.145)), (' A 156  GLU  OE1', ' A 158  ARG  NH1', -0.418, (306.082, 241.924, 284.267)), (' B1091  ARG  NE ', ' B1118  ASP  O  ', -0.416, (245.197, 245.301, 175.492)), (' B 848  ASP  OD1', ' B 849  LEU  N  ', -0.413, (248.127, 274.556, 238.327)), (' C  79  PHE  CE1', ' C 244  LEU HD21', -0.412, (211.746, 189.586, 267.493)), (' B 717  ASN  OD1', ' B 718  PHE  N  ', -0.412, (233.86, 265.549, 188.528)), (' B 801  ASN  N  ', ' B 928  ASN  OD1', -0.412, (247.59, 274.389, 196.031)), (' A 717  ASN  OD1', ' A 718  PHE  N  ', -0.411, (271.524, 246.831, 191.052)), (' A 192  PHE  HE1', ' A 205  SER  HG ', -0.41, (291.291, 237.597, 265.285)), (' A  99  ASN  O  ', ' A 102  ARG  NH1', -0.408, (302.12, 239.153, 270.758)), (' B 374  PHE  HD2', ' B 434  ILE HD11', -0.407, (221.225, 240.053, 287.494)), (' C1135  ASN  OD1', ' C1136  THR  N  ', -0.405, (258.134, 227.987, 167.893))]
data['cablam'] = [('A', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \nSS---', (288.9, 246.4, 254.8)), ('A', '35', 'GLY', 'check CA trace,carbonyls, peptide', ' \nS---B', (285.9, 246.1, 257.1)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (276.2, 231.9, 260.1)), ('A', '79', 'PHE', 'check CA trace,carbonyls, peptide', ' \n-----', (303.2, 252.5, 272.9)), ('A', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (283.3, 252.6, 271.4)), ('A', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (298.9, 234.3, 275.9)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (300.1, 232.0, 273.1)), ('A', '185', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (308.5, 244.0, 256.2)), ('A', '231', 'ILE', ' beta sheet', ' \nEE---', (277.0, 238.9, 278.1)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (280.5, 255.5, 248.3)), ('A', '373', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nSTT-S', (247.7, 264.3, 294.5)), ('A', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\n-STTT', (224.0, 255.5, 286.8)), ('A', '446', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (229.3, 259.7, 309.4)), ('A', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (255.7, 275.2, 278.9)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (268.3, 262.8, 228.9)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (265.0, 264.5, 228.1)), ('A', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-H', (251.2, 224.4, 256.7)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (266.7, 225.6, 193.4)), ('A', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (244.9, 225.9, 197.8)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (251.4, 263.9, 164.9)), ('A', '1098', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (270.6, 259.6, 178.1)), ('A', '88', 'ASP', 'check CA trace', 'turn\n-TTEE', (278.6, 251.2, 268.2)), ('A', '214', 'ARG', 'check CA trace', 'bend\nE-SSS', (303.2, 250.9, 254.9)), ('A', '215', 'ASP', 'check CA trace', 'bend\n-SSS-', (299.5, 252.0, 255.3)), ('A', '262', 'ALA', 'check CA trace', 'bend\n--SEE', (307.6, 246.1, 265.8)), ('A', '316', 'SER', 'check CA trace', 'strand\nEEEE-', (266.1, 258.4, 244.3)), ('A', '484', 'GLU', 'check CA trace', ' \nTS-BT', (206.7, 258.1, 296.5)), ('A', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (203.5, 252.1, 294.3)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (258.9, 271.1, 256.7)), ('A', '1058', 'HIS', 'check CA trace', 'turn\nETTEE', (258.8, 231.2, 222.5)), ('A', '1092', 'GLU', 'check CA trace', 'bend\nESSSE', (253.8, 251.3, 182.5)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (221.9, 206.5, 247.3)), ('C', '35', 'GLY', 'check CA trace,carbonyls, peptide', ' \nS--EE', (221.5, 208.6, 253.7)), ('C', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (227.5, 204.6, 267.6)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (204.0, 201.7, 270.8)), ('C', '145', 'TYR', 'check CA trace,carbonyls, peptide', ' \nB---S', (195.6, 186.9, 271.4)), ('C', '150', 'LYS', 'check CA trace,carbonyls, peptide', ' \nSS---', (192.5, 192.0, 266.9)), ('C', '231', 'ILE', ' beta sheet', ' \nEE---', (219.4, 216.2, 276.4)), ('C', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'turn\nTTT-H', (232.5, 208.6, 245.3)), ('C', '334', 'ASN', 'check CA trace,carbonyls, peptide', ' \n---B-', (279.6, 216.2, 280.3)), ('C', '381', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (254.7, 221.6, 289.2)), ('C', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-BT', (272.6, 214.8, 320.8)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (265.2, 237.9, 329.5)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (247.8, 217.3, 228.1)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (251.2, 218.8, 227.4)), ('C', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \nB---E', (251.0, 217.6, 212.6)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS-H', (219.5, 249.7, 252.5)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---TT', (222.2, 238.5, 189.1)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (231.5, 258.1, 197.0)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (226.5, 241.1, 219.7)), ('C', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (249.6, 237.0, 182.0)), ('C', '34', 'ARG', 'check CA trace', ' \n-S--E', (220.3, 206.4, 250.8)), ('C', '88', 'ASP', 'check CA trace', 'turn\n-TTEE', (229.4, 209.7, 265.5)), ('C', '214', 'ARG', 'check CA trace', 'bend\nESSS-', (214.6, 192.0, 248.7)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (234.2, 217.5, 227.5)), ('C', '333', 'THR', 'check CA trace', ' \n----B', (277.9, 214.4, 277.4)), ('C', '484', 'GLU', 'check CA trace', ' \nTS-BT', (271.3, 236.0, 326.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (259.3, 219.0, 256.8)), ('C', '1084', 'ASP', 'check CA trace', 'bend\nESSSS', (264.4, 235.5, 166.5)), ('C', '1123', 'SER', 'check CA trace', 'strand\nEEES-', (262.8, 241.9, 176.4)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS-S', (220.6, 282.4, 247.7)), ('B', '35', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nS-S-B', (221.5, 281.2, 254.2)), ('B', '81', 'ASN', 'check CA trace,carbonyls, peptide', ' \nE----', (207.8, 289.3, 267.5)), ('B', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (213.6, 276.4, 266.7)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (216.9, 301.6, 257.4)), ('B', '185', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (214.9, 302.7, 250.1)), ('B', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (210.7, 295.3, 248.0)), ('B', '215', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (211.4, 292.5, 250.5)), ('B', '231', 'ILE', ' beta sheet', ' \nEE---', (226.5, 277.7, 277.5)), ('B', '232', 'GLY', ' beta sheet', ' \nE----', (225.0, 274.1, 277.4)), ('B', '262', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (210.6, 301.2, 259.0)), ('B', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (216.8, 272.0, 244.0)), ('B', '446', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (233.7, 227.5, 308.6)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (254.5, 211.4, 294.6)), ('B', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (218.5, 234.1, 264.5)), ('B', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (207.3, 242.0, 275.8)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (217.8, 257.1, 225.9)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSS-H', (258.4, 263.2, 255.4)), ('B', '756', 'TYR', 'check CA trace,carbonyls, peptide', 'helix-3\nGGGTT', (254.5, 245.8, 252.0)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (254.5, 271.7, 192.2)), ('B', '884', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nHHTGG', (261.0, 262.5, 195.3)), ('B', '34', 'ARG', 'check CA trace', ' \nSS-S-', (220.7, 283.5, 251.3)), ('B', '88', 'ASP', 'check CA trace', 'turn\n-TT-E', (217.2, 272.6, 264.2)), ('B', '148', 'ASN', 'check CA trace', 'bend\n-SSS-', (216.9, 318.1, 270.2)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (225.7, 267.7, 226.6)), ('B', '316', 'SER', 'check CA trace', 'strand\nEEEE-', (220.9, 258.2, 241.9)), ('B', '484', 'GLU', 'check CA trace', ' \nTS-BT', (247.7, 209.6, 296.1)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (212.5, 246.6, 253.3)), ('B', '1058', 'HIS', 'check CA trace', 'turn\nETTEE', (250.9, 263.9, 221.6)), ('B', '1084', 'ASP', 'check CA trace', 'bend\nESSSS', (233.6, 237.5, 164.2)), ('B', '1092', 'GLU', 'check CA trace', 'bend\nESSSE', (239.9, 247.2, 182.2)), ('B', '1123', 'SER', 'check CA trace', 'strand\nEEES-', (238.0, 234.8, 175.0))]
data['smoc'] = [('A', 25, u'PRO', 0.6694715534540757, (297.234, 263.10900000000004, 268.20099999999996)), ('A', 34, u'ARG', 0.7482519069041054, (288.949, 246.416, 254.806)), ('A', 52, u'GLN', 0.7819008713089729, (272.42699999999996, 245.88200000000003, 256.335)), ('A', 69, u'HIS', 0.6859180249372123, (310.429, 251.32700000000003, 271.744)), ('A', 87, u'ASN', 0.7690512148886245, (279.565, 253.653, 271.04400000000004)), ('A', 101, u'ILE', 0.7416530551735497, (298.562, 242.176, 269.819)), ('A', 113, u'LYS', 0.7730014136558923, (282.815, 249.975, 289.263)), ('A', 114, u'THR', 0.7684437122635045, (280.97799999999995, 247.624, 286.873)), ('A', 149, u'ASN', 0.541835079647622, (317.83, 230.805, 274.388)), ('A', 156, u'GLU', 0.7115215188904676, (304.312, 237.98100000000002, 283.248)), ('A', 157, u'PHE', 0.6901022376838681, (300.668, 239.07899999999998, 283.41999999999996)), ('A', 167, u'THR', 0.6906821867823368, (279.905, 234.924, 286.194)), ('A', 178, u'ASP', 0.6642449998153253, (304.43299999999994, 231.88600000000002, 266.945)), ('A', 197, u'ILE', 0.7158934613851092, (273.90599999999995, 244.159, 269.601)), ('A', 198, u'ASP', 0.5873199294777894, (271.621, 244.562, 272.63599999999997)), ('A', 206, u'LYS', 0.7698885463174757, (290.685, 236.02200000000002, 260.619)), ('A', 207, u'HIS', 0.7591265720650796, (294.424, 235.36200000000002, 260.305)), ('A', 214, u'ARG', 0.6258398948036218, (303.166, 250.906, 254.911)), ('A', 218, u'GLN', 0.6448448236387831, (296.419, 245.84, 249.319)), ('A', 219, u'GLY', 0.6740288807026885, (293.967, 242.95100000000002, 249.26999999999998)), ('A', 226, u'LEU', 0.7244488498056808, (285.624, 232.82800000000003, 266.65500000000003)), ('A', 227, u'VAL', 0.7302438260087595, (283.53299999999996, 233.18800000000002, 269.848)), ('A', 233, u'ILE', 0.6948976345831133, (276.53099999999995, 244.78, 279.34700000000004)), ('A', 255, u'SER', 0.7554735223856743, (307.372, 247.653, 285.254)), ('A', 273, u'ARG', 0.7819137494772491, (275.601, 250.497, 255.994)), ('A', 281, u'GLU', 0.7421415341097731, (280.46599999999995, 228.58700000000002, 244.69)), ('A', 282, u'ASN', 0.7442826378139739, (282.244, 227.65800000000002, 247.946)), ('A', 294, u'ASP', 0.760332207433978, (279.724, 256.967, 244.912)), ('A', 295, u'PRO', 0.7743705409299492, (276.777, 257.322, 242.503)), ('A', 309, u'GLU', 0.7413692055341242, (274.40999999999997, 248.296, 231.912)), ('A', 345, u'THR', 0.6828993141652288, (238.58200000000002, 272.924, 299.004)), ('A', 346, u'ARG', 0.6913474563844374, (235.226, 271.46, 297.902)), ('A', 378, u'LYS', 0.6453831336457774, (244.70299999999997, 258.55400000000003, 281.28799999999995)), ('A', 388, u'ASN', 0.7093534964977054, (253.491, 269.506, 276.303)), ('A', 416, u'GLY', 0.7611022335496417, (225.38100000000003, 253.288, 283.97599999999994)), ('A', 427, u'ASP', 0.5317495133394394, (231.007, 258.77299999999997, 271.729)), ('A', 428, u'ASP', 0.4722995986758724, (233.22899999999998, 261.249, 269.832)), ('A', 445, u'VAL', 0.7100932900203635, (232.563, 261.23099999999994, 310.769)), ('A', 458, u'LYS', 0.6925018113221236, (212.736, 258.875, 282.611)), ('A', 466, u'ARG', 0.6990732924468341, (223.037, 269.141, 283.691)), ('A', 477, u'SER', 0.5626871065525344, (200.863, 252.548, 285.83)), ('A', 478, u'THR', 0.5926184266792638, (199.88400000000001, 254.258, 289.103)), ('A', 481, u'ASN', 0.5818576823007112, (201.394, 262.742, 292.178)), ('A', 482, u'GLY', 0.6003243278109189, (204.866, 264.037, 293.053)), ('A', 501, u'ASN', 0.6713544937887023, (234.68200000000002, 251.68, 304.037)), ('A', 502, u'GLY', 0.6398282985414644, (236.454, 249.678, 301.367)), ('A', 517, u'LEU', 0.6761302770927521, (242.69, 270.513, 268.715)), ('A', 518, u'LEU', 0.5868251496494732, (243.72, 272.453, 265.59)), ('A', 519, u'HIS', 0.5364215605517723, (240.345, 274.17900000000003, 265.15000000000003)), ('A', 520, u'ALA', 0.5655044441519794, (241.305, 277.66, 266.42599999999993)), ('A', 521, u'PRO', 0.6267162359228938, (244.231, 279.59, 267.954)), ('A', 533, u'LEU', 0.7495135416952323, (261.065, 283.22799999999995, 263.161)), ('A', 535, u'LYS', 0.7780336465383095, (262.131, 282.99299999999994, 256.506)), ('A', 556, u'ASN', 0.7495682508129737, (250.048, 287.191, 249.186)), ('A', 569, u'ILE', 0.7812785801333862, (244.478, 272.373, 245.626)), ('A', 572, u'THR', 0.7861154527384518, (247.813, 270.121, 252.17)), ('A', 573, u'THR', 0.7789423957513212, (249.33700000000002, 272.782, 254.40200000000002)), ('A', 592, u'PHE', 0.6721610464732295, (261.98699999999997, 268.944, 245.534)), ('A', 603, u'ASN', 0.6888349120666916, (283.234, 247.045, 230.866)), ('A', 604, u'THR', 0.7663009854697951, (283.92299999999994, 250.465, 229.256)), ('A', 620, u'VAL', 0.6790888525885782, (277.061, 270.1, 243.39000000000001)), ('A', 641, u'ASN', 0.759970795651605, (281.587, 270.116, 234.671)), ('A', 642, u'VAL', 0.7549649631236062, (278.559, 271.855, 236.207)), ('A', 644, u'GLN', 0.724297143218144, (272.457, 272.622, 232.80200000000002)), ('A', 645, u'THR', 0.7494010530003508, (270.107, 270.955, 230.311)), ('A', 657, u'ASN', 0.7683022746583669, (277.469, 272.29599999999994, 220.51)), ('A', 658, u'ASN', 0.7423104610087641, (277.67, 269.69, 217.73999999999998)), ('A', 662, u'CYS', 0.8044352969073687, (271.089, 259.977, 220.602)), ('A', 676, u'THR', 0.7293462219395985, (286.209, 261.13599999999997, 222.777)), ('A', 689, u'SER', 0.6314380990091482, (290.546, 260.474, 226.48800000000003)), ('A', 690, u'GLN', 0.7774449036057752, (286.841, 259.573, 226.44299999999998)), ('A', 706, u'ALA', 0.6917211439342399, (267.197, 268.49099999999993, 193.127)), ('A', 745, u'ASP', 0.6391923695976613, (251.24399999999997, 224.44, 256.686)), ('A', 747, u'THR', 0.6823138435635663, (245.134, 225.07399999999998, 259.553)), ('A', 754, u'LEU', 0.7291877030597288, (236.79399999999998, 230.523, 252.74299999999997)), ('A', 765, u'ARG', 0.8250672022336869, (241.242, 230.056, 236.507)), ('A', 773, u'GLU', 0.8084320135385735, (245.58700000000002, 230.782, 225.154)), ('A', 776, u'LYS', 0.7676109731101997, (246.625, 228.61899999999997, 220.83200000000002)), ('A', 782, u'PHE', 0.8015416449264925, (252.45700000000002, 228.167, 213.208)), ('A', 784, u'GLN', 0.752752597450542, (249.277, 227.697, 208.623)), ('A', 785, u'VAL', 0.7359072328033602, (249.192, 224.464, 206.564)), ('A', 786, u'LYS', 0.7219674532477326, (247.134, 221.284, 206.343)), ('A', 790, u'LYS', 0.7690594488646734, (259.853, 218.73299999999998, 202.63)), ('A', 827, u'THR', 0.7107392761021966, (267.47799999999995, 230.236, 227.231)), ('A', 850, u'ILE', 0.6072828905124444, (262.964, 223.906, 236.43)), ('A', 851, u'CYS', 0.7030460451346766, (261.84900000000005, 222.69, 239.88000000000002)), ('A', 852, u'ALA', 0.7040503385082222, (263.34400000000005, 225.79399999999998, 241.547)), ('A', 861, u'LEU', 0.736770334567323, (253.48700000000002, 223.74299999999997, 232.817)), ('A', 862, u'PRO', 0.7468850656211165, (255.1, 222.51, 229.571)), ('A', 900, u'MET', 0.7878497517558832, (258.63, 231.525, 187.71899999999997)), ('A', 922, u'LEU', 0.7892041899304876, (273.597, 237.939, 190.5)), ('A', 942, u'ALA', 0.7435285146842607, (273.57599999999996, 237.89600000000002, 221.30800000000002)), ('A', 943, u'SER', 0.7388926395099695, (271.307, 240.915, 221.88800000000003)), ('A', 944, u'ALA', 0.7031098584929295, (269.675, 240.464, 218.45700000000002)), ('A', 971, u'GLY', 0.6556261475198842, (251.002, 244.635, 258.015)), ('A', 973, u'ILE', 0.6328729012546124, (253.35100000000003, 240.933, 263.125)), ('A', 982, u'SER', 0.5438491937903773, (253.089, 229.67899999999997, 267.947)), ('A', 983, u'ARG', 0.33132465516191817, (253.12800000000001, 233.105, 269.629)), ('A', 988, u'GLU', 0.5585346637465408, (244.54299999999998, 236.89700000000002, 267.96999999999997)), ('A', 1002, u'GLN', 0.760436588266259, (247.093, 241.26899999999998, 246.177)), ('A', 1035, u'GLY', 0.8096754640739864, (252.24399999999997, 235.21699999999998, 199.309)), ('A', 1038, u'LYS', 0.7070384189476292, (252.05, 244.71299999999997, 198.792)), ('A', 1039, u'ARG', 0.7303940445975885, (252.003, 246.45800000000003, 202.191)), ('A', 1057, u'PRO', 0.7864556051906043, (262.246, 229.792, 221.654)), ('A', 1084, u'ASP', 0.738249907877663, (251.383, 263.924, 164.92600000000002)), ('A', 1091, u'ARG', 0.7511476517095819, (251.499, 252.15, 179.56)), ('A', 1092, u'GLU', 0.7427279244383056, (253.82200000000003, 251.345, 182.47299999999998)), ('A', 1111, u'GLU', 0.7694910022783029, (265.242, 248.45600000000002, 181.02700000000002)), ('A', 1112, u'PRO', 0.7701911195534895, (265.66200000000003, 250.656, 177.937)), ('A', 1121, u'PHE', 0.7607970001273142, (248.762, 254.755, 175.107)), ('A', 1127, u'ASP', 0.7592255461258551, (247.47, 270.99099999999993, 172.937)), ('A', 1131, u'GLY', 0.7618446245908628, (254.732, 269.505, 179.448)), ('A', 1138, u'TYR', 0.7640742454006182, (258.099, 253.707, 166.46800000000002)), ('A', 1146, u'ASP', 0.6792756452476197, (255.914, 247.533, 153.51399999999998)), ('A', 1147, u'SER', 0.6378547703174895, (257.078, 243.893, 153.629)), ('C', 25, u'PRO', 0.6203248658020922, (227.836, 187.066, 261.082)), ('C', 27, u'ALA', 0.6763158892575698, (226.95100000000002, 190.467, 256.38)), ('C', 28, u'TYR', 0.7385204011094967, (226.98200000000003, 193.64, 254.272)), ('C', 34, u'ARG', 0.73541841757976, (220.33800000000002, 206.43, 250.812)), ('C', 40, u'ASP', 0.7032315207796083, (218.694, 223.472, 257.704)), ('C', 41, u'LYS', 0.7187012047590497, (215.26899999999998, 225.13899999999998, 257.474)), ('C', 157, u'PHE', 0.625605893892779, (206.305, 196.95200000000003, 277.92199999999997)), ('C', 159, u'VAL', 0.6996064852893662, (212.003, 197.515, 276.52299999999997)), ('C', 164, u'ASN', 0.698540587809286, (213.893, 205.853, 288.227)), ('C', 173, u'GLN', 0.7317781626438581, (200.099, 213.29399999999998, 269.42199999999997)), ('C', 174, u'PRO', 0.6838783591584124, (197.82500000000002, 210.218, 269.477)), ('C', 175, u'PHE', 0.5776727550354461, (197.198, 207.999, 266.46799999999996)), ('C', 207, u'HIS', 0.6745633648464717, (207.92600000000002, 208.059, 255.429)), ('C', 210, u'ILE', 0.6776390036102838, (208.118, 201.69, 248.195)), ('C', 215, u'ASP', 0.729830555667787, (217.662, 193.84, 250.122)), ('C', 218, u'GLN', 0.6849193744695348, (216.621, 201.53, 244.27899999999997)), ('C', 227, u'VAL', 0.6720728971144152, (211.993, 216.508, 266.909)), ('C', 243, u'ALA', 0.7147703482659847, (208.135, 193.91899999999998, 267.558)), ('C', 261, u'GLY', 0.664104983539671, (207.433, 188.63, 261.42999999999995)), ('C', 262, u'ALA', 0.6557404380549405, (208.82100000000003, 189.38000000000002, 257.99099999999993)), ('C', 268, u'GLY', 0.7608605967058605, (224.757, 202.48600000000002, 258.541)), ('C', 269, u'TYR', 0.7485749902054188, (227.442, 204.79299999999998, 259.902)), ('C', 281, u'GLU', 0.7086216926841349, (210.51399999999998, 224.099, 242.89000000000001)), ('C', 282, u'ASN', 0.7077685410216905, (208.849, 222.692, 246.04299999999998)), ('C', 286, u'THR', 0.7432592018948668, (215.339, 214.99200000000002, 243.869)), ('C', 295, u'PRO', 0.7432520702197356, (236.918, 211.303, 240.38100000000003)), ('C', 305, u'SER', 0.7147705029571453, (227.286, 221.476, 238.55800000000002)), ('C', 306, u'PHE', 0.6475670153081224, (225.341, 218.266, 237.98200000000003)), ('C', 310, u'LYS', 0.7508492159681164, (234.22899999999998, 217.512, 227.46800000000002)), ('C', 314, u'GLN', 0.776395217986022, (241.82000000000002, 220.471, 237.538)), ('C', 316, u'SER', 0.7604827731442192, (242.62, 218.439, 243.393)), ('C', 317, u'ASN', 0.7519830863167865, (246.291, 218.707, 244.389)), ('C', 324, u'GLU', 0.7460614474959619, (258.582, 209.52700000000002, 260.75)), ('C', 332, u'ILE', 0.6029353832029413, (274.881, 215.507, 275.369)), ('C', 333, u'THR', 0.5906626970892762, (277.875, 214.353, 277.447)), ('C', 337, u'PRO', 0.6548684343341942, (278.074, 214.95000000000002, 289.189)), ('C', 376, u'THR', 0.6869697020583846, (261.087, 210.32600000000002, 300.07099999999997)), ('C', 378, u'LYS', 0.7202951084965221, (258.448, 215.944, 296.684)), ('C', 380, u'TYR', 0.7032681661962611, (256.02299999999997, 221.416, 292.749)), ('C', 381, u'GLY', 0.6780358819473455, (254.665, 221.605, 289.203)), ('C', 390, u'LEU', 0.7503531242131487, (263.519, 222.73299999999998, 280.504)), ('C', 408, u'ARG', 0.7100574161974346, (257.045, 219.911, 305.15200000000004)), ('C', 428, u'ASP', 0.641760121076285, (258.376, 230.879, 290.762)), ('C', 429, u'PHE', 0.7023161494643074, (259.957, 227.635, 292.007)), ('C', 445, u'VAL', 0.6107419591226925, (273.93499999999995, 209.297, 321.592)), ('C', 446, u'GLY', 0.6089711265179124, (273.199, 212.38400000000001, 323.682)), ('C', 458, u'LYS', 0.6337074848993768, (264.368, 240.268, 313.20099999999996)), ('C', 459, u'SER', 0.6718120516272181, (263.009, 239.98700000000002, 309.633)), ('C', 468, u'ILE', 0.7351666120058377, (275.52299999999997, 233.44899999999998, 308.65700000000004)), ('C', 475, u'ALA', 0.5752617427015851, (262.24, 241.099, 321.84000000000003)), ('C', 481, u'ASN', 0.5316501094465399, (274.802, 243.567, 325.853)), ('C', 482, u'GLY', 0.5433067786205961, (276.14300000000003, 240.58700000000002, 323.907)), ('C', 486, u'PHE', 0.49873784361258, (265.20099999999996, 237.94, 329.52599999999995)), ('C', 520, u'ALA', 0.6634218323989078, (271.639, 235.61499999999998, 280.405)), ('C', 521, u'PRO', 0.6509302038051495, (270.43799999999993, 232.836, 278.067)), ('C', 528, u'LYS', 0.6474005448717439, (268.353, 214.136, 274.769)), ('C', 529, u'LYS', 0.555701892662804, (268.695, 210.88400000000001, 272.825)), ('C', 533, u'LEU', 0.7054286221611294, (269.075, 209.914, 259.98999999999995)), ('C', 536, u'ASN', 0.6776726660900032, (265.128, 210.32600000000002, 250.463)), ('C', 537, u'LYS', 0.6997709517471165, (261.749, 210.23999999999998, 252.212)), ('C', 545, u'GLY', 0.7111282446185628, (268.384, 224.592, 265.606)), ('C', 547, u'THR', 0.7015920808419316, (262.91999999999996, 222.157, 262.224)), ('C', 548, u'GLY', 0.7379707477879134, (260.78499999999997, 221.495, 259.178)), ('C', 556, u'ASN', 0.604773868488876, (277.9309999999999, 219.18200000000002, 246.51299999999998)), ('C', 569, u'ILE', 0.5847785439117417, (269.084, 233.55100000000002, 246.72)), ('C', 603, u'ASN', 0.6363525372160816, (225.829, 212.261, 227.965)), ('C', 619, u'GLU', 0.6102235113849128, (248.10999999999999, 206.511, 244.541)), ('C', 620, u'VAL', 0.6187527919839012, (246.726, 204.759, 241.407)), ('C', 643, u'PHE', 0.7076518748230667, (251.82700000000003, 205.02100000000002, 232.151)), ('C', 646, u'ARG', 0.6302204612196605, (256.59099999999995, 214.404, 230.86200000000002)), ('C', 656, u'VAL', 0.7295101395012347, (248.542, 204.447, 221.07899999999998)), ('C', 658, u'ASN', 0.7193306270293419, (249.687, 206.195, 216.032)), ('C', 661, u'GLU', 0.7277919721838889, (244.54399999999998, 215.07299999999998, 215.76)), ('C', 662, u'CYS', 0.7807305672709358, (244.61399999999998, 216.534, 219.266)), ('C', 676, u'THR', 0.6404428483907879, (236.781, 203.164, 219.806)), ('C', 689, u'SER', 0.5823251159974242, (233.48200000000003, 199.701, 223.13899999999998)), ('C', 717, u'ASN', 0.7004925237833671, (239.06, 222.23499999999999, 187.503)), ('C', 727, u'LEU', 0.7764010852401256, (233.412, 237.51399999999998, 214.901)), ('C', 731, u'MET', 0.7923784920001706, (229.73499999999999, 243.17899999999997, 224.88400000000001)), ('C', 744, u'GLY', 0.6703672225233603, (222.003, 247.38000000000002, 250.71899999999997)), ('C', 745, u'ASP', 0.6645461587775303, (219.489, 249.655, 252.464)), ('C', 759, u'PHE', 0.7491314296806194, (237.206, 253.731, 245.08800000000002)), ('C', 762, u'GLN', 0.7383155738513268, (235.70899999999997, 255.45000000000002, 240.01299999999998)), ('C', 782, u'PHE', 0.7961324475607767, (227.95200000000003, 248.42800000000003, 210.755)), ('C', 783, u'ALA', 0.7861949213280843, (227.183, 252.162, 210.379)), ('C', 784, u'GLN', 0.7562046650509915, (229.37800000000001, 252.523, 207.29399999999998)), ('C', 790, u'LYS', 0.7511516819122175, (217.32100000000003, 248.32700000000003, 199.009)), ('C', 798, u'GLY', 0.6428221033926674, (223.52200000000002, 236.035, 186.52800000000002)), ('C', 799, u'GLY', 0.6063633503819837, (221.865, 232.96, 188.05800000000002)), ('C', 827, u'THR', 0.7671761402014764, (221.39600000000002, 232.348, 224.072)), ('C', 850, u'ILE', 0.6312911699594238, (217.48000000000002, 239.466, 235.046)), ('C', 851, u'CYS', 0.6772431782014566, (215.347, 240.872, 237.876)), ('C', 862, u'PRO', 0.7749496914095807, (220.09, 247.738, 226.593)), ('C', 864, u'LEU', 0.7840981327325424, (221.761, 251.55100000000002, 221.66)), ('C', 910, u'GLY', 0.7408212256289133, (245.415, 237.15800000000002, 188.657)), ('C', 911, u'VAL', 0.7567281302289683, (242.51299999999998, 235.20399999999998, 187.105)), ('C', 918, u'GLU', 0.7526723783536158, (232.762, 230.52200000000002, 180.154)), ('C', 935, u'GLN', 0.8185495667341507, (222.206, 227.023, 206.434)), ('C', 943, u'SER', 0.7283743570576188, (228.35000000000002, 224.92600000000002, 218.44299999999998)), ('C', 947, u'LYS', 0.7678460324458569, (232.39000000000001, 232.517, 219.08800000000002)), ('C', 964, u'LYS', 0.8057673388008516, (227.64499999999998, 235.268, 244.697)), ('C', 973, u'ILE', 0.6338800254098816, (229.756, 238.194, 261.98299999999995)), ('C', 974, u'SER', 0.6830834831845205, (226.99, 238.14899999999997, 259.357)), ('C', 988, u'GLU', 0.7048507010747483, (231.416, 247.11399999999998, 267.46)), ('C', 1016, u'ALA', 0.816506020651538, (239.464, 245.83200000000002, 225.136)), ('C', 1017, u'GLU', 0.7823941916966388, (239.60299999999998, 242.227, 223.911)), ('C', 1035, u'GLY', 0.7901520718013411, (235.777, 246.202, 198.19)), ('C', 1037, u'SER', 0.7538835450842916, (241.17299999999997, 242.517, 200.024)), ('C', 1038, u'LYS', 0.6959485456170129, (244.73499999999999, 242.17499999999998, 198.738)), ('C', 1039, u'ARG', 0.7283035909162953, (245.83100000000002, 240.681, 202.086)), ('C', 1045, u'LYS', 0.7466894938861242, (241.536, 230.654, 202.494)), ('C', 1090, u'PRO', 0.7986074284800221, (254.339, 236.01899999999998, 179.406)), ('C', 1091, u'ARG', 0.7499912394567873, (252.18200000000002, 239.069, 180.02)), ('C', 1092, u'GLU', 0.6796092728667035, (249.647, 236.976, 181.963)), ('C', 1093, u'GLY', 0.7704187926309968, (250.0, 233.36100000000002, 183.06)), ('C', 1098, u'ASN', 0.6009432025048289, (250.84, 219.403, 175.98600000000002)), ('C', 1099, u'GLY', 0.6609828597724691, (253.602, 217.647, 173.994)), ('C', 1110, u'TYR', 0.762033106411513, (244.36100000000002, 225.586, 182.14899999999997)), ('C', 1111, u'GLU', 0.7624844553634073, (243.17299999999997, 227.02700000000002, 178.818)), ('C', 1112, u'PRO', 0.7271368008410243, (245.041, 225.96800000000002, 175.651)), ('C', 1119, u'ASN', 0.7625328809654212, (250.048, 237.93200000000002, 174.82200000000003)), ('C', 1127, u'ASP', 0.7297950803274122, (271.75, 234.536, 175.21399999999997)), ('C', 1146, u'ASP', 0.6075661496840304, (248.35700000000003, 239.248, 152.42100000000002)), ('C', 1147, u'SER', 0.6255200027122325, (244.786, 240.606, 152.646)), ('B', 15, u'CYS', 0.7504360520565397, (205.545, 292.853, 280.777)), ('B', 19, u'THR', 0.719176397602609, (198.429, 297.885, 271.712)), ('B', 20, u'THR', 0.7177478132198393, (199.189, 299.33299999999997, 268.247)), ('B', 26, u'PRO', 0.6800562164856332, (202.79399999999998, 284.49299999999994, 258.504)), ('B', 40, u'ASP', 0.7623714847904288, (235.52800000000002, 276.33, 258.46299999999997)), ('B', 82, u'PRO', 0.6770528885204717, (205.93800000000002, 286.082, 268.18)), ('B', 83, u'VAL', 0.683558793537674, (207.33800000000002, 282.79799999999994, 269.45799999999997)), ('B', 84, u'LEU', 0.7323354414225752, (208.55200000000002, 280.45, 266.7)), ('B', 93, u'ALA', 0.7672414529091462, (217.944, 288.227, 257.389)), ('B', 113, u'LYS', 0.7044214354749279, (211.655, 277.739, 284.749)), ('B', 114, u'THR', 0.6599414621362693, (215.075, 277.051, 283.184)), ('B', 137, u'ASN', 0.7291781094314224, (204.687, 289.459, 276.747)), ('B', 149, u'ASN', 0.5455480772948601, (220.164, 316.41799999999995, 269.239)), ('B', 173, u'GLN', 0.7545526983249085, (234.005, 295.704, 272.13599999999997)), ('B', 182, u'LYS', 0.5692488472294767, (216.78, 307.49299999999994, 256.872)), ('B', 183, u'GLN', 0.404992898436537, (214.853, 308.345, 253.71299999999997)), ('B', 184, u'GLY', 0.36063831720297385, (214.539, 306.45799999999997, 250.447)), ('B', 207, u'HIS', 0.7760057890718327, (226.91, 293.189, 257.594)), ('B', 219, u'GLY', 0.7220647001732614, (222.80700000000002, 288.745, 244.989)), ('B', 227, u'VAL', 0.7857329497995348, (231.134, 284.532, 268.84000000000003)), ('B', 233, u'ILE', 0.7314030055196432, (221.224, 274.47299999999996, 277.30400000000003)), ('B', 243, u'ALA', 0.7693461652882084, (213.99, 298.805, 268.875)), ('B', 247, u'SER', 0.7110963269003514, (209.067, 311.35400000000004, 272.745)), ('B', 257, u'GLY', 0.7489436943313833, (202.17299999999997, 303.98799999999994, 273.118)), ('B', 261, u'GLY', 0.7474357788705345, (210.77299999999997, 302.868, 262.407)), ('B', 271, u'GLN', 0.790215585908366, (218.38600000000002, 271.777, 256.73799999999994)), ('B', 281, u'GLU', 0.7722074376595163, (241.424, 283.98499999999996, 243.836)), ('B', 282, u'ASN', 0.7597161680443392, (240.996, 285.93699999999995, 247.094)), ('B', 287, u'ASP', 0.7571154780375613, (228.185, 281.79699999999997, 243.65800000000002)), ('B', 292, u'ALA', 0.7124206802000644, (218.64899999999997, 269.36, 246.065)), ('B', 293, u'LEU', 0.7262225842553756, (216.761, 271.953, 243.99)), ('B', 294, u'ASP', 0.7078537204918556, (216.44, 270.452, 240.5)), ('B', 295, u'PRO', 0.7389589449575075, (218.038, 267.673, 238.403)), ('B', 343, u'ASN', 0.6251825919421062, (216.611, 234.069, 292.712)), ('B', 345, u'THR', 0.5763001462453249, (217.154, 229.20999999999998, 297.134)), ('B', 346, u'ARG', 0.6677789835951301, (220.395, 227.343, 296.34000000000003)), ('B', 347, u'PHE', 0.7599246315164901, (222.35600000000002, 227.009, 293.107)), ('B', 370, u'ASN', 0.5919733240776328, (218.238, 248.83200000000002, 285.284)), ('B', 372, u'ALA', 0.6213282123025815, (220.22899999999998, 247.85700000000003, 291.227)), ('B', 410, u'ILE', 0.7584433979171697, (233.67399999999998, 233.27499999999998, 283.10400000000004)), ('B', 427, u'ASP', 0.49646416645215996, (235.94299999999998, 230.911, 272.621)), ('B', 428, u'ASP', 0.41021934661964493, (233.04399999999998, 231.975, 270.35400000000004)), ('B', 458, u'LYS', 0.6584919498584729, (244.30700000000002, 215.477, 282.952)), ('B', 466, u'ARG', 0.6472934018614352, (230.14499999999998, 218.187, 283.12)), ('B', 467, u'ASP', 0.6614673562325054, (232.85500000000002, 215.842, 284.441)), ('B', 471, u'GLU', 0.615435767720726, (240.278, 210.14299999999997, 289.49899999999997)), ('B', 481, u'ASN', 0.5636236688907494, (247.60999999999999, 203.38600000000002, 290.328)), ('B', 518, u'LEU', 0.6763193187145147, (218.49800000000002, 234.146, 264.47499999999997)), ('B', 519, u'HIS', 0.5918482271474358, (218.923, 230.529, 263.345)), ('B', 520, u'ALA', 0.6420258846333586, (215.509, 229.003, 264.184)), ('B', 521, u'PRO', 0.6385385052892487, (211.983, 230.01399999999998, 265.28799999999995)), ('B', 527, u'PRO', 0.6330484399548625, (207.33200000000002, 241.96, 275.759)), ('B', 528, u'LYS', 0.6177973667498149, (207.333, 242.978, 272.07599999999996)), ('B', 529, u'LYS', 0.6040973384558415, (203.68800000000002, 243.26399999999998, 271.057)), ('B', 532, u'ASN', 0.665629928484339, (199.08800000000002, 244.33200000000002, 261.95599999999996)), ('B', 533, u'LEU', 0.6685875702149188, (200.30100000000002, 243.035, 258.584)), ('B', 537, u'LYS', 0.7106409299948455, (202.80200000000002, 247.48200000000003, 249.572)), ('B', 556, u'ASN', 0.6843169787575106, (202.148, 230.585, 246.061)), ('B', 561, u'PRO', 0.6037667658592393, (206.141, 222.30200000000002, 257.9)), ('B', 569, u'ILE', 0.6346709752480615, (219.86, 233.376, 243.617)), ('B', 588, u'THR', 0.6983567026599803, (209.88000000000002, 241.765, 246.282)), ('B', 592, u'PHE', 0.6921585092209935, (213.804, 249.315, 241.54399999999998)), ('B', 603, u'ASN', 0.6712519101404149, (225.38000000000002, 277.705, 227.08200000000002)), ('B', 604, u'THR', 0.734005263963876, (222.194, 276.801, 225.138)), ('B', 615, u'VAL', 0.7093570208201212, (209.47899999999998, 251.82700000000003, 235.883)), ('B', 619, u'GLU', 0.6670500561311142, (207.592, 261.522, 241.07899999999998)), ('B', 645, u'THR', 0.7291673946821342, (209.73, 255.33800000000002, 226.172)), ('B', 646, u'ARG', 0.6879747605684225, (211.168, 251.859, 225.687)), ('B', 657, u'ASN', 0.6866199160465762, (207.221, 260.258, 215.26399999999998)), ('B', 658, u'ASN', 0.6999160019480275, (209.847, 261.457, 212.77599999999998)), ('B', 661, u'GLU', 0.7731209080919719, (220.059, 261.513, 214.084)), ('B', 668, u'ALA', 0.7495837019206789, (216.77899999999997, 250.497, 223.27899999999997)), ('B', 675, u'GLN', 0.760323835949088, (215.718, 271.22499999999997, 218.564)), ('B', 676, u'THR', 0.6375515463998718, (213.068, 273.707, 217.44299999999998)), ('B', 689, u'SER', 0.6120610897475328, (211.47299999999998, 278.2, 220.758)), ('B', 718, u'PHE', 0.7928475751809786, (234.605, 264.009, 190.132)), ('B', 728, u'PRO', 0.7726437314536395, (247.242, 259.73599999999993, 219.002)), ('B', 754, u'LEU', 0.7531448680799634, (258.633, 248.697, 253.646)), ('B', 780, u'GLU', 0.7775934172825752, (259.47499999999997, 254.662, 215.942)), ('B', 784, u'GLN', 0.7459472300622279, (260.34400000000005, 256.94, 208.959)), ('B', 786, u'LYS', 0.654618257451692, (267.064, 258.519, 207.52100000000002)), ('B', 798, u'GLY', 0.726581264149034, (251.92100000000002, 271.506, 189.41)), ('B', 803, u'SER', 0.7444804211500746, (251.94, 276.94599999999997, 201.469)), ('B', 809, u'PRO', 0.665489829960358, (259.76099999999997, 280.151, 207.089)), ('B', 827, u'THR', 0.7225764073791973, (244.854, 271.72299999999996, 225.834)), ('B', 850, u'ILE', 0.6305939487162886, (251.26999999999998, 271.805, 237.65800000000002)), ('B', 855, u'PHE', 0.7119032103483993, (255.45800000000003, 269.092, 244.889)), ('B', 862, u'PRO', 0.7628052414599106, (259.14500000000004, 265.953, 229.17299999999997)), ('B', 886, u'TRP', 0.7772017999284971, (257.40599999999995, 257.504, 196.96)), ('B', 892, u'ALA', 0.7260288287599475, (267.625, 256.769, 197.559)), ('B', 913, u'GLN', 0.8239438162298206, (246.74899999999997, 258.92699999999996, 184.11299999999997)), ('B', 943, u'SER', 0.6864308474651519, (236.30800000000002, 269.77299999999997, 219.38200000000003)), ('B', 944, u'ALA', 0.6231740991606526, (237.554, 268.057, 216.198)), ('B', 988, u'GLU', 0.7201833486835548, (248.16299999999998, 253.71899999999997, 268.26599999999996)), ('B', 991, u'VAL', 0.6525070270978983, (247.311, 251.55100000000002, 263.362)), ('B', 1002, u'GLN', 0.78048457809969, (245.71399999999997, 251.178, 246.24599999999998)), ('B', 1005, u'GLN', 0.817136327078072, (247.812, 250.577, 242.07299999999998)), ('B', 1017, u'GLU', 0.7954156119060215, (245.755, 251.343, 223.64499999999998)), ('B', 1038, u'LYS', 0.7286937726064829, (245.366, 248.91899999999998, 198.5)), ('B', 1045, u'LYS', 0.7386072753502447, (236.91299999999998, 257.541, 202.51)), ('B', 1058, u'HIS', 0.7709760369210161, (250.947, 263.877, 221.55)), ('B', 1074, u'ASN', 0.7513260660971697, (222.784, 255.969, 183.92000000000002)), ('B', 1092, u'GLU', 0.7344635595260758, (239.89700000000002, 247.208, 182.23)), ('B', 1111, u'GLU', 0.7526820670637243, (235.772, 259.355, 178.731)), ('B', 1127, u'ASP', 0.7065056858396159, (226.88100000000003, 232.16299999999998, 171.98100000000002)), ('B', 1136, u'THR', 0.7419187819030297, (233.206, 246.21899999999997, 164.783)), ('B', 1145, u'LEU', 0.697821690923541, (246.55200000000002, 247.99200000000002, 154.725)), ('B', 1146, u'ASP', 0.6577406800058048, (243.45800000000003, 249.665, 153.24399999999997))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-30654/7ddn/Model_validation_1/validation_cootdata/molprobity_probe7ddn_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

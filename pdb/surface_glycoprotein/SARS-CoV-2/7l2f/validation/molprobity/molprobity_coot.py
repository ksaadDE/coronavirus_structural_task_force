# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = []
data['omega'] = [('J', '   8 ', 'PRO', None, (287.086, 149.259, 172.50299999999996)), ('K', '   8 ', 'PRO', None, (231.546, 310.97699999999975, 174.691)), ('L', '   8 ', 'PRO', None, (122.4679999999999, 176.526, 174.408))]
data['rota'] = [('A', ' 100 ', 'ILE', 0.13576491750112732, (166.69799999999978, 181.2879999999999, 196.60399999999998)), ('A', ' 176 ', 'LEU', 0.18796891716703282, (179.25199999999978, 177.40099999999993, 199.02499999999998)), ('A', ' 341 ', 'VAL', 0.12968954298700355, (199.86800000000002, 234.69699999999995, 174.637)), ('A', ' 362 ', 'VAL', 0.0681494512664991, (189.427, 232.85499999999996, 186.144)), ('A', ' 620 ', 'VAL', 0.20704868060328335, (177.97399999999976, 221.783, 225.38299999999995)), ('A', ' 635 ', 'VAL', 0.15409269493956365, (172.73099999999977, 210.39799999999994, 224.59299999999993)), ('B', '  47 ', 'VAL', 0.2335239041330387, (203.19200000000004, 239.81399999999996, 218.195)), ('B', '  56 ', 'LEU', 0.2537054052702904, (219.14100000000005, 250.42599999999985, 207.708)), ('B', ' 100 ', 'ILE', 0.1330930350223452, (211.19500000000002, 271.193, 196.47599999999994)), ('B', ' 176 ', 'LEU', 0.1872220919746463, (201.02500000000003, 262.858, 198.85899999999998)), ('B', ' 367 ', 'VAL', 0.2420039147138035, (234.004, 227.52899999999997, 177.56499999999997)), ('B', ' 582 ', 'LEU', 0.1276717999024611, (252.301, 225.41199999999995, 200.703)), ('B', ' 736 ', 'VAL', 0.15228890943148102, (198.065, 219.02599999999987, 225.221)), ('C', '  56 ', 'LEU', 0.25301974124756366, (242.822, 191.25999999999993, 206.95799999999994)), ('C', ' 100 ', 'ILE', 0.13403788686706802, (264.207, 187.35599999999994, 194.792)), ('C', ' 176 ', 'LEU', 0.18542753222952105, (262.316, 200.38699999999994, 197.071))]
data['cbeta'] = [('B', '1146 ', 'ASP', ' ', 0.3167847809452396, (216.49100000000007, 221.601, 312.911))]
data['probe'] = [(' C 550  GLY  HA2', ' C 590  CYS  SG ', -0.698, (221.081, 185.188, 211.128)), (' A 520  ALA  HA ', ' A 563  GLN HE22', -0.697, (197.208, 240.626, 199.965)), (' A 272  PRO  HG2', ' A 321  GLN  OE1', -0.689, (183.589, 208.891, 206.546)), (' A  47  VAL  HB ', ' C 569  ILE HG22', -0.688, (200.512, 190.578, 217.608)), (' B  59  PHE  HD2', ' B 293  LEU HD11', -0.672, (221.664, 252.463, 217.323)), (' A 624  ILE HD11', ' A 637  SER  HB2', -0.666, (176.989, 215.576, 222.174)), (' B 303  LEU HD12', ' B 308  VAL HG22', -0.664, (215.71, 239.707, 227.846)), (' B 612  TYR  HE1', ' B 624  ILE HD12', -0.652, (233.504, 240.915, 223.564)), (' A 226  LEU HD23', ' A 227  VAL HG13', -0.647, (186.133, 184.305, 195.115)), (' B 825  LYS  HE3', ' B 942  ALA  HA ', -0.631, (205.574, 242.248, 247.459)), (' B 226  LEU HD23', ' B 227  VAL HG13', -0.63, (203.371, 253.18, 194.424)), (' C 226  LEU HD23', ' C 227  VAL HG13', -0.628, (252.607, 203.315, 193.03)), (' B 554  GLU  HA ', ' B 585  LEU HD12', -0.624, (249.167, 230.171, 208.843)), (' A 737  ASP  OD2', ' C 593  GLY  HA3', -0.614, (221.625, 191.434, 220.714)), (' C 777  ASN HD21', ' C1019  ARG  HA ', -0.612, (221.977, 218.472, 243.652)), (' A 232  GLY  O  ', ' C 466  ARG  N  ', -0.609, (187.281, 201.105, 184.201)), (' C 825  LYS  HB2', ' C 945  LEU HD22', -0.607, (241.723, 212.184, 246.342)), (' B  29  THR HG23', ' B  62  VAL HG23', -0.606, (222.068, 261.856, 208.661)), (' C  29  THR HG23', ' C  62  VAL HG23', -0.6, (251.299, 183.128, 207.689)), (' A 365  TYR  CE2', ' A 388  ASN  HB3', -0.597, (193.402, 223.449, 186.256)), (' C 457  ARG  NH1', ' C 459  SER  OG ', -0.592, (184.958, 211.574, 185.19)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.592, (219.705, 243.129, 237.357)), (' C 781  VAL HG12', ' C1026  ALA  HB2', -0.591, (223.299, 220.615, 250.664)), (' C 742  ILE HG23', ' C 997  ILE HD12', -0.59, (223.197, 223.313, 212.489)), (' A  29  THR HG23', ' A  62  VAL HG23', -0.589, (168.46, 195.23, 209.066)), (' B 287  ASP  HB3', ' B 306  PHE  HE2', -0.589, (208.447, 246.984, 220.758)), (' C 127  VAL HG21', ' Z   1  NAG  H62', -0.588, (259.035, 197.721, 180.857)), (' I  18  LEU  HB3', ' I  82  MET  HE2', -0.587, (225.579, 285.451, 150.246)), (' B 780  GLU  O  ', ' B 784  GLN  NE2', -0.587, (201.926, 217.072, 253.553)), (' A 720  ILE HG13', ' A 923  ILE HG23', -0.585, (199.318, 197.689, 272.722)), (' A 592  PHE  CE1', ' A 624  ILE HG22', -0.581, (182.602, 219.09, 222.777)), (' A 994  ASP  HA ', ' A 997  ILE HG12', -0.579, (217.605, 205.17, 209.648)), (' A 962  LEU HD21', ' A1007  TYR  HB2', -0.579, (209.559, 203.736, 224.366)), (' A 715  PRO  HA ', ' A1072  GLU  HA ', -0.579, (190.848, 210.893, 277.119)), (' B 569  ILE HD11', ' C 964  LYS  HD2', -0.577, (235.435, 211.352, 218.543)), (' A 310  LYS  HG3', ' A 600  PRO  HA ', -0.573, (186.928, 203.199, 237.726)), (' A 825  LYS  HZ1', ' A 942  ALA  HA ', -0.571, (194.439, 192.805, 248.522)), (' C 552  LEU  HB3', ' C 585  LEU HD23', -0.57, (214.456, 178.527, 207.48)), (' A 389  ASP  OD1', ' A 542  ASN  ND2', -0.567, (189.416, 224.593, 196.05)), (' A 642  VAL HG22', ' A 651  ILE HG12', -0.566, (174.771, 216.765, 230.938)), (' A 802  PHE  HB3', ' A 806  LEU HD13', -0.564, (206.926, 187.398, 265.009)), (' B 909  ILE HD12', ' B1047  TYR  HB3', -0.562, (214.93, 225.876, 269.934)), (' A1083  HIS  HB3', ' A1088  HIS  HE2', -0.557, (203.933, 225.539, 297.901)), (' C 750  SER  O  ', ' C 753  LEU  HB3', -0.556, (220.887, 231.802, 211.574)), (' A1123  SER  OG ', ' B 914  ASN  ND2', -0.555, (212.345, 229.975, 288.234)), (' B 517  LEU HD22', ' C 983  ARG  HD2', -0.554, (232.1, 218.55, 195.222)), (' C 644  GLN  NE2', ' C 645  THR  O  ', -0.55, (221.39, 180.145, 234.053)), (' C  27  ALA  HB3', ' C  64  TRP  HB3', -0.55, (254.146, 177.13, 205.029)), (' B 294  ASP  HB3', ' B 297  SER  H  ', -0.547, (221.735, 246.111, 223.022)), (' C 411  ALA  HB3', ' C 414  GLN  HG3', -0.545, (202.838, 211.883, 185.418)), (' C 408  ARG  O  ', ' C 414  GLN  NE2', -0.545, (203.748, 213.604, 183.208)), (' A1048  HIS  HA ', ' A1066  THR HG22', -0.545, (203.444, 204.986, 265.578)), (' A  27  ALA  HB3', ' A  64  TRP  HB3', -0.544, (162.516, 195.24, 206.549)), (' B 746  SER  HB3', ' B 749  CYS  HB2', -0.544, (195.505, 217.901, 208.913)), (' A 890  ALA  HA ', ' C1046  GLY  HA2', -0.544, (225.551, 201.794, 265.961)), (' C 350  VAL HG21', ' C 418  ILE HD12', -0.543, (195.632, 207.702, 176.311)), (' B 776  LYS  O  ', ' B 780  GLU  N  ', -0.543, (200.087, 216.017, 248.352)), (' C 664  ILE  HB ', ' C 672  ALA  HB3', -0.541, (232.125, 191.373, 238.731)), (' A 912  THR  OG1', ' A1106  GLN  NE2', -0.541, (203.037, 207.448, 283.714)), (' B1129  VAL HG23', ' C 917  TYR  HB3', -0.54, (236.103, 215.089, 285.137)), (' C 276  LEU HD11', ' C 301  CYS  HA ', -0.539, (235.626, 200.114, 218.563)), (' A 726  ILE HG13', ' A1061  VAL HG23', -0.533, (201.988, 198.345, 252.24)), (' A 931  ILE  HA ', ' A 934  ILE HG22', -0.532, (197.482, 192.185, 261.488)), (' A 376  THR  HB ', ' A 435  ALA  HB3', -0.531, (208.538, 222.507, 177.505)), (' B  27  ALA  HB3', ' B  64  TRP  HB3', -0.531, (225.206, 266.806, 206.238)), (' J  21  LEU HD12', ' J  73  LEU HD22', -0.529, (279.867, 153.574, 177.317)), (' B 662  CYS  HB2', ' B 697  MET  HG2', -0.526, (227.996, 237.082, 245.873)), (' A 699  LEU  HG ', ' B 788  ILE HG13', -0.525, (187.301, 219.011, 255.824)), (' L  21  LEU HD12', ' L  73  LEU HD22', -0.525, (129.422, 181.443, 179.067)), (' K  21  LEU HD12', ' K  73  LEU HD22', -0.525, (231.764, 302.456, 179.249)), (' B 559  PHE  HZ ', ' B 575  ALA  HB1', -0.525, (246.257, 221.185, 208.455)), (' C 986  PRO  O  ', ' C 989  ALA  N  ', -0.524, (220.071, 222.593, 198.714)), (' A 869  MET  HE1', ' C 697  MET  HE2', -0.521, (223.395, 188.082, 246.348)), (' C 819  GLU  HA ', ' C 822  LEU HD12', -0.52, (240.318, 216.525, 251.74)), (' A 986  PRO  O  ', ' A 989  ALA  N  ', -0.518, (218.449, 204.591, 198.616)), (' A1047  TYR  HB2', ' A1067  TYR  HB3', -0.518, (201.388, 206.582, 270.511)), (' B 822  LEU HD12', ' B 938  LEU HD21', -0.515, (201.187, 238.83, 252.305)), (' I  19  ARG  NH2', ' I  81  GLN  OE1', -0.512, (221.82, 279.845, 151.503)), (' A1129  VAL HG23', ' B 917  TYR  HB3', -0.51, (203.268, 231.863, 285.349)), (' A 666  ILE HD11', ' A 672  ALA  HB2', -0.51, (183.439, 211.675, 238.691)), (' B  99  ASN HD22', ' B 177  MET  HB3', -0.509, (204.12, 268.221, 196.218)), (' A 726  ILE HD11', ' A 944  ALA  HB1', -0.509, (198.191, 198.378, 251.496)), (' B 720  ILE HG13', ' B 923  ILE HG23', -0.509, (208.566, 235.222, 272.806)), (' B 715  PRO  HA ', ' B1072  GLU  HA ', -0.509, (224.403, 235.892, 277.103)), (' A 408  ARG  NH1', ' A 414  GLN  OE1', -0.509, (221.206, 221.3, 181.506)), (' C 418  ILE  HA ', ' C 422  ASN  HB2', -0.508, (194.043, 210.159, 178.595)), (' B 644  GLN  NE2', ' B 645  THR  O  ', -0.508, (240.186, 236.671, 234.311)), (' C 598  ILE HD13', ' C 666  ILE HG12', -0.507, (229.557, 189.194, 235.807)), (' H  19  ARG  NH2', ' H  81  GLN  OE1', -0.507, (153.808, 186.131, 151.64)), (' A 276  LEU HD11', ' A 301  CYS  HA ', -0.505, (190.965, 202.416, 219.927)), (' B 318  PHE  HB2', ' C 739  THR HG21', -0.504, (226.353, 233.681, 214.547)), (' A 966  LEU HD22', ' C 570  ALA  HB1', -0.503, (208.258, 195.642, 215.635)), (' A1106  GLN  NE2', ' A1111  GLU  OE1', -0.502, (201.793, 207.296, 284.486)), (' B 127  VAL HG21', ' T   1  NAG  H62', -0.502, (204.472, 261.616, 182.805)), (' B 986  PRO  HA ', ' B 989  ALA  HB3', -0.502, (200.898, 215.237, 199.258)), (' B 287  ASP  HB3', ' B 306  PHE  CE2', -0.5, (208.911, 246.902, 220.521)), (' C 332  ILE HD11', ' C 525  CYS  HB2', -0.5, (208.963, 182.945, 189.689)), (' C  99  ASN HD22', ' C 177  MET  HB3', -0.499, (265.053, 195.469, 194.337)), (' A1008  VAL  O  ', ' A1012  LEU  HG ', -0.498, (214.491, 208.508, 230.865)), (' A 418  ILE  HA ', ' A 422  ASN  HB2', -0.498, (219.713, 232.779, 178.339)), (' A  99  ASN HD22', ' A 177  MET  HB3', -0.497, (173.582, 176.97, 196.478)), (' B 598  ILE HG23', ' B 664  ILE HG21', -0.496, (224.577, 240.21, 236.017)), (' A 113  LYS  HD2', ' C 471  GLU  OE2', -0.495, (173.367, 206.321, 177.034)), (' B 431  GLY  HA2', ' B 515  PHE  HD2', -0.494, (232.058, 214.825, 188.754)), (' G  19  ARG  NH2', ' G  81  GLN  OE1', -0.493, (264.178, 173.035, 150.013)), (' B1048  HIS  HA ', ' B1066  THR HG22', -0.493, (212.32, 227.835, 265.571)), (' A 763  LEU HD22', ' A1008  VAL HG21', -0.493, (217.058, 207.145, 225.308)), (' B 772  VAL HG12', ' B 776  LYS  NZ ', -0.493, (199.187, 211.362, 240.253)), (' B 822  LEU  HG ', ' B 945  LEU HD11', -0.491, (202.769, 236.789, 249.484)), (' B 774  GLN  O  ', ' B 777  ASN  HB2', -0.491, (201.114, 218.868, 243.709)), (' B 393  THR  HA ', ' B 522  ALA  HA ', -0.488, (242.819, 217.768, 193.187)), (' A 365  TYR  CZ ', ' A 388  ASN  HB3', -0.487, (192.95, 223.017, 186.599)), (' A 401  VAL HG22', ' A 509  ARG  HG2', -0.487, (208.327, 230.287, 170.702)), (' B 393  THR  HB ', ' B 520  ALA  HB3', -0.486, (242.392, 214.552, 195.213)), (' K  35  TRP  HB2', ' K  48  ILE  HB ', -0.485, (226.423, 296.53, 180.067)), (' C 338  PHE  HB3', ' C 368  LEU HD21', -0.485, (208.116, 190.231, 177.942)), (' A 599  THR  HB ', ' A 608  VAL HG23', -0.483, (184.426, 205.505, 231.186)), (' C 319  ARG  NH2', ' C 593  GLY  HA2', -0.482, (224.452, 190.081, 220.867)), (' H  36  TRP  HE1', ' H  78  LEU HD22', -0.481, (151.628, 184.943, 161.835)), (' L  35  TRP  HB2', ' L  48  ILE  HB ', -0.481, (137.112, 180.034, 179.549)), (' G  36  TRP  HE1', ' G  78  LEU HD22', -0.478, (266.439, 172.111, 160.106)), (' I  36  TRP  HE1', ' I  78  LEU HD22', -0.477, (222.189, 281.744, 161.864)), (' J  35  TRP  HB2', ' J  48  ILE  HB ', -0.477, (277.579, 161.051, 178.199)), (' A 358  ILE  HB ', ' A 395  VAL  HB ', -0.476, (198.669, 236.471, 186.15)), (' C 592  PHE  CZ ', ' C 612  TYR  HD1', -0.475, (224.727, 184.905, 224.462)), (' H  52A TYR  CD1', ' H  99  TYR  HB2', -0.473, (160.845, 176.04, 172.778)), (' I  52A TYR  CD1', ' I  99  TYR  HB2', -0.472, (210.096, 279.545, 172.842)), (' C 749  CYS  O  ', ' C 753  LEU  N  ', -0.472, (221.217, 229.58, 210.109)), (' C 865  LEU HD23', ' C 869  MET  HE3', -0.47, (232.119, 231.472, 246.531)), (' C 697  MET  N  ', ' C 697  MET  SD ', -0.47, (226.248, 187.486, 245.866)), (' A 887  THR HG21', ' A 894  LEU  HG ', -0.469, (223.938, 196.111, 272.393)), (' C  50  SER  HA ', ' C 276  LEU  HA ', -0.468, (237.947, 202.899, 213.884)), (' B 642  VAL HG22', ' B 651  ILE HD12', -0.467, (237.515, 246.451, 230.125)), (' A 765  ARG HH12', ' C 961  THR HG21', -0.466, (228.919, 208.272, 226.442)), (' C 827  THR  H  ', ' C 949  GLN HE22', -0.462, (240.711, 212.286, 240.201)), (' B 796  ASP  N  ', ' B 796  ASP  OD1', -0.461, (190.944, 234.109, 276.033)), (' G  52A TYR  CD1', ' G  99  TYR  HB2', -0.461, (270.789, 184.056, 170.802)), (' A 559  PHE  HE2', ' A 584  ILE HD12', -0.461, (188.335, 239.933, 208.691)), (' C 247  SER  HB3', ' C 257  GLY  HA2', -0.46, (271.724, 176.872, 187.338)), (' A 454  ARG  NH2', ' A 467  ASP  O  ', -0.46, (221.109, 242.388, 176.902)), (' A1102  TRP  HB2', ' A1135  ASN  ND2', -0.46, (196.492, 221.154, 294.496)), (' G  82  MET  HB2', ' G  82  MET  HE2', -0.46, (267.924, 167.881, 149.103)), (' A 612  TYR  HE2', ' A 651  ILE HD12', -0.46, (178.312, 216.165, 227.959)), (' B 705  VAL HG13', ' C 895  GLN  HG2', -0.46, (233.933, 232.029, 272.27)), (' L  66  GLY  HA3', ' L  71  PHE  HA ', -0.459, (132.525, 171.118, 181.623)), (' C 520  ALA  HB1', ' C 521  PRO  HD2', -0.459, (199.001, 185.836, 198.318)), (' C 666  ILE HD11', ' C 672  ALA  HB2', -0.458, (231.403, 188.865, 238.319)), (' C 551  VAL  HB ', ' C 588  THR  HB ', -0.457, (217.188, 182.092, 213.805)), (' J  66  GLY  HA3', ' J  71  PHE  HA ', -0.457, (287.734, 160.829, 179.483)), (' K  66  GLY  HA3', ' K  71  PHE  HA ', -0.457, (221.442, 305.28, 181.784)), (' A 498  GLN  HB2', ' A 501  ASN  ND2', -0.457, (218.039, 224.538, 160.595)), (' A 804  GLN  O  ', ' A 816  SER  OG ', -0.456, (204.786, 185.93, 258.086)), (' B 976  VAL HG23', ' B 979  ASP  HB2', -0.455, (200.337, 227.596, 203.819)), (' G  15  GLY  H  ', ' G  82C LEU HD12', -0.455, (268.222, 163.659, 143.334)), (' C 329  PHE  HE2', ' C 528  LYS  HB2', -0.454, (215.903, 184.613, 192.148)), (' B 963  VAL  HA ', ' B 966  LEU HD23', -0.454, (203.067, 227.837, 219.78)), (' J  88  CYS  O  ', ' J  99  GLY  N  ', -0.453, (281.599, 160.586, 167.824)), (' B 247  SER  HB3', ' B 257  GLY  HA2', -0.452, (216.522, 283.379, 188.881)), (' L  88  CYS  O  ', ' L  99  GLY  N  ', -0.45, (135.016, 176.134, 170.218)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.45, (237.64, 195.124, 236.484)), (' K  88  CYS  O  ', ' K  99  GLY  N  ', -0.449, (224.303, 300.7, 170.402)), (' C 105  ILE HG23', ' C 241  LEU HD11', -0.449, (252.915, 188.065, 186.958)), (' A 247  SER  HB3', ' A 257  GLY  HA2', -0.448, (154.014, 178.8, 189.091)), (' A 143  VAL HG13', ' A 153  MET  HG3', -0.448, (166.341, 174.121, 188.605)), (' A 105  ILE HG23', ' A 241  LEU HD11', -0.448, (172.229, 190.953, 188.467)), (' C 143  VAL HG13', ' C 153  MET  HG3', -0.448, (270.703, 189.465, 186.708)), (' C 733  LYS  HE3', ' C 771  ALA  HB1', -0.448, (226.898, 227.235, 236.468)), (' B 811  LYS  HB2', ' B 811  LYS  HE3', -0.447, (187.592, 239.175, 254.984)), (' B 290  ASP  O  ', ' B 297  SER  HB3', -0.447, (219.721, 245.598, 219.204)), (' C 763  LEU HD22', ' C1008  VAL HG21', -0.446, (219.602, 220.28, 225.521)), (' I  15  GLY  H  ', ' I  82C LEU HD12', -0.445, (227.642, 288.108, 144.83)), (' A 962  LEU  HA ', ' A 965  GLN  HB2', -0.444, (207.14, 201.895, 220.607)), (' B1107  ARG HH21', ' C 896  ILE HD13', -0.444, (227.88, 224.527, 273.782)), (' B 406  GLU  HA ', ' B 409  GLN  HG3', -0.444, (219.171, 203.863, 178.374)), (' C 592  PHE  HZ ', ' C 612  TYR  HD1', -0.444, (224.733, 185.005, 224.966)), (' B 551  VAL HG23', ' B 590  CYS  HA ', -0.443, (237.301, 234.217, 213.531)), (' C  31  SER  O  ', ' C  59  PHE  HA ', -0.442, (247.971, 186.745, 213.485)), (' B 143  VAL HG13', ' B 153  MET  HG3', -0.442, (205.346, 275.695, 188.62)), (' A1014  ARG  HA ', ' A1014  ARG  HD2', -0.441, (207.712, 207.437, 237.639)), (' A 773  GLU  HG3', ' A1019  ARG HH11', -0.441, (218.743, 205.797, 242.114)), (' C  83  VAL HG12', ' C 239  GLN  HB2', -0.441, (249.161, 182.552, 189.555)), (' H  15  GLY  H  ', ' H  82C LEU HD12', -0.44, (143.789, 186.248, 144.91)), (' G  57  LYS  HB2', ' G  57  LYS  HE3', -0.439, (274.176, 180.895, 158.832)), (' A 807  PRO  HG3', ' A 875  SER  HB2', -0.438, (213.06, 185.67, 258.693)), (' A 736  VAL  HA ', ' A 857  GLY  O  ', -0.438, (216.297, 195.785, 224.094)), (' B 336  CYS  HB2', ' B 363  ALA  HB2', -0.438, (240.175, 222.551, 181.603)), (' A  31  SER  O  ', ' A  59  PHE  HA ', -0.438, (173.265, 197.211, 214.87)), (' A 559  PHE  CE2', ' A 584  ILE HD12', -0.437, (188.369, 240.195, 208.702)), (' C 319  ARG  H  ', ' C 319  ARG  HG2', -0.436, (228.713, 189.984, 217.146)), (' A 323  THR HG22', ' A 628  GLN HE22', -0.435, (179.308, 217.148, 208.653)), (' B 105  ILE HG23', ' B 241  LEU HD11', -0.435, (215.961, 261.794, 188.296)), (' B 712  ILE HG21', ' B1096  VAL HG12', -0.434, (229.406, 229.464, 282.884)), (' B  31  SER  O  ', ' B  59  PHE  HA ', -0.434, (220.563, 256.839, 214.36)), (' B  50  SER  HB3', ' B 276  LEU  HG ', -0.434, (212.687, 238.533, 216.24)), (' B 776  LYS  HA ', ' B 779  GLN  HB3', -0.434, (198.455, 214.573, 246.885)), (' C 669  GLY  HA2', ' C 697  MET  HE1', -0.432, (223.192, 187.717, 244.375)), (' A 598  ILE HD13', ' A 666  ILE HG12', -0.432, (185.297, 212.973, 236.769)), (' A 442  ASP  OD2', ' A 509  ARG  NE ', -0.431, (206.981, 230.243, 168.105)), (' B  83  VAL HG12', ' B 239  GLN  HB2', -0.43, (223.155, 260.727, 190.234)), (' B 727  LEU HD12', ' B1062  PHE  HE2', -0.43, (208.15, 225.415, 252.981)), (' B 993  ILE  O  ', ' B 997  ILE HG12', -0.43, (204.627, 216.549, 208.935)), (' I  56  LYS  HA ', ' I  56  LYS  HD3', -0.429, (206.163, 285.975, 163.232)), (' B 741  TYR  HE1', ' B1000  ARG  HB3', -0.429, (204.012, 220.402, 216.645)), (' A1094  VAL HG12', ' B 904  TYR  OH ', -0.429, (201.21, 220.452, 281.254)), (' B  20  THR  O  ', ' B  21  ARG  C  ', -0.428, (232.536, 273.621, 192.224)), (' A 880  GLY  O  ', ' A 884  SER  OG ', -0.428, (217.971, 193.975, 267.756)), (' A 340  GLU  O  ', ' A 344  ALA  N  ', -0.428, (199.145, 234.038, 171.454)), (' B1004  LEU  O  ', ' B1008  VAL HG23', -0.428, (206.856, 217.381, 225.14)), (' B 742  ILE HG13', ' B 743  CYS  SG ', -0.427, (197.385, 215.424, 214.215)), (' B1076  THR  HB ', ' B1097  SER  HB3', -0.427, (233.939, 231.588, 287.695)), (' I   6  GLU  HG3', ' I 106  GLY  H  ', -0.427, (232.391, 283.618, 163.214)), (' C  20  THR  O  ', ' C  21  ARG  C  ', -0.427, (255.4, 167.758, 191.375)), (' A 994  ASP  O  ', ' A 998  THR  OG1', -0.424, (216.028, 208.859, 210.721)), (' A  83  VAL HG12', ' A 239  GLN  HB2', -0.423, (169.005, 196.77, 190.738)), (' A1009  THR  HA ', ' A1012  LEU HD12', -0.423, (213.829, 210.593, 230.178)), (' A 715  PRO  HD3', ' B 894  LEU HD21', -0.422, (195.053, 213.312, 276.113)), (' A  20  THR  O  ', ' A  21  ARG  C  ', -0.421, (152.913, 197.831, 192.49)), (' B 632  THR  O  ', ' B 635  VAL HG12', -0.42, (229.476, 250.186, 222.956)), (' I  57  LYS  HB2', ' I  57  LYS  HE3', -0.42, (210.457, 283.897, 160.466)), (' A 598  ILE HG23', ' A 664  ILE HG21', -0.42, (186.977, 209.236, 236.836)), (' C 393  THR  HA ', ' C 522  ALA  HA ', -0.42, (202.593, 186.576, 194.07)), (' C 106  PHE  HB2', ' C 117  LEU  HB3', -0.42, (246.264, 192.094, 187.746)), (' A 776  LYS  HA ', ' A 776  LYS  HE3', -0.419, (222.513, 200.115, 245.06)), (' H  51  ILE HD13', ' H  71  ARG  HG3', -0.419, (157.615, 180.905, 162.815)), (' B 807  PRO  HG3', ' B 875  SER  HB2', -0.418, (190.685, 229.266, 259.195)), (' B  93  ALA  HB3', ' B 266  TYR  HB2', -0.418, (216.133, 261.6, 205.161)), (' B1093  GLY  HA3', ' B1105  THR  O  ', -0.418, (222.904, 224.017, 283.676)), (' A 408  ARG  O  ', ' A 414  GLN  NE2', -0.418, (218.099, 222.291, 183.28)), (' C 453  TYR  HE2', ' C 455  LEU HD13', -0.418, (191.213, 214.917, 172.499)), (' L  38  GLN  HG3', ' L  44  PRO  HG3', -0.418, (136.529, 186.84, 168.676)), (' K  38  GLN  HG3', ' K  44  PRO  HG3', -0.417, (232.297, 293.647, 168.712)), (' B 994  ASP  O  ', ' B 998  THR  OG1', -0.417, (207.932, 215.092, 210.684)), (' C 310  LYS  HB3', ' C 310  LYS  HE2', -0.417, (237.035, 198.57, 238.135)), (' B 738  CYS  O  ', ' B 742  ILE HG12', -0.415, (197.576, 216.271, 217.455)), (' A  93  ALA  HB3', ' A 266  TYR  HB2', -0.415, (171.896, 190.594, 205.428)), (' A1002  GLN  O  ', ' A1006  THR HG23', -0.414, (211.266, 209.42, 221.386)), (' A 667  GLY  HA2', ' B 864  LEU  HA ', -0.414, (190.256, 218.611, 240.691)), (' C 960  ASN  O  ', ' C 963  VAL HG22', -0.414, (233.263, 213.195, 222.342)), (' K  91  TYR  CD1', ' K  96  LEU  HB2', -0.414, (216.981, 294.023, 168.322)), (' B1046  GLY  HA2', ' C 890  ALA  HA ', -0.413, (219.784, 228.968, 265.802)), (' L  91  TYR  CD1', ' L  96  LEU  HB2', -0.413, (144.917, 173.659, 168.439)), (' C  93  ALA  HB3', ' C 266  TYR  HB2', -0.413, (253.631, 187.759, 203.959)), (' G   6  GLU  HG3', ' G 106  GLY  H  ', -0.413, (262.577, 162.569, 161.604)), (' B 106  PHE  HB2', ' B 117  LEU  HB3', -0.413, (216.063, 253.526, 188.628)), (' A 386  LYS  NZ ', ' B 982  SER  O  ', -0.413, (196.075, 221.841, 196.821)), (' A 328  ARG  NH1', ' A 578  ASP  OD1', -0.412, (181.102, 233.795, 200.676)), (' C1086  LYS  HB3', ' C1122  VAL HG13', -0.411, (205.692, 201.836, 295.113)), (' C 426  PRO  HG2', ' C 429  PHE  HB2', -0.411, (199.47, 204.199, 191.094)), (' A  57  PRO  HG2', ' A  60  SER  HB3', -0.411, (175.441, 201.127, 210.623)), (' A 928  ASN  HA ', ' A 931  ILE HG12', -0.411, (198.11, 189.981, 266.93)), (' H   6  GLU  HG3', ' H 106  GLY  H  ', -0.411, (144.775, 192.415, 163.346)), (' G  34  MET  HB3', ' G  34  MET  HE2', -0.41, (267.338, 172.301, 164.597)), (' B 825  LYS  CE ', ' B 942  ALA  HA ', -0.41, (205.236, 241.64, 248.107)), (' B 364  ASP  HB3', ' B 367  VAL HG13', -0.41, (235.521, 228.142, 180.401)), (' A  38  TYR  HA ', ' A  39  PRO  HD3', -0.409, (190.574, 191.932, 208.782)), (' B 415  THR  OG1', ' C 384  PRO  HB2', -0.409, (216.849, 198.235, 185.742)), (' J  38  GLN  HG3', ' J  44  PRO  HG3', -0.409, (271.429, 156.953, 166.974)), (' C1001  LEU HD23', ' C1004  LEU HD12', -0.409, (221.36, 221.09, 218.578)), (' B1086  LYS  HD3', ' B1122  VAL HG11', -0.409, (229.459, 211.796, 296.794)), (' A  22  THR  O  ', ' A  78  ARG  NH1', -0.408, (154.435, 196.19, 196.46)), (' C 777  ASN  ND2', ' C1019  ARG  HD2', -0.408, (221.458, 219.742, 244.307)), (' B  24  LEU  HA ', ' B  24  LEU HD23', -0.408, (232.228, 272.249, 200.219)), (' I  39  GLN  HB3', ' I  89  VAL  HB ', -0.408, (232.559, 292.172, 161.366)), (' J  91  TYR  CD1', ' J  96  LEU  HB2', -0.407, (279.652, 170.743, 166.31)), (' A 945  LEU  HA ', ' A 945  LEU HD12', -0.407, (200.066, 196.508, 247.506)), (' A 855  PHE  HB3', ' A 858  LEU  HB2', -0.407, (210.695, 194.331, 224.242)), (' I  51  ILE HD13', ' I  71  ARG  HG3', -0.407, (215.621, 279.448, 162.693)), (' A 106  PHE  HB2', ' A 117  LEU  HB3', -0.406, (178.885, 195.11, 189.208)), (' B 401  VAL HG22', ' B 509  ARG  HG2', -0.405, (229.726, 209.077, 170.178)), (' A 632  THR  O  ', ' A 635  VAL HG22', -0.405, (174.631, 208.101, 224.228)), (' B 437  ASN  ND2', ' B 506  GLN  OE1', -0.405, (220.269, 212.834, 166.608)), (' B 825  LYS  HB3', ' B 825  LYS  HE2', -0.405, (203.444, 239.711, 247.143)), (' H  56  LYS  HA ', ' H  56  LYS  HD3', -0.404, (157.298, 169.869, 163.05)), (' A 328  ARG  HA ', ' A 328  ARG  HD3', -0.404, (182.249, 230.34, 197.624)), (' G  51  ILE HD13', ' G  71  ARG  HG3', -0.404, (267.518, 178.903, 160.944)), (' B  22  THR  O  ', ' B  78  ARG  NH1', -0.403, (230.367, 273.178, 196.019)), (' C  57  PRO  HG2', ' C  60  SER  HB3', -0.403, (242.932, 186.792, 209.477)), (' C1097  SER  HB2', ' C1102  TRP  CD2', -0.402, (219.988, 191.487, 290.276)), (' A 909  ILE HD12', ' A1047  TYR  HB3', -0.402, (203.92, 208.14, 270.689)), (' C  21  ARG  H  ', ' C  21  ARG  HG2', -0.402, (258.709, 167.913, 192.343)), (' A 385  THR  O  ', ' A 386  LYS  HG2', -0.402, (197.316, 219.486, 192.523)), (' A 712  ILE HG21', ' A1096  VAL HG12', -0.4, (194.756, 218.779, 283.095)), (' C 821  LEU  O  ', ' C 825  LYS  HG2', -0.4, (244.108, 212.983, 247.647)), (' B 327  VAL  HB ', ' B 531  THR HG23', -0.4, (240.385, 235.801, 195.374)), (' B1115  ILE HG22', ' B1137  VAL HG13', -0.4, (226.072, 220.568, 295.265))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

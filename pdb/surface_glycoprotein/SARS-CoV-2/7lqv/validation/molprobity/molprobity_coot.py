# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 521 ', 'PRO', 0.04550318123722599, (181.02999999999994, 226.44899999999996, 229.503))]
data['omega'] = [('A', ' 521 ', 'PRO', None, (181.74499999999995, 225.21899999999997, 229.122))]
data['rota'] = [('A', ' 814 ', 'LYS', 0.08655414008761955, (234.62900000000005, 197.557, 170.005)), ('A', ' 819 ', 'GLU', 0.03564117962632217, (228.338, 205.206, 170.809))]
data['cbeta'] = []
data['probe'] = [(' C 175  PHE  CD1', ' C 226  LEU HD13', -0.99, (207.64, 153.693, 223.379)), (' C 175  PHE  HD1', ' C 226  LEU HD13', -0.979, (206.59, 153.597, 222.769)), (' A 126  VAL HG21', ' A 175  PHE  CE2', -0.872, (239.95, 229.463, 229.629)), (' B 175  PHE  HD1', ' B 226  LEU HD13', -0.832, (160.572, 222.963, 225.92)), (' C 175  PHE  HD1', ' C 226  LEU  CD1', -0.777, (207.186, 153.25, 222.49)), (' A 393  THR  OG1', ' A 522  ALA  O  ', -0.772, (182.083, 225.983, 233.203)), (' B 657  ASN  OD1', ' B1306  NAG  N2 ', -0.759, (161.794, 180.006, 180.101)), (' A 474  GLN  NE2', ' A 476  GLY  O  ', -0.753, (174.231, 178.118, 245.832)), (' C 811  LYS  NZ ', ' C 820  ASP  OD2', -0.751, (188.174, 169.574, 172.541)), (' H 100E TYR  O  ', ' L  50  GLN  NE2', -0.751, (256.349, 246.813, 238.79)), (' C1081  ILE  O  ', ' C1088  HIS  N  ', -0.747, (216.072, 203.176, 131.576)), (' A 357  ARG  NH1', ' A 359  SER  OG ', -0.744, (177.831, 220.827, 236.466)), (' W  38  ARG  NH1', ' W  86  ASP  OD1', -0.743, (130.087, 236.301, 266.042)), (' A 126  VAL HG21', ' A 175  PHE  HE2', -0.739, (239.225, 229.049, 230.195)), (' B 912  THR  OG1', ' B1106  GLN  NE2', -0.739, (188.061, 203.692, 141.432)), (' Y  38  ARG  NH1', ' Y  86  ASP  OD1', -0.738, (214.241, 122.373, 264.747)), (' B 175  PHE  HD1', ' B 226  LEU  CD1', -0.738, (160.479, 222.44, 225.058)), (' X  54  ARG  NH1', ' X  62  PHE  O  ', -0.728, (119.472, 222.678, 237.526)), (' A 596  SER  OG ', ' A 613  GLN  NE2', -0.727, (205.277, 226.987, 194.512)), (' A 534  VAL HG11', ' A 539  VAL HG11', -0.727, (197.862, 237.234, 220.948)), (' A 273  ARG  NH2', ' A 290  ASP  OD2', -0.724, (219.947, 232.798, 208.766)), (' A 879  ALA  O  ', ' A 883  THR  OG1', -0.721, (224.268, 193.811, 156.177)), (' A 409  GLN  OE1', ' A 418  ILE  N  ', -0.717, (188.667, 195.778, 243.981)), (' A 950  ASP  OD2', ' A 954  GLN  NE2', -0.715, (213.471, 210.075, 185.677)), (' C 345  THR  O  ', ' C 509  ARG  NH2', -0.71, (226.312, 211.642, 256.203)), (' B 323  THR  OG1', ' B 324  GLU  OE1', -0.707, (173.633, 176.111, 216.7)), (' C1091  ARG  NH1', ' C1118  ASP  O  ', -0.7, (203.651, 200.005, 132.29)), (' B1142  GLN  NE2', ' B1146  ASP  OD1', -0.695, (194.411, 196.325, 112.533)), (' H  38  ARG  NH1', ' H  86  ASP  OD1', -0.691, (265.855, 247.617, 264.755)), (' C 516  GLU  N  ', ' C 516  GLU  OE1', -0.69, (226.979, 211.305, 229.746)), (' A 344  ALA  O  ', ' A 509  ARG  NH1', -0.683, (187.139, 213.301, 255.769)), (' A1091  ARG  NH1', ' A1118  ASP  O  ', -0.682, (198.295, 204.673, 132.468)), (' C 722  VAL HG12', ' C 930  ALA  HB1', -0.678, (202.039, 177.055, 160.702)), (' A 592  PHE  HE2', ' A 624  ILE HG22', -0.676, (205.138, 235.879, 203.176)), (' A1086  LYS  HD3', ' A1122  VAL HG21', -0.67, (187.63, 209.167, 129.627)), (' A  21  ARG  NE ', ' A  80  ASP  OD1', -0.668, (230.456, 254.077, 227.98)), (' W  48  MET  SD ', ' W  49  GLY  N  ', -0.667, (136.977, 231.22, 258.132)), (' C 299  THR  OG1', ' C 597  VAL HG21', -0.665, (219.92, 175.677, 195.299)), (' B 802  PHE  HD2', ' B 805  ILE HD11', -0.664, (186.351, 220.084, 161.143)), (' C 444  LYS  O  ', ' C 447  GLY  N  ', -0.663, (217.389, 211.459, 269.44)), (' C  37  TYR  OH ', ' C  53  ASP  OD2', -0.66, (212.552, 167.818, 217.087)), (' B 310  LYS  NZ ', ' B 663  ASP  OD1', -0.652, (172.661, 200.605, 181.964)), (' H  82B SER  O  ', ' H  83  ARG  NH1', -0.647, (264.941, 242.596, 271.494)), (' B 756  TYR  OH ', ' B 994  ASP  OD2', -0.64, (205.771, 207.216, 215.445)), (' B 880  GLY  O  ', ' B 884  SER  OG ', -0.639, (197.346, 221.656, 156.865)), (' H   6  GLN  N  ', ' H   6  GLN  OE1', -0.638, (251.073, 258.468, 259.705)), (' B 175  PHE  CD1', ' B 226  LEU HD13', -0.633, (160.941, 222.147, 226.012)), (' Y  82B SER  O  ', ' Y  83  ARG  NH1', -0.633, (208.604, 123.99, 270.254)), (' H  95  LEU HD13', ' H 100C GLU  OE1', -0.627, (254.969, 245.063, 247.832)), (' C1088  HIS  HB3', ' C1120  THR HG21', -0.627, (212.811, 200.54, 131.991)), (' C 344  ALA  HB3', ' C 347  PHE  HE1', -0.627, (228.288, 212.037, 251.375)), (' B 175  PHE  CD1', ' B 226  LEU  CD1', -0.625, (160.324, 221.909, 225.758)), (' A  61  ASN HD21', ' A1301  NAG  H2 ', -0.624, (221.543, 246.219, 211.193)), (' L  54  ARG  NH1', ' L  62  PHE  O  ', -0.624, (265.681, 258.718, 234.453)), (' B  21  ARG  NE ', ' B  80  ASP  OD1', -0.622, (141.997, 201.698, 229.498)), (' A 339  GLY  O  ', ' A 343  ASN  N  ', -0.619, (186.437, 218.392, 252.527)), (' W  80  MET  N  ', ' W  80  MET  SD ', -0.615, (140.25, 226.159, 265.139)), (' C 909  ILE HD12', ' C1047  TYR  HB3', -0.614, (204.616, 190.106, 154.203)), (' B 736  VAL HG22', ' B 858  LEU HD23', -0.61, (197.663, 216.761, 200.015)), (' A1123  SER  OG ', ' B 914  ASN  ND2', -0.605, (185.339, 206.724, 138.041)), (' C 105  ILE HD11', ' C 241  LEU HD21', -0.6, (220.296, 151.338, 233.868)), (' C 339  GLY  O  ', ' C 343  ASN  N  ', -0.598, (230.416, 207.806, 250.741)), (' L  48  ILE HD12', ' L  52  ASN  HA ', -0.597, (265.964, 254.05, 236.77)), (' A 496  GLY  N  ', ' A 505  TYR  OH ', -0.592, (188.539, 196.293, 260.252)), (' Y  50  ARG  NH1', ' Y 100C GLU  OE2', -0.591, (213.221, 134.661, 247.641)), (' B 296  LEU HD21', ' B 608  VAL HG11', -0.586, (168.13, 200.309, 195.16)), (' A 406  GLU  N  ', ' A 406  GLU  OE1', -0.586, (193.816, 198.18, 249.534)), (' Y 100A ALA  O  ', ' Y 100D LYS  NZ ', -0.585, (212.289, 132.137, 238.768)), (' Z  27  LYS  NZ ', ' Z  29  GLY  O  ', -0.58, (210.798, 117.385, 236.007)), (' B 378  LYS  O  ', ' B 433  VAL HG22', -0.579, (189.031, 179.57, 254.939)), (' C1106  GLN  NE2', ' C1111  GLU  OE2', -0.576, (206.328, 188.091, 141.703)), (' A 895  GLN  OE1', ' C 711  SER  OG ', -0.574, (225.166, 191.206, 146.568)), (' B 722  VAL HG22', ' B 930  ALA  HB1', -0.574, (179.655, 211.634, 161.446)), (' A1311  NAG  H82', ' A1311  NAG  O3 ', -0.574, (223.775, 233.662, 258.883)), (' B1144  GLU  N  ', ' B1144  GLU  OE1', -0.573, (189.161, 200.335, 116.545)), (' C1126  CYS  CB ', ' C1132  ILE HD13', -0.571, (221.251, 205.388, 131.777)), (' B 945  LEU HD12', ' B 948  LEU HD12', -0.57, (185.866, 214.532, 178.55)), (' A 357  ARG  NH1', ' A 358  ILE  O  ', -0.57, (178.884, 220.252, 237.092)), (' C 169  GLU  OE2', ' C 171  VAL HG23', -0.567, (204.153, 152.712, 236.559)), (' A 122  ASN HD22', ' A1302  NAG  H5 ', -0.562, (245.873, 234.623, 236.776)), (' C 714  ILE HD12', ' C1096  VAL HG11', -0.562, (216.367, 189.653, 141.316)), (' B 557  LYS  O  ', ' B 584  ILE HG21', -0.558, (188.537, 160.74, 208.09)), (' C 597  VAL HG12', ' C 610  VAL HG22', -0.557, (225.318, 176.614, 195.444)), (' B 816  SER  OG ', ' B 819  GLU  OE1', -0.556, (186.537, 223.181, 169.41)), (' C 344  ALA  HB3', ' C 347  PHE  CE1', -0.551, (227.765, 211.678, 251.497)), (' A 245  HIS  ND1', ' A 259  THR  O  ', -0.55, (247.302, 248.931, 228.809)), (' C 158  ARG  NH1', ' Y 100F TYR  OH ', -0.55, (222.025, 138.157, 240.171)), (' Y   6  GLN  N  ', ' Y   6  GLN  OE1', -0.548, (228.09, 135.412, 262.209)), (' C 909  ILE HD11', ' C1048  HIS  O  ', -0.547, (201.705, 189.677, 155.712)), (' B 909  ILE HD12', ' B1047  TYR  HB3', -0.546, (189.883, 202.878, 154.884)), (' C 990  GLU  N  ', ' C 990  GLU  OE1', -0.544, (194.781, 196.521, 225.301)), (' A 620  VAL  O  ', ' A 624  ILE HG23', -0.542, (203.335, 238.188, 203.528)), (' H  33  THR  OG1', ' H  97  THR  O  ', -0.542, (249.884, 244.256, 248.662)), (' C 544  ASN  OD1', ' C 564  GLN  NE2', -0.542, (237.7, 205.837, 222.052)), (' W   6  GLN  N  ', ' W   6  GLN  OE1', -0.541, (132.299, 216.943, 263.522)), (' B 436  TRP  NE1', ' B 509  ARG  O  ', -0.54, (188.212, 170.278, 263.476)), (' B 581  THR  OG1', ' B 583  GLU  OE1', -0.539, (183.84, 160.553, 218.132)), (' B 585  LEU  O  ', ' B 585  LEU HD12', -0.539, (185.767, 167.983, 212.005)), (' C  14  GLN  N  ', ' Y  31  SER  HG ', -0.538, (221.719, 145.657, 245.234)), (' B 950  ASP  OD1', ' B 951  VAL  N  ', -0.537, (188.111, 209.422, 185.085)), (' B  99  ASN  O  ', ' B 102  ARG  NH1', -0.536, (146.69, 222.453, 227.893)), (' C1125  ASN  OD1', ' C1126  CYS  N  ', -0.535, (220.612, 209.394, 129.648)), (' A1010  GLN  OE1', ' A1014  ARG  NH1', -0.532, (212.174, 204.405, 192.545)), (' C 802  PHE  CD2', ' C 805  ILE HD11', -0.53, (191.866, 177.787, 160.818)), (' B  53  ASP  OD1', ' B  54  LEU  N  ', -0.528, (171.314, 207.738, 219.386)), (' C1111  GLU  N  ', ' C1111  GLU  OE1', -0.528, (208.679, 185.897, 140.272)), (' C 825  LYS  NZ ', ' C 938  LEU  O  ', -0.527, (201.041, 171.55, 175.822)), (' B 154  GLU  OE2', ' W 100D LYS  NZ ', -0.526, (141.021, 231.131, 239.448)), (' C1084  ASP  N  ', ' C1084  ASP  OD1', -0.525, (216.506, 204.149, 124.162)), (' A 518  LEU HD12', ' A 520  ALA  H  ', -0.524, (182.476, 221.359, 227.927)), (' A  25  PRO  HG2', ' A  26  PRO  HD3', -0.523, (222.319, 254.801, 218.928)), (' A 740  MET  HA ', ' A 740  MET  HE3', -0.523, (223.884, 192.89, 207.145)), (' C1302  NAG  C1 ', ' C1302  NAG  H82', -0.523, (194.799, 154.961, 202.257)), (' B1077  THR  OG1', ' C 900  MET  HE1', -0.52, (185.684, 186.122, 143.083)), (' W 100A ALA  O  ', ' W 100D LYS  NZ ', -0.52, (140.442, 230.707, 240.691)), (' H  53  ILE HG23', ' H  54  LEU HD22', -0.52, (244.389, 239.634, 249.239)), (' A 733  LYS  NZ ', ' A 775  ASP  OD2', -0.518, (220.379, 190.576, 185.448)), (' C 736  VAL HG22', ' C 858  LEU HD13', -0.518, (191.31, 188.823, 200.232)), (' B 126  VAL HG21', ' B 175  PHE  CE2', -0.517, (159.48, 222.118, 230.577)), (' C 175  PHE  CE1', ' C 226  LEU HD13', -0.517, (206.609, 154.429, 223.916)), (' A 290  ASP  OD1', ' A 291  CYS  N  ', -0.515, (219.705, 229.212, 207.052)), (' A  33  THR HG23', ' A  58  PHE  CE1', -0.514, (228.566, 231.849, 206.244)), (' A 323  THR HG21', ' A 540  ASN  OD1', -0.512, (200.309, 229.751, 220.376)), (' A 592  PHE  CE2', ' A 624  ILE HG22', -0.512, (204.577, 235.38, 203.456)), (' A1111  GLU  N  ', ' A1111  GLU  OE2', -0.51, (208.854, 215.607, 140.196)), (' C 433  VAL HG22', ' C 512  VAL HG23', -0.509, (218.978, 209.597, 239.636)), (' C 410  ILE  O  ', ' C 410  ILE HG22', -0.509, (213.099, 211.158, 240.579)), (' B 993  ILE  O  ', ' B 997  ILE HD12', -0.509, (202.07, 211.143, 216.477)), (' A 388  ASN  O  ', ' A 528  LYS  NZ ', -0.509, (195.274, 228.217, 233.625)), (' C 406  GLU  HB3', ' C 418  ILE HD11', -0.508, (210.142, 214.097, 246.876)), (' A  32  PHE  CD2', ' A 218  GLN  NE2', -0.507, (232.01, 240.795, 204.0)), (' A 438  SER  OG ', ' A 442  ASP  OD1', -0.507, (190.242, 207.747, 256.857)), (' C  21  ARG  NE ', ' C  80  ASP  OD1', -0.507, (234.121, 149.334, 227.709)), (' C 802  PHE  HD2', ' C 805  ILE HD11', -0.507, (191.457, 177.83, 161.082)), (' C 457  ARG  NH2', ' C 459  SER  O  ', -0.506, (210.339, 227.96, 242.662)), (' C 785  VAL HG11', ' C 888  PHE  CE2', -0.506, (184.493, 190.95, 163.818)), (' A 323  THR HG23', ' A 539  VAL  HA ', -0.506, (199.848, 232.826, 219.755)), (' A 296  LEU  HB2', ' A 608  VAL HG21', -0.504, (218.172, 232.415, 195.381)), (' A 393  THR  O  ', ' A 393  THR HG22', -0.504, (179.132, 222.636, 234.473)), (' C 280  ASN  OD1', ' C 284  THR  N  ', -0.502, (201.158, 160.618, 204.664)), (' A 141  LEU HD21', ' A 155  SER  OG ', -0.501, (245.796, 240.737, 233.901)), (' A 403  ARG  NH2', ' A 405  ASP  OD2', -0.501, (196.735, 195.273, 253.797)), (' A 736  VAL HG22', ' A 858  LEU HD13', -0.499, (219.298, 196.878, 198.455)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.498, (209.008, 206.712, 167.19)), (' B  28  TYR  CD1', ' B1301  NAG  H82', -0.496, (149.642, 198.096, 214.281)), (' C 702  GLU  OE2', ' C 703  ASN  N  ', -0.494, (228.784, 186.064, 161.482)), (' A1028  LYS  O  ', ' A1032  CYS  N  ', -0.494, (211.459, 200.528, 164.078)), (' C 120  VAL HG11', ' C 157  PHE  HE2', -0.494, (212.626, 146.181, 234.55)), (' B 290  ASP  O  ', ' B 297  SER  OG ', -0.493, (168.44, 203.086, 205.139)), (' C 878  LEU  O  ', ' C 882  ILE HD12', -0.492, (187.346, 182.965, 160.473)), (' C1126  CYS  HB3', ' C1132  ILE HD13', -0.491, (220.755, 205.388, 131.777)), (' A 105  ILE HD11', ' A 241  LEU HD21', -0.49, (234.862, 240.286, 235.508)), (' B 280  ASN  OD1', ' B 284  THR  N  ', -0.49, (169.61, 223.404, 206.679)), (' A  81  ASN  O  ', ' A 239  GLN  NE2', -0.49, (230.741, 246.024, 231.861)), (' L   6  GLN  NE2', ' L 101  GLY  O  ', -0.489, (276.642, 253.579, 250.461)), (' B 741  TYR  CE1', ' B 966  LEU HD11', -0.489, (195.158, 215.235, 206.373)), (' X  48  ILE HG23', ' X  52  ASN  HA ', -0.487, (123.926, 227.465, 239.9)), (' B 118  LEU HD21', ' B 120  VAL HG23', -0.487, (154.248, 217.601, 237.08)), (' L  48  ILE HG23', ' L  52  ASN  HA ', -0.486, (265.624, 252.891, 237.125)), (' B 759  PHE  HD2', ' B1001  LEU HD21', -0.486, (207.562, 208.626, 208.021)), (' Z   6  GLN  NE2', ' Z 101  GLY  O  ', -0.483, (221.99, 110.395, 252.227)), (' B1002  GLN  NE2', ' C1005  GLN  OE1', -0.48, (199.542, 200.988, 205.938)), (' C1126  CYS  HB2', ' C1132  ILE HD13', -0.48, (221.657, 205.048, 132.411)), (' A 613  GLN  O  ', ' A 615  VAL HG23', -0.479, (199.42, 231.356, 197.836)), (' B 759  PHE  CD2', ' B1001  LEU HD21', -0.479, (207.648, 207.876, 207.733)), (' B 421  TYR  O  ', ' B 454  ARG  NH2', -0.478, (201.94, 173.966, 269.689)), (' B 117  LEU HD13', ' B 130  VAL HG22', -0.477, (164.168, 214.299, 236.943)), (' W  95  LEU HD13', ' W 100C GLU  OE1', -0.477, (138.436, 226.29, 248.135)), (' A 126  VAL HG21', ' A 175  PHE  CD2', -0.477, (240.204, 229.472, 229.603)), (' X  48  ILE HD12', ' X  52  ASN  HA ', -0.474, (122.746, 227.334, 239.254)), (' C 906  PHE  HB3', ' C 911  VAL HG23', -0.474, (201.604, 187.744, 147.417)), (' B 566  GLY  N  ', ' B 575  ALA  O  ', -0.474, (192.839, 168.54, 212.294)), (' Y  33  THR  OG1', ' Y  97  THR  O  ', -0.473, (217.052, 138.238, 248.041)), (' C1050  MET  HE1', ' C1052  PHE  CE2', -0.473, (192.71, 182.641, 159.469)), (' A 122  ASN  OD1', ' A 125  ASN  N  ', -0.473, (247.081, 231.408, 233.776)), (' A 636  TYR  O  ', ' A 651  ILE HD13', -0.47, (207.465, 239.525, 198.209)), (' A  61  ASN HD21', ' A1301  NAG  C2 ', -0.469, (221.602, 246.081, 210.606)), (' C 725  GLU  OE2', ' C1064  HIS  NE2', -0.469, (201.643, 187.448, 167.902)), (' C 381  GLY  N  ', ' C 431  GLY  O  ', -0.469, (218.713, 205.643, 234.563)), (' B  92  PHE  O  ', ' B 192  PHE  N  ', -0.469, (157.131, 214.245, 220.545)), (' A  19  THR  O  ', ' A  19  THR HG23', -0.467, (230.669, 256.294, 236.204)), (' A 911  VAL  HA ', ' A1106  GLN  NE2', -0.466, (207.978, 210.665, 145.024)), (' C 897  PRO  HD2', ' C 900  MET  HE3', -0.465, (186.192, 185.15, 146.533)), (' X   6  GLN  NE2', ' X 101  GLY  O  ', -0.464, (116.708, 236.785, 252.372)), (' C  19  THR  O  ', ' C  19  THR HG23', -0.464, (235.769, 147.624, 235.442)), (' A 271  GLN  N  ', ' A 271  GLN  OE1', -0.463, (220.71, 232.819, 216.833)), (' A 878  LEU  O  ', ' A 882  ILE HD12', -0.463, (223.735, 198.231, 158.809)), (' W  82B SER  O  ', ' W  83  ARG  NH1', -0.462, (134.67, 239.957, 271.124)), (' B 442  ASP  OD1', ' B 443  SER  N  ', -0.461, (181.234, 162.714, 268.201)), (' A 118  LEU HD21', ' A 120  VAL HG23', -0.46, (238.595, 236.05, 236.156)), (' B  19  THR  O  ', ' B  19  THR HG23', -0.459, (139.746, 201.32, 237.237)), (' A 785  VAL HG11', ' A 888  PHE  CE2', -0.459, (218.47, 191.503, 162.488)), (' A 175  PHE  HD1', ' A 226  LEU HD13', -0.458, (239.786, 227.872, 224.98)), (' C1302  NAG  C1 ', ' C1302  NAG  C8 ', -0.458, (194.842, 154.846, 202.009)), (' C 175  PHE  CD1', ' C 226  LEU  CD1', -0.457, (207.638, 153.794, 222.795)), (' C  60  SER  OG ', ' C  61  ASN  N  ', -0.457, (226.204, 162.255, 212.252)), (' C 437  ASN  HA ', ' C 508  TYR  CD1', -0.456, (216.514, 205.645, 254.159)), (' Y 100B ILE  O  ', ' Y 100B ILE HG22', -0.456, (216.911, 133.977, 240.811)), (' A  91  TYR  O  ', ' A 268  GLY  N  ', -0.456, (228.764, 238.286, 219.591)), (' B 177  MET  N  ', ' B 177  MET  SD ', -0.456, (154.123, 226.391, 223.1)), (' A 102  ARG  CG ', ' A 243  ALA  HB2', -0.454, (243.758, 241.155, 230.305)), (' B 731  MET  HE2', ' B1011  GLN HE22', -0.454, (197.058, 212.798, 191.363)), (' H  53  ILE HG23', ' H  54  LEU  CD2', -0.452, (244.793, 239.956, 249.253)), (' Y  10  GLU  N  ', ' Y  10  GLU  OE1', -0.452, (224.972, 130.588, 271.698)), (' C 366  SER  O  ', ' C 370  ASN  ND2', -0.452, (228.301, 194.22, 242.733)), (' C 250  THR  OG1', ' Z  56  SER  O  ', -0.451, (233.886, 131.505, 241.072)), (' C 314  GLN  NE2', ' C 317  ASN  OD1', -0.451, (221.466, 186.579, 199.506)), (' B 725  GLU  OE1', ' B1064  HIS  NE2', -0.45, (190.209, 207.504, 168.379)), (' B 703  ASN  OD1', ' B 704  SER  N  ', -0.45, (175.541, 185.849, 160.011)), (' C 318  PHE  CZ ', ' C 615  VAL HG21', -0.449, (231.02, 186.395, 199.618)), (' B  96  GLU  OE2', ' B 190  ARG  NH1', -0.447, (149.899, 221.111, 222.384)), (' B 905  ARG  NH1', ' B1049  LEU  O  ', -0.446, (192.767, 211.547, 156.956)), (' W  10  GLU  N  ', ' W  10  GLU  OE1', -0.446, (129.553, 222.298, 272.999)), (' A 900  MET  HE1', ' C1077  THR HG23', -0.446, (221.161, 196.24, 141.424)), (' B 714  ILE HD13', ' B1105  THR HG21', -0.444, (183.518, 194.396, 142.503)), (' B1051  SER  OG ', ' B1064  HIS  ND1', -0.444, (190.684, 209.789, 164.366)), (' H  10  GLU  N  ', ' H  10  GLU  OE1', -0.443, (256.451, 258.459, 269.727)), (' C 879  ALA  O  ', ' C 883  THR  OG1', -0.442, (183.703, 184.368, 157.928)), (' B 175  PHE  CD1', ' B 226  LEU HD12', -0.442, (160.893, 221.386, 225.526)), (' H   1  GLN  O  ', ' H  27  GLY  N  ', -0.441, (243.585, 256.858, 249.863)), (' A 909  ILE  O  ', ' A 909  ILE HG22', -0.44, (206.341, 209.253, 150.42)), (' B  40  ASP  N  ', ' B  40  ASP  OD1', -0.437, (174.737, 216.742, 217.004)), (' Z  61  ARG  NH2', ' Z  82  ASP  OD1', -0.436, (238.478, 116.379, 245.815)), (' C 532  ASN  OD1', ' C 533  LEU  N  ', -0.436, (246.74, 194.278, 220.002)), (' B 331  ASN  OD1', ' B1303  NAG  N2 ', -0.436, (186.226, 159.112, 226.152)), (' B 328  ARG  NH1', ' B 531  THR  O  ', -0.435, (180.466, 166.719, 223.673)), (' A 737  ASP  OD1', ' C 317  ASN  ND2', -0.435, (221.425, 188.56, 202.594)), (' C 378  LYS  HG3', ' C 378  LYS  O  ', -0.434, (216.326, 204.207, 241.441)), (' A 522  ALA  CB ', ' A 523  THR HG23', -0.434, (181.574, 229.687, 234.036)), (' C 340  GLU  O  ', ' C 344  ALA  HB2', -0.432, (230.555, 211.905, 250.632)), (' A 141  LEU HD21', ' A 155  SER  CB ', -0.432, (246.079, 240.72, 234.832)), (' C  33  THR HG23', ' C  58  PHE  CE2', -0.431, (217.01, 162.242, 205.221)), (' C  14  GLN  N  ', ' C  14  GLN  OE1', -0.43, (221.202, 146.352, 244.603)), (' A 729  VAL HG13', ' A 781  VAL HG21', -0.43, (215.206, 197.992, 175.889)), (' B 715  PRO  O  ', ' B1110  TYR  N  ', -0.43, (180.976, 198.731, 145.311)), (' B 642  VAL HG22', ' B 651  ILE HG22', -0.429, (165.631, 185.379, 196.7)), (' B 611  LEU  CD1', ' B 666  ILE HG23', -0.429, (174.922, 188.878, 191.015)), (' B 124  THR  O  ', ' B 124  THR HG22', -0.429, (156.219, 231.112, 233.993)), (' B 314  GLN  NE2', ' B 316  SER  O  ', -0.428, (179.612, 193.533, 201.103)), (' C 126  VAL HG21', ' C 175  PHE  CE2', -0.427, (207.838, 152.686, 228.172)), (' A  96  GLU  OE2', ' A 190  ARG  NH1', -0.427, (243.874, 238.122, 222.176)), (' B 461  LEU  H  ', ' B 461  LEU HD23', -0.427, (208.372, 175.796, 269.715)), (' A 521  PRO  O  ', ' A 522  ALA  HB2', -0.425, (182.007, 229.179, 230.478)), (' A 105  ILE  CD1', ' A 241  LEU HD21', -0.424, (234.588, 240.651, 235.291)), (' C 751  ASN  OD1', ' C 752  LEU  N  ', -0.424, (186.754, 197.897, 218.886)), (' B 627  ASP  OD1', ' B 628  GLN  N  ', -0.423, (164.226, 189.454, 214.037)), (' B 100  ILE HG13', ' B 101  ILE HD12', -0.421, (145.855, 216.805, 225.456)), (' B 296  LEU  CD2', ' B 608  VAL HG11', -0.421, (168.026, 200.627, 195.924)), (' C 327  VAL HG22', ' C 542  ASN  HB3', -0.42, (235.799, 195.191, 222.845)), (' B 717  ASN  OD1', ' B 718  PHE  N  ', -0.419, (177.475, 203.977, 149.972)), (' B 714  ILE HD13', ' B1105  THR  CG2', -0.419, (183.766, 194.33, 142.5)), (' B 619  GLU  N  ', ' B 619  GLU  OE1', -0.418, (171.106, 179.322, 202.994)), (' C 654  GLU  OE2', ' C 691  SER  OG ', -0.417, (233.21, 169.413, 184.064)), (' C 405  ASP  N  ', ' C 405  ASP  OD1', -0.417, (208.366, 211.536, 252.591)), (' C 990  GLU  HA ', ' C 993  ILE HG22', -0.417, (194.101, 195.429, 222.038)), (' C 427  ASP  OD1', ' C 428  ASP  N  ', -0.416, (213.804, 214.279, 229.112)), (' B 401  VAL  O  ', ' B 401  VAL HG13', -0.416, (197.053, 170.737, 270.439)), (' A 759  PHE  O  ', ' A 763  LEU HD23', -0.416, (209.444, 191.534, 202.546)), (' C 676  THR HG22', ' C 690  GLN  OE1', -0.416, (227.357, 163.416, 180.622)), (' C 316  SER  O  ', ' C 595  VAL HG22', -0.414, (223.713, 183.277, 199.932)), (' C 405  ASP  N  ', ' C 504  GLY  O  ', -0.414, (209.189, 209.877, 253.921)), (' C 364  ASP  OD1', ' C 367  VAL HG13', -0.413, (232.479, 197.204, 241.798)), (' C 714  ILE  CD1', ' C1096  VAL HG11', -0.413, (216.517, 190.125, 141.714)), (' B1028  LYS  NZ ', ' B1042  PHE  O  ', -0.413, (192.578, 204.491, 168.351)), (' X   4  LEU HD11', ' X  28  LEU HD11', -0.412, (125.199, 239.519, 244.908)), (' A 986  PRO  N  ', ' A 987  PRO  HD2', -0.412, (217.391, 192.247, 228.293)), (' C 213  VAL  O  ', ' C 213  VAL HG22', -0.412, (224.132, 143.146, 210.443)), (' B 699  LEU HD12', ' C 872  GLN  OE1', -0.412, (177.996, 183.063, 172.368)), (' B 350  VAL  CG2', ' B 401  VAL HG12', -0.412, (198.995, 169.327, 269.097)), (' A 752  LEU  O  ', ' A 752  LEU HD23', -0.411, (211.205, 191.392, 215.842)), (' C 320  VAL  O  ', ' C 320  VAL HG23', -0.411, (234.013, 187.565, 207.667)), (' C 287  ASP  N  ', ' C 287  ASP  OD1', -0.409, (209.854, 162.265, 201.217)), (' C 404  GLY  HA2', ' C 508  TYR  HD2', -0.408, (212.795, 208.905, 252.762)), (' B 733  LYS  NZ ', ' B 775  ASP  OD2', -0.408, (202.328, 221.569, 185.839)), (' A1092  GLU  HA ', ' A1092  GLU  OE1', -0.407, (199.06, 208.209, 142.938)), (' C 334  ASN  ND2', ' C 360  ASN  O  ', -0.406, (241.507, 207.953, 238.128)), (' A1129  VAL HG13', ' B 917  TYR  HB3', -0.406, (185.182, 215.605, 140.727)), (' B 327  VAL  O  ', ' B 531  THR  N  ', -0.405, (181.404, 169.547, 226.0)), (' C 988  GLU  O  ', ' C 991  VAL HG12', -0.405, (197.618, 195.155, 226.608)), (' B 126  VAL HG21', ' B 175  PHE  HE2', -0.404, (159.826, 221.627, 231.06)), (' B 327  VAL HG22', ' B 542  ASN HD22', -0.403, (184.117, 175.916, 224.851)), (' A  54  LEU  HA ', ' A  54  LEU HD13', -0.403, (220.292, 228.645, 218.438)), (' A 280  ASN  OD1', ' A 284  THR  N  ', -0.403, (237.332, 219.176, 206.441)), (' B1054  GLN  N  ', ' B1061  VAL  O  ', -0.403, (189.54, 216.375, 170.073)), (' C 379  CYS  SG ', ' C 380  TYR  N  ', -0.403, (218.031, 203.454, 236.6)), (' B 736  VAL  O  ', ' B 764  ASN  ND2', -0.402, (204.583, 217.768, 200.472)), (' B1077  THR HG21', ' C 900  MET  HE1', -0.402, (185.401, 185.872, 144.345)), (' B  91  TYR  O  ', ' B 268  GLY  N  ', -0.401, (156.593, 207.325, 220.667)), (' B1115  ILE HG21', ' B1137  VAL HG22', -0.4, (189.419, 190.012, 130.909)), (' C 950  ASP  N  ', ' C 950  ASP  OD2', -0.4, (202.3, 182.672, 183.986)), (' B 997  ILE  H  ', ' B 997  ILE HD12', -0.4, (202.178, 211.397, 215.077))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
